{"version":3,"sources":["webpack:///./src/utils/MiewCLIParser.js","webpack:///./src/utils/SelectionParser.js","webpack:///./src/Timer.js","webpack:///./src/gfx/Stats.js","webpack:///./src/utils/EventDispatcher.js","webpack:///./src/utils/logger.js","webpack:///./src/utils.js","webpack:///./src/utils/JobHandle.js","webpack:///./src/settings.js","webpack:///./src/options.js","webpack:///./src/chem/Atom.js","webpack:///./src/chem/Element.js","webpack:///./src/chem/Bond.js","webpack:///./src/chem/Residue.js","webpack:///./src/chem/ResidueType.js","webpack:///./src/chem/Chain.js","webpack:///./src/chem/StructuralElement.js","webpack:///./src/chem/Helix.js","webpack:///./src/chem/Strand.js","webpack:///./src/chem/Sheet.js","webpack:///./src/chem/SGroup.js","webpack:///./src/chem/selectors/selectArgs.js","webpack:///./src/chem/selectors/selectorsBase.js","webpack:///./src/chem/selectors/selectOps.js","webpack:///./src/chem/selectors.js","webpack:///./src/chem/BiologicalUnit.js","webpack:///./src/chem/Assembly.js","webpack:///./src/chem/Component.js","webpack:///./src/chem/AtomPairs.js","webpack:///./src/chem/AutoBond.js","webpack:///./src/chem/AromaticLoopsMarker.js","webpack:///./src/chem/VoxelWorld.js","webpack:///./src/chem/HBondInfo.js","webpack:///./src/chem/SecondaryStructureMap.js","webpack:///./src/chem/Complex.js","webpack:///./src/chem/Volume.js","webpack:///./src/chem.js","webpack:///./src/chem/Molecule.js","webpack:///./src/gfx/CSS2DObject.js","webpack:///./src/gfx/RCGroup.js","webpack:///./src/gfx/shaders/ScreenQuad.vert","webpack:///./src/gfx/gfxutils.js","webpack:///./src/gfx/shaders/ScreenQuadFromTex.frag","webpack:///./src/gfx/shaders/ScreenQuadFromTexWithDistortion.frag","webpack:///./src/Visual.js","webpack:///./src/utils/EntityList.js","webpack:///./src/utils/makeContextDependent.js","webpack:///./src/gfx/geometries/SphereCollisionGeo.js","webpack:///./src/gfx/geometries/InstancedSpheresGeometry.js","webpack:///./src/gfx/geometries/RaycastableBufferGeometry.js","webpack:///./src/gfx/geometries/ChunkedObjectsGeometry.js","webpack:///./src/gfx/geometries/SimpleSpheresGeometry.js","webpack:///./src/gfx/geometries/Simple2CCylindersGeometry.js","webpack:///./src/gfx/geometries/CylinderBufferGeometry.js","webpack:///./src/gfx/geometries/Instanced2CCylindersGeometry.js","webpack:///./src/gfx/geometries/ExtrudedObjectsGeometry.js","webpack:///./src/gfx/geometries/ThickLinesGeometry.js","webpack:///./src/gfx/geometries/LinesGeometry.js","webpack:///./src/gfx/geometries/CylinderCollisionGeo.js","webpack:///./src/gfx/geometries/ChunkedLinesGeometry.js","webpack:///./src/gfx/geometries/TwoColorLinesGeometry.js","webpack:///./src/gfx/geometries/CrossGeometry.js","webpack:///./src/gfx/geometries/IsoSurfaceGeometry.js","webpack:///./src/gfx/geometries/IsoSurfaceMarchCube.js","webpack:///./src/gfx/geometries/IsoSurface.js","webpack:///./src/gfx/geometries/VolumeSurfaceGeometry.js","webpack:///./src/gfx/geometries/QuickSurfGeometry.js","webpack:///./src/gfx/geometries/ContactSurface.js","webpack:///./src/gfx/geometries/ContactSurfaceGeometry.js","webpack:///./src/gfx/geometries/IsoSurfaceAtomColored.js","webpack:///./src/gfx/geometries/IsosurfaceBuildNormals.js","webpack:///./src/gfx/geometries/IsoSurfaceGeo.js","webpack:///./src/gfx/geometries/SSIsosurfaceGeometry.js","webpack:///./src/gfx/geometries/geometries.js","webpack:///./src/gfx/geometries/LabelsGeometry.js","webpack:///./src/gfx/capabilities.js","webpack:///./src/gfx/noiseTexture.js","webpack:///./src/gfx/shaders/UberMaterial.js","webpack:///./src/gfx/shaders/Uber.vert","webpack:///./src/gfx/shaders/Uber.frag","webpack:///./src/gfx/meshes/UberObject.js","webpack:///./src/gfx/meshes/ZSpriteMesh.js","webpack:///./src/gfx/meshes/ZClippedMesh.js","webpack:///./src/gfx/meshes/TextMesh.js","webpack:///./src/gfx/meshes/SimpleMesh.js","webpack:///./src/gfx/meshes/ThickLineMesh.js","webpack:///./src/gfx/meshes/InstancedMesh.js","webpack:///./src/gfx/meshes/meshes.js","webpack:///./src/gfx/meshes/MeshCreator.js","webpack:///./src/gfx/meshes/TransformGroup.js","webpack:///./src/gfx/modes/groups/ChemGroup.js","webpack:///./src/gfx/modes/groups/AtomsGroup.js","webpack:///./src/gfx/modes/groups/AtomsSphereGroup.js","webpack:///./src/gfx/modes/groups/AtomsSurfaceGroup.js","webpack:///./src/gfx/modes/groups/AtomsSASSESGroupStub.js","webpack:///./src/gfx/modes/groups/AtomsTextGroup.js","webpack:///./src/gfx/modes/groups/AromaticGroup.js","webpack:///./src/gfx/modes/groups/AromaticTorusGroup.js","webpack:///./src/gfx/modes/groups/AromaticLinesGroup.js","webpack:///./src/gfx/modes/groups/ResiduesGroup.js","webpack:///./src/gfx/modes/groups/NucleicItemGroup.js","webpack:///./src/gfx/modes/groups/NucleicCylindersGroup.js","webpack:///./src/gfx/modes/groups/NucleicSpheresGroup.js","webpack:///./src/gfx/modes/groups/CartoonHelper.js","webpack:///./src/gfx/modes/groups/ResiduesSubseqGroup.js","webpack:///./src/gfx/modes/groups/ResiduesTraceGroup.js","webpack:///./src/gfx/modes/groups/BondsGroup.js","webpack:///./src/gfx/modes/groups/BondsLinesGroup.js","webpack:///./src/gfx/modes/groups/groups.js","webpack:///./src/gfx/modes/groups/BondsCylinderGroup.js","webpack:///./src/gfx/modes/processors/AtomsProcessor.js","webpack:///./src/gfx/modes/processors/OrphanAtomsProcessor.js","webpack:///./src/gfx/modes/processors/ResiduesProcessor.js","webpack:///./src/gfx/modes/processors/processors.js","webpack:///./src/gfx/modes/processors/NucleicProcessor.js","webpack:///./src/gfx/modes/processors/SubseqsProcessor.js","webpack:///./src/gfx/modes/processors/BondsProcessor.js","webpack:///./src/gfx/modes/processors/AromaticProcessor.js","webpack:///./src/gfx/modes/groups/GroupsFactory.js","webpack:///./src/gfx/modes/Mode.js","webpack:///./src/gfx/modes/LinesMode.js","webpack:///./src/gfx/modes/LicoriceMode.js","webpack:///./src/gfx/modes/BallsAndSticksMode.js","webpack:///./src/gfx/modes/VanDerWaalsMode.js","webpack:///./src/gfx/modes/TraceMode.js","webpack:///./src/gfx/modes/TubeMode.js","webpack:///./src/gfx/modes/CartoonMode.js","webpack:///./src/gfx/modes/SurfaceMode.js","webpack:///./src/gfx/modes/QuickSurfaceMode.js","webpack:///./src/gfx/modes/IsoSurfaceMode.js","webpack:///./src/gfx/modes/IsoSurfaceSASMode.js","webpack:///./src/gfx/modes/IsoSurfaceSESMode.js","webpack:///./src/gfx/modes/ContactSurfaceMode.js","webpack:///./src/gfx/modes/TextMode.js","webpack:///./src/gfx/modes.js","webpack:///./src/gfx/palettes/Palette.js","webpack:///./src/gfx/palettes/cpkPalette.js","webpack:///./src/gfx/palettes/jmolPalette.js","webpack:///./src/gfx/palettes/vmdPalette.js","webpack:///./src/gfx/palettes.js","webpack:///./src/gfx/colorers/Colorer.js","webpack:///./src/gfx/colorers/ElementColorer.js","webpack:///./src/gfx/colorers/ResidueTypeColorer.js","webpack:///./src/gfx/colorers/SequenceColorer.js","webpack:///./src/gfx/colorers/ChainColorer.js","webpack:///./src/gfx/colorers/SecondaryStructureColorer.js","webpack:///./src/gfx/colorers/UniformColorer.js","webpack:///./src/gfx/colorers/ConditionalColorer.js","webpack:///./src/gfx/colorers/ConformationColorer.js","webpack:///./src/gfx/colorers/TemperatureColorer.js","webpack:///./src/gfx/colorers/OccupancyColorer.js","webpack:///./src/gfx/colorers/HydrophobicityColorer.js","webpack:///./src/gfx/colorers/MoleculeColorer.js","webpack:///./src/gfx/colorers/CarbonColorer.js","webpack:///./src/gfx/colorers.js","webpack:///./src/gfx/materials.js","webpack:///./src/gfx/meshutils.js","webpack:///./src/gfx/Representation.js","webpack:///./src/ComplexVisualEdit.js","webpack:///./src/ComplexVisual.js","webpack:///./src/gfx/shaders/VolumeMaterial.js","webpack:///./src/gfx/shaders/VolumeFaces.vert","webpack:///./src/gfx/shaders/VolumeFaces.frag","webpack:///./src/gfx/shaders/VolumeFarPlane.vert","webpack:///./src/gfx/shaders/VolumeFarPlane.frag","webpack:///./src/gfx/shaders/Volume.vert","webpack:///./src/gfx/shaders/Volume.frag","webpack:///./src/gfx/VolumeMesh.js","webpack:///./src/gfx/VolumeBounds.js","webpack:///./src/gfx/VolumeFarPlane.js","webpack:///./src/VolumeVisual.js","webpack:///./src/io/loaders/LoaderList.js","webpack:///./src/io/loaders/Loader.js","webpack:///./src/io/loaders/FileLoader.js","webpack:///./src/io/loaders/XHRLoader.js","webpack:///./src/io/loaders/ImmediateLoader.js","webpack:///./src/io/loaders.js","webpack:///./src/io/parsers/ParserList.js","webpack:///./src/io/parsers/Parser.js","webpack:///./src/io/parsers/pdb/Remark290.js","webpack:///./src/io/parsers/pdb/Remark350.js","webpack:///./src/io/parsers/PDBStream.js","webpack:///./src/io/parsers/PDBParser.js","webpack:///./src/io/parsers/CMLParser.js","webpack:///./src/io/parsers/MMTFParser.js","webpack:///./src/io/parsers/ParsingError.js","webpack:///./src/io/parsers/readCIF.js","webpack:///./src/io/parsers/CIFParser.js","webpack:///./src/io/parsers/VolumeModel.js","webpack:///./src/io/parsers/CCP4Parser.js","webpack:///./src/io/parsers/XYZParser.js","webpack:///./src/io/parsers/PubChemParser.js","webpack:///./src/io/parsers/SDFStream.js","webpack:///./src/io/parsers/SDFParser.js","webpack:///./src/io/parsers/DSN6Parser.js","webpack:///./src/io/parsers/GROReader.js","webpack:///./src/io/parsers/GROParser.js","webpack:///./src/io/parsers/MOL2Parser.js","webpack:///./src/io/parsers.js","webpack:///./src/io/exporters/ExporterList.js","webpack:///./src/io/exporters/Exporter.js","webpack:///./src/io/exporters/PDBResult.js","webpack:///./src/io/exporters/PDBExporter.js","webpack:///./src/io/exporters/fbx/FBXModel.js","webpack:///./src/io/exporters/fbx/FBXGeometry.js","webpack:///./src/io/exporters/fbx/FBX1CGeometry.js","webpack:///./src/io/exporters/fbx/FBX2CCylinder.js","webpack:///./src/io/exporters/fbx/FBXInfoExtractor.js","webpack:///./src/io/exporters/fbx/FBXResult.js","webpack:///./src/io/exporters/FBXExporter.js","webpack:///./src/io/exporters.js","webpack:///./src/ui/ObjectControls.js","webpack:///./src/io/io.js","webpack:///./src/gfx/CSS2DRenderer.js","webpack:///./src/ui/Picker.js","webpack:///./src/gfx/Axes.js","webpack:///./src/gfx/FrameInfo.js","webpack:///./src/gfx/objects/SceneObject.js","webpack:///./src/gfx/objects/LinesObj.js","webpack:///./src/gfx/shaders/OutlineMaterial.js","webpack:///./src/gfx/shaders/Outline.frag","webpack:///./src/gfx/shaders/FXAAMaterial.js","webpack:///./src/gfx/shaders/FXAA.frag","webpack:///./src/gfx/shaders/AOMaterial.js","webpack:///./src/gfx/shaders/AO.frag","webpack:///./src/gfx/shaders/AOHorBlurMaterial.js","webpack:///./src/gfx/shaders/AOHorBlur.frag","webpack:///./src/gfx/shaders/AOVertBlurWithBlendMaterial.js","webpack:///./src/gfx/shaders/AOVertBlurWithBlend.frag","webpack:///./src/gfx/shaders/AnaglyphMaterial.js","webpack:///./src/gfx/shaders/Anaglyph.frag","webpack:///./src/gfx/ViewInterpolator.js","webpack:///./src/utils/Cookies.js","webpack:///./src/Miew.js","webpack:///./src/gfx/vr/createWebVRButton.js","webpack:///./src/gfx/vr/WebVRPoC.js","webpack:///./src/gfx/shaders/ScreenQuadFromDistortionTex.frag","webpack:///./src/utils/MiewCLIHelp.js","webpack:///./src/Miew-cli.js","webpack:///./src/index.js","webpack:///./demo/scripts/ui/Menu.js","webpack:///./demo/menu.html","webpack:///./demo/scripts/index.js"],"names":["parser","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","trace","yy","symbols_","terminals_","2","5","6","7","8","9","11","13","14","15","17","18","19","20","23","25","26","27","28","29","30","31","33","34","35","36","37","38","41","42","43","44","45","46","48","49","52","54","55","56","57","58","59","61","62","64","65","66","70","71","72","74","77","78","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","101","103","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","this","$","miew","reset","ClearContext","resetReps","rebuild","rebuildAll","echo","utils","help","toString","motm","propagateProp","get","set","saveSettings","restoreSettings","resetSettings","applyPreset","repRemove","representations","remove","repHide","listRep","list","listSelector","Context","select","checkArg","toLowerCase","rep","repCurrent","selector","within","Number","material","toUpperCase","view","changeUnit","dssp","scale","i","n","rotate","Math","PI","translate","center","addObject","type","params","opts","toJSO","listObjs","removeObject","getURL","settings","screenshotSave","load","clear","add","repAdd","mode","Array","colorer","_","assign","CreateObjectPair","key","val","Object","create","keyRemap","concat","ArgList","append","Arg","parseInt","JSON","parse","String","table","3","4","12","21","22","39","40","50","51","1","10","79","80","81","16","24","47","73","60","63","67","68","69","53","75","76","32","defaultActions","107","110","116","119","120","121","122","123","125","127","128","129","130","131","136","139","140","141","142","143","145","158","159","166","174","177","178","179","183","184","185","196","200","parseError","str","hash","recoverable","error","Error","input","self","stack","tstack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","lex","token","pop","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","yyval","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","apply","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","conditions","topState","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","unquoteString","Parser","module","exports","keyword","GetSelector","RangeList","Range","ValueList","Timer","startTime","oldTime","elapsedTime","running","now","getElapsedTime","update","delta","newTime","window","performance","bind","Date","createElement","tag","id","css","element","document","style","cssText","Stats","domElement","_text","appendChild","_startTime","_prevTime","_deltas","_index","_total","_count","time","ms","fps","textContent","toPrecision","end","on","undefined","display","isUndefOrEqual","param","value","EventDispatcher","_handlers","addEventListener","callback","context","handlers","find","par","removeEventListener","forEach","handler","ev","values","omitBy","dispatchEvent","event","priorities","debug","info","report","warn","Logger","console","_priority","verify","number","isNumber","constructor","instantiate","defineProperty","findKey","level","levels","keys","message","priority","_message","output","log","browserType","DEFAULT","SAFARI","decodeQueryComponent","decodeURIComponent","getUrlParameters","url","query","location","search","substring","indexOf","result","exec","DebugTracer","namespace","enabled","enable","indent","methods","wrap","method_","name_","spaces","logger","name","method","Function","OutOfMemoryError","bytesToBase64","buffer","bytes","Uint8Array","binary","byteLength","fromCharCode","btoa","bytesFromBase64","atob","charCodeAt","isAlmostPlainObject","isPlainObject","proto","getFileExtension","fileName","max","lastIndexOf","Infinity","dataUrlToBlob","parts","partsCount","Blob","unquotedStringRE","enquoteHelper","encodeQueryComponent","excludeExp","encodeURIComponent","code","getUrlParametersAsDict","a","resolveURL","URL","href","anchor","generateRegExp","symbolStr","symbolList","listStr","RegExp","attrs","content","setAttribute","child","createTextNode","HTMLElement","deriveClass","cls","base","members","statics","deriveDeep","obj","needZeroOwnProperties","res","copy","hexColor","color","hex","allocateTyped","TypedArrayName","size","e","RangeError","arrayFromBase64","TypedArrayClass","arrayToBase64","array","compareOptionsWithDefaults","defOpts","optsStr","objectsDiff","src","dst","diff","forIn","srcValue","dstValue","deepDiff","isEmpty","isEqual","forInRecursive","object","iterateThrough","prefix","newPref","enquoteString","isString","SyntaxError","getBrowser","navigator","vendor","userAgent","shotOpen","open","write","shotDownload","dataUrl","filename","msSaveBlob","link","download","innerHTML","createObjectURL","body","click","removeChild","copySubArrays","indices","itemSize","j","shallowCloneNode","node","newNode","cloneNode","worldPos","correctSelectorIdentifier","test","splitFileName","ext","data","blobData","concatTypedArraysUnsafe","first","second","mergeTypedArraysUnsafe","reduce","acc","cur","start","count","JobHandle","_shouldCancel","slaveEvent","defaults","modes","BS","atom","bond","space","multibond","aromrad","showarom","polyComplexity","poor","low","medium","high","ultra","VW","LN","offsarom","chunkarom","lineWidth","LC","SA","zClip","probeRadius","subset","wireframe","SE","QS","isoValue","gaussLim","gridSpacing","CS","probePositions","TR","radius","TU","heightSegmentsRatio","tension","CA","depth","ss","helix","width","arrow","strand","TX","template","horizontalAlign","verticalAlign","dx","dy","dz","fg","bg","showBg","VD","kSigma","kSigmaMed","kSigmaMax","frame","isoMode","colorers","EL","carbon","UN","CO","baseColor","CB","factor","SQ","gradient","TM","min","OC","HY","MO","antialias","camFov","camNear","camFar","camDistance","radiusToFit","fogNearFactor","fogFarFactor","fogAlpha","fogColor","fogColorEnable","palette","resolution","autoResolution","autoPreset","preset","presets","default","empty","wire","small","macro","objects","dashSize","gapSize","transparent","draft","clipPlane","clipPlaneFactor","clipPlaneSpeed","plugins","axes","fog","zSprites","isoSurfaceFakeOpacity","suspendRender","nowater","autobuild","fxaa","outline","threshold","thickness","ao","shadow","autoRotation","maxfps","fbxprec","autoRotationAxisFixed","zooming","picking","pick","editing","aromatic","singleUnit","stereo","interpolateViews","transparency","translationSpeed","example","good","ssaoKernelRadius","ssaoFactor","stereoBarrel","use","multiFile","Settings","old","_changed","path","_notifyChange","merge","_notifyChanges","defaultValue","cloneDeep","checkpoint","deepValue","deepPath","changed","filter","applyDiffs","diffs","VERSION","getDiffs","versioned","setPluginOpts","plugin","repIndex","asBoolean","adapters","string","boolean","cL1ExclExpr","cCommonIgnoreSymbols","encodeQueryComponentL1","cL2ExclExpr","encodeQueryComponentL2","ensureRepList","reps","ensureRepAssign","prop","extractArgs","defaultsDict","bang","inputVal","sep","parseParams","arg","pair","adapter","actions","t","u","unit","menu","isArray","_objects","newOpts","newObj","s","m","mt","materials","dup","ar","_fromArray","entries","entry","isFunction","_processOptsForURL","_processArgsForURL","_processObjForURL","objOpts","_processOptsForScript","_processArgsForScript","_processObjForScript","map","_processRepsForScript","repString","strIdx","localAdd","fromURL","fromAttr","attr","toURL","stringList","idx","checkAndAdd","repList","addReps","objList","addObjects","protocol","host","pathname","toScript","commandsList","command","saveQuotes","quote","trim","Atom","residue","position","role","het","serial","occupancy","temperature","charge","mask","hydrogenCount","radicalCount","valence","bonds","flags","Flags","HYDROGEN","CARBON","process","_chain","getName","_sequence","NONPOLARH","Element","fullName","weight","radiusBonding","hValency","hydrogenValency","U1","Lead","U2","Wing","U18","N","Constants","C","O","SG","D","T","byAtomicNumber","ByAtomicNumber","byName","ByName","getByName","cBondTypes","UNKNOWN","COVALENT","AROMATIC","getAtomPos","Bond","left","right","order","fixed","_left","_right","_fixed","_order","_type","distanceTo","currAtom","_forEachNeighbour","l2Atom","refPoint","currDir","posGetter","rightCount","leftCount","tmpVec","clone","checkDir","sub","dot","checkCarbon","stages","forEachLevelOne","forEachLevelTwo","stageId","multiplyScalar","third","maxNeibs","another","secondPos","firstV","secondV","crossVectors","lengthSq","normalize","_fixDir","BondType","cNucleicControlNames","cNucleicWing1Names","cNucleicWing2Names","cCylinderSource","cCylinderTarget","types","atoms","Residue","chain","sequence","icode","_component","_icode","_mask","_atoms","_secondary","_firstAtom","_leadAtom","_wingAtom","_lastAtom","_controlPoint","_midPoint","_wingVector","_cylinders","_isValid","_het","_molecule","xyz","altLoc","tempFactor","getComplex","addAtom","forEachAtom","names","_findAtomByName","_name","getAtomPosition","leadAtom","_findFirstAtomInList","wingStart","wingEnd","cylSource","targetList","getCylinderTargetList","cylTarget","prevLeadPos","currLeadPos","prevWingPos","prevWing","vectorA","vectorB","angleTo","negate","prevRes","prev","nextRes","chainAsNucleic","bFirstInChain","lp","THREE","x","y","z","_detectLeadWing","lerp","calcWing","asNucleic","_innerFinalize","anotherResidue","tempCount","occupCount","ResidueType","letterCode","_fullName","_addFlag","flag","StandardTypes","ALA","ARG","ASN","ASP","CYS","GLN","GLU","GLY","HIS","ILE","LEU","LYS","MET","PHE","PRO","PYL","SEC","SER","THR","TRP","TYR","VAL","A","G","I","U","DA","DC","DG","DI","DT","DU","WAT","H2O","HOH","DOD","UNK","UNL","PROTEIN","BASIC","ACIDIC","POLAR","NONPOLAR","NUCLEIC","PURINE","PYRIMIDINE","DNA","RNA","WATER","_addParam","ChainType","Chain","complex","_complex","_residues","minSequence","POSITIVE_INFINITY","maxSequence","NEGATIVE_INFINITY","residues","seqNum","iCode","_determineType","curr","_finalize2","frameData","prevData","frameRes","currData","getResidueType","addResidueType","addResidue","StructuralElement","init","term","generic","genericByType","serialAtomMap","residueHash","splitUnifiedSerial","chainId","serialId","hashCode","getUnifiedSerial","Type","STRAND","BRIDGE","HELIX_310","HELIX_ALPHA","HELIX_PI","HELIX","TURN_310","TURN_ALPHA","TURN_PI","TURN","BEND","COIL","Generic","LOOP","StructuralElementType","StructuralElementGeneric","typeByPDBHelixClass","Helix","helixClass","comment","Strand","sheet","sense","atomCur","atomPrev","as","isNaN","Sheet","_width","_strands","_finalize","SGroup","saveNode","_id","_position","_charge","_repeat","_center","xmlNodeRef","nLimon","bLow","bHight","aPos","addVectors","List","_values","splice","toJSON","includes","valuesArray","upperOnly","_validate","Selector","ListSelector","RangeListSelector","ValueListSelector","caseSensitive","NoneSelector","_atom","AllSelector","none","PrefixOperator","rhs","InfixOperator","lhs","keywords","defineSelector","SelectorClass","factory","NULL_SELECTOR","defineOperator","OperatorClass","byResidueTypeFlag","includesAtom","selectors","BiologicalUnit","_selector","_boundaries","boundingBox","boundingSphere","makeEmpty","expandByPoint","bbc","getCenter","setFromCenterAndSize","radiusSquared","pos","lengthSquared","distanceToSquared","sqrt","Assembly","chains","matrices","oldCenter","oldRad","applyMatrix4","newRad","addScalar","subScalar","matrix","Component","_residueIndices","_cycles","_subDivs","_residueCount","resIdc","idIdc","idCount","last","subDivs","resCnt","_bonds","forEachCycle","cycle","forEachResidue","cycles","subs","currRes","endRes","_forEachSubChain","_subIdx","currIdx","lastSubIdx","subIdx","arr","boundaries","AtomPairs","maxPairsEstimate","numPairs","numMaxPairs","intBuffer","Int32Array","hashBuffer","cHashTableSize","indexA","indexB","ia","ib","codeToAdd","apI","_getBondingRadius","v1Tmp","v2Tmp","cp","AutoBond","_maxRad","bBox","getDefaultBoundaries","_vBoxMin","_vBoxMax","_pairCollection","getAtoms","numAtoms","aInd","collection","numBondsForAtom","bInd","addPair","vw","getVoxelWorld","rA","isHydrogenA","posA","locationA","atomA","atomsNum","processAtom","atomB","isHydrogen","locationB","dist2","rB","maxAcceptable","isHet","forEachAtomWithinRadius","iA","iB","_addPair","bondsA","numBonds","newBond","addBond","_buildInner","_calcBoundingBox","_addExistingPairs","_findPairs","_addPairs","nAtoms","maxRad","destroy","cAromaticType","cAromaticAtoms","_coDirVectors","v1","v2","_insertAscending","_anotherAtom","_markAromatic","Cycle","atomsList","nA","nextAtom","checkBond","forEachBond","_isAromatic","_isPossibleAromatic","rightIdx","leftIdx","_checkCycleSimple","_checkCycleComplex","assert","AromaticLoopsMarker","bondsData","bondMarks","_bondsData","_bondMarks","_resetCycles","_currIdx","bond1","bond2","arr1","arr2","n1","n2","i1","i2","prevBond","currRight","bondsOrder","currLeft","currVec","startAtomRef","_currStart","checkAromatic","_checkBond","_haveSameCycle","theta","anotherAtom","anotherVec","clamp","newDir","cross","dir","newRight","_tryBond","checkCycle","forEachComponent","component","_startCycle","newCycle","addCycle","_findLoops","_getSphereSliceRadiusRange","zMin","zMax","dzMin","dzMax","rzMin","rzMax","_getCircleSliceRadiusRange","yMin","yMax","dyMin","dyMax","ryMin","ryMax","VoxelWorld","box","vCellSizeHint","_box","getSize","divide","floor","_last","_cellSize","_cellInnerR","_cellOuterR","numVoxels","_voxels","getAtomCount","voxelIdx","_findVoxel","point","zero","_zero","voxel","_voxel","xRange","_xRange","yRange","_yRange","zRange","_zRange","_forEachVoxelWithinRadiusSimple","rRangeXY","rRangeX","xVal","yVal","zVal","isInsideX","isInsideY","isInsideZ","divideScalar","clampScalar","vCenter","_vCenter","distTouch2","distInside2","d2","r2","_forEachVoxelWithinRadius","isInside","_forEachAtomInVoxel","dist","_forEachAtomWithinDistFromGroup","atomProc","voxels","processIfWithin","HBondInfo","_hbonds","_buildVW","_build","from","to","acceptor","acc0","acc1","energy","ri","getType","preri","rj","prerj","_calcHBondEnergy","pairs","PairCollection","_residueGetCAlpha","_residueGetCO","h","predonor","donor","_residueGetNH","distanceHO","distanceHC","distanceNC","distanceNO","round","donorInfo","accInfo","BridgeType","freeze","NO_BRIDGE","PARALLEL","ANTI_PARALLEL","HelixFlag","START","MIDDLE","END","START_AND_END","StructureType","SecondaryStructureMap","_ss","_sheet","_betaPartners","_bend","getResidues","_helixFlags","_chainLengths","_chains","_buildBetaSheets","_buildAlphaHelices","inResidues","chainLength","inPreferPiHelices","stride","isBond","kappa","_kappa","_isHelixStart","isTurn","p1","p2","p3","p4","v12","v34","prevPrev","nextNext","curCA","ppCA","nnCA","ckap","_cosinusAngle","skap","atan2","bridges","lenA","chainA","b","lenB","chainB","_testBridge","found","bridge","unshift","chainI","getChain","chainJ","sort","ibi","iei","jbi","jei","ibj","iej","jbj","jej","_hasChainBreak","ladderset","Set","ladder","sheetset","toMove","_areBridgesLinked","betai","betaj","parallel","d","f","ai","aj","has","helixClassMap","loopMap","Complex","_components","_helices","_sheets","structures","_residueTypes","_sgroups","_molecules","_maskNeedsUpdate","metadata","symmetry","units","_currentUnit","forEachChain","updateToFrame","resName","chainName","resId","atomName","localeCompare","molecules","groups","components","maxSerial","uniSerial","remnant","insCode","addComp","comp","resCount","currStart","isConnected","setSubDivs","currSubDivs","enableEditing","_fillCmpEdit","_fillCmpNoedit","getBoundaries","getTransforms","getSelector","setCurrentUnit","newUnit","computeBoundaries","_computeBounds","_finalizeBonds","forEachSGroup","_rebuildSGroupOnAtomChange","updateStructuresMask","getBonds","finalize","getSequence","getICode","helices","sheets","needAutoBonding","autoConnector","build","_fillComponents","marker","markCycles","detectAromaticLoops","detectCycles","_finalizeMolecules","molecule","updater","structure","collectMask","forEachMolecule","setMask","clearMask","totalSelector","reseter","_atomNames","dict","_elements","_residueNames","_chainNames","_altlocNames","_voxelWorld","addAtoms","srcArray","dstArray","functor","elem","complexes","atomBias","bondBias","residueBias","chainBias","componentBias","bias","processBond","processResidue","processChain","processComponent","doNothing","rt","addElement","lastCode","lastSheetIndex","item","ssMap","lastHelixIndex","curStructure","curCode","curResidue","curSheetIndex","loopType","curSheet","addStrand","pow2ceil","Volume","dimensions","vecSize","volumeInfo","_dimVec","_volumeInfo","_dimX","_dimY","_dimZ","_rowElements","_planeElements","_totalElements","_data","getValue","setValue","addValue","boxSize","Float32Array","vl","getCellSize","vs","xSize","ySize","zSize","volMap","_voxelValue","zi","zm","zp","yi","ym","yp","xi","xm","xp","tilesX","ceil","tilesY","height","tileRow","row","texture","needsUpdate","Molecule","CSS2DObject","_element","parentNode","transp","el","getElement","op","top","op100","opacity","RCGroup","raycaster","intersects","visible","children","raycast","innerOnly","enableSubset","disableSubset","totalSubset","getSubset","_worldMatrixInverse","identity","LAYERS","VOLUME","TRANSPARENT","PREPASS_TRANSPARENT","VOLUME_BFPLANE","COLOR_FROM_POSITION","SHADOWMAP","SELECTION_LAYERS","resetTransform","quaternion","updateMatrixWorldRecursive","parent","updateMatrixWorld","addSavingWorldTransform","matrixWorld","invert","multiply","decompose","renderDummyQuad","_material","depthWrite","_scene","_quad","_camera","render","renderScreenQuad","isIdentity","equals","applyToPointsArray","w","elements","persp","_v","ScreenQuadMaterial","uniforms","srcTex","vertexShader","vertexScreenQuadShader","depthTest","clearTree","traverse","geometry","dispose","removeChildren","renderScreenQuadFromTex","fragmentShader","renderScreenQuadFromTexWithDistortion","coef","setMinimalFov","angle","aspect","fov","radToDeg","atan","tan","degToRad","updateHalfSized","camera","originalAspect","originalFov","updateProjectionMatrix","setDistanceToFit","sin","intersectVisibleObject","gfxObj","fogFarPlane","intersectObject","nearPlane","near","matrixWorldInverse","farPlane","far","extractScale","te","determinant","copyAtList","attribute","indexList","_oldInstancedBufferGeometryCopy","source","instanceCount","calcCylinderMatrix","posBegin","posEnd","posCenter","matScale","makeScale","matRotHalf","makeRotationX","matRotLook","vUp","lookAt","setPosition","calcChunkMatrix","eye","target","up","rad","groupHasGeometryToRender","group","hasGeoms","buildDistorionMesh","widthSegments","heightSegements","calcInverseBarrel","prevR2","curR2","dr","geo","getAttribute","setXY","fillArray","startIndex","endIndex","destroyObject","belongToSelectLayers","layers","processObjRenderOrder","root","idMaterial","renderOrder","isGroup","applySelectionMaterial","setValues","depthFunc","overrideColor","lights","shadowmap","setUberOptions","fixedColor","zOffset","getMiddlePoint","point1","point2","optionalTarget","addScaledVector","_defaultBoundaries","Visual","dataSource","_dataSource","gfxutils","_ensureArray","EntityList","entities","_list","_dict","_indices","entity","register","registerInList","registerInDict","unregisterFromList","unregisterFromDict","makeContextDependent","defineProperties","CollisionSphere","_radius","sphere","_sphere","ray","intersectSphere","distance","origin","SphereCollisionGeo","inters","chunkIdx","computeBoundingBox","tmpColor","InstancedSpheresGeometry","spheresCount","sphereComplexity","useZSprites","_sphGeometry","_init","itemIdx","itemPos","itemRad","_offsets","setSphere","colorVal","_colors","g","finishUpdate","computeBoundingSphere","chunkIndices","alphaArr","_alpha","geom","sphereGeo","alpha","fill","RaycastableBufferGeometry","uv1","uv2","uv3","barycoord","_barycoord","barycoordFromPoint","pA","pB","pC","intersectTriangle","uv","vA","_vA","vB","_vB","vC","_vC","intersectionPoint","_intersectionPoint","fromBufferAttribute","intersection","checkIntersection","uvA","_uvA","uvB","_uvB","uvC","_uvC","uvIntersection","normal","getNormal","face","faceIndex","intersectsSphere","intersectsBox","attributes","getX","checkBufferGeometryIntersection","ChunkedObjectsGeometry","chunkGeo","chunksCount","_chunkGeo","colors","chunkSize","_chunkSize","facesPerChunk","srcPos","_positions","srcNorm","_normals","srcColor","dstPos","dstNorm","dstColor","dstPtOffset","ptIdxBegin","ptIdxEnd","subarray","chunkIndex","chunkIndexSize","pointsCount","use32bitIndex","indexSize","Uint32Array","Uint16Array","posOffset","setIndex","SimpleSpheresGeometry","sphGeometry","normals","geoNormals","_chunkPos","_tmpPositions","tmpPos","geoPos","centerPos","tmpVector","normMtx","Simple2CCylindersGeometry","cylGeometry","_chunkNorms","_tmpVector","botPos","topPos","firstOffset","secondOffset","tmpArray","geoNorm","lerpVectors","mtx1","getNormalMatrix","fromArray","toArray","applyMatrix3","colorVal1","colorVal2","CylinderBufferGeometry","radiusTop","radiusBottom","radialSegments","heightSegments","openEnded","thetaLength","parameters","hasTop","hasBottom","vertexCount","facesCount","heightHalf","positions","uvs","currVtxIdx","currFaceIdx","tanTheta","v3","v4","setXYZ","vx","vy","vz","cos","startTIdx","lastIdx","fTIdx","currSrcIdx","getY","getZ","nextTVtx","startBIdx","lastBIdx","fBIdx","currSrcBIdx","nextBVtx","invMatrix","setArrayXYZ","setArrayXYZW","sortNumber","Instanced2CCylindersGeometry","_useZSprites","_cylGeometry","_collisionGeo","me","mtxOffset","setItem","_matVector1","_matVector2","_matVector3","_invmatVector1","_invmatVector2","_invmatVector3","colorIdx","_color1","_color2","chunksIdx","cylinderInfo","newPar","_prepareCylinderInfo","cylinderIndices","color1","color2","_assignOpacity","cylinderGeo","tmpPrev","tmpNext","tmpRes","simpleNormal","normalOnCut","nearRingPt","ExtrudedObjectsGeometry","shape","ringsCount","ptsCount","totalPts","_createExtrudedChunkGeometry","_ringsCount","tmpShape","_tmpShape","hasSlope","hasCut","chunkStartIdx","_setPoints","_setSlopeNormals","_setBaseNormals","_addCut","vtxIdx","mtx","nPtsInRing","_countNormalsInRing","isSlope","shiftToExtraPt","subVectors","direction","startSegmentIdx","segmentsCount","elemSize","ThickLinesGeometry","_initVertices","segmentIdx","pos1","pos2","directions","_directions","dirIdx","startSegIdx","endSegIdx","startPos","startDir","_buffersSize","indexOffset","pointOffset","LinesGeometry","posSize","getPositionSize","BaseLinesGeometry","CylinderCollisionGeo","itemOffset","ChunkedLinesGeometry","enableCollision","collisionGeo","segCount","segIdx","setSegments","getSubsetSegments","setColors","getSubsetColors","TwoColorLinesGeometry","segmentIndices","_segCounts","vectors","vecCount","tempPos1","tempPos2","CrossGeometry","setSegment","IsoSurfaceGeometry","_opts","_posRad","posRad","IsoSurfaceMarchCube","pointsValuesLinear","hasIntersection","bitsInside","numCellsPerSide","n3","striIndicesMarchCube","edgeTable","GridCell","_arrSize","cubeIndex","Triangle","createArray","arrSize","IsoSurface","_numTriangles","_numVertices","_volumetricData","_xAxis","_yAxis","_zAxis","_xDir","_yDir","_zDir","cellSize","xAxis","yAxis","zAxis","xDir","yDir","zDir","tmp","notZero","axe","EPSILON","isoLevel","grid","ind1","ind2","vertex","valP1","isoDiffP1","diffValP2P1","mu","triangles","firstIndices","_firstIndices","secondIndices","_secondIndices","vertexList","_vertexList","normalList","_normalList","_vertexInterp","triCount","triTblIdx","triTable","_triTable","step","appendSimple","appendVertex","vol","volData","getData","dim","getDimensions","stepX","getStrideX","stepY","getStrideY","stepZ","getStrideZ","gc","gcVal","gcValSize","additions","axis","triVertex","_origin","posMtx","grad","globTriCount","getDirectIdx","_gradient","_polygonize","computeGradient","_doGridPosNorms","_prepareAxesAndDirs","vertexMap","idcCount","newIndices","vertices","newPositions","newNormals","norm","faceVer","oldVerCount","vMap","newVer","matchedIndex","_remapIndices","_remapVertices","colorMap","atomMap","atomWeightMap","visibilitySelector","atomWeightData","atomStrideX","atomStrideY","atomStrideZ","numVerts","xs","ys","zs","colorData","strideX","strideY","strideZ","xInv","yInv","zInv","atomLookup","atomWeights","interp","idx1","idx2","collectWeight","coefX","coefY","coefZ","newVerCount","ind","mux","muy","muz","maxWeight","dominantIdx","atomIdx","c0","c1","c2","c3","cz0","cz1","numTriangles","newTriCount","i0","VolumeSurfaceGeometry","_visibilitySelector","_calcSurface","posRadArray","itemsCount","maxPosRad","minPosRad","tmpVal","minMaxValues","_findMinMax","minCoordRad","maxCoordRad","gridPadding","radScale","padRad","bbox","surface","isoSurf","compute","vertexFusion","setColorVolTex","volTexMap","packedArrays","_findNumVoxels","_computeSurface","_makeSurface","chem","QuickSurfGeometry","_shiftByOrigin","gaussdensity","atomicNum","invIsoValue","invGridSpacing","maxVoxelX","maxVoxelY","maxVoxelZ","volTexData","texStrideX","scaledRad","atomicNumFactor","radInv","radLim","radLim2","xMin","xMax","dy2dz2","addr","texAddr","expVal","density","exp","colInd","originX","originY","originZ","AVHash","maxDistance","minX","minY","minZ","maxX","maxY","maxZ","hashFunc","minW","cid","iDim","jDim","kDim","nCells","jkDim","preHash","iIdx","cellOffsets","cellLengths","maxCellLength","subArray","cellLength","neighbourListLength","withinRadii","rExtra","out","outIdx","nearI","nearJ","nearK","loI","loJ","loK","hiI","hiJ","hiK","iOffset","jOffset","cellStart","cellEnd","dataIndex","baseIndex","rSum","ContactSurface","_indexList","maxRadius","scaleFactor","volTex","weights","gridx","gridy","gridz","sinTable","cosTable","neighbours","ngTorus","lastClip","weightsMap","mid","fillGridDim","innI","initializeGrid","gridSize","TypeName","uniformArray","rExt","initializeAngleTables","singleAtomObscures","innX","innY","innZ","innCI","ra2","obscured","ni","projectTorus","aIdx","bIdx","xa","ya","za","r1","innR2","dmp","normalToLine","rInt","ng","cost","sint","px","py","pz","iax","iay","iaz","minx","miny","minz","maxx","maxy","maxz","iz","iy","dzy2","zyOffset","ix","current","getVolume","timeEnd","ax","ay","az","ar2","colIdx","cr","cg","cb","cIdx","ap","spx","spy","spz","dd","projectPoints","innIdx","projectTorii","innInnI","fixNegatives","ContactSurfaceGeometry","contactSurface","IsoSurfaceAtomColored","radiusAt","coord","colorX","colorY","colorZ","atomType","srcAtom","IsosurfaceBuildNormals","vBoxMin","vBoxMax","_numAtoms","_probeRadius","_atomsList","_voxelList","numAtomsRefs","aveRad","numCells","_numCells","_aveRad","side","side2","side3","xScale","_xScale","yScale","_yScale","zScale","_zScale","maxAtomsRefs","xNumVoxMult","yNumVoxMult","zNumVoxMult","diaAffect","numVoxX","numVoxY","numVoxZ","xIndMin","yIndMin","zIndMin","xIndMax","yIndMax","zIndMax","indVoxel","indexNext","_vertices","xInd","yInd","zInd","ref","closest","minDist2","MAX_VALUE","forEachRelatedAtom","numVertices","numCloseAtoms","vNormalX","vNormalY","vNormalZ","koef","maxRadAffect","maxRadAffect2","expScale","gatherNormals","maxClosedAtoms","radiusColorSmoothness","colorsClose","weightsSum","gatherColors","weightNormalized","IsoSurfaceGeo","maxNumVertices","maxNumTriangles","needVertexColors","_maxNumVertices","_maxNumTriangles","SSIsosurfaceGeometry","_innerBuild","geoOut","getGeo","_fromGeo","numTri3","atomsColored","nm","hashLines","hashEntries","probeRadius2","atomRadiusScale","radMax","num","numPoints","vOut","invNP","tx","ty","tz","sign","cube","indexPointValue","xb","yb","zb","v0","a0","voxelWorld","getClosestAtom","a1","a2","isTriangleVisible","indInGeo0","addVertexToGeo","indInGeo1","indInGeo2","itr","meshRes","corners","vCellStep","vaEdges","vCorner","indCell","indY","indZ","getCornerCoord","indPointValues","indValues","buildEdgePoint","offs","numTri","indTri","addTriangle","numIntersectedCells","cubeValuesIndex","indCorner","letter","atomT","probeRad","vDif","fx","fy","fz","indXMin","indYMin","indZMin","indXMax","indYMax","indZMax","HASH_SIZE","numHashEtriesAllocated","numHashEntryIndex","vAdd","hashResolution","marCubeResoultion","iHash","hLineIndex","iVertAdd","getNewHashEntry","entryFirst","probeSphereRadius","distToSphere","distToBorder","probeSpRad2","sideInv","radEst","xCorner","yCorner","zCorner","ok","meshResolution","colorMode","useVertexColors","excludeProbe","convertToAtomsColored","getBoundingBox","rProbeRadius","calculateGridCorners","numIntersectedCellsEstim","getNumIntersectedCells","createVertexHash","probeRadForNormalsColors","createVoxels","buildGeoFromCorners","modifyExcludedFromGeo","buildNormals","buildColors","destroyVoxels","LabelsGeometry","items","xTranslation","yTranslation","deltaPos","userData","translation","fieldTxt","className","spanText","fontSize","strings","spanNodeP","spanNodeText","createLabel","textAlign","fColor","bColor","background","precision","renderer","capabilities","getMaxPrecision","_noiseData","_noiseWrapS","_noiseWrapT","_noiseMinFilter","_noiseMagFilter","_noiseMapping","noiseTexture","noiseWidth","noiseHeight","_samplesKernel","defaultUniforms","diffuse","specular","shininess","zClipValue","clipPlaneValue","nearPlaneValue","invModelViewMatrix","world2colorMatrix","dashedLineSize","dashedLinePeriod","projMatrixInv","viewport","samplesKernel","noiseTex","noiseTexelSize","srcTexelSize","uberOptionNames","UberMaterial","instancedPos","instancedMatrix","attrColor","attrColor2","attrAlphaColor","sphereSprite","cylinderSprite","fakeOpacity","prepassTransparancy","colorFromPos","shadowmapType","colorFromDepth","orthoCam","dashedLine","thickLine","fogTransparent","normalsToGBuffer","toonShading","uberOptions","precisionString","zClipCoef","noise","defines","extensions","createInstance","inst","USE_FOG","INSTANCED_POS","INSTANCED_MATRIX","ATTR_COLOR","ATTR_COLOR2","ATTR_ALPHA_COLOR","OVERRIDE_COLOR","SPHERE_SPRITE","fragDepth","CYLINDER_SPRITE","ZCLIP","CLIP_PLANE","FAKE_OPACITY","USE_LIGHTS","COLOR_FROM_POS","SHADOWMAP_PCF_SHARP","SHADOWMAP_PCF_RAND","SHADOWMAP_BASIC","COLOR_FROM_DEPTH","ORTHOGRAPHIC_CAMERA","PREPASS_TRANSP","DASHED_LINE","THICK_LINE","FOG_TRANSPARENT","drawBuffers","NORMALS_TO_G_BUFFER","TOON_SHADING","shallow","updateUniforms","SuperClass","rest","onBeforeRender","NewObjectType","scene","_onBeforeRender","_update","Mesh","UberObject","ZSpriteMesh","castShadow","receiveShadow","_geometry","_group","modelViewMatrix","multiplyMatrices","uniformsNeedUpdate","ZClippedMesh","modelView","_modelView","mvLength","_mvLength","setFromMatrixColumn","localToWorld","TextMesh","initialized","srcItem","label","visibility","SimpleMesh","_viewport","ThickLineMesh","projectionMatrix","InstancedMesh","ZClipped","ZSprite","Text","Line","LineSegments","Instanced","setMatParams","_createInstancedCylinders","Geometry","geometries","meshes","initMaterial","_createLineSegmentsGeoTriplet","renderParams","thickLines","_createIsoSurfaceGeoTriplet","geoClass","caps","surfaceOpts","MeshCreator","_caps","_settings","TransformGroup","geoParams","transforms","_geoParams","mat","_transforms","_createMeshes","_ray","inverseMatrix","_inverseMatrix","childIntersects","ciCount","geos","meshCnt","mesh","ChemGroup","selection","Name","_selection","_mode","_colorer","_chunksIdc","chunks","_polyComplexity","_geo","_makeGeoArgs","_mesh","chunksList","_calcChunksList","setOpacity","_changeSubsetOpacity","AtomsGroup","atomsIdc","AtomsSphereGroup","calcAtomRadius","setColor","getAtomColor","updateColor","needsColorUpdate","AtomsSurfaceGroup","selectedAtoms","getSurfaceOpts","AtomsSASSESGroupStub","getAtomText","getNode","getVisualName","colorMappings","adjust","inverse","propagateColor","rule","startsWith","templateMappings","hetatm","water","parseTemplate","AtomsTextGroup","getLabelOpts","fgColor","bgColor","_slerp","omega","oSin","AromaticGroup","radOffset","addChunk","chunksToIdx","prevVector","currVector","segmentsHeight","_segmentsHeight","leprStep","currAtomIdx","cCount","cycAtoms","chunkPoints","tmpDir","cycleRad","prevPos","currPos","upDir","currAngle","_createShape","pts","AromaticTorusGroup","torusRad","getAromRadius","radiusV","calcStickRadius","lookAtVector","mtc","points","currPoint","AromaticLinesGroup","getAromaticOffset","prevPt","getAromaticArcChunks","ResiduesGroup","chunksIdc","resIdx","NucleicItemGroup","stickRad","getResidueColor","_processItem","NucleicCylindersGroup","cyl1","cyl2","NucleicSpheresGroup","calcMatrix","_buildStructureInterpolator","Smooth","METHOD_CUBIC","clip","CLIP_CLAMP","cubicTension","scaleTo","argTrans","transformT","tt","newt","ans","_addPoints","centerPoints","topPoints","tp","_calcPoints","firstIdx","_prevIdx","_nextIdx","arrIdx","_extrapolate2","otherIdx","prevIdx","nextIdx","posFrom","posTo","nucleic","nameFrom","nameTo","shift","wing","cpPrev","tpPrev","cpNext","tpNext","_addPointsForLoneResidue","CartoonHelper","startIdx","endIdx","pointsArrays","_topInterp","_centerInterp","_shift","_valueStep","_segmentsCount","firstRad","secondRad","mtcCount","outMtc","currRad","topInterp","cenInterp","currentValue","mtxIdx","lerpVal","currTop","currCenter","nextCenter","_loopThrough","subDiv","subDivI","subDivN","idc","matrixHelper","prevLast","prevSecondRad","getResidueRadius","prepareMatrices","ResiduesSubseqGroup","cmpMultiplier","getHeightSegmentsRatio","getTension","chunkIdc","subdivs","ResiduesTraceGroup","chunk","BondsGroup","drawMultiple","drawMultiorderBonds","showAromatic","showAromaticLoops","bondsIdc","bondsCount","getBondOrder","bondOrder","getCylinderCount","bondIdx","BondsCylinderGroup","normDir","emptyOffset","calcSpaceFraction","leftPos","rightPos","currBondIdx","atom1","atom2","a1Pos","a2Pos","calcNormalDir","currStickRad","BondsLinesGroup","bondDir","a1Hangs","a2Hangs","AtomsProcessor","atomCount","_checkAtom","atomsGroup","meshIdx","chSubset","subsetEl","OrphanAtomsProcessor","ResiduesProcessor","ResidueGroup","_checkResidue","residuesGroup","Atoms","OrphanAtoms","Residues","Nucleic","Subseqs","getMaskedSubdivSequences","jEnd","Bonds","bondsGroup","Aromatic","cycleIdx","perCycle","_bakeGroup","triplet","Processor","Group","GroupsFactory","createSpheres","processors","createCrosses","create2CCylinders","create2CLines","createExtrudedChains","create2CClosedCylinders","createChunkedLines","createQuickSurface","createContactSurface","createSASSES","createLabels","Mode","groupList","depGroups","groupCount","currGroup","newGroup","getRenderParams","LinesMode","shortName","LicoriceMode","BallsAndSticksMode","VanDerWaalsMode","TraceMode","TubeMode","_residue","TUBE_RADIUS","buildGeometry","CartoonMode","secCache","getSecondary","secOpts","ARROW_END","startRad","getResidueStartRadius","endRad","getResidueEndRadius","_res","tubeRad","secHeight","secData","SurfaceMode","surfaces","surfaceNames","isSurface","QuickSurfaceMode","useBeads","getVisibilitySelector","IsoSurfaceMode","_excludeProbe","_radScale","IsoSurfaceSASMode","IsoSurfaceSESMode","ContactSurfaceMode","TextMode","adjustColor","Palette","asIs","elementColors","defaultElementColor","residueColors","defaultResidueColor","chainColors","secondaryColors","defaultSecondaryColor","gradientName","gradients","defaultNamedColor","beta","namedColors","minRangeColor","midRangeColor","maxRangeColor","defaultGradientColor","namedColorsArray","rainbow","temp","hot","cold","reds","blues","H","F","P","S","CL","FE","NI","CU","BR","HE","LI","BE","B","NE","NA","MG","AL","SI","AR","K","SC","TI","V","CR","MN","ZN","GA","GE","AS","KR","RB","SR","Y","ZR","NB","TC","RU","RH","PD","AG","CD","IN","SN","SB","TE","XE","BA","LA","CE","PR","ND","PM","SM","EU","GD","TB","DY","HO","ER","YB","LU","HF","TA","W","RE","OS","IR","PT","AU","HG","TL","PB","BI","PO","AT","RN","FR","RA","AC","TH","PA","NP","PU","AM","CM","BK","CF","ES","FM","MD","NO","LR","RF","DB","BH","HS","MT","palettes","cpkPalette","jmolPalette","Colorer","ElementColorer","getElementColor","ResidueTypeColorer","SequenceColorer","getGradientColor","ChainColorer","getChainColor","SecondaryStructureColorer","getSecondaryColor","secondary","UniformColorer","ConditionalColorer","parsed","_subsetCached","ConformationColorer","TemperatureColorer","OccupancyColorer","_getColorByOccupancy","HydrophobicityColorer","hydrophobicity","MoleculeColorer","getMoleculeCount","CarbonColorer","colorCarbon","colorNotCarbon","neutralColor","intensity","matValues","createDerivativeMesh","layer","newMesh","traverseMeshes","meshTypes","func","_gatherObjects","forEachMeshInGroup","processObj","applyTransformsToMeshes","processTransparentMaterial","prepassTranspMesh","processColFromPosMaterial","colFromPosMesh","createShadowmapMaterial","shadowmapMesh","isShadowmapMesh","removeShadowmapMaterial","countTriangles","totalCount","attribs","property","currAttr","faces","_countMeshTriangles","Representation","startMaterialValues","selectorString","materialPreset","needsRebuild","setMode","markAtoms","clearAtomBits","selectionGeo","meshutils","sg","matrixAutoUpdate","repSettings","selStr","valueOf","modeDiff","identify","colorerDiff","newSelectorObject","newSelector","newMode","newColorer","newMaterial","setMaterialPreset","ComplexEditor","ComponentEditor","complexVisual","_complexVisual","_inProgress","_componentTransforms","_bakeComponentTransform","onAtomPositionChanged","_resetComponentTransform","finalizeEdit","pivot","visual","getSelectedComponent","reprNode","getSelectionGeo","selectionMask","getSelectionBit","_traverseComponentGroups","bbmin","bbmax","updateMatrix","FragmentEditor","_getSelectionBorderAtoms","_fragmentBoundAtoms","pivotPos","_fragmentGeo","_fragmentSelectionGeo","vg","smeshes","sm","selectionBit","makeTranslation","_bakeAtomTransform","boundAtoms","transformDirection","atomHash","lookupAndCreate","entityList","specs","ComplexVisual","_reprList","_repr","_reprListChanged","_selectionBit","_reprUsedBits","_selectionCount","_selectionGeometry","release","_editor","desc","status","change","bits","NUM_REPRESENTATION_BITS","newSelectionBit","_getFreeReprIdx","originalSelection","buildSelectorFromMask","def","unmarkAtoms","hide","show","markAtomsAdditionally","rebuildSelectionGeometry","pickedObj","otherObj","getMolecule","resetSelectionMask","deselectionMask","multiple","selRule","reprList","Promise","resolve","errorOccured","setTimeout","hasGeometry","repr","DEBUG","buildSelectionGeometry","optimizeList","NaN","expression","all","or","and","residx","_buildSelectorFromSortedLists","editor","ComplexVisualEdit","needTraverse","forEachAtomWithinDistFromMasked","countAtomsByMask","volumeUniforms","volumeDim","tileTex","tileTexSize","tileStride","boxAngles","_isoLevel0","_flipV","_BFLeft","_BFRight","_FFLeft","_FFRight","_WFFLeft","_WFFRight","overrideUniforms","defUniforms","facesPosMaterialParams","sideType","BackFacePosMaterial","backFaceParams","ShaderParams","BackFacePosMaterialFarPlane","matUniforms","aspectRatio","farZ","tanHalfFOV","matWorld2Volume","shaderParams","FrontFacePosMaterial","frontFaceParams","VolumeMaterial","updateDefines","ISO_MODE","STEPS_COUNT","VolumeMesh","cullFlag","_corners","edges","_edges","edgeIntersections","_edgeIntersections","constant","vert","cornerMark","edgeMark","curEdge","curEdgeInter","CheckX","CheckY","CheckZ","curEdgeIdx","curEdgeSource","nextVertex","coplanarPoint","faceIdx","_collectVertices","vRight","vDir","rightProj","_sortIndices","numIndices","vm","getTiledTextureStride","buildTiledTexture","getBox","image","getVolumeInfo","volInfo","obtuseAngle","mean","dmean","dmin","span","dmax","sd","nearClipPlaneOffset","_nearClipPlaneOffset","_pos","_norm","norm4D","_norm4D","matrixWorldToLocal","_matrixWorldToLocal","_clipPlane","_updateIsoLevel","getWorldDirection","getWorldPosition","setFromNormalAndCoplanarPoint","_updateVertices","_updateIndices","VolumeBounds","bSize","offsetVert","_getBaseVertices","flatVertices","_flattenArray","_lines","projTable","_projectionTable","proj","inv","currDelta","XY","XZ","YZ","VolumeFarPlane","volume","planeGeo","_initPlaneGeo","_plane","frustumCulled","doubleSided","matWorldToVolume","_renderer","planeCamPos","normalMatrix","volumeMatrix","DEG2RAD","VolumeVisual","setDataSource","_frame","getMesh","showFrame","_farPlane","getBoundingSphere","needShow","LoaderList","someLoaders","SomeLoader","canProbablyLoad","Loader","_source","_options","_abort","_agent","abort","FileLoader","_binary","blob","reader","FileReader","readAsArrayBuffer","readAsText","File","urlStartRegexp","XHRLoader","request","XMLHttpRequest","response","responseType","send","ImmediateLoader","ParserList","someParsers","format","formats","SomeParser","canProbablyParse","parseSync","model","_parseHeader","Remark290","_matrix","_matrixIndex","stream","readString","matrixRow","readCharCode","matrixData","matrixIndex","parseFloat","Remark350","assemblies","_assembly","assembly","addMatrix","addChain","PDBStream","_start","_nextCR","_nextLF","_next","_end","pdbStartRegexp","remarkParsers","290","350","PDBParser","_serialAtomMap","_modelId","_compaundFound","_biomoleculeFound","_allowedChainsIDs","_lastMolId","_remarks","_remark","_compndCurrToken","fileType","_fixBondsArray","_fixChains","remark290","isUndefined","remark350","chainDict","chainObj","idChainMap","nj","readInt","readChar","chainID","resSeq","readFloat","veryLong","nameToElement","Role","serial0","serial1","serial2","serial3","serial4","tokenIdx","chainStr","lastChar","remarkNum","remark","RemarkParser","_parseSTRUCTURE","addHelix","addSheet","pars","adder","serialNumber","structureName","helLength","shWidth","shCur","shPrev","startChainID","endChainID","startSequenceNumber","iCodeStr","startICode","endSequenceNumber","endICode","cs","classification","date","title","tagParsers","HEADER","_parseHEADER","_parseTITLE","_parseATOM","HETATM","ENDMDL","_parseENDMDL","CONECT","_parseCONECT","COMPND","_parseCOMPND","REMARK","_parseREMARK","_parseHELIX","_parseSHEET","cOrderCharCodes","cmlStartRegexp","CMLParser","_readOnlyOneMolecule","atomId","countBonds","idxs","atomRefs2","moleculeArr","fieldData","atomRefs","placement","fieldName","_extractSGroup","_createSGroup","sgroupRef","atomsRef","mapEntry","cycleFuncInner","cycleFunc","x2","x3","y2","y3","z3","dom","childNodes","parseNode","xmlNode","nodeName","nodeValue","jsonNode","existing","molSet","atomArray","_findSuitableMolecule","rawData","doc","DOMParser","parseFromString","traversedData","_traverseData","cml","retData","filteredData","rd","ret","_extractSGroups","localBond","bondArray","_rebuidBondIndexes","orderAttr","tc","labels","_breadWidthSearch","retStruct","atomLabels","labelsCount","originalCML","prepareComponentCompound","compId","molId","molID","_packLabel","breadthQueue","componentID","labeledAtoms","startID","_unpackLabel","eAtom","mainAtom","varData","currentLabel","reorder","lLabel","atomFullNameStruct","elementType","countRef","currAtomComp","strLabel","stringify","atomSerial","added","mrvValence","complexAtom","_parseBond","getSGroupCount","sGrp","getSGroups","_selectComponents","_parseSet","totalAtomsParsed","joinedComplex","joinComplexes","ArrayComparator","original","_original","_sum","candidate","sum","sorted","secStructToType","MMTFParser","_modelData","chainData","modelIndex","chainIndex","groupData","groupName","groupId","groupIndex","_updateSecStructure","atomData","xCoord","yCoord","zCoord","bFactor","formalCharge","atomIndex","bondData","atomIndex1","atomIndex2","secStruct","_ssType","_ssStruct","_ssStart","struct","mmtfData","chainsInModel0","chainsPerModel","chainIndexList","description","structureId","releaseDate","eventCallbacks","onModel","modelData","_onModel","onChain","_onChain","onGroup","_onGroup","onAtom","_onAtom","onBond","_onBond","MMTF","_updateMolecules","named","bioAssemblyList","baInfo","transformList","chainListCheck","chainNames","allChains","_chainsByName","compare","transpose","transform","primaryChainsArray","primaryChainsHash","primary","decode","_traverse","_linkAtomsToResidues","_markHeteroAtoms","_findSynonymousChains","_parseAssemblyInfo","_joinSynonymousChains","isArrayBuffer","ParsingError","column","captureStackTrace","parseLine","parseColumn","_isWhitespace","_inlineIndexOf","ch0","cRequiredAtomFields","cSecondaryCoding","helx","turn","strn","arrize","arrayLikeObject","AtomDataError","_extractOperations","assemblyGen","opsDict","groupStr","gps","grIdx","grCount","gr","gp","es","cnt","ii","nn","newMtx","CIFParser","asymDict","newline","block","keysCount","valuesCount","_parseValue","keyIndex","readCIF","_toComplex","cifData","complexData","_extractAtoms","_extractSecondary","_extractAssemblies","_extractMolecules","_extractMetadata","struct_keywords","pdbx_keywords","databaserev","database_PDB_rev","date_original","pdbx_description","getMolecules","atom_site","auth_seq_id","Cartn_x","Cartn_y","Cartn_z","label_atom_id","group_PDB","chainIdc","auth_asym_id","chainLabelIdc","label_asym_id","serials","iCodes","pdbx_PDB_ins_code","resNames","label_comp_id","type_symbol","tempFactors","B_iso_or_equiv","occupancies","charges","pdbx_formal_charge","altLocs","label_alt_id","models","pdbx_PDB_model_num","label_entity_id","moleculeIdx","struct_conf","_extractConfs","struct_sheet_range","_extractSheets","sheetData","sheet_id","beg_label_seq_id","end_label_seq_id","beg_label_asym_id","sheetNames","strandNames","starts","beg_auth_seq_id","ends","end_auth_seq_id","stICodes","pdbx_beg_PDB_ins_code","endICodes","pdbx_end_PDB_ins_code","getSheet","findResidue","helicesData","conf_type_id","typeId","comments","details","lengths","pdbx_PDB_helix_length","helixClasses","pdbx_PDB_helix_class","asmGen","pdbx_struct_assembly_gen","asmIdx","assembly_id","asmOper","oper_expression","asmList","asym_id_list","operList","vector","ops","_getOperations","pdbx_struct_oper_list","asm","assemblyOps","valueType","VolumeModel","_header","_boxSize","_boxStart","extent","nstart","crs2xyz","cellDims","angles","isTypedArray","_buff","TypeError","headerFormat","arrays","_parseArray","_parseVector","_buffer","header","gamma","z1","z2","_xyz2crs","xaxis","yaxis","zaxis","shiftX","shiftY","_setOrigins","_getXYZdim","_getXYZbox","_toXYZData","_getVolumeInfo","CCP4Header","ispg","nsymbt","lksflg","customData","machine","nlabel","Ccp4Model","_typedCheck","u32","i32","f32","_fillHeader","xyz2crs","_getAxis","_setAxisIndices","_setBoxParams","xyzData","crsIdx","CCP4Parser","XYZParser","_atomsInf","_fileName","endnAtoms","endComment","startAtomsInf","words","_parseToAtomsInf","_parseAtomsInf","PubChemParser","jsonData","PC_Compounds","aids","aid","fromPairs","zip","coords","conformers","aids1","aid1","aids2","aid2","orders","SDFStream","_strings","_currentStart","_currentStringIndx","numb","curStr","getNextString","getCurrentString","setStart","probablyHaveDataToParse","chargeMap","orderMap","typeMap","sdfAndMolRegexp","sdfRegExp","fileFormat","tagsNames","tags","SDFParser","_format","_metadata","_currentMolProps","_compoundIndx","_assemblies","_atomsParsed","_atomsIndexes","getStringFromStart","codes","trunc","reverse","buildChainID","bondsNum","bondType","countsLine","_parseAtoms","_parseBonds","_parseMOL","findNextDataItem","_parseDataItem","props","_tryToUpdateMoleculeData","tagsList","_searchTag","tagPossibleNames","_tryToFind","properties","_finalizeMetadata","_buildAssemblies","_buildMolecules","defineFormat","_parseCompound","findNextCompoundStart","DSN6Header","div","DSN6Model","i16","Int16Array","byteBuffer","counter","zBlock","yBlock","xBlock","inRange","_pointCalculate","blocks","_blockCalculate","_calculateInfoParams","dispersion","minDensity","maxDensity","DSN6Parser","ArrayBuffer","checkDataTypeOptions","GROReader","GROParser","_time","_residueNumber","_residueName","_atomName","_atomNumber","_atomPosition","_atomVelocity","filetype","readLine","getNext","positionX","positionY","positionZ","_parseTitle","_parseNumberOfAtoms","_parseAtom","un","am","nc","du","resNumberRegex","spacesRegex","splitToFields","MOL2Parser","_currPosIdx","_currStartIdx","MOL2Data","newPosIdx","_toStringFromStart","_toHeaderString","_setStart","_probablyHaveDataToParse","parsedStr","_setResidue","originAtomId","targetAtomId","currMolecule","molResidues","_fixSerialAtoms","_parseMolecule","_toStringFromHeader","_parseRawStrings","_findNextCompoundStart","ExporterList","someExporters","Exporter","exportSync","PDBResult","_resultArray","_currentStr","_tag","_fixedNumeration","_numeration","_tagStrNum","writeString","numeration","isBoolean","maxStrPos","_currentStrLength","newString","curStrLength","finish","repeat","cStr","bondsArrays","_getSubArrays","subArraySize","subArrays","matrixIndx","toFixed","Matrix4","writeMatrix","PDBExporter","_tags","_result","_tagExtractors","_extractHEADER","TITLE","_extractTITLE","_extractATOM","_extractCONECT","_extractCOMPND","_extractREMARK","_extractHELIX","SHEET","_extractSHEET","_stringForRemark350","_stringForRemark290","getResult","newTag","fixedBonds","writeBondsArray","strands","startIndx","_getMoleculeChains","chainsString","writeEntireString","_Remark290","_Remark350","writeMatrices","biomolIndx","SourceClass","copyFbxPoint3","srcIdx","dstIdx","copyFbxPoint4","vector4","copyTransformedPoint3","setSubArray","copyFunctor","functorOpts","arridx","FBXModel","lastPos","lastNorm","lastCol","vertsCount","indsCount","shifted","setIndices","currentCount","getVerticesNumber","setShiftedIndices","setTransformedPositions","setTransformedNormals","FBXGeometry","_info","FBX1CGeometry","cl","FBX2CCylinder","_cutRawStart","_cutRawEnd","_facesPerSlice","addPerCylinder","_extendVertices","_extendIndices","getGeoParams","startToShift","colorSize","part1End","part2End","_setColorRange","capSize","cap1End","cap2End","FBXInfoExtractor","_materials","_models","_extractModelsAndMaterials","_flattenModels","layersOfInterest","checkExportAbility","_collectInstancedGeoInfo","_collectGeoInfo","faceSize","overallVertsCount","combined","_reworkIndices","verticesCount","vertCount","setPositions","setNormals","_collectMaterialInfo","_addToPool","instCount","instMatrix","objMatrix","sphereColor","instanceIndex","_getSphereInstanceMatrix","addInstance","oneCCylinder","splittingInfo","_gatherCylindersColoringInfo","twoCCylinder","needToSplit","additionalVertsCount","colorStart","colorEnd","is2Colored","_getCylinderInstanceMatrix","materialIdx","_checkExistingMaterial","findIndex","differs","_collectSpheresInfo","_collectCylindersInfo","instIdx","matVector1","matVector2","matVector3","idxOffset","FBXResult","_writeHeader","_writeDefinitions","_writeObjects","_writeRelations","_writeConnections","creator","version","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","allModels","_verticesIndices","_normalLayer","_colorLayer","allMaterials","_materialProperties","modelsList","materialList","colorArray","colorsStr","_floatArrayToString","colorIndices","normalArray","normalsStr","vertStr","FBXExporter","_version","miewVersion","_extractor","rot","eyeDirection","cameraUpDirection","cameraSidewaysDirection","moveDirection","mouseDelta","quat","loaders","parsers","exporters","tempColor","CSS2DRenderer","_height","_widthHalf","_heightHalf","_vector","_viewMatrix","_projectionMatrix","_domElement","overflow","zIndex","pointerEvents","myNode","firstChild","lerpColorAsHex","setHex","getHexString","colorAsHex","setFromMatrixPosition","localOffset","getMaxScaleOnAxis","fogFactor","smoothstep","WebkitTransform","MozTransform","oTransform","_renderObject","STATE","matrix4","ObjectHandler","lastRotation","ObjectControls","objectPivot","getAltObj","hotkeysEnabled","screen","rotateFactor","axisRotateFactor","intertia","dynamicDampingFactor","intertiaThreshold","_state","_mousePrevPos","_mouseCurPos","_mainObj","_altObj","_affectedObj","_isAltObjFreeRotationAllowed","_isTranslationAllowed","_isKeysTranslatingObj","_pressedKeys","_clock","_lastUpdateTime","_listeners","mousedown","mouseup","mousemove","mousewheel","touchstartend","touchmove","getKeyBindObject","keydownup","handleResize","resetKeys","contextmenu","_rotate","q","zeroPivot","makeRotationFromQuaternion","setObjects","mousePrevPos","mouseCurPos","aboutAxis","mouse2rotation","setFromAxisAngle","translateOnAxis","timeSinceLastUpdate","timeSinceMove","stop","mousePrev","mouseCur","setLength","stopPropagation","preventDefault","innerWidth","innerHeight","getBoundingClientRect","ownerDocument","documentElement","pageXOffset","clientLeft","pageYOffset","clientTop","enableHotkeys","allowTranslation","allow","allowAltObjFreeRotation","keysTranslateObj","isEditingAltObj","convertMouseToOnCircle","pageX","pageY","screenSize","convertMouseToViewport","rotateByMouse","aboutZAxis","getOrientation","setOrientation","getScale","setScale","curTime","_lastMouseMoveTime","speedX","speedY","altObj","button","workWithAltObj","altKey","ctrlKey","shiftKey","translatePivotByMouse","wheelDelta","detail","touches","_touchDistanceCur","_touchDistanceStart","_scaleStart","keyCode","translatePivotInWorld","setX","setY","setZ","translatePivot","setPivot","newPivot","Picker","_lastMousePos","_mouseTotalDist","_lastClickBeginTime","_lastClickPos","_clickBeginTime","touchstart","touchend","picked","pickObject","screenPos","rayCaster","unproject","fogFarValue","getMouseInViewport","curPos","_lastTouchdownPos","changedTouches","Axes","targetCamera","_target","_targetCamera","_object","_full","autoClear","setViewport","secTypes","cSecNames","_createSecondary","strArray","nRes","resid","rIdx","fromUInt20ToInt20","uint20","FrameInfo","payload","callbacks","isLoading","_framesRange","frameIsReady","_frameRequest","_callbacks","_framesRequestLength","_downloadDataFn","parseBinaryData","setFrame","framesStart","framesEnd","_framesCount","onLoadStatusChanged","onError","_bufferRequestStart","_prepareBuffer","arrayBuffer","dataView","DataView","atomsCount","getUint32","framesCount","_atomsCount","chunkedFramesCount","timeStep","iName","_timeStep","posData","coordIdx","secondaryArr","Int8Array","hiWord","loWord","_secondaryData","_currFrame","myResidues","sec","oldSec","nSec","compRes","getSec","frameIdx","_cachedResidues","_updateSecondary","_parseBuffer","vec","_vec","SceneObject","LinesObj","_id1","_id2","getAtomByFullname","_atom1","_getAtomFromName","_atom2","_line","computeLineDistances","_raycaster","_intersects","verticesNeedUpdate","OutlineMaterial","srcDepthTex","srcTexSize","DEPTH_OUTLINE","FXAAMaterial","bgTransparent","BG_TRANSPARENT","AOMaterial","diffuseTexture","normalTexture","depthTexture","camNearFar","projMatrix","kernelRadius","depthThreshold","_kernelOffsets","AOHorBlurMaterial","aoMap","samplesOffsets","AOVertBlurWithBlendMaterial","fogNearFar","useFog","AnaglyphMaterial","srcL","srcR","View","orientation","ViewInterpolator","startView","endView","_endTime","_isPaused","_srcView","_dstView","_isMoving","transTime","_transitionTime","wasStarted","success","createView","slerp","setup","getCurrentView","Cookies","removeCookie","cntKey","_toCount","cntVal","_getSimpleCookie","_removeSimpleCookie","setCookie","chunkLen","lc","_chunkString","_setSimpleCookie","getCookie","cookie","_getExpirationDate","today","setFullYear","toUTCString","_exists","shadowMatrix","OBB","_bSphereForOneVisual","_bBoxForOneVisual","_bBox","_invMatrix","_points","_anaglyphMat","_size","_outlineMaterial","volumeRenderingSupported","volumeBFMat","volumeFFMat","cubeOffsetMat","world2colorMat","_fxaaMaterial","_aoMaterial","_horBlurMaterial","_vertBlurMaterial","_scale","webVRPoC","stylizeElement","bottom","padding","border","borderRadius","font","xr","isSessionSupported","then","supported","cursor","currentSession","onSessionEnded","onSessionStarted","session","_gfx","setReferenceSpaceType","setSession","onmouseenter","onmouseleave","onclick","requestSession","optionalFeatures","moveSceneBehindHeadset","showEnterVR","showWebXRNotFound","textDecoration","WebVRPoC","onToggle","_mainCamera","_button","_onToggle","_molContainer","_user","_scalingPivot","_controller1","_controller2","_pressedGripsCounter","_distance","startScalingByControllers","stopScalingByControllers","gfx","createWebVRButton","_mainFog","_plugVRNodesIntoScene","_setControllersListeners","getController","_createControllerMesh","handleGripsDown","handleGripsUp","setAnimationLoop","getSession","_unplugVRNodesFromScene","cylinder","rotateX","scaler","container","EDIT_MODE","LOADER_NOT_FOUND","removeExtension","reportProgress","percent","chooseFogColor","Miew","settingsCookie","cookiePath","_interpolator","_container","getElementById","head","getElementsByClassName","_containerRoot","_running","_halting","_building","_needRender","_hotKeysEnabled","_cookies","_spinner","_loading","_animInterval","_visuals","_curVisualName","_sourceWindow","registeredPlugins","_initOnSettingsChanged","_setContainerContents","arezSpritesSupported","getExtension","isAOSupported","getMaxRepresentationCount","_updateShadowCamera","halfSize","light","getOBB","class","frag","createDocumentFragment","_msgMode","_msgAtomInfo","_showMessage","_initGfx","_initListeners","Spinner","_onKeyDown","_onKeyUp","_objectControls","_getAltObj","_picker","_onPick","file","keepRepsInfo","job","cancel","halt","msg","_showCanvas","_requestAnimationFrame","requestAnimationFrame","clientWidth","clientHeight","webGLOptions","preserveDrawingBuffer","premultipliedAlpha","renderer2d","shadowMap","autoUpdate","getContext","setPixelRatio","devicePixelRatio","setSize","setClearColor","clearColor","stereoCam","selectionScene","selectionRoot","selectionPivot","light12","pixelRatio","getPixelRatio","shadowMapSize","mapSize","light3","deviceWidth","deviceHeight","offscreenBuf","minFilter","magFilter","depthBuffer","offscreenBuf2","offscreenBuf3","offscreenBuf4","volBFTex","volFFTex","volWFFTex","offscreenBuf5","offscreenBuf6","offscreenBuf7","stereoBufL","stereoBufR","_embedWebXR","stats","_fps","_onResize","_makeUniqueVisualName","baseName","random","suffix","_addVisual","_removeVisual","_forEachVisual","_releaseAllVisuals","_forEachComplexVisual","_getComplexVisual","any","_getVolumeVisual","_getVisualForComplex","getVisuals","getComplexVisualsCount","getCurrentVisual","setCurrentVisual","run","resume","_onTick","_discardComponentEdit","_discardFragmentEdit","pause","enableHotKeys","_resizeOffscreenBuffers","isAnaglyph","multi","_onUpdate","_onRender","_getBSphereRadius","union","_updateFog","_setUberMaterialValues","updateFogRange","isScriptingCommandAvailable","callNextCmd","_needRebuild","_updateView","webVR","updateMoleculeScale","_clipPlaneUpdateValue","_fogFarUpdateValue","setRenderTarget","_renderFrame","focus","_renderShadowMap","_renderScene","setScissorTest","setScissor","cameraL","cameraR","_onBgColorChanged","_onFogColorChanged","_enableMRT","renderBuffer","textureBuffer","gl","tx8","__webglTexture","bindTexture","TEXTURE_2D","fb","__webglFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","COLOR_ATTACHMENT1_WEBGL","drawBuffersWEBGL","distortion","bHaveComplexes","volumeVisual","ssao","_renderWithPrepassTransparency","dstBuffer","srcBuffer","_performAO","_renderOutline","_renderSelection","_renderVolume","_performFXAA","_performDistortion","aberration","targetBuffer","srcDepthBuffer","srcColorBuffer","currentRenderTarget","getRenderTarget","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","setBlending","buffers","setClear","setTest","updateMatrices","_hasSelectionToRender","selPivot","_checkVolumeRenderingSupport","renderTarget","oldRT","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","dstBuf","tmpBuf1","tmpBuf2","tmpBuf3","overrideMaterial","colorMask","normalBuffer","srcDepthTexture","tempBuffer","tempBuffer1","_lastPick","_setEditMode","_resetObjects","setNeedRender","_resetScene","resetPivot","resetView","updateSelectionMask","_export","TheExporter","io","_centerInVisual","rePdbId","rePubchem","reUrlScheme","_fetchData","shouldCancel","notify","matchesPdbId","sourceType","matchesPubchem","compound","resolveSourceShortcut","TheLoader","extractName","fileExt","TheParser","animation","updateBinaryMode","newOptions","keyCount","loader","lengthComputable","total","loaded","spin","onLoadEnd","anything","jobIndex","_refreshTitle","dataSet","_parseData","_onLoad","err","unload","_startAnimation","fileData","_stopAnimation","_frameInfo","isPlaying","_isAnimating","_continueAnimation","_pauseAnimation","clearInterval","minFrameTime","setInterval","_updateObjsToFrame","nextFrame","disableEvents","visualName","amberFileName","hasValidRes","hasValidResidues","resetEd","_onLoadEd","_tweakResolution","_edLoader","loadEd","_rebuildObjects","toRemove","getGeometry","unitIdx","currentUnitInfo","getCurrentUnit","_updateInfoPanel","rebuildActions","setNeedsRebuild","appendix","repGet","_extractRepresentation","getSelectionCount","defPreset","repCount","_setReps","presList","newIdx","_editMode","getElementsByTagName","_enterComponentEditMode","editors","beginComponentEdit","_editors","_applyComponentEdit","discard","_enterFragmentEditMode","selectedVisuals","beginFragmentEdit","isFreeRotationAllowed","_applyFragmentEdit","_updateSelection","expandSelection","shrinkSelection","firstLine","secondLine","aName","coordLine","nextAltObj","setPivotResidue","amount","setPivotAtom","getSelectionCenter","setPivotSubset","_includesInCurSelection","_includesInSelector","screenshot","screenshotURI","getDataURL","dataURL","canvas","canvasContext","drawImage","toDataURL","areaOfInterestTanFov2","shotAspect","setDrawingBufferSize","uri","save","dataString","maxPerf","_gfxScore","_autoChangeResolution","setOptions","resetCurrentUnit","getBondCount","getResidueCount","getChainCount","objData","bThrow","Ctor","LinesObject","_addSceneObject","sceneObject","objs","getState","compact","getScript","_compareReps","compareWithDefaults","currPreset","repsDiff","emptyReps","repsInfo","objectsState","_updateShadowmapMeshes","_updateMaterials","setMaterialValues","_fogAlphaChanged","disable","evt","Boolean","sel","euler","setFromQuaternion","interpolator","srcView","dstView","setFromEuler","isMoving","None","projected","fullAtomName","complexName","project","exportCML","extractBasis","retMat","makeBasis","extractRotation","xml","removeAttribute","sGroup","getPosition","getCentralPoint","updateCMLData","XMLSerializer","serializeToString","curChainName","curChainColor","PACKAGE_VERSION","thirdParty","lodash","three","modeIdDesc","$help","colorDesc","materialDesc","addRepDesc","setGetParameterDesc","PDBID","REP_NAME","DESCRIPTION","REP_INDEX","EXPRESSION","MODE_ID","COLORER_ID","MATERIAL_ID","new","del","PARAMETER","set_save","set_restore","set_reset","PRESET","ENCODED_VIEW","removeobj","listobj","NULL","representationsStorage","representationMap","representationID","strId","sortedKeys","utilFunctions","repMap","repName","selectionStr","strList","helpData","joinHelpStr","clihelp","sortBy","helpItem","awaitWhileCMDisInProcess","finishAwaitingCMDInProcess","modificate","modificators","modificator","endsWith","getNamedColor","cliUtils","cmd","cliutils","_val","notimplemented","script","_printCallback","_errorCallback","parsercli","cmdQueue","commandInAction","unarray","hasComplex","viewer","getNumAtomsBySelector","Menu","parseHTML","_viewer","_menuId","_titlebar","_menu","_curPanelID","_curMenuItem","_xs","_curReprIdx","_singleWordsPrimary","_singleWords","_keyWordsPrimary","_initializeTerminal","urlSubString","files","mdFile","_terminal","_terminalWindow","_hideToolbarPanel","_term","terminal","loadStr","greetings","prompt","scrollOnEcho","keydown","onInit","_fillSelectionColorCombo","paletteID","colorList","comboboxPanel","newItem","lastElementChild","firstElementChild","prevActive","_getCurReprPropertyId","removeClass","newColor","lastChild","backgroundColor","activeItem","_fillCombo","itemID","addClass","_initReprListItemListeners","newReprIdx","currentTarget","btnSelector","rowSelector","collapse","bootstrapSwitch","_getPanelSelector","spinner","spinnerType","selectionPanel","tab","_onSelectorChanged","_addReprListItem","panel","validReprN","ucSelector","ucColor","modeElem","removeData","colorElem","reprPropDataVal","_getCurReprSelector","_copyCurReprListItem","curSelector","newId","appendTo","newHtml","html","zClipState","checked","qSurfParamSelector","_fillSourceList","toggle","curName","getOnSourceSelected","_initReprList","listElement","_fillReprList","zClipParam","isoParam","radParam","ucColorName","newPanelId","tooltip","trigger","_isXS","toggleClass","_onMenuOn","_onMenuOff","blur","_onTerminalOn","_onTerminalOff","isDefaultPrevented","is","classList","contains","toolbar","each","resSelector","curRep","hasClass","dataDirSettings","_zoomClipPlane","originalEvent","_initMiewEventListeners","_initToolbar","_initInfoPanel","_initLoadPanel","_initReprPanel","_initRenderPanel","_initToolsPanel","_initSelectionPanel","_setTitle","_updateInfo","presetsPanel","pdb","inputs","refresh","_enableToolbar","_presetsPanelActionsPdbInputsClear","_initPresetsPanelActions","fakeRepr","removeIdx","removeSelector","reprIdx","reprSelector","_displayGlobalErrorDialog","dialog","titleElement","bodyElement","modal","keyboard","main","_presetsPanelActionsPdbInputsRefresh","warning","loadPdbButton","clearInputsButton","mainTextInput","mainErrorAlert","mainWarningAlert","extractExtension","lastPart","mainAlertText","displayFormError","isCorrect","mainExtension","removeAttr","extRegExp","extString","mainIsCorrect","_presetsPanelActionsPdbLoad","_presetsPanelActionsPdbInputsFile","urlType","textInput","_presetsPanelActionsPdbInputsText","mainBackButton","presetsBackButton","supportedEvents","actionPath","findAction","_initPresetsPanel","createRange","rng","setEnd","getSelection","removeAllRanges","addRange","wordPrimary","word","fillSingleWords","fillKeyWords","off","getAtomNames","getElements","getResidueNames","getChainNames","getAltLocNames","badge","fillToolbar","option","_fixKeyboard","_updateResolutionCombo","_removeActiveFromCombo","setBlur","panelID","menuItem","_updateDisplayOptions","comboPanel","showTerminal","resize","comboName","hideTerminal","_updateReprList","parentDocument","querySelector","showOverlay","hideOverlay","h1","_createRow","molList","_createOptionsFromMVData","itemId","mvdata","removeIdxList","modeItem","colorerItem","matPresetItem","ucColorItem","modeId","colorerId","matPresetId","isDeleted","isAdded","isVisible","_fillModeOptionsFromMenu","hexString","modeParams","colorerParams","onerror","col","containers","sourceURL","extend","convertLevel","toastr","newestOnTop"],"mappings":"8EA2EA,IAAIA,EAAU,WACd,IAAIC,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGK,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKC,GAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKC,GAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GA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AAMtE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEuE,GAAK,CAAC,EAAE,KAAKvE,EAAEuE,GAAK,CAAC,EAAE,KAAKvE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEu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AAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,G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MACAxwI,SACA4D,YACAwI,aACAs4E,YACAl5F,WACAnH,YACAhD,QACA4/I,IAAK,CACH94C,mBAeFwzD,WAAY,CACVC,OAAQ92J,IACR+2J,MAAO3jI,KAIIqqH,U,aIhpITuZ,GAAa,CACjBC,MAAO,CACL,0BACA,iCACA,sBACA,yBACA,8BACA,sBACA,qBACA,wBACA,2BACA,8BACA,iCACA,sBAEF97I,GAAI,CACF87I,MAAO,CACL,sBACA,4CACA,wCACA,wCACA,0CACA,0CACA,4CAGJ15I,GAAI,CACF05I,MAAO,CACL,aACA,uCACA,6CACA,uCACA,wCACA,6BACA,+CAGJh7I,GAAI,CACFg7I,MAAO,CACL,WACA,wCACA,6BACA,0CACA,0CACA,gCAGJ56I,GAAI,CACF46I,MAAO,CACL,cACA,4CACA,wCACA,0CACA,0CACA,4CAGJj7I,GAAI,CACFi7I,MAAO,CACL,mBACA,oBAGJ/5I,GAAI,CACF+5I,MAAO,CACL,WACA,4CAGJ75I,GAAI,CACF65I,MAAO,CACL,UACA,uCACA,wCACA,gCAGJ36I,GAAI,CACF26I,MAAO,CACL,aACA,yCAGJr6I,GAAI,CACFq6I,MAAO,CACL,mBACA,4BACA,yBACA,2BACA,yCAGJt6I,GAAI,CACFs6I,MAAO,CACL,8BACA,yCAGJn5I,GAAI,CACFm5I,MAAO,CACL,eACA,sEACA,iEACA,0EACA,+DACA,6DACA,sCACA,sCACA,sCACA,8CACA,kDACA,8CACA,kDACA,gDACA,iCAKAC,GAAY,CAChBD,MAAO,CACL,yBACA,4BACA,0BACA,6BACA,iCACA,wCACA,oBAEFh4I,GAAI,CACFg4I,MAAO,CACL,6CACA,aACA,iDAEF7gJ,MAAO,CACL6gJ,MAAO52J,OAAOmQ,KAAKovF,GAAShjG,IAAI2C,GAASyM,IAAIwU,SAASu4E,aAAa5lD,OAAOxrC,KAAK,SAK/EwvJ,GAAe,CACnBF,MAAO,CACL,oBACA,mBACA,uBACA,wBACA,0BACA,iBACA,mBAIEG,GAAa,CACjBH,MAAO,CACL,kEACA,qBACA,4BACA,8CACA,+BACA,iDACA,8BACA,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","file":"demo.977b8ac5030b84f0758f.js","sourcesContent":["/* eslint-disable */\n// DO NOT EDIT! Automatically generated from .jison\n/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,60],$V1=[1,62],$V2=[1,63],$V3=[1,65],$V4=[1,66],$V5=[1,67],$V6=[1,68],$V7=[1,69],$V8=[1,80],$V9=[1,72],$Va=[1,73],$Vb=[1,74],$Vc=[1,75],$Vd=[1,99],$Ve=[1,76],$Vf=[1,100],$Vg=[1,79],$Vh=[1,51],$Vi=[1,81],$Vj=[1,82],$Vk=[1,84],$Vl=[1,83],$Vm=[1,85],$Vn=[1,96],$Vo=[1,97],$Vp=[1,98],$Vq=[1,86],$Vr=[1,87],$Vs=[1,64],$Vt=[1,70],$Vu=[1,71],$Vv=[1,77],$Vw=[1,78],$Vx=[1,53],$Vy=[1,54],$Vz=[1,55],$VA=[1,61],$VB=[1,88],$VC=[1,89],$VD=[1,90],$VE=[1,91],$VF=[1,92],$VG=[1,93],$VH=[1,94],$VI=[1,95],$VJ=[1,101],$VK=[1,102],$VL=[1,103],$VM=[1,104],$VN=[1,105],$VO=[1,56],$VP=[1,57],$VQ=[1,58],$VR=[1,59],$VS=[1,115],$VT=[1,111],$VU=[1,114],$VV=[1,112],$VW=[1,113],$VX=[1,118],$VY=[1,117],$VZ=[1,134],$V_=[1,149],$V$=[1,150],$V01=[1,157],$V11=[5,6,7,9,13,14,15,17,18,19,20,23,25,26,27,30,33,34,35,37,38,41,43,45,46,49,52,54,55,56,58,59,62,64,65,66,70,72,74,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101],$V21=[5,6,7,9,13,14,15,17,18,19,20,23,25,26,27,30,33,34,35,37,38,41,43,45,46,49,52,54,55,56,58,59,62,64,65,66,70,71,72,74,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101],$V31=[5,6,7,9,13,15,17,18,19,20,23,25,26,27,30,33,34,37,38,41,43,45,46,49,52,54,55,56,58,59,62,64,65,66,70,72,82,83,84,85,86,87,88,89,90,91,92,93,94,95],$V41=[5,70,72],$V51=[5,74],$V61=[71,101];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"Program\":3,\"Command\":4,\"EOF\":5,\"RESET\":6,\"BUILD\":7,\"ALL\":8,\"HELP\":9,\"Path\":10,\"MOTM\":11,\"OneArgCommand\":12,\"GET\":13,\"STRING\":14,\"SET\":15,\"Value\":16,\"SET_SAVE\":17,\"SET_RESTORE\":18,\"SET_RESET\":19,\"PRESET\":20,\"AddRepresentation\":21,\"EditRepresentation\":22,\"REMOVE\":23,\"RepresentationReference\":24,\"HIDE\":25,\"SHOW\":26,\"LIST\":27,\"EXPAND_KEY\":28,\"SELECTOR_KEY\":29,\"SELECT\":30,\"AS\":31,\"WordAll\":32,\"SELECTOR\":33,\"WITHIN\":34,\"NUMBER\":35,\"OF\":36,\"MATERIAL\":37,\"IDENTIFIER\":38,\"ModeCMD\":39,\"ColorCMD\":40,\"VIEW\":41,\"BASE_64\":42,\"UNIT\":43,\"DSSP\":44,\"SCALE\":45,\"ROTATE\":46,\"AxesList\":47,\"TRANSLATE\":48,\"CENTER\":49,\"GetURLBranch\":50,\"Screenshot\":51,\"LINE\":52,\"ArgList\":53,\"LISTOBJ\":54,\"REMOVEOBJ\":55,\"URL\":56,\"VIEW_KEY\":57,\"SCREENSHOT\":58,\"LOAD\":59,\"Url\":60,\"FILE_KEY\":61,\"ADD\":62,\"Description\":63,\"REP\":64,\"MODE\":65,\"COLOR\":66,\"Descriptor\":67,\"RepresentationOwnProperty\":68,\"RepresentationOwnPropertyOpts\":69,\"DESC_KEY\":70,\"=\":71,\"DESC_KEY_OPTS\":72,\"AxesArg\":73,\"DESC_KEY_AXES\":74,\"Arg\":75,\"PathWoDescKey\":76,\"HEX\":77,\"BOOL\":78,\"Word\":79,\"CommandSetWoDESC_KEY\":80,\"DescKeys\":81,\"CLEAR\":82,\"FILE_LIST\":83,\"FILE_REGISTER\":84,\"FILE_DELETE\":85,\"PRESET_ADD\":86,\"PRESET_DELETE\":87,\"PRESET_UPDATE\":88,\"PRESET_RENAME\":89,\"PRESET_OPEN\":90,\"CREATE_SCENARIO\":91,\"RESET_SCENARIO\":92,\"DELETE_SCENARIO\":93,\"ADD_SCENARIO_ITEM\":94,\"LIST_SCENARIO\":95,\"PDB_KEY\":96,\"DELAY_KEY\":97,\"PRST_KEY\":98,\"DESCRIPTION_KEY\":99,\"CommandSet\":100,\".\":101,\"PresetPath\":102,\"/\":103,\"HexOrNumber\":104,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",6:\"RESET\",7:\"BUILD\",8:\"ALL\",9:\"HELP\",11:\"MOTM\",13:\"GET\",14:\"STRING\",15:\"SET\",17:\"SET_SAVE\",18:\"SET_RESTORE\",19:\"SET_RESET\",20:\"PRESET\",23:\"REMOVE\",25:\"HIDE\",26:\"SHOW\",27:\"LIST\",28:\"EXPAND_KEY\",29:\"SELECTOR_KEY\",30:\"SELECT\",31:\"AS\",33:\"SELECTOR\",34:\"WITHIN\",35:\"NUMBER\",36:\"OF\",37:\"MATERIAL\",38:\"IDENTIFIER\",41:\"VIEW\",42:\"BASE_64\",43:\"UNIT\",44:\"DSSP\",45:\"SCALE\",46:\"ROTATE\",48:\"TRANSLATE\",49:\"CENTER\",52:\"LINE\",54:\"LISTOBJ\",55:\"REMOVEOBJ\",56:\"URL\",57:\"VIEW_KEY\",58:\"SCREENSHOT\",59:\"LOAD\",61:\"FILE_KEY\",62:\"ADD\",64:\"REP\",65:\"MODE\",66:\"COLOR\",70:\"DESC_KEY\",71:\"=\",72:\"DESC_KEY_OPTS\",74:\"DESC_KEY_AXES\",77:\"HEX\",78:\"BOOL\",82:\"CLEAR\",83:\"FILE_LIST\",84:\"FILE_REGISTER\",85:\"FILE_DELETE\",86:\"PRESET_ADD\",87:\"PRESET_DELETE\",88:\"PRESET_UPDATE\",89:\"PRESET_RENAME\",90:\"PRESET_OPEN\",91:\"CREATE_SCENARIO\",92:\"RESET_SCENARIO\",93:\"DELETE_SCENARIO\",94:\"ADD_SCENARIO_ITEM\",95:\"LIST_SCENARIO\",96:\"PDB_KEY\",97:\"DELAY_KEY\",98:\"PRST_KEY\",99:\"DESCRIPTION_KEY\",101:\".\",103:\"/\"},\nproductions_: [0,[3,2],[3,1],[4,1],[4,1],[4,2],[4,1],[4,2],[4,1],[4,1],[4,2],[4,2],[4,3],[4,3],[4,1],[4,1],[4,1],[4,1],[4,2],[4,1],[4,1],[4,2],[4,2],[4,2],[4,2],[4,1],[4,2],[4,2],[4,2],[4,4],[4,2],[4,6],[4,2],[4,1],[4,1],[4,1],[4,2],[4,2],[4,1],[4,2],[4,1],[4,2],[4,2],[4,2],[4,1],[4,2],[4,1],[4,1],[4,3],[4,3],[4,4],[4,4],[4,1],[4,2],[50,1],[50,2],[50,2],[50,3],[50,3],[51,1],[51,2],[51,3],[12,2],[12,2],[12,2],[21,1],[21,2],[21,2],[21,3],[22,2],[22,3],[39,2],[39,3],[40,2],[40,3],[24,1],[24,1],[63,1],[63,2],[63,3],[63,4],[67,1],[67,1],[67,2],[68,3],[69,3],[47,1],[47,2],[73,2],[53,1],[53,2],[75,3],[16,1],[16,1],[16,1],[16,1],[16,1],[79,1],[79,1],[32,1],[32,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[81,1],[81,1],[81,1],[81,1],[81,1],[81,1],[81,1],[100,1],[100,1],[76,1],[76,3],[76,3],[10,1],[10,1],[10,3],[10,3],[10,3],[60,1],[102,1],[102,3],[104,1],[104,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n return $$[$0-1]; \nbreak;\ncase 3:\nthis.$ = yy.miew.reset(false); yy.ClearContext(); yy.miew.resetReps(\"empty\");\nbreak;\ncase 4:\nthis.$ = yy.miew.rebuild();\nbreak;\ncase 5:\nthis.$ = yy.miew.rebuildAll(); yy.miew.rebuild();\nbreak;\ncase 6:\nthis.$ = yy.echo(yy.utils.help().toString());\nbreak;\ncase 7:\nthis.$ = yy.echo(yy.utils.help($$[$0]).toString());\nbreak;\ncase 8:\nthis.$ = yy.miew.motm();\nbreak;\ncase 10: case 11:\nthis.$ = yy.utils.propagateProp($$[$0]); yy.echo(yy.miew.get($$[$0]).toString());\nbreak;\ncase 12: case 13:\nthis.$ = yy.miew.set($$[$0-1], yy.utils.propagateProp($$[$0-1], $$[$0]));;\nbreak;\ncase 14:\nthis.$ = yy.miew.saveSettings();;\nbreak;\ncase 15:\nthis.$ = yy.miew.restoreSettings();;\nbreak;\ncase 16:\nthis.$ = yy.miew.resetSettings();;\nbreak;\ncase 17:\nthis.$ = yy.miew.resetReps();\nbreak;\ncase 18:\nthis.$ = yy.miew.applyPreset($$[$0]);\nbreak;\ncase 21:\nthis.$ = yy.miew.repRemove($$[$0]); yy.representations.remove($$[$0]);\nbreak;\ncase 22:\nthis.$ = yy.miew.repHide($$[$0]);\nbreak;\ncase 23:\nthis.$ = yy.miew.repHide($$[$0], false);\nbreak;\ncase 24:\nthis.$ = yy.echo(yy.utils.listRep(yy.miew, yy.representations, $$[$0], '-e'));\nbreak;\ncase 25:\nthis.$ = yy.echo(yy.utils.list(yy.miew, yy.representations));\nbreak;\ncase 26:\nthis.$ = yy.echo(yy.utils.list(yy.miew, yy.representations, $$[$0]));\nbreak;\ncase 27:\nthis.$ = yy.echo(yy.utils.listSelector(yy.miew, yy.Context));\nbreak;\ncase 28:\nthis.$ = yy.miew.select(yy.utils.checkArg($$[$0-1].toLowerCase(), $$[$0], true));\nbreak;\ncase 29:\nthis.$ = yy.Context[$$[$0].toLowerCase()] = yy.utils.checkArg($$[$0-3].toLowerCase(), $$[$0-2], true); yy.miew.select(yy.Context[$$[$0].toLowerCase()]);\nbreak;\ncase 30:\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {selector : yy.utils.checkArg($$[$0-1].toLowerCase(), $$[$0])});\nbreak;\ncase 31:\nthis.$ = yy.Context[$$[$0].toLowerCase()] = yy.miew.within(yy.utils.checkArg(\"select\", $$[$0-2], true), Number($$[$0-4]));\nbreak;\ncase 32:\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {material : yy.utils.checkArg($$[$0-1].toLowerCase(), $$[$0].toUpperCase())});\nbreak;\ncase 35:\nthis.$ = yy.echo(yy.miew.view());\nbreak;\ncase 36: case 37:\nthis.$ = yy.miew.view($$[$0]);\nbreak;\ncase 38:\nthis.$ = yy.echo(yy.miew.changeUnit());\nbreak;\ncase 39:\nthis.$ = yy.echo(yy.miew.changeUnit($$[$0]));\nbreak;\ncase 40:\nthis.$ = yy.miew.dssp();\nbreak;\ncase 41:\nthis.$ = yy.miew.scale($$[$0]);\nbreak;\ncase 42:\n for (var i = 0, n = $$[$0].length; i < n; i++) {yy.miew.rotate($$[$0][i]['x'] * Math.PI / 180.0, $$[$0][i]['y'] * Math.PI / 180.0, $$[$0][i]['z'] * Math.PI / 180.0)} \nbreak;\ncase 43:\n for (var i = 0, n = $$[$0].length; i < n; i++) {yy.miew.translate($$[$0][i]['x'] || 0, $$[$0][i]['y'] || 0, $$[$0][i]['z'] || 0)} \nbreak;\ncase 44:\nthis.$ = yy.miew.center();\nbreak;\ncase 45:\nthis.$ = yy.miew.center($$[$0]);\nbreak;\ncase 48: case 49:\nthis.$ = yy.miew.addObject({type: 'line', params: [$$[$0-1], $$[$0]]}, true);\nbreak;\ncase 50: case 51:\nthis.$ = yy.miew.addObject({type: 'line', params: [$$[$0-2], $$[$0-1]], opts:$$[$0].toJSO(yy.utils, 'objects', 'line')}, true);\nbreak;\ncase 52:\nthis.$ = yy.echo(yy.utils.listObjs(yy.miew));\nbreak;\ncase 53:\nthis.$ = yy.miew.removeObject($$[$0]);\nbreak;\ncase 54:\nthis.$ = yy.echo(yy.miew.getURL({view: false, settings: false}));\nbreak;\ncase 55:\nthis.$ = yy.echo(yy.miew.getURL({view: false, settings: true}));\nbreak;\ncase 56:\nthis.$ = yy.echo(yy.miew.getURL({view: true,  settings: false}));\nbreak;\ncase 57: case 58:\nthis.$ = yy.echo(yy.miew.getURL({view: true,  settings: true}));\nbreak;\ncase 59:\nthis.$ = yy.miew.screenshotSave();\nbreak;\ncase 60:\nthis.$ = yy.miew.screenshotSave('', Number($$[$0]));\nbreak;\ncase 61:\nthis.$ = yy.miew.screenshotSave('', Number($$[$0-1]), Number($$[$0]));\nbreak;\ncase 62: case 63: case 64:\nthis.$ = yy.utils.load(yy.miew, $$[$0]); yy.representations.clear();\nbreak;\ncase 65:\nthis.$ = yy.echo(yy.representations.add(yy.miew.repAdd()));\nbreak;\ncase 66:\nthis.$ = yy.echo(yy.representations.add($$[$0], yy.miew.repAdd()));\nbreak;\ncase 67:\nthis.$ = yy.echo(yy.representations.add(yy.miew.repAdd($$[$0])));\nbreak;\ncase 68:\nthis.$ = yy.echo(yy.representations.add($$[$0-1], yy.miew.repAdd($$[$0])));\nbreak;\ncase 69:\nthis.$ = yy.miew.rep($$[$0]); yy.miew.repCurrent($$[$0]);\nbreak;\ncase 70:\nthis.$ = yy.miew.rep($$[$0-1], $$[$0]); yy.miew.repCurrent($$[$0-1]);\nbreak;\ncase 71:\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {mode : yy.utils.checkArg($$[$0-1].toLowerCase(), $$[$0].toUpperCase())});\nbreak;\ncase 72:\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {mode : new Array(yy.utils.checkArg($$[$0-2].toLowerCase(), $$[$0-1].toUpperCase()), $$[$0].toJSO(yy.utils, $$[$0-2], $$[$0-1].toUpperCase()))});\nbreak;\ncase 73:\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {colorer : yy.utils.checkArg($$[$0-1].toLowerCase(), $$[$0].toUpperCase())});\nbreak;\ncase 74:\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {colorer : new Array(yy.utils.checkArg($$[$0-2].toLowerCase(), $$[$0-1].toUpperCase()), $$[$0].toJSO(yy.utils, $$[$0-2], $$[$0-1].toUpperCase()))});\nbreak;\ncase 75:\nthis.$ = Number(yy.representations.get($$[$0]));\nbreak;\ncase 76: case 92:\nthis.$ = Number($$[$0]);\nbreak;\ncase 77:\nthis.$ = $$[$0];\nbreak;\ncase 78:\nthis.$ = yy._.assign($$[$0-1], $$[$0]);\nbreak;\ncase 79:\nthis.$ = yy._.assign($$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 80:\nthis.$ = yy._.assign($$[$0-3], $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 81: case 82:\nthis.$ = yy.CreateObjectPair($$[$0].key, $$[$0].val);\nbreak;\ncase 83:\nthis.$ = yy.CreateObjectPair($$[$0-1].key, new Array($$[$0-1].val, $$[$0].toJSO(yy.utils, $$[$0-1].key, $$[$0-1].val)));\nbreak;\ncase 84: case 85:\nthis.$ = Object.create({'key': yy.keyRemap($$[$0-2]), 'val': yy.utils.checkArg($$[$0-2], $$[$0])});\nbreak;\ncase 86:\nthis.$ = [$$[$0]];\nbreak;\ncase 87:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 88:\nthis.$ = yy.CreateObjectPair($$[$0-1].toLowerCase(), Number($$[$0]));\nbreak;\ncase 89:\nthis.$ = new yy.ArgList($$[$0]);\nbreak;\ncase 90:\nthis.$ = $$[$0-1].append($$[$0]);\nbreak;\ncase 91:\nthis.$ = new yy.Arg($$[$0-2], $$[$0]);\nbreak;\ncase 93:\nthis.$ = parseInt($$[$0]);\nbreak;\ncase 94:\nthis.$ = JSON.parse($$[$0]);\nbreak;\ncase 95: case 96:\nthis.$ = String($$[$0]);\nbreak;\ncase 157: case 158: case 161: case 162: case 163:\nthis.$ = $$[$0-2] + $$[$0-1] + $$[$0] //cause of could be color word in path;\nbreak;\ncase 166:\nthis.$ = $$[$0-2] = $$[$0-2] + $$[$0-1] + $$[$0];\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],6:[1,4],7:[1,5],9:[1,6],11:[1,7],12:8,13:[1,9],15:[1,10],17:[1,11],18:[1,12],19:[1,13],20:[1,14],21:15,22:16,23:[1,17],25:[1,18],26:[1,19],27:[1,20],30:[1,21],33:[1,22],34:[1,23],37:[1,24],39:25,40:26,41:[1,27],43:[1,28],44:[1,29],45:[1,30],46:[1,31],48:[1,32],49:[1,33],50:34,51:35,52:[1,36],54:[1,37],55:[1,38],56:[1,44],58:[1,45],59:[1,39],62:[1,40],64:[1,41],65:[1,42],66:[1,43]},{1:[3]},{5:[1,46]},{1:[2,2]},{5:[2,3]},{5:[2,4],8:[1,47]},{5:[2,6],6:$V0,7:$V1,9:$V2,10:48,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:49,80:52,81:50,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{5:[2,8]},{5:[2,9]},{6:$V0,7:$V1,9:$V2,10:106,13:$V3,14:[1,107],15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:49,80:52,81:50,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{6:$V0,7:$V1,9:$V2,10:108,13:$V3,14:[1,109],15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:49,80:52,81:50,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{5:[2,14]},{5:[2,15]},{5:[2,16]},{5:[2,17],14:$VS,16:110,35:$VT,38:$VU,77:$VV,78:$VW},{5:[2,19]},{5:[2,20]},{24:116,35:$VX,38:$VY},{24:119,35:$VX,38:$VY},{24:120,35:$VX,38:$VY},{5:[2,25],24:121,28:[1,122],29:[1,123],35:$VX,38:$VY},{14:[1,124]},{14:[1,125]},{35:[1,126]},{38:[1,127]},{5:[2,33]},{5:[2,34]},{5:[2,35],14:[1,128],42:[1,129]},{5:[2,38],35:[1,130]},{5:[2,40]},{35:[1,131]},{47:132,73:133,74:$VZ},{47:135,73:133,74:$VZ},{5:[2,44],14:[1,136]},{5:[2,46]},{5:[2,47]},{6:$V0,7:$V1,9:$V2,10:138,13:$V3,14:[1,137],15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:49,80:52,81:50,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{5:[2,52]},{35:[1,139]},{14:[1,143],38:[1,141],60:140,61:[1,142]},{5:[2,65],38:[1,144],63:145,67:146,68:147,69:148,70:$V_,72:$V$},{24:151,35:$VX,38:$VY},{38:[1,152]},{38:[1,153]},{5:[2,54],29:[1,154],57:[1,155]},{5:[2,59],35:[1,156]},{1:[2,1]},{5:[2,5]},{5:[2,7],101:$V01},o($V11,[2,159]),o($V11,[2,160]),o($V21,[2,97]),o($V21,[2,98]),o($V11,[2,147]),o($V11,[2,148]),o($V11,[2,149]),o($V11,[2,150]),o($V11,[2,151]),o($V11,[2,152]),o($V11,[2,153]),o($V21,[2,101]),o($V21,[2,102]),o($V21,[2,103]),o($V21,[2,104]),o($V21,[2,105]),o($V21,[2,106]),o($V21,[2,107]),o($V21,[2,108]),o($V21,[2,109]),o($V21,[2,110]),o($V21,[2,111]),o($V21,[2,112]),o($V21,[2,113]),o($V21,[2,114]),o($V21,[2,115]),o($V21,[2,116]),o($V21,[2,117]),o($V21,[2,118]),o($V21,[2,119]),o($V21,[2,120]),o($V21,[2,121]),o($V21,[2,122]),o($V21,[2,123]),o($V21,[2,124]),o($V21,[2,125]),o($V21,[2,126]),o($V21,[2,127]),o($V21,[2,128]),o($V21,[2,129]),o($V21,[2,130]),o($V21,[2,131]),o($V21,[2,132]),o($V21,[2,133]),o($V21,[2,134]),o($V21,[2,135]),o($V21,[2,136]),o($V21,[2,137]),o($V21,[2,138]),o($V21,[2,139]),o($V21,[2,140]),o($V21,[2,141]),o($V21,[2,142]),o($V21,[2,143]),o($V21,[2,144]),o($V21,[2,145]),o($V21,[2,146]),{5:[2,10],101:$V01},{5:[2,11]},{14:$VS,16:158,35:$VT,38:$VU,77:$VV,78:$VW,101:$V01},{14:$VS,16:159,35:$VT,38:$VU,77:$VV,78:$VW},{5:[2,18]},o($V31,[2,92]),o($V31,[2,93]),o($V31,[2,94]),o($V31,[2,95]),o($V31,[2,96]),{5:[2,21]},o($V41,[2,75]),o($V41,[2,76]),{5:[2,22]},{5:[2,23]},{5:[2,24]},{5:[2,26]},{5:[2,27]},{5:[2,28],31:[1,160]},{5:[2,30]},{36:[1,161]},{5:[2,32]},{5:[2,36]},{5:[2,37]},{5:[2,39]},{5:[2,41]},{5:[2,42],73:162,74:$VZ},o($V51,[2,86]),{35:[1,163]},{5:[2,43],73:162,74:$VZ},{5:[2,45]},{14:[1,164]},{6:$V0,7:$V1,9:$V2,10:165,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:49,80:52,81:50,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR,101:$V01},{5:[2,53]},{5:[2,62]},{5:[2,63]},{5:[2,64]},{5:[2,164]},{5:[2,66],63:166,67:146,68:147,69:148,70:$V_,72:$V$},{5:[2,67]},{5:[2,77],67:167,68:147,69:148,70:$V_,72:$V$},o($V41,[2,81]),o($V41,[2,82],{80:52,53:168,75:169,76:170,79:171,6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN}),{71:[1,172]},{71:[1,173]},{5:[2,69],63:174,67:146,68:147,69:148,70:$V_,72:$V$},{5:[2,71],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,53:175,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:169,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,73],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,53:176,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:169,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,55],57:[1,177]},{5:[2,56],29:[1,178]},{5:[2,60],35:[1,179]},{6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,35:[1,181],37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:180,80:52,81:182,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{5:[2,12]},{5:[2,13]},{6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,32:183,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:184,80:52,81:185,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{14:[1,186]},o($V51,[2,87]),o($V51,[2,88]),{5:[2,48],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,53:187,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:169,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,49],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,53:188,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:169,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,101:$V01},{5:[2,68]},{5:[2,78],67:189,68:147,69:148,70:$V_,72:$V$},o($V41,[2,83],{80:52,76:170,79:171,75:190,6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN}),o($V31,[2,89]),{71:[1,191],101:[1,192]},o($V61,[2,156]),{14:$VS,16:193,35:$VT,38:$VU,77:$VV,78:$VW},{14:$VS,16:194,35:$VT,38:$VU,77:$VV,78:$VW},{5:[2,70]},{5:[2,72],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:190,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,74],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:190,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,57]},{5:[2,58]},{5:[2,61]},o($V11,[2,161]),o($V11,[2,162]),o($V11,[2,163]),{5:[2,29]},{5:[2,99]},{5:[2,100]},{31:[1,195]},{5:[2,50],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:190,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,51],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:190,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,79],67:196,68:147,69:148,70:$V_,72:$V$},o($V31,[2,90]),{14:$VS,16:197,35:$VT,38:$VU,77:$VV,78:$VW},{6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,35:[1,199],37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,79:198,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},o($V41,[2,84]),o($V31,[2,85]),{6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,32:200,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:184,80:52,81:185,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{5:[2,80]},o($V31,[2,91]),o($V61,[2,157]),o($V61,[2,158]),{5:[2,31]}],\ndefaultActions: {3:[2,2],4:[2,3],7:[2,8],8:[2,9],11:[2,14],12:[2,15],13:[2,16],15:[2,19],16:[2,20],25:[2,33],26:[2,34],29:[2,40],34:[2,46],35:[2,47],37:[2,52],46:[2,1],47:[2,5],107:[2,11],110:[2,18],116:[2,21],119:[2,22],120:[2,23],121:[2,24],122:[2,26],123:[2,27],125:[2,30],127:[2,32],128:[2,36],129:[2,37],130:[2,39],131:[2,41],136:[2,45],139:[2,53],140:[2,62],141:[2,63],142:[2,64],143:[2,164],145:[2,67],158:[2,12],159:[2,13],166:[2,68],174:[2,70],177:[2,57],178:[2,58],179:[2,61],183:[2,29],184:[2,99],185:[2,100],196:[2,80],200:[2,31]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* ignore whitespace */\nbreak;\ncase 1:return '';\nbreak;\ncase 2:return '';\nbreak;\ncase 3:return 42;\nbreak;\ncase 4:return 35;\nbreak;\ncase 5:return 77;\nbreak;\ncase 6:return 78;\nbreak;\ncase 7:return 78;\nbreak;\ncase 8:return 8;\nbreak;\ncase 9:return 6;\nbreak;\ncase 10:return 82;\nbreak;\ncase 11:return 7;\nbreak;\ncase 12:return 9;\nbreak;\ncase 13:return 59;\nbreak;\ncase 14:return 13\nbreak;\ncase 15:return 15\nbreak;\ncase 16:return 17\nbreak;\ncase 17:return 18\nbreak;\ncase 18:return 19\nbreak;\ncase 19:return 20\nbreak;\ncase 20:return 11\nbreak;\ncase 21:return 62\nbreak;\ncase 22:return 64\nbreak;\ncase 23:return 23\nbreak;\ncase 24:return 25\nbreak;\ncase 25:return 26\nbreak;\ncase 26:return 27\nbreak;\ncase 27:return 30\nbreak;\ncase 28:return 34\nbreak;\ncase 29:return 33\nbreak;\ncase 30:return 65\nbreak;\ncase 31:return 66\nbreak;\ncase 32:return 37\nbreak;\ncase 33:return 41\nbreak;\ncase 34:return 43\nbreak;\ncase 35:return 52\nbreak;\ncase 36:return 54\nbreak;\ncase 37:return 55\nbreak;\ncase 38:return 46\nbreak;\ncase 39:return 48\nbreak;\ncase 40:return 45\nbreak;\ncase 41:return 49\nbreak;\ncase 42:return 56\nbreak;\ncase 43:return 58;\nbreak;\ncase 44:return 44\nbreak;\ncase 45:return 83\nbreak;\ncase 46:return 84\nbreak;\ncase 47:return 85\nbreak;\ncase 48:return 86\nbreak;\ncase 49:return 87\nbreak;\ncase 50:return 88\nbreak;\ncase 51:return 89\nbreak;\ncase 52:return 90\nbreak;\ncase 53:return 91\nbreak;\ncase 54:return 92\nbreak;\ncase 55:return 93\nbreak;\ncase 56:return 94\nbreak;\ncase 57:return 95\nbreak;\ncase 58:return 70\nbreak;\ncase 59:return 70\nbreak;\ncase 60:return 72\nbreak;\ncase 61:return 72\nbreak;\ncase 62:return 74\nbreak;\ncase 63:return 74\nbreak;\ncase 64:return 74\nbreak;\ncase 65:return 31\nbreak;\ncase 66:return 36\nbreak;\ncase 67:return 96\nbreak;\ncase 68:return 97\nbreak;\ncase 69:return 98\nbreak;\ncase 70:return 99\nbreak;\ncase 71:yy_.yytext = yy.utils.unquoteString(yy_.yytext); return 14;\nbreak;\ncase 72:return 38;\nbreak;\ncase 73:return 5;\nbreak;\ncase 74:return 101;\nbreak;\ncase 75:return 103;\nbreak;\ncase 76:return '\\\\';\nbreak;\ncase 77:return 28\nbreak;\ncase 78:return 61\nbreak;\ncase 79:return 29\nbreak;\ncase 80:return 57\nbreak;\ncase 81:return 71\nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:[#].*)/i,/^(?:\\/\\/.*)/i,/^(?:([_A-Z0-9\\/\\+]+==))/i,/^(?:-?[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:0[xX][0-9A-F]+\\b)/i,/^(?:false\\b)/i,/^(?:true\\b)/i,/^(?:all\\b)/i,/^(?:reset\\b)/i,/^(?:clear\\b)/i,/^(?:build\\b)/i,/^(?:help\\b)/i,/^(?:load\\b)/i,/^(?:get\\b)/i,/^(?:set\\b)/i,/^(?:set_save\\b)/i,/^(?:set_restore\\b)/i,/^(?:set_reset\\b)/i,/^(?:preset\\b)/i,/^(?:motm\\b)/i,/^(?:add\\b)/i,/^(?:rep\\b)/i,/^(?:remove\\b)/i,/^(?:hide\\b)/i,/^(?:show\\b)/i,/^(?:list\\b)/i,/^(?:select\\b)/i,/^(?:within\\b)/i,/^(?:selector\\b)/i,/^(?:mode\\b)/i,/^(?:color\\b)/i,/^(?:material\\b)/i,/^(?:view\\b)/i,/^(?:unit\\b)/i,/^(?:line\\b)/i,/^(?:listobj\\b)/i,/^(?:removeobj\\b)/i,/^(?:rotate\\b)/i,/^(?:translate\\b)/i,/^(?:scale\\b)/i,/^(?:center\\b)/i,/^(?:url\\b)/i,/^(?:screenshot\\b)/i,/^(?:dssp\\b)/i,/^(?:file_list\\b)/i,/^(?:file_register\\b)/i,/^(?:file_delete\\b)/i,/^(?:preset_add\\b)/i,/^(?:preset_delete\\b)/i,/^(?:preset_update\\b)/i,/^(?:preset_rename\\b)/i,/^(?:preset_open\\b)/i,/^(?:create_scenario\\b)/i,/^(?:reset_scenario\\b)/i,/^(?:delete_scenario\\b)/i,/^(?:add_scenario_item\\b)/i,/^(?:list_scenario\\b)/i,/^(?:s\\b)/i,/^(?:mt\\b)/i,/^(?:m\\b)/i,/^(?:c\\b)/i,/^(?:x\\b)/i,/^(?:y\\b)/i,/^(?:z\\b)/i,/^(?:as\\b)/i,/^(?:of\\b)/i,/^(?:pdb\\b)/i,/^(?:delay\\b)/i,/^(?:prst\\b)/i,/^(?:desc\\b)/i,/^(?:((?:\"(?:\\\\.|[^\\\\\"])*\"|'(?:\\\\.|[^\\\\'])*')))/i,/^(?:([_A-Z0-9]+))/i,/^(?:$)/i,/^(?:\\.)/i,/^(?:\\/)/i,/^(?:\\\\)/i,/^(?:-e\\b)/i,/^(?:-f\\b)/i,/^(?:-s\\b)/i,/^(?:-v\\b)/i,/^(?:=)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nmodule.exports = {parser: parser};\n","/* eslint-disable */\n// DO NOT EDIT! Automatically generated from .jison\n/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[1,6],$V3=[1,7],$V4=[1,8],$V5=[1,9],$V6=[1,11],$V7=[1,12],$V8=[5,7,8,11],$V9=[1,17],$Va=[1,22],$Vb=[1,20],$Vc=[1,21],$Vd=[5,7,8,11,19];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"Program\":3,\"Expression\":4,\"EOF\":5,\"Selector\":6,\"OR\":7,\"AND\":8,\"NOT\":9,\"(\":10,\")\":11,\"SELECTOR\":12,\"NAMED_SELECTOR\":13,\"SELECTOR_RANGED\":14,\"RangeList\":15,\"SELECTOR_NAMED\":16,\"NameList\":17,\"Range\":18,\",\":19,\"NUMBER\":20,\":\":21,\"Name\":22,\"IDENTIFIER\":23,\"STRING\":24,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"OR\",8:\"AND\",9:\"NOT\",10:\"(\",11:\")\",12:\"SELECTOR\",13:\"NAMED_SELECTOR\",14:\"SELECTOR_RANGED\",16:\"SELECTOR_NAMED\",19:\",\",20:\"NUMBER\",21:\":\",23:\"IDENTIFIER\",24:\"STRING\"},\nproductions_: [0,[3,2],[4,1],[4,3],[4,3],[4,2],[4,3],[6,1],[6,1],[6,2],[6,2],[15,1],[15,3],[18,1],[18,3],[17,1],[17,3],[22,1],[22,1],[22,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n return $$[$0-1]; \nbreak;\ncase 3:\nthis.$ = yy.keyword('or')($$[$0-2], $$[$0]);\nbreak;\ncase 4:\nthis.$ = yy.keyword('and')($$[$0-2], $$[$0]);\nbreak;\ncase 5:\nthis.$ = yy.keyword('not')($$[$0]);\nbreak;\ncase 6:\nthis.$ = $$[$0-1];\nbreak;\ncase 7:\nthis.$ = yy.keyword($$[$0])();\nbreak;\ncase 8:\nthis.$ = yy.GetSelector($$[$0].toLowerCase().slice(1, $$[$0].length));\nbreak;\ncase 9: case 10:\nthis.$ = yy.keyword($$[$0-1])($$[$0]);\nbreak;\ncase 11:\nthis.$ = new yy.RangeList($$[$0]);\nbreak;\ncase 12: case 16:\nthis.$ = $$[$0-2].append($$[$0]);\nbreak;\ncase 13:\nthis.$ = new yy.Range(Number($$[$0]));\nbreak;\ncase 14:\nthis.$ = new yy.Range(Number($$[$0-2]), Number($$[$0]));\nbreak;\ncase 15:\nthis.$ = new yy.ValueList($$[$0]);\nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,9:$V0,10:$V1,12:$V2,13:$V3,14:$V4,16:$V5},{1:[3]},{5:[1,10],7:$V6,8:$V7},o($V8,[2,2]),{4:13,6:3,9:$V0,10:$V1,12:$V2,13:$V3,14:$V4,16:$V5},{4:14,6:3,9:$V0,10:$V1,12:$V2,13:$V3,14:$V4,16:$V5},o($V8,[2,7]),o($V8,[2,8]),{15:15,18:16,20:$V9},{17:18,20:$Va,22:19,23:$Vb,24:$Vc},{1:[2,1]},{4:23,6:3,9:$V0,10:$V1,12:$V2,13:$V3,14:$V4,16:$V5},{4:24,6:3,9:$V0,10:$V1,12:$V2,13:$V3,14:$V4,16:$V5},o($V8,[2,5]),{7:$V6,8:$V7,11:[1,25]},o($V8,[2,9],{19:[1,26]}),o($Vd,[2,11]),o($Vd,[2,13],{21:[1,27]}),o($V8,[2,10],{19:[1,28]}),o($Vd,[2,15]),o($Vd,[2,17]),o($Vd,[2,18]),o($Vd,[2,19]),o([5,7,11],[2,3],{8:$V7}),o($V8,[2,4]),o($V8,[2,6]),{18:29,20:$V9},{20:[1,30]},{20:$Va,22:31,23:$Vb,24:$Vc},o($Vd,[2,12]),o($Vd,[2,14]),o($Vd,[2,16])],\ndefaultActions: {10:[2,1]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n            function lex() {\n            var token;\n            token = tstack.pop() || lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                if (token instanceof Array) {\n                    tstack = token;\n                    token = tstack.pop();\n                }\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var errStr = '';\n            expected = [];\n            for (p in table[state]) {\n                if (this.terminals_[p] && p > TERROR) {\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\n                }\n            }\n            if (lexer.showPosition) {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n            } else {\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n            }\n            this.parseError(errStr, {\n                text: lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n            });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 20;\nbreak;\ncase 2:return 7;\nbreak;\ncase 3:return 8;\nbreak;\ncase 4:return 9;\nbreak;\ncase 5:return 12;\nbreak;\ncase 6:return 16;\nbreak;\ncase 7:return 14;\nbreak;\ncase 8:return 10;\nbreak;\ncase 9:return 11;\nbreak;\ncase 10:return 19;\nbreak;\ncase 11:return 21;\nbreak;\ncase 12:return '<=';\nbreak;\ncase 13:return '>=';\nbreak;\ncase 14:return '<';\nbreak;\ncase 15:return '>';\nbreak;\ncase 16:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 24;\nbreak;\ncase 17:return 13;\nbreak;\ncase 18:return 23;\nbreak;\ncase 19:return 5;\nbreak;\ncase 20:return 'INVALID';\nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:(-?(?:[1-9][0-9]+|[0-9]))\\b)/i,/^(?:OR\\b)/i,/^(?:AND\\b)/i,/^(?:NOT\\b)/i,/^(?:((ALL|NONE|HETATM|PROTEIN|BASIC|ACIDIC|CHARGED|POLAR|NONPOLAR|AROMATIC|NUCLEIC|PURINE|PYRIMIDINE|WATER|POLARH|NONPOLARH))\\b)/i,/^(?:((NAME|ELEM|TYPE|RESIDUE|ICODE|CHAIN|ALTLOC))\\b)/i,/^(?:((SERIAL|SEQUENCE|RESIDX))\\b)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:,)/i,/^(?::)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:((?:\"(?:\\\\.|[^\\\\\"])*\"|'(?:\\\\.|[^\\\\'])*')))/i,/^(?:(@[_A-Z0-9]+))/i,/^(?:([_A-Z0-9]+))/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nmodule.exports = {parser: parser};\n","//----------------------------------------------------------------------------\n// Timer\n\nexport default class Timer {\n  constructor() {\n    this.startTime = 0;\n    this.oldTime = 0;\n    this.elapsedTime = 0;\n    this.running = false;\n  }\n\n  start() {\n    this.startTime = Timer.now();\n    this.oldTime = this.startTime;\n    this.running = true;\n  }\n\n  stop() {\n    this.getElapsedTime();\n    this.running = false;\n  }\n\n  getElapsedTime() {\n    this.update();\n    return this.elapsedTime;\n  }\n\n  update() {\n    let delta = 0;\n    if (this.running) {\n      const newTime = Timer.now();\n      delta = 0.001 * (newTime - this.oldTime);\n      this.oldTime = newTime;\n      this.elapsedTime += delta;\n    }\n\n    return delta;\n  }\n}\n\nTimer.now = (function () {\n  const p = typeof window !== 'undefined' && window.performance;\n  return (p && p.now) ? p.now.bind(p) : Date.now;\n}());\n","import Timer from '../Timer';\n\nconst { now } = Timer;\n\nfunction createElement(tag, id, css) {\n  const element = document.createElement(tag);\n  element.id = id;\n  element.style.cssText = css;\n  return element;\n}\n\nclass Stats {\n  constructor() {\n    this.domElement = createElement('div', 'stats', 'padding:8px');\n    this._text = createElement('p', 'fps', 'margin:0;color:silver;font-size:large');\n    this.domElement.appendChild(this._text);\n\n    this._startTime = now();\n    this._prevTime = this._startTime;\n\n    this._deltas = new Array(20);\n    this._index = 0;\n    this._total = 0.0;\n    this._count = 0;\n  }\n\n  end() {\n    const time = now();\n    const delta = time - this._startTime;\n\n    if (this._count < this._deltas.length) {\n      this._count++;\n    } else {\n      this._total -= this._deltas[this._index];\n    }\n    this._total += delta;\n    this._deltas[this._index] = delta;\n    this._index = (this._index + 1) % this._deltas.length;\n\n    this.ms = this._total / this._count;\n    this.fps = 1000 / this.ms;\n\n    if (time > this._prevTime + 1000) {\n      this._text.textContent = this.fps.toPrecision(2);\n      this._prevTime = time;\n    }\n\n    return time;\n  }\n\n  update() {\n    this._startTime = this.end();\n  }\n\n  show(on) {\n    if (on === undefined) {\n      on = true;\n    }\n    this.domElement.style.display = on ? 'block' : 'none';\n  }\n}\n\nexport default Stats;\n","/**\n * This class introduces the simplest event system.\n */\n\nimport _ from 'lodash';\n\nfunction isUndefOrEqual(param, value) {\n  return !param || param === value;\n}\n\n/**\n * Creates empty dispatcher.\n *\n * @exports EventDispatcher\n * @constructor\n */\nfunction EventDispatcher() {\n  this._handlers = {};\n}\n\n/**\n * Binds callback on specific event type. Optional `context` parameter\n * could be used as 'this' for the `callback`.\n * @param {string}   type       Event name.\n * @param {function} callback   Callback function.\n * @param {Object}   [context] 'This' object for the callback.\n */\nEventDispatcher.prototype.addEventListener = function (type, callback, context) {\n  let handlers = this._handlers[type];\n\n  if (!handlers) {\n    this._handlers[type] = [];\n    handlers = this._handlers[type];\n  }\n\n  const params = [callback, context];\n  function _checkPar(par) {\n    return par[0] === params[0] && par[1] === params[1];\n  }\n\n  if (_.find(handlers, _checkPar) === undefined) {\n    handlers.push(params);\n  }\n};\n\n/**\n * Removes a previously-bound callback function from an object.\n * If no `context` is specified, all versions of the `callback` with different\n * contexts will be removed.\n * If no `callback` is specified, all callbacks of the `type` will be removed.\n * If no `type` is specified, callbacks for all events will be removed.\n * @param {?string}  [type]      Event type.\n * @param {function} [callback]  Callback function.\n * @param {Object}   [context]  'This' object for the callback.\n */\nEventDispatcher.prototype.removeEventListener = function (type, callback, context) {\n  const self = this;\n  _.forEach(self._handlers, (handler, ev) => {\n    _.remove(handler, (values) => isUndefOrEqual(type, ev)\n          && isUndefOrEqual(callback, values[0])\n          && isUndefOrEqual(context, values[1] || self));\n  });\n\n  this._handlers = _.omitBy(self._handlers, (handler) => handler.length === 0);\n};\n\n/**\n * Makes all the callbacks for the specific `event` to trigger.\n * @param {Object} event      Event.\n * @param {string} event.type Type of the event.\n */\nEventDispatcher.prototype.dispatchEvent = function (event) {\n  const self = this;\n\n  _.forEach(this._handlers[event.type], (callback) => {\n    const context = callback[1] || self;\n    callback[0].apply(context, [event]);\n  });\n};\n\nexport default EventDispatcher;\n","/**\n * This module contains class for logging.\n * Returns an instance of a logger that have already been created.\n * Allows users to log messages for five different levels,\n * enable console output and catch signal on each message.\n */\nimport _ from 'lodash';\nimport EventDispatcher from './EventDispatcher';\n\nconst priorities = {\n  debug: 0,\n  info: 1,\n  report: 2,\n  warn: 3,\n  error: 4,\n};\n\n/**\n * Create new Logger.\n *\n * @exports Logger\n * @extends EventDispatcher\n * @constructor\n */\nfunction Logger() {\n  EventDispatcher.call(this);\n  /** Boolean flag that toggles output to browser console.\n   * @type {boolean}\n   */\n  this.console = false;\n  this._priority = priorities.warn;\n}\n\nLogger.prototype = Object.create(EventDispatcher.prototype);\nLogger.prototype.constructor = Logger;\n\n/**\n * Create new clean instance of the logger.\n * @returns {Logger}\n */\nLogger.prototype.instantiate = function () {\n  return new Logger();\n};\n\nfunction verify(number) {\n  if (!_.isNumber(number)) {\n    throw new Error('Wrong log level specified!');\n  }\n  return number;\n}\n\n/**\n * @property {string} current threshold for signals and console output.\n * @name Logger#level\n */\nObject.defineProperty(Logger.prototype, 'level', {\n  get() {\n    return _.findKey(priorities, (value) => value === this._priority);\n  },\n  set(level) {\n    this._priority = verify(priorities[level]);\n  },\n});\n\n/**\n * Returns the list of all possible level values.\n * @returns {Array}\n */\nLogger.prototype.levels = function () {\n  return Object.keys(priorities);\n};\n\n/**\n * Add new message with specified level.\n * @param {string} level - level of the message, must be one of the\n * {'debug' | 'info' | 'report' | 'warn' | 'error'}\n * @param {string} message\n */\nLogger.prototype.message = function (level, message) {\n  const priority = verify(priorities[level]);\n  this._message(priority, message);\n};\n\n/**\n * Shortcut for message('debug', ...);\n * @param message\n */\nLogger.prototype.debug = function (message) {\n  this._message(priorities.debug, message);\n};\n\n/**\n * Shortcut for message('info', ...);\n * @param message\n */\nLogger.prototype.info = function (message) {\n  this._message(priorities.info, message);\n};\n\n/**\n * Shortcut for message('report', ...);\n * @param message\n */\nLogger.prototype.report = function (message) {\n  this._message(priorities.report, message);\n};\n\n/**\n * Shortcut for message('warn', ...);\n * @param message\n */\nLogger.prototype.warn = function (message) {\n  this._message(priorities.warn, message);\n};\n\n/**\n * Shortcut for message('error', ...);\n * @param message\n */\nLogger.prototype.error = function (message) {\n  this._message(priorities.error, message);\n};\n\n/**\n * Add new message with specified priority.\n * @param {number} priority - priority of the message\n * @param {string} message\n * @private\n */\nLogger.prototype._message = function (priority, message) {\n  if (priority < this._priority) {\n    return;\n  }\n  const level = _.findKey(priorities, (value) => value === priority);\n  message = String(message);\n  if (this.console) {\n    const output = `miew:${level}: ${message}`;\n    if (level === 'error') {\n      console.error(output); // NOSONAR\n    } else if (level === 'warn') {\n      console.warn(output); // NOSONAR\n    } else {\n      console.log(output); // NOSONAR\n    }\n  }\n  this.dispatchEvent({ type: 'message', level, message });\n};\n\nexport default new Logger();\n","import _ from 'lodash';\nimport logger from './utils/logger';\n\nconst browserType = {\n  DEFAULT: 0,\n  SAFARI: 1,\n};\n//----------------------------------------------------------------------------\n// Query string\n\n/**\n * Escape only dangerous chars in a query string component, use a plus instead of a space.\n *\n * [RFC 3986](https://tools.ietf.org/html/rfc3986) allows the following chars in the query (see 3.4):\n *\n *       A-Z a-z 0-9 - _ . ~ ! $ & ' ( ) * + , ; = : @ / ?\n *\n * For query string elements we need to escape ampersand, equal sign, and plus,\n * but encodeURIComponent() function encodes anything except for the following:\n *\n *       A-Z a-z 0-9 - _ . ~ ! ' ( ) *\n *\n * @param {string} text - key or value to encode\n * @param {string} excludeExp - regexp for symbols to exclude from encoding\n * @returns {string} encoded string\n */\nfunction encodeQueryComponent(text, excludeExp) {\n  const encode = (code) => String.fromCharCode(parseInt(code.substr(1), 16));\n  return encodeURIComponent(text).replace(excludeExp, encode).replace(/%20/g, '+');\n}\n\n/**\n * Unescape dangerous chars in a query string component.\n *\n * @param {string} text - encoded key or value\n * @returns {string} decoded string\n * @see {@link encodeQueryComponent}\n */\nfunction decodeQueryComponent(text) {\n  return decodeURIComponent(text.replace(/\\+/g, ' '));\n}\n\n/**\n * Parse URL and extract an array of parameters.\n * @param {string?} url - URL or query string to parse\n * @returns {Array} array of (key, value) pairs.\n */\nfunction getUrlParameters(url) {\n  url = url || window.location.search;\n\n  const query = url.substring(url.indexOf('?') + 1);\n  const search = /([^&=]+)=?([^&]*)/g;\n  const result = [];\n  let match;\n\n  while ((match = search.exec(query)) !== null) { // eslint-disable-line no-cond-assign\n    result.push([decodeQueryComponent(match[1]), decodeQueryComponent(match[2])]);\n  }\n\n  return result;\n}\n\n/**\n * Parse URL and extract an array of parameters as a hash.\n * @param {string?} url - URL or query string to parse\n * @returns {Object}\n */\nfunction getUrlParametersAsDict(url) {\n  const result = {};\n  const a = getUrlParameters(url);\n  for (let i = 0; i < a.length; ++i) {\n    const [key, value] = a[i];\n    result[key] = value;\n  }\n  return result;\n}\n\nfunction resolveURL(str) {\n  if (typeof URL !== 'undefined') {\n    try {\n      if (typeof window !== 'undefined') {\n        return new URL(str, window.location).href;\n      }\n      return new URL(str).href;\n    } catch (error) {\n      // IE 11 has a URL object with no constructor available so just try a different approach instead\n    }\n  }\n  if (typeof document !== 'undefined') {\n    const anchor = document.createElement('a');\n    anchor.href = str;\n    return anchor.href;\n  }\n  return str;\n}\n\n/**\n * Generates regular expression object that includes all symbols\n * listed in the argument\n * @param symbolStr {string} - String containing characters list.\n * @returns {RegExp} - Regular expression.\n */\nfunction generateRegExp(symbolStr) {\n  const symbolList = [];\n\n  for (let i = 0, n = symbolStr.length; i < n; ++i) {\n    symbolList[symbolList.length] = symbolStr[i].charCodeAt(0).toString(16);\n  }\n\n  const listStr = symbolList.join('|');\n\n  return new RegExp(`%(?:${listStr})`, 'gi');\n}\n\n//----------------------------------------------------------------------------\n// Create HTML element\n\nfunction createElement(tag, attrs, content) {\n  const element = document.createElement(tag);\n  let i;\n  let n;\n  if (attrs) {\n    const keys = Object.keys(attrs);\n    for (i = 0, n = keys.length; i < n; ++i) {\n      const key = keys[i];\n      element.setAttribute(key, attrs[key]);\n    }\n  }\n  if (content) {\n    if (!(content instanceof Array)) {\n      content = [content];\n    }\n    for (i = 0, n = content.length; i < n; ++i) {\n      const child = content[i];\n      if (typeof child === 'string') {\n        element.appendChild(document.createTextNode(child));\n      } else if (child instanceof HTMLElement) {\n        element.appendChild(child);\n      }\n    }\n  }\n  return element;\n}\n\n//----------------------------------------------------------------------------\n// Easy inheritance\n\n/**\n * Derive the class from the base.\n * @param cls {function} - Class (constructor) to derive.\n * @param base {function} - Class (constructor) to derive from.\n * @param members {object=} - Optional instance members to add.\n * @param statics {object=} - Optional static class members to add.\n * @returns {function} Original class.\n */\nfunction deriveClass(cls, base, members, statics) {\n  cls.prototype = _.assign(Object.create(base.prototype), { constructor: cls }, members);\n  if (statics) {\n    _.assign(cls, statics);\n  }\n  return cls;\n}\n\n//----------------------------------------------------------------------------\n// Deep prototyping\n\nfunction deriveDeep(obj, needZeroOwnProperties) {\n  let res = obj;\n  let i;\n  let n;\n  if (obj instanceof Array) {\n    res = new Array(obj.length);\n    for (i = 0, n = obj.length; i < n; ++i) {\n      res[i] = deriveDeep(obj[i]);\n    }\n  } else if (obj instanceof Object) {\n    res = Object.create(obj);\n    const keys = Object.keys(obj);\n    for (i = 0, n = keys.length; i < n; ++i) {\n      const key = keys[i];\n      const value = obj[key];\n      const copy = deriveDeep(value);\n      if (copy !== value) {\n        res[key] = copy;\n      }\n    }\n    if (needZeroOwnProperties && Object.keys(res).length > 0) {\n      res = Object.create(res);\n    }\n  }\n  return res;\n}\n\n//----------------------------------------------------------------------------\n// Colors\n\nfunction hexColor(color) {\n  const hex = (`0000000${color.toString(16)}`).substr(-6);\n  return `#${hex}`;\n}\n\n//----------------------------------------------------------------------------\n// Debug tracing\n\nfunction DebugTracer(namespace) {\n  let enabled = false;\n\n  this.enable = function (on) {\n    enabled = on;\n  };\n\n  let indent = 0;\n  const methods = Object.keys(namespace);\n\n  function wrap(method_, name_) {\n    return function (...args) {\n      const spaces = DebugTracer.spaces.substr(0, indent * 2);\n      if (enabled) {\n        logger.debug(`${spaces + name_} {`);\n      }\n      indent++;\n      const result = method_.apply(this, args); // eslint-disable-line no-invalid-this\n      indent--;\n      if (enabled) {\n        logger.debug(`${spaces}} // ${name_}`);\n      }\n      return result;\n    };\n  }\n\n  for (let i = 0, n = methods.length; i < n; ++i) {\n    const name = methods[i];\n    const method = namespace[name];\n    if (method instanceof Function && name !== 'constructor') {\n      namespace[name] = wrap(method, name);\n    }\n  }\n}\n\nDebugTracer.spaces = '                                                                                          ';\n\nclass OutOfMemoryError extends Error {\n  constructor(message) {\n    super();\n    this.name = 'OutOfMemoryError';\n    this.message = message;\n  }\n}\n\nfunction allocateTyped(TypedArrayName, size) {\n  let result = null;\n  try {\n    result = new TypedArrayName(size);\n  } catch (e) {\n    if (e instanceof RangeError) {\n      throw new OutOfMemoryError(e.message);\n    } else {\n      throw e;\n    }\n  }\n  return result;\n}\n\n//----------------------------------------------------------------------------\n// Float array conversion\n\nfunction bytesToBase64(/** ArrayBuffer */ buffer) {\n  const bytes = new Uint8Array(buffer);\n  let binary = '';\n  for (let i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n}\n\nfunction bytesFromBase64(/** string */ str) {\n  const binary = window.atob(str);\n  const bytes = new Uint8Array(binary.length);\n  for (let i = 0; i < bytes.length; ++i) {\n    bytes[i] = binary[i].charCodeAt(0);\n  }\n  return bytes.buffer;\n}\n\nfunction arrayToBase64(/** number[] */ array, /** function */ TypedArrayClass) {\n  return bytesToBase64(new TypedArrayClass(array).buffer);\n}\n\nfunction arrayFromBase64(/** string */ str, /** function */ TypedArrayClass) {\n  return Array.prototype.slice.call(new TypedArrayClass(bytesFromBase64(str)));\n}\n\n// NOTE: this is 1-level comparison\nfunction compareOptionsWithDefaults(opts, defOpts) {\n  const optsStr = [];\n  if (defOpts && opts) {\n    const keys = Object.keys(opts);\n    for (let p = 0; p < keys.length; ++p) {\n      const key = keys[p];\n      const value = opts[key];\n      // TODO add processing for tree structure\n      if (!(value instanceof Object) && typeof defOpts[key] !== 'undefined' && defOpts[key] !== value) {\n        optsStr.push(`${key}:${value}`);\n      }\n    }\n    if (optsStr.length > 0) {\n      return `!${optsStr.join()}`;\n    }\n  }\n  return '';\n}\n\nfunction isAlmostPlainObject(o) {\n  if (_.isPlainObject(o)) {\n    return true;\n  }\n  const proto = o && Object.getPrototypeOf(o);\n  return !!proto && !proto.hasOwnProperty('constructor') && isAlmostPlainObject(proto);\n}\n\n/**\n * Build an object that contains properties (and subproperties) of `src` different from those\n * in `dst`. Objects are parsed recursively, other values (including arrays) are compared for\n * equality using `_.isEqual()`.\n * @param {!object} src - a new object to compare, may contain changed or new properties\n * @param {!object} dst - an old reference object\n */\nfunction objectsDiff(src, dst) {\n  const diff = {};\n  _.forIn(src, (srcValue, key) => {\n    const dstValue = dst[key];\n    if (isAlmostPlainObject(srcValue) && isAlmostPlainObject(dstValue)) {\n      const deepDiff = objectsDiff(srcValue, dstValue);\n      if (!_.isEmpty(deepDiff)) {\n        diff[key] = deepDiff;\n      }\n    } else if (!_.isEqual(srcValue, dstValue)) {\n      diff[key] = srcValue;\n    }\n  });\n  return diff;\n}\n\nfunction forInRecursive(object, callback) {\n  function iterateThrough(obj, prefix) {\n    _.forIn(obj, (value, key) => {\n      const newPref = prefix + (prefix.length > 0 ? '.' : '');\n      if (value instanceof Object) {\n        iterateThrough(value, newPref + key);\n      } else if (value !== undefined) {\n        callback(value, newPref + key);\n      }\n    });\n  }\n  iterateThrough(object, '');\n}\n\nfunction enquoteString(value) {\n  if (_.isString(value)) {\n    return `\"${value.replace(/\"/g, '\\\\\"')}\"`;\n  }\n  return value;\n}\n\nfunction unquoteString(value) {\n  if (!_.isString(value)) {\n    return value;\n  }\n  if (value[0] === '\"' && value[value.length - 1] === '\"') {\n    value = value.slice(1, value.length - 1);\n    return value.replace(/\\\\\"/g, '\"');\n  }\n  if (value[0] === \"'\" && value[value.length - 1] === \"'\") {\n    value = value.slice(1, value.length - 1);\n    return value.replace(/\\\\'/g, \"'\");\n  }\n  throw new SyntaxError('Incorrect string format, can\\'t unqute it');\n}\n\nfunction getFileExtension(fileName) {\n  return fileName.slice((Math.max(0, fileName.lastIndexOf('.')) || Infinity));\n}\n\nfunction splitFileName(fileName) {\n  const ext = getFileExtension(fileName);\n  const name = fileName.slice(0, fileName.length - ext.length);\n  return [name, ext];\n}\n\nfunction dataUrlToBlob(url) {\n  const parts = url.split(/[:;,]/);\n  const partsCount = parts.length;\n  if (partsCount >= 3 && parts[partsCount - 2] === 'base64') {\n    return new Blob([bytesFromBase64(parts[partsCount - 1])]);\n  }\n  return null;\n}\n\nfunction getBrowser() {\n  if (navigator.vendor && navigator.vendor.indexOf('Apple') > -1\n    && navigator.userAgent\n    && navigator.userAgent.indexOf('CriOS') === -1\n    && navigator.userAgent.indexOf('FxiOS') === -1) {\n    return browserType.SAFARI;\n  }\n  return browserType.DEFAULT;\n}\n\nfunction shotOpen(url) {\n  if (typeof window !== 'undefined') {\n    window.open().document.write(`<body style=\"margin:0\"><img src=\"${url}\" /></body>`);\n  }\n}\n\nfunction shotDownload(dataUrl, filename) {\n  if (!dataUrl || dataUrl.substr(0, 5) !== 'data:') {\n    return;\n  }\n  if (!filename) {\n    filename = ['screenshot-', +new Date(), '.png'].join('');\n  }\n  if (typeof window !== 'undefined' && window.navigator && window.navigator.msSaveBlob) {\n    window.navigator.msSaveBlob(dataUrlToBlob(dataUrl), filename);\n  } else if (typeof document !== 'undefined') {\n    const link = document.createElement('a');\n    link.download = filename;\n    link.innerHTML = 'download';\n    link.href = window.URL.createObjectURL(dataUrlToBlob(dataUrl));\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n\nfunction download(data, filename, type) {\n  const blobData = new Blob([data]);\n\n  if (!filename) {\n    filename = ['data', +new Date()].join('');\n  }\n\n  if (!type) {\n    filename += blobData.type || '.bin';\n  } else {\n    filename += `.${type}`;\n  }\n\n  if (typeof window !== 'undefined' && window.navigator && window.navigator.msSaveBlob) {\n    window.navigator.msSaveBlob(blobData, filename);\n  } else if (typeof document !== 'undefined') {\n    const link = document.createElement('a');\n    link.download = filename;\n    link.innerHTML = 'download';\n    link.href = window.URL.createObjectURL(blobData);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n\nfunction copySubArrays(src, dst, indices, itemSize) {\n  for (let i = 0, n = indices.length; i < n; ++i) {\n    for (let j = 0; j < itemSize; ++j) {\n      dst[i * itemSize + j] = src[indices[i] * itemSize + j];\n    }\n  }\n}\n\nfunction shallowCloneNode(node) {\n  const newNode = node.cloneNode(true);\n  newNode.worldPos = node.worldPos;\n  // .style property is readonly, so \"newNode.style = node.style;\" won't work (and we don't need it, right?)\n  return newNode;\n}\n\nconst unquotedStringRE = /^[a-zA-Z0-9_]*$/;\nconst enquoteHelper = ['\"', '', '\"'];\n\n// verify and correct if needed selctor identifier\nfunction correctSelectorIdentifier(value) {\n  if (unquotedStringRE.test(value)) {\n    return value;\n  }\n  // quote incorrect identifier\n  enquoteHelper[1] = value;\n  return enquoteHelper.join('');\n}\n\n/**\n * Concatenates two TypedArray. Doesn't check null refs o type equality\n * Attention! It must be use very rarely because requires memory reallocation every time. Use MergeTypedArraysUnsafe to\n * unite array of subarrays.\n * @param{TypedArray} first  - destination array\n * @param{TypedArray} second - source array\n * @returns{TypedArray} resulting concatenated array\n */\nfunction concatTypedArraysUnsafe(first, second) {\n  const result = new first.constructor(first.length + second.length);\n  result.set(first);\n  result.set(second, first.length);\n  return result;\n}\n\n/**\n * Merges array of TypedArray into TypedArray. Doesn't check null refs o type equality\n * @param{array} array  - source array of subarrays\n * @returns{TypedArray} resulting merged array\n */\nfunction mergeTypedArraysUnsafe(array) {\n  if (array.length <= 0) {\n    return null;\n  }\n  // count the size\n  const size = array.reduce((acc, cur) => acc + cur.length, 0);\n  // create combined array\n  const result = new array[0].constructor(size);\n  for (let i = 0, start = 0; i < array.length; i++) {\n    const count = array[i].length;\n    result.set(array[i], start);\n    start += count;\n  }\n  return result;\n}\n\n//----------------------------------------------------------------------------\n// Exports\n\nexport default {\n  browserType,\n  encodeQueryComponent,\n  decodeQueryComponent,\n  getUrlParameters,\n  getUrlParametersAsDict,\n  resolveURL,\n  generateRegExp,\n  createElement,\n  deriveClass,\n  deriveDeep,\n  hexColor,\n  DebugTracer,\n  OutOfMemoryError,\n  allocateTyped,\n  bytesFromBase64,\n  bytesToBase64,\n  arrayFromBase64,\n  arrayToBase64,\n  compareOptionsWithDefaults,\n  objectsDiff,\n  forInRecursive,\n  enquoteString,\n  unquoteString,\n  getBrowser,\n  shotOpen,\n  shotDownload,\n  copySubArrays,\n  shallowCloneNode,\n  correctSelectorIdentifier,\n  getFileExtension,\n  splitFileName,\n  download,\n  concatTypedArraysUnsafe,\n  mergeTypedArraysUnsafe,\n};\n","import EventDispatcher from './EventDispatcher';\n\nexport default class JobHandle extends EventDispatcher {\n  constructor() {\n    super();\n    this._shouldCancel = false;\n  }\n\n  cancel() {\n    this._shouldCancel = true;\n    this.dispatchEvent({ type: 'cancel' });\n  }\n\n  shouldCancel() {\n    return this._shouldCancel;\n  }\n\n  // slaves use this to notify master about their events\n  // master routes these notifications to a single event slot\n  notify(event) {\n    this.dispatchEvent({ type: 'notification', slaveEvent: event });\n  }\n}\n","import _ from 'lodash';\nimport utils from './utils';\nimport EventDispatcher from './utils/EventDispatcher';\n\nconst VERSION = 0;\n\n//----------------------------------------------------------------------------\n// DEFAULT SETTINGS\n//----------------------------------------------------------------------------\n\n/**\n * Polygonal complexity settings.\n *\n * @typedef PolyComplexity\n * @property {number} poor\n * @property {number} low\n * @property {number} medium\n * @property {number} high\n * @property {number} ultra\n */\n\n/**\n * @alias SettingsObject\n * @namespace\n */\nconst defaults = {\n  /**\n   * Default options for all available modes.\n   * Use {@link Mode.id} as a dictionary key to access mode options.\n   *\n   * Usually you don't need to override these settings. You may specify mode options as a parameter during\n   * {@link Mode} construction.\n   *\n   * @memberof SettingsObject#\n   * @type {Object.<string, object>}\n   *\n   * @property {LinesModeOptions} LN - Lines mode options.\n   * @property {LicoriceModeOptions} LC - Licorice mode options.\n   * @property {BallsAndSticksModeOptions} BS - Balls and Sticks mode options.\n   * @property {VanDerWaalsModeOptions} VW - Van der Waals mode options.\n   * @property {TraceModeOptions} TR - Trace mode options.\n   * @property {TubeModeOptions} TU - Tube mode options.\n   * @property {CartoonModeOptions} CA - Cartoon mode options.\n   * @property {QuickSurfaceModeOptions} QS - Contact Surface mode options.\n   * @property {IsoSurfaceSASModeOptions} SA - Solvent Accessible Surface mode options.\n   * @property {IsoSurfaceSESModeOptions} SE - Solvent Excluded Surface mode options.\n   * @property {ContactSurfaceModeOptions} CS - Contact Surface mode options.\n   * @property {TextModeOptions} TX - Text mode options.\n   * @property {VolumeDensityModeOptions} VD - Volume Density mode options.\n   */\n  modes: {\n    //----------------------------------------------------------------------------\n    // BALLS AND STICKS\n    //----------------------------------------------------------------------------\n\n    /**\n     * Balls and Sticks mode options.\n     *\n     * @typedef BallsAndSticksModeOptions\n     *\n     * @property {number} atom - Sphere radius as a fraction of Van der Waals atom radius.\n     * @property {number} bond - Cylinder radius in angstroms.\n     * @property {number} space - Fraction of the space around one cylinder. Zero means that cylinder fills all\n     *   available space.\n     * @property {boolean} multibond - Toggles rendering of multiple ordered bonds.\n     * @property {number} aromrad - Minor radius of a torus for aromatic loops.\n     * @property {boolean} showarom - Toggles rendering of aromatic loops.\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\n     */\n    BS: {\n      atom: 0.23,\n      bond: 0.15,\n      space: 0.5,\n      multibond: true,\n      aromrad: 0.1,\n      showarom: true,\n      polyComplexity: {\n        poor: 3,\n        low: 4,\n        medium: 6,\n        high: 12,\n        ultra: 32,\n      },\n    },\n\n    //----------------------------------------------------------------------------\n    // VAN DER WAALS\n    //----------------------------------------------------------------------------\n\n    /**\n     * Van der Waals mode options.\n     *\n     * @typedef VanDerWaalsModeOptions\n     *\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\n     */\n    VW: {\n      polyComplexity: {\n        poor: 4,\n        low: 6,\n        medium: 8,\n        high: 16,\n        ultra: 32,\n      },\n    },\n\n    //----------------------------------------------------------------------------\n    // LINES\n    //----------------------------------------------------------------------------\n\n    /**\n     * Lines mode options.\n     *\n     * @typedef LinesModeOptions\n     *\n     * @property {boolean} multibond - Flag, that toggles rendering of multiple ordered bonds.\n     * @property {boolean} showarom - Flag, that toggles rendering of aromatic loops.\n     * @property {number} offsarom - Offset between bonds and aromatic cycle.\n     * @property {number} chunkarom - Number of pieces in a-loop arc, corresponding to atom.\n     * @property {number} atom - Collision radius for atoms picking.\n     * @property {number} lineWidth - Line width in pixels (not used in thin lines).\n     */\n    LN: {\n      multibond: true,\n      showarom: true,\n      offsarom: 0.2,\n      chunkarom: 10,\n      atom: 0.23,\n      lineWidth: 2,\n    },\n\n    //----------------------------------------------------------------------------\n    // LICORICE\n    //----------------------------------------------------------------------------\n\n    /**\n     * Licorice mode options.\n     *\n     * @typedef LicoriceModeOptions\n     *\n     * @property {number} bond - Bond cylinder radius.\n     * @property {number} space - Fraction of the space around one cylinder. Zero means that cylinder fills all\n     *   available space.\n     * @property {boolean} multibond - Flag, that toggles rendering of multiple ordered bonds.\n     * @property {number} aromrad - Minor radius of a torus for aromatic loops.\n     * @property {boolean} showarom - Flag, that toggles rendering of aromatic loops.\n     * @property {PolyComplexity} polyComplexity - Poly complexity values for render modes.\n     */\n    LC: {\n      bond: 0.20,\n      space: 0.0,\n      multibond: true,\n      aromrad: 0.1,\n      showarom: true,\n      polyComplexity: {\n        poor: 3,\n        low: 4,\n        medium: 6,\n        high: 12,\n        ultra: 32,\n      },\n    },\n\n    //----------------------------------------------------------------------------\n    // SURFACE SAS\n    //----------------------------------------------------------------------------\n\n    /**\n     * Solvent Accessible Surface mode options.\n     *\n     * @typedef IsoSurfaceSASModeOptions\n     *\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\n     * @property {number} probeRadius - Radius of the probe.\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\n     *   Empty string means whole surface is visible.\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\n     */\n    SA: {\n      zClip: false,\n      probeRadius: 1.5,\n      subset: '',\n      wireframe: false,\n      polyComplexity: {\n        poor: 6,\n        low: 8,\n        medium: 16,\n        high: 30,\n        ultra: 60,\n      },\n    },\n\n    //----------------------------------------------------------------------------\n    // SURFACE SES\n    //----------------------------------------------------------------------------\n\n    /**\n     * Solvent Excluded Surface mode options.\n     *\n     * @typedef IsoSurfaceSESModeOptions\n     *\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\n     * @property {number} probeRadius - Radius of the probe.\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\n     *   Empty string means whole surface is visible.\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\n     */\n    SE: {\n      zClip: false,\n      probeRadius: 1.5,\n      subset: '',\n      wireframe: false,\n      polyComplexity: {\n        poor: 6,\n        low: 8,\n        medium: 16,\n        high: 30,\n        ultra: 60,\n      },\n    },\n\n    //----------------------------------------------------------------------------\n    // QUICK SURFACE\n    //----------------------------------------------------------------------------\n\n    /**\n     * Quick Surface mode options.\n     *\n     * @typedef QuickSurfaceModeOptions\n     *\n     * @property {number} isoValue - Isovalue of the surface to extract.\n     * @property {number} scale - Radius scale for the surface being built.\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\n     *   Empty string means whole surface is visible.\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\n     * @property {PolyComplexity} gaussLim - Gauss lim for coloring the bigger the value, the smoother our colors are.\n     * @property {PolyComplexity} gridSpacing - Poly complexity values for render modes. In this case the value\n     *   corresponds to the grid density.\n     */\n    QS: {\n      isoValue: 0.5,\n      gaussLim: {\n        poor: 1.5,\n        low: 2.0,\n        medium: 2.5,\n        high: 3.0,\n        ultra: 4.0,\n      },\n      scale: 1.0,\n      wireframe: false,\n      gridSpacing: {\n        poor: 2,\n        low: 1.5,\n        medium: 1,\n        high: 0.5,\n        ultra: 0.25,\n      },\n      subset: '',\n      zClip: false,\n    },\n\n    //----------------------------------------------------------------------------\n    // CONTACT SURFACE\n    //----------------------------------------------------------------------------\n\n    /**\n     * Contact Surface mode options.\n     *\n     * @typedef ContactSurfaceModeOptions\n     *\n     * @property {number} isoValue - Isovalue of the surface to extract.\n     * @property {number} probeRadius - Probe radius.\n     * @property {number} probePositions\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\n     *   Empty string means whole surface is visible.\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\n     * @property {PolyComplexity} polyComplexity - Radius scale for the surface being built.\n     *   Poly complexity values for render modes. In this case the value corresponds to the grid density.\n     */\n    CS: {\n      probeRadius: 1.4,\n      isoValue: 1.5,\n      wireframe: false,\n      probePositions: 30,\n      polyComplexity: {\n        poor: 0.5,\n        low: 1.0,\n        medium: 1.5,\n        high: 1.75,\n        ultra: 2.0,\n      },\n      subset: '',\n      zClip: false,\n    },\n\n    //----------------------------------------------------------------------------\n    // TRACE\n    //----------------------------------------------------------------------------\n\n    /**\n     * Trace mode options.\n     *\n     * @typedef TraceModeOptions\n     *\n     * @property {number} radius - Cylinder radius.\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\n     */\n    TR: {\n      radius: 0.30,\n      polyComplexity: {\n        poor: 12,\n        low: 16,\n        medium: 32,\n        high: 64,\n        ultra: 64,\n      },\n    },\n\n    //----------------------------------------------------------------------------\n    // TUBE\n    //----------------------------------------------------------------------------\n\n    /**\n     * Tube mode options.\n     *\n     * @typedef TubeModeOptions\n     *\n     * @property {number} radius - Cylinder radius.\n     * @property {number} tension - Tension for interpolation.\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\n     * @property {number} heightSegmentsRatio - Poly complexity multiplier for height segments.\n     */\n    TU: {\n      radius: 0.30,\n      heightSegmentsRatio: 1.5,\n      tension: -0.7,\n      polyComplexity: {\n        poor: 4,\n        low: 6,\n        medium: 10,\n        high: 18,\n        ultra: 34,\n      },\n    },\n\n    //----------------------------------------------------------------------------\n    // CARTOON\n    //----------------------------------------------------------------------------\n\n    /**\n     * Cartoon mode options.\n     *\n     * @typedef CartoonModeOptions\n     *\n     * @property {number} radius - Standard tube radius.\n     * @property {number} depth - Height of the secondary structure ribbon.\n     * @property {number} tension - Tension for interpolation.\n     * @proprety {object} ss - Secondary structure parameters.\n     * @proprety {object} ss.helix - Options for helices render.\n     * @proprety {number} ss.helix.width - Width of the secondary structure ribbon.\n     * @proprety {number} ss.helix.arrow - Secondary structure's arrow width.\n     * @proprety {object} ss.strand - Options for strands render.\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\n     * polyComplexity must be even for producing symmetric arrows.\n     * @property {number} heightSegmentsRatio - Poly complexity multiplier for height segments.\n     */\n    CA: {\n      radius: 0.30,\n      depth: 0.25,\n      ss: {\n        helix: {\n          width: 1.0,\n          arrow: 2.0,\n        },\n        strand: {\n          width: 1.0,\n          arrow: 2.0,\n        },\n      },\n      heightSegmentsRatio: 1.5,\n      tension: -0.7,\n      polyComplexity: {\n        poor: 4,\n        low: 6,\n        medium: 10,\n        high: 18,\n        ultra: 34,\n      },\n    },\n\n    //----------------------------------------------------------------------------\n    // TEXT\n    //----------------------------------------------------------------------------\n\n    /**\n     * Text mode options.\n     *\n     * @typedef TextModeOptions\n     *\n     * @property {string} template - Format string for building output text.\n     * @property {string} horizontalAlign - Text alignment ('left', 'right', 'center').\n     * @property {string} verticalAlign - Vertical text box alignment ('top', 'bottom', 'middle').\n     * @property {number} dx - Text offset x in angstroms.\n     * @property {number} dy - Text offset y in angstroms.\n     * @property {number} dz - Text offset z in angstroms.\n     * @property {string} fg - Color rule for foreground.\n     * @property {string} bg - Color rule for background.\n     * @property {boolean} showBg - Flag, that toggles background rendering.\n     *\n     */\n    TX: {\n      template: '{{Chain}}.{{Residue}}{{Sequence}}.{{Name}}',\n      horizontalAlign: 'center',\n      verticalAlign: 'middle',\n      dx: 0,\n      dy: 0,\n      dz: 1,\n      fg: 'none',\n      bg: '0x202020',\n      showBg: true,\n    },\n\n    //----------------------------------------------------------------------------\n    // VOLUME DENSITY\n    //----------------------------------------------------------------------------\n\n    /**\n     * Volume density mode options.\n     *\n     * @typedef VolumeDensityModeOptions\n     *\n     * @property {number} kSigma - Noise threshold coefficient.\n     * @property {boolean} frame - flag, that turns on box frame painting.\n     * @property {boolean} isoMode - flag, that turns on IsoSurface mode instead of Volume Rendering.\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\n     */\n    VD: {\n      kSigma: 1.0,\n      kSigmaMed: 2.0,\n      kSigmaMax: 4.0,\n      frame: true,\n      isoMode: false,\n      polyComplexity: {\n        poor: 2,\n        low: 3,\n        medium: 4,\n        high: 8,\n        ultra: 10,\n      },\n    },\n  },\n\n  /**\n   * Default options for all available colorers.\n   * Use {@link Colorer.id} as a dictionary key to access colorer options.\n   *\n   * Usually you don't need to override these settings. You may specify colorer options as a parameter during\n   * {@link Colorer} construction.\n   *\n   * Not all colorers have options.\n   *\n   * @memberof SettingsObject#\n   * @type {Object.<string, object>}\n   *\n   * @property {ElementColorerOptions} EL - Element colorer options.\n   * @property {SequenceColorerOptions} SQ - Sequence colorer options.\n   * @property {MoleculeColorerOptions} MO - Molecule colorer options.\n   * @property {UniformColorerOptions} UN - Uniform colorer options.\n   * @property {ConditionalColorerOptions} CO - Conditional colorer options.\n   * @property {TemperatureColorerOptions} TM - Temperature colorer options.\n   * @property {OccupancyColorerOptions} OC - Occupancy colorer options.\n   * @property {HydrophobicityColorerOptions} HY - Hydrophobicity colorer options.\n   */\n  colorers: {\n    /**\n     * Element colorer options.\n     *\n     * @typedef ElementColorerOptions\n     *\n     * @property {number} carbon - Carbon color or -1 to use default.\n     */\n    EL: {\n      carbon: -1,\n    },\n\n    /**\n     * Uniform colorer options.\n     *\n     * @typedef UniformColorerOptions\n     *\n     * @property {number} color - Single color to paint with.\n     */\n    UN: {\n      color: 0xFFFFFF,\n    },\n\n    /**\n     * Conditional colorer options.\n     *\n     * @typedef ConditionalColorerOptions\n     *\n     * @property {string} subset - Selector string.\n     * @property {number} color - Color of selected atoms.\n     * @property {number} baseColor - Color of other atoms.\n     */\n    CO: {\n      subset: 'charged',\n      color: 0xFF0000,\n      baseColor: 0xFFFFFF,\n    },\n\n    /**\n     * Carbon colorer options.\n     *\n     * @typedef CarbonColorerOptions\n     *\n     * @property {number} color - Single color to paint carbons\n     * @property {number} factor - Color factor for not carbon atoms.\n     */\n    CB: {\n      color: 0x909090,\n      factor: 0.6,\n    },\n\n    /**\n     * Sequence colorer options.\n     *\n     * @typedef SequenceColorerOptions\n     *\n     * @property {string} gradient - Name of gradient to use.\n     */\n    SQ: {\n      gradient: 'rainbow',\n    },\n\n    /**\n     * Temperature colorer options.\n     *\n     * @typedef TemperatureColorerOptions\n     *\n     * @property {string} gradient - Name of gradient to use.\n     * @property {number} min - Minimal temperature.\n     * @property {number} max - Maximal temperature.\n     */\n    TM: {\n      gradient: 'temp',\n      min: 5,\n      max: 40,\n    },\n\n    /**\n     * Occupancy colorer options.\n     *\n     * @typedef OccupancyColorerOptions\n     *\n     * @property {string} gradient - Name of gradient to use.\n     */\n    OC: {\n      gradient: 'reds',\n    },\n\n    /**\n     * Hydrophobicity colorer options.\n     *\n     * @typedef HydrophobicityColorerOptions\n     *\n     * @property {string} gradient - Name of gradient to use.\n     */\n    HY: {\n      gradient: 'blue-red',\n    },\n\n    /**\n     * Molecule colorer options.\n     *\n     * @typedef MoleculeColorerOptions\n     *\n     * @property {string} gradient - Name of gradient to use.\n     */\n    MO: {\n      gradient: 'rainbow',\n    },\n  },\n\n  /*\n   * Use antialiasing in WebGL.\n   * @type {boolean}\n   */\n  antialias: true,\n\n  /*\n   * Camera field of view in degrees.\n   * @type {number}\n   */\n  camFov: 45.0,\n\n  /*\n   * Camera near plane distance.\n   * @type {number}\n   */\n  camNear: 0.5,\n\n  /*\n   * Camera far plane distance.\n   * @type {number}\n   */\n  camFar: 100.0,\n\n  camDistance: 2.5,\n\n  radiusToFit: 1.0,\n\n  /**\n   * @type {number}\n   * @instance\n   */\n  fogNearFactor: 0.5, // [0, 1]\n\n  /**\n   * @type {number}\n   * @instance\n   */\n  fogFarFactor: 1, // [0, 1]\n  fogAlpha: 1.0,\n  fogColor: 0x000000,\n  fogColorEnable: false,\n\n  /**\n   * Palette used for molecule coloring.\n   * @type {string}\n   */\n  palette: 'JM',\n\n  /*\n   * Geometry resolution.\n   * @type {string}\n   */\n  resolution: 'medium',\n\n  autoResolution: false/* true */,\n\n  autoPreset: true,\n\n  preset: 'default', // TODO: remove 'preset' from settings, implement autodetection\n\n  presets: {\n    // Default\n    default: [{\n      mode: 'BS',\n      colorer: 'EL',\n      selector: 'all',\n      material: 'SF',\n    }],\n\n    empty: [],\n\n    // Wireframe\n    wire: [{\n      mode: 'LN',\n      colorer: 'EL',\n      selector: 'all',\n      material: 'SF',\n    }],\n\n    // Small molecules\n    small: [{\n      mode: 'BS',\n      colorer: 'EL',\n      selector: 'all',\n      material: 'SF',\n    }],\n\n    // Proteins, nucleic acids etc.\n    macro: [{\n      mode: 'CA',\n      colorer: 'SS',\n      selector: 'not hetatm',\n      material: 'SF',\n    }, {\n      mode: 'BS',\n      colorer: 'EL',\n      selector: 'hetatm and not water',\n      material: 'SF',\n    }],\n  },\n\n  objects: {\n    line: {\n      color: 0xFFFFFFFF,\n      dashSize: 0.3,\n      gapSize: 0.05,\n    },\n  },\n\n  //----------------------------------------------------------------------------\n\n  bg: {\n    color: 0x202020,\n    transparent: false,\n  },\n\n  draft: {\n    clipPlane: false,\n    clipPlaneFactor: 0.5,\n    clipPlaneSpeed: 0.00003,\n  },\n\n  /*\n     * Separate group for plugins.\n     * Each plugin handles its field by itself.\n     */\n  plugins: {\n\n  },\n\n  /**\n   * @type {boolean}\n   * @instance\n   */\n  axes: true,\n\n  /**\n   * @type {boolean}\n   * @instance\n   */\n  fog: true,\n\n  /**\n   * @type {boolean}\n   * @instance\n   */\n  fps: true,\n\n  /**\n   * Switch using of z-sprites for sphere and cylinder geometry\n   * @type {boolean}\n   * @instance\n   */\n  zSprites: true,\n\n  isoSurfaceFakeOpacity: true,\n\n  /**\n   * @type {boolean}\n   * @instance\n   */\n  suspendRender: true,\n\n  nowater: false,\n\n  /**\n   * @type {boolean}\n   * @instance\n   */\n  autobuild: true,\n\n  /**\n   * Anti-aliasing.\n   * @type {boolean}\n   * @instance\n   */\n  fxaa: true,\n  /**\n   * Outline depths\n   * @type {boolean}\n   * @instance\n   */\n  outline: {\n    on: false,\n    color: 0x000000,\n    threshold: 0.1,\n    thickness: 1,\n  },\n\n  /**\n   * Ambient Occlusion special effect.\n   * @type {boolean}\n   * @instance\n   */\n  ao: false,\n\n  /**\n   * Shadows options.\n   *\n   * @property {boolean} shadowMap - enable/disable.\n   * @property {string} basic/percentage-closer filtering/non-uniform randomizing pcf.\n   * @property {number} radius for percentage-closer filtering.\n   */\n  shadow: {\n    on: false,\n    type: 'random'/* basic, pcf, random */,\n    radius: 1.0,\n  },\n\n  /**\n   * Auto-rotation with constant speed.\n   * @type {number}\n   * @instance\n   */\n  autoRotation: 0.0,\n\n  /**\n   * Set maximum fps for animation.\n   * @type {number}\n   * @instance\n   */\n  maxfps: 30,\n\n  /**\n   * Set fbx output precision.\n   * @type {number}\n   * @instance\n   */\n  fbxprec: 4,\n\n  /**\n   * Auto-rotation axis.\n   *\n   * - true:  complex auto-rotation is about vertical axis\n   * - false: rotation axis is defined by last user rotation\n   *\n   * @type {boolean}\n   * @instance\n   */\n  autoRotationAxisFixed: true,\n\n  /**\n   * Enable zooming with mouse wheel or pinch gesture.\n   * @type {boolean}\n   * @instance\n   */\n  zooming: true,\n\n  /**\n   * Enable picking atoms & residues with left mouse button or touch.\n   * @type {boolean}\n   * @instance\n   */\n  picking: true,\n\n  /**\n   * Set picking mode ('atom', 'residue', 'chain', 'molecule').\n   * @type {string}\n   * @instance\n   */\n  pick: 'atom',\n\n  /**\n   * Make \"component\" and \"fragment\" editing modes available.\n   * @type {boolean}\n   * @instance\n   */\n  editing: false,\n\n  /**\n   * Detect aromatic loops.\n   * @type {boolean}\n   * @instance\n   */\n  aromatic: false,\n\n  /**\n   * Load only one biological unit from all those described in PDB file.\n   * @type {boolean}\n   * @instance\n   */\n  singleUnit: true,\n\n  /**\n   * Set stereo mode ('NONE', 'SIMPLE', 'DISTORTED', 'ANAGLYPH', 'WEBVR').\n   * @type {string}\n   * @instance\n   */\n  stereo: 'NONE',\n\n  /**\n   * Enable smooth transition between views\n   * @type {boolean}\n   * @instance\n   */\n  interpolateViews: true,\n\n  /**\n   * Set transparency mode ('standard', 'prepass').\n   * @type {string}\n   * @instance\n   */\n  transparency: 'prepass',\n\n  /**\n   * Mouse translation speed.\n   * @type {number}\n   * @instance\n   */\n  translationSpeed: 2,\n\n  debug: {\n    example: 3.5,\n    text: 'hello!',\n    good: true,\n    ssaoKernelRadius: 0.7,\n    ssaoFactor: 0.7,\n    stereoBarrel: 0.25,\n  },\n  use: {\n    multiFile: false,\n  },\n};\n\n//----------------------------------------------------------------------------\n// SETTINGS CLASS\n//----------------------------------------------------------------------------\n\nfunction Settings() {\n  EventDispatcher.call(this);\n\n  this.old = null;\n  this.now = {};\n  this._changed = {};\n\n  this.reset();\n}\n\nutils.deriveClass(Settings, EventDispatcher, {\n  defaults,\n\n  set(path, value) {\n    if (_.isString(path)) {\n      const oldValue = _.get(this.now, path);\n      if (oldValue !== value) {\n        _.set(this.now, path, value);\n        this._notifyChange(path, value);\n      }\n    } else {\n      const diff = utils.objectsDiff(path, this.now);\n      if (!_.isEmpty(diff)) {\n        _.merge(this.now, diff);\n        this._notifyChanges(diff);\n      }\n    }\n  },\n\n  get(path, defaultValue) {\n    return _.get(this.now, path, defaultValue);\n  },\n\n  reset() {\n    const diff = utils.objectsDiff(defaults, this.now);\n    this.now = _.cloneDeep(defaults);\n    this.old = null;\n    this._notifyChanges(diff);\n    this._changed = {};\n  },\n\n  checkpoint() {\n    this.old = _.cloneDeep(this.now);\n    this._changed = {};\n  },\n\n  _notifyChange(path, value) {\n    this._changed[path] = true;\n    this.dispatchEvent({ type: `change:${path}`, value });\n  },\n\n  _notifyChanges(diff) {\n    utils.forInRecursive(diff, (deepValue, deepPath) => {\n      this._notifyChange(deepPath, deepValue);\n    });\n  },\n\n  changed() {\n    if (!this.old) {\n      return [];\n    }\n    const { old, now } = this;\n    const keys = _.filter(Object.keys(this._changed), (key) => _.get(old, key) !== _.get(now, key));\n    return keys;\n  },\n\n  applyDiffs(diffs) {\n    if (diffs.hasOwnProperty('VERSION') && diffs.VERSION !== VERSION) {\n      throw new Error('Settings version does not match!');\n    }\n    // VERSION shouldn't be presented inside settings structure\n    delete diffs.VERSION;\n    this.reset();\n    this.set(diffs);\n  },\n\n  getDiffs(versioned) {\n    const diffs = utils.objectsDiff(this.now, defaults);\n    if (versioned) {\n      diffs.VERSION = VERSION;\n    }\n    return diffs;\n  },\n\n  setPluginOpts(plugin, opts) {\n    defaults.plugins[plugin] = _.cloneDeep(opts);\n    this.now.plugins[plugin] = _.cloneDeep(opts);\n  },\n});\n\nexport default new Settings();\n","import _ from 'lodash';\nimport settings from './settings';\nimport utils from './utils';\nimport logger from './utils/logger';\n\nlet repIndex = 0;\n\nfunction asBoolean(value) {\n  return !(!value || value === '0' || (_.isString(value) && value.toLowerCase() === 'false'));\n}\n\nconst adapters = {\n  string: String,\n  number: Number,\n  boolean: asBoolean,\n};\n\n// Level 1 assignment symbol\nconst cL1Ass = '=';\n\nconst cOptsSep = '!';\n// Level 2 (options) assignment symbol\nconst cL2Ass = ':';\n// Level 2 (options) separator symbol\nconst cLSep = ',';\n\nconst cCommonIgnoreSymbols = '$;@/?';\n/**\n * We may (and should) leave as is for better readability:\n *\n *        $ , ; : @ / ?\n */\n/**\n * Generate regular expression for symbols excluded for first level encryption\n */\nfunction getLevel1ExcludedExpr() {\n  const cLevel1Ignores = ':,';\n  return utils.generateRegExp(cCommonIgnoreSymbols + cLevel1Ignores);\n}\n\n/**\n * Generate regular expression for symbols excluded for first level encryption\n * (options, etc, ..)\n */\nfunction getLevel2ExcludedExpr() {\n  const cLevel2Ignores = ' ';\n  return utils.generateRegExp(cCommonIgnoreSymbols + cLevel2Ignores);\n}\n\nconst cL1ExclExpr = getLevel1ExcludedExpr();\nfunction encodeQueryComponentL1(value) {\n  return utils.encodeQueryComponent(value, cL1ExclExpr);\n}\n\nconst cL2ExclExpr = getLevel2ExcludedExpr();\nfunction encodeQueryComponentL2(value) {\n  return utils.encodeQueryComponent(value, cL2ExclExpr);\n}\n\nfunction ensureRepList(opts) {\n  let { reps } = opts;\n  if (!reps) {\n    const { presets } = settings.now;\n    let preset = opts.preset || settings.now.preset;\n    reps = presets[preset];\n    if (!reps) {\n      logger.warn(`Unknown preset \"${preset}\"`);\n      [preset] = Object.keys(presets);\n      reps = presets[preset]; // fall back to any preset\n    }\n    opts.preset = preset;\n    opts.reps = utils.deriveDeep(reps, true);\n  }\n}\n\nfunction ensureRepAssign(opts, prop, value) {\n  ensureRepList(opts);\n  const rep = opts.reps[repIndex];\n  // prop specified twice therefore start new rep by cloning the current\n  if (rep.hasOwnProperty(prop)) {\n    repIndex = opts.reps.length;\n    opts.reps[repIndex] = utils.deriveDeep(rep, true);\n  }\n  if (value !== undefined) {\n    opts.reps[repIndex][prop] = value;\n  }\n}\n\nfunction addObject(opts, params, options) {\n  if (opts._objects === undefined) {\n    opts._objects = [];\n  }\n\n  const [type, newOpts] = options;\n  const newObj = {\n    type,\n    params,\n  };\n\n  if (newOpts !== undefined) {\n    newObj.opts = newOpts;\n  }\n\n  opts._objects[opts._objects.length] = newObj;\n}\n\nfunction parseParams(str, params) {\n  const sep = str.indexOf(',');\n  if (sep >= 0) {\n    params.push(str.substr(sep + 1).split(','));\n    return str.substr(0, sep);\n  }\n  // keep this untouched if no params were extracted\n  return str;\n}\n\nfunction extractArgs(input, defaultsDict, params) {\n  if (input) {\n    const bang = input.indexOf(cOptsSep);\n    const inputVal = parseParams(input.substr(0, bang >= 0 ? bang : undefined), params);\n    if (bang >= 0) {\n      const args = input.substr(bang + 1).split(cLSep);\n      input = inputVal;\n      if (defaultsDict) {\n        const defaults = defaultsDict[input];\n        const opts = utils.deriveDeep(defaults, true);\n        args.forEach((arg) => {\n          const pair = arg.split(cL2Ass, 2);\n          const key = decodeURIComponent(pair[0]);\n          const value = decodeURIComponent(pair[1]);\n          const adapter = adapters[typeof _.get(defaults, key)];\n          if (adapter) {\n            _.set(opts, key, adapter(value));\n          } else {\n            logger.warn(`Unknown argument \"${key}\" for option \"${input}\"`);\n          }\n        });\n        if (Object.keys(opts).length > 0) {\n          input = [input, opts];\n        }\n      }\n    } else {\n      input = inputVal;\n    }\n  }\n  return input;\n}\n\nconst actions = {\n\n  l: 'load',\n  load: String,\n  t: 'type',\n  type: String,\n  v: 'view',\n  view: String,\n  u: 'unit',\n  unit: Number,\n  menu: asBoolean,\n\n  // Commands\n\n  o: 'object',\n  object(value, opts) {\n    const params = [];\n    let options = extractArgs(value, settings.defaults.objects, params);\n    if (!Array.isArray(options)) {\n      options = [options];\n    }\n    addObject(opts, params[0], options);\n  },\n\n  p: 'preset',\n  preset(value, opts) {\n    opts.preset = value;\n    opts.reps = null;\n    ensureRepList(opts);\n  },\n\n  r: 'rep',\n  rep(value, opts) {\n    ensureRepList(opts);\n    repIndex = Number(value);\n    // clamp the index to one greater than the last\n    repIndex = repIndex <= opts.reps.length ? (repIndex < 0 ? 0 : repIndex) : opts.reps.length;\n    // create a new rep if it is adjacent to the existing ones\n    if (repIndex === opts.reps.length) {\n      // if there is no rep to derive from, derive from the first rep of the default\n      opts.reps[repIndex] = repIndex > 0 ? utils.deriveDeep(opts.reps[repIndex - 1], true)\n        : utils.deriveDeep(settings.defaults.presets.default[0], true);\n    }\n  },\n\n  s: 'select',\n  select(value, opts) {\n    ensureRepAssign(opts, 'selector', value);\n  },\n\n  m: 'mode',\n  mode(value, opts) {\n    ensureRepAssign(opts, 'mode', extractArgs(value, settings.defaults.modes));\n  },\n\n  c: 'color',\n  color(value, opts) {\n    ensureRepAssign(opts, 'colorer', extractArgs(value, settings.defaults.colorers));\n  },\n\n  mt: 'material',\n  material(value, opts) {\n    ensureRepAssign(opts, 'material', extractArgs(value, settings.defaults.materials));\n  },\n\n  dup(value, opts) {\n    ensureRepList(opts);\n    const { reps } = opts;\n    const rep = reps[repIndex];\n    repIndex = reps.length;\n    reps[repIndex] = utils.deriveDeep(rep, true);\n  },\n\n  // Settings shortcuts\n\n  ar: 'autoResolution',\n};\n\nfunction _fromArray(entries) {\n  repIndex = 0;\n\n  const opts = {};\n  for (let i = 0, n = entries.length; i < n; ++i) {\n    const /** string[] */ entry = entries[i];\n    let /** string? */ key = entry[0];\n    const /** string? */ value = entry[1];\n    let /** function|string? */ action = actions[key];\n\n    // unwind shortcuts and aliases\n    while (_.isString(action)) {\n      key = action;\n      action = actions[key];\n    }\n\n    // either set a property or use specialized parser\n    if (!action) {\n      const adapter = adapters[typeof _.get(settings.defaults, key)];\n      if (adapter) {\n        _.set(opts, `settings.${key}`, adapter(value));\n      } else {\n        logger.warn(`Unknown option \"${key}\"`);\n      }\n    } else if (_.isFunction(action)) {\n      const result = action(value, opts);\n      if (result !== undefined) {\n        opts[key] = result;\n      }\n    }\n  }\n\n  return opts;\n}\n\nfunction fromAttr(attr) {\n  return _fromArray(utils.getUrlParameters(`?${attr || ''}`));\n}\n\nfunction fromURL(url) {\n  return _fromArray(utils.getUrlParameters(url));\n}\n\nfunction _processOptsForURL(opts) {\n  const str = [];\n  let i = 0;\n  utils.forInRecursive(opts, (value, key) => {\n    str[i++] = encodeQueryComponentL2(key) + cL2Ass + encodeQueryComponentL2(value);\n  });\n  return str.join(cLSep);\n}\n\nfunction _processArgsForURL(args) {\n  if (!_.isArray(args)) {\n    return args;\n  }\n  if (args.length < 2) {\n    return args[0];\n  }\n  return `${args[0]}${cOptsSep}${_processOptsForURL(args[1])}`;\n}\n\nfunction _processObjForURL(objOpts) {\n  if (!objOpts || !objOpts.type) {\n    return undefined;\n  }\n  let res = objOpts.type;\n  if (_.isArray(objOpts.params) && objOpts.params.length > 0) {\n    res += `,${objOpts.params.join(',')}`;\n  }\n  if (objOpts.opts) {\n    res += cOptsSep + _processOptsForURL(objOpts.opts);\n  }\n  return res;\n}\n\nfunction toURL(opts) {\n  const stringList = [];\n  let idx = 0;\n\n  function checkAndAdd(prefix, value) {\n    if (value !== null && value !== undefined) {\n      stringList[idx++] = encodeQueryComponentL1(prefix)\n                            + cL1Ass + encodeQueryComponentL1(value);\n    }\n  }\n\n  function addReps(repList) {\n    if (!repList) {\n      return;\n    }\n    for (let i = 0, n = repList.length; i < n; ++i) {\n      if (_.isEmpty(repList[i])) {\n        continue;\n      }\n      checkAndAdd('r', i);\n      checkAndAdd('s', repList[i].selector);\n      checkAndAdd('m', _processArgsForURL(repList[i].mode));\n      checkAndAdd('c', _processArgsForURL(repList[i].colorer));\n      checkAndAdd('mt', _processArgsForURL(repList[i].material));\n    }\n  }\n\n  function addObjects(objList) {\n    if (!objList) {\n      return;\n    }\n    for (let i = 0, n = objList.length; i < n; ++i) {\n      checkAndAdd('o', _processObjForURL(objList[i]));\n    }\n  }\n\n  checkAndAdd('l', opts.load);\n  checkAndAdd('u', opts.unit);\n  checkAndAdd('p', opts.preset);\n  addReps(opts.reps);\n  addObjects(opts._objects);\n\n  checkAndAdd('v', opts.view);\n\n  utils.forInRecursive(opts.settings, (value, key) => {\n    // I heard these lines in the whispers of the Gods\n    // Handle preset setting in reps\n    if (key === 'preset') {\n      return;\n    }\n    checkAndAdd(key, value);\n  });\n\n  let url = '';\n  if (typeof window !== 'undefined') {\n    const { location } = window;\n    url = `${location.protocol}//${location.host}${location.pathname}`;\n  }\n  if (stringList.length > 0) {\n    url += `?${stringList.join('&')}`;\n  }\n\n  return url;\n}\n\nfunction _processOptsForScript(opts) {\n  const str = [];\n  let i = 0;\n  utils.forInRecursive(opts, (value, key) => {\n    str[i++] = `${key}=${utils.enquoteString(value)}`;\n  });\n  return str.join(' ');\n}\n\nfunction _processArgsForScript(args) {\n  if (!_.isArray(args)) {\n    return args;\n  }\n  if (args.length < 2) {\n    return args[0];\n  }\n  return `${args[0]} ${_processOptsForScript(args[1])}`;\n}\n\nfunction _processObjForScript(objOpts) {\n  if (!objOpts || !objOpts.type) {\n    return undefined;\n  }\n  let res = objOpts.type;\n  if (_.isArray(objOpts.params) && objOpts.params.length > 0) {\n    res += ` ${objOpts.params.map(utils.enquoteString).join(' ')}`;\n  }\n  if (objOpts.opts) {\n    res += ` ${_processOptsForScript(objOpts.opts)}`;\n  }\n  return res;\n}\n\nfunction _processRepsForScript(rep, index) {\n  const repString = [];\n  let strIdx = 0;\n  function localAdd(prefix, value) {\n    if (value !== null && value !== undefined) {\n      repString[strIdx++] = prefix + value;\n    }\n  }\n  if (_.isEmpty(rep)) {\n    return null;\n  }\n  localAdd('', index);\n  localAdd('s=', utils.enquoteString(rep.selector));\n  localAdd('m=', _processArgsForScript(rep.mode));\n  localAdd('c=', _processArgsForScript(rep.colorer));\n  localAdd('mt=', _processArgsForScript(rep.material));\n  return repString.join(' ');\n}\n\nfunction toScript(opts) {\n  const commandsList = [];\n  let idx = 0;\n  function checkAndAdd(command, value, saveQuotes) {\n    if (value !== null && value !== undefined) {\n      const quote = (typeof value === 'string' && saveQuotes) ? '\"' : '';\n      commandsList[idx++] = `${command} ${quote}${value}${quote}`.trim();\n    }\n  }\n\n  function addReps(repList) {\n    if (!repList) {\n      return;\n    }\n\n    for (let i = 0, n = repList.length; i < n; ++i) {\n      checkAndAdd('rep', _processRepsForScript(repList[i], i));\n    }\n  }\n\n  function addObjects(objList) {\n    if (!objList) {\n      return;\n    }\n    for (let i = 0, n = objList.length; i < n; ++i) {\n      checkAndAdd('', _processObjForScript(objList[i]));\n    }\n  }\n\n  checkAndAdd('set', 'autobuild false');\n  checkAndAdd('load', opts.load, true);\n  checkAndAdd('unit', opts.unit);\n  checkAndAdd('preset', opts.preset);\n  addReps(opts.reps);\n  addObjects(opts._objects);\n\n  utils.forInRecursive(opts.settings, (value, key) => {\n    // I heard these lines in the whispers of the Gods\n    // Handle preset setting in reps\n    if (key === 'preset') {\n      return;\n    }\n    checkAndAdd(`set ${key}`, value, true);\n  });\n  checkAndAdd('view', opts.view);\n  checkAndAdd('set', 'autobuild true');\n  return commandsList.join('\\n');\n}\n\nexport default {\n  fromURL,\n  fromAttr,\n  adapters,\n  toURL,\n  toScript,\n};\n","/**\n * Atom measurements.\n *\n * @param {Residue} residue    - (required) Residue containing the atom\n * @param {string} name        - (required) Name, unique in the residue\n * @param {Element} type       - (required) Chemical element reference\n * @param {THREE.Vector3} position - Registered coordinates\n *\n * @param {number} role        - Role of atom inside monomer: Lead and wing are particularity interesting\n * @param {boolean} het        - Non-standard residue indicator\n *\n * @param {number} serial      - Serial number, unique in the model\n * @param {string} location    - Alternative location indicator (usually space or A-Z)\n * @param {number} occupancy   - Occupancy percentage, from 0 to 1\n * @param {number} temperature - Temperature\n * @param {number} charge      - Charge\n *\n * @exports Atom\n * @constructor\n */\n\nclass Atom {\n  constructor(residue, name, type, position, role, het, serial, location, occupancy, temperature, charge) {\n    this.index = -1;\n    this.residue = residue;\n    this.name = name;\n    this.element = type;\n    this.position = position;\n    this.role = role;\n    this.mask = 1 | 0;\n\n    this.het = het;\n\n    this.serial = serial;\n    this.location = (location || ' ').charCodeAt(0);\n    this.occupancy = occupancy || 1;\n    this.temperature = temperature;\n    this.charge = charge;\n    this.hydrogenCount = -1; // explicitly invalid\n    this.radicalCount = 0;\n    this.valence = -1; // explicitly invalid\n\n    this.bonds = [];\n\n    this.flags = 0x0000;\n    if (type.name === 'H') {\n      this.flags |= Atom.Flags.HYDROGEN;\n    } else if (type.name === 'C') {\n      this.flags |= Atom.Flags.CARBON;\n    }\n  }\n\n  isHet() {\n    return this.het;\n  }\n\n  isHydrogen() {\n    return this.element.number === 1;\n  }\n\n  getVisualName() {\n    const { name } = this;\n    if (name.length > 0) {\n      return name;\n    }\n    return this.element.name.trim();\n  }\n\n  forEachBond(process) {\n    const { bonds } = this;\n    for (let i = 0, n = bonds.length; i < n; ++i) {\n      process(bonds[i]);\n    }\n  }\n\n  getFullName() {\n    let name = '';\n    if (this.residue !== null) {\n      if (this.residue._chain !== null) {\n        name += `${this.residue._chain.getName()}.`;\n      }\n      name += `${this.residue._sequence}.`;\n    }\n    name += this.name;\n    return name;\n  }\n\n  /**\n   * Enumeration of atom flag values.\n   *\n   * @enum {number}\n   * @readonly\n   */\n  static Flags = {\n    CARBON: 0x0001,\n    // OXYGEN: 0x0002,\n    // NITROGEN: 0x0004,\n    HYDROGEN: 0x0008,\n    /** Non-polar hydrogen (it is also a HYDROGEN) */\n    NONPOLARH: 0x1008,\n  };\n}\n\nexport default Atom;\n","class Element {\n  constructor(number, name, fullName, weight, radius, radiusBonding, hValency) {\n    this.number = number;\n    this.name = name;\n    this.fullName = fullName;\n    this.weight = weight;\n    this.radius = radius;\n    this.radiusBonding = radiusBonding;\n    this.hydrogenValency = hValency;\n  }\n\n  static Constants = {\n    /* eslint-disable no-magic-numbers */\n    U1: 1,\n    Lead: 2,\n    U2: 3,\n    Wing: 4,\n    U18: 18,\n    /* eslint-enable no-magic-numbers */\n  };\n\n  static Role = {\n    /* eslint-disable no-magic-numbers */\n    N: Element.Constants.U1,\n    CA: Element.Constants.Lead,\n    C: Element.Constants.U2,\n    O: Element.Constants.Wing,\n    SG: Element.Constants.U18,\n    /* eslint-enable no-magic-numbers */\n  };\n\n  // DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\n  static ByAtomicNumber = [\n    /* eslint-disable no-magic-numbers */\n    null,\n    new Element(1, 'H', 'Hydrogen', 1.008, 1.2, 0.23, [1]),\n    new Element(2, 'HE', 'Helium', 4.003, 1.4, 0.93, [0]),\n    new Element(3, 'LI', 'Lithium', 6.941, 1.82, 0.68, [1]),\n    new Element(4, 'BE', 'Beryllium', 9.012, 1.7, 0.35, [2]),\n    new Element(5, 'B', 'Boron', 10.81, 2.08, 0.83, [3]),\n    new Element(6, 'C', 'Carbon', 12.011, 1.95, 0.68, [4]),\n    new Element(7, 'N', 'Nitrogen', 14.007, 1.85, 0.68, [3, 5]),\n    new Element(8, 'O', 'Oxygen', 15.999, 1.7, 0.68, [2, 4]),\n    new Element(9, 'F', 'Fluorine', 18.998, 1.73, 0.64, [1]),\n    new Element(10, 'NE', 'Neon', 20.18, 1.54, 1.12, [0]),\n    new Element(11, 'NA', 'Sodium', 22.99, 2.27, 0.97, [1]),\n    new Element(12, 'MG', 'Magnesium', 24.305, 1.73, 1.1, [2]),\n    new Element(13, 'AL', 'Aluminum', 26.981, 2.05, 1.35, [3]),\n    new Element(14, 'SI', 'Silicon', 28.086, 2.1, 1.2, [4]),\n    new Element(15, 'P', 'Phosphorus', 30.974, 2.08, 0.75, [3, 5]),\n    new Element(16, 'S', 'Sulfur', 32.07, 2, 1.02, [2, 4, 6]),\n    new Element(17, 'CL', 'Chlorine', 35.453, 1.97, 0.99, [1, 3, 5, 7]),\n    new Element(18, 'AR', 'Argon', 39.948, 1.88, 1.57, [0]),\n    new Element(19, 'K', 'Potassium', 39.1, 2.75, 1.33, [1]),\n    new Element(20, 'CA', 'Calcium', 40.08, 1.973, 0.99, [2]),\n    new Element(21, 'SC', 'Scandium', 44.956, 1.7, 1.44, [0]),\n    new Element(22, 'TI', 'Titanium', 47.88, 1.7, 1.47, [0]),\n    new Element(23, 'V', 'Vanadium', 50.941, 1.7, 1.33, [0]),\n    new Element(24, 'CR', 'Chromium', 52, 1.7, 1.35, [0]),\n    new Element(25, 'MN', 'Manganese', 54.938, 1.7, 1.35, [0]),\n    new Element(26, 'FE', 'Iron', 55.847, 1.7, 1.34, [0]),\n    new Element(27, 'CO', 'Cobalt', 58.93, 1.7, 1.33, [0]),\n    new Element(28, 'NI', 'Nickel', 58.69, 1.63, 1.5, [0]),\n    new Element(29, 'CU', 'Copper', 63.55, 1.4, 1.52, [0]),\n    new Element(30, 'ZN', 'Zinc', 65.39, 1.39, 1.45, [0]),\n    new Element(31, 'GA', 'Gallium', 69.72, 1.87, 1.22, [3]),\n    new Element(32, 'GE', 'Germanium', 72.61, 1.7, 1.17, [4]),\n    new Element(33, 'AS', 'Arsenic', 74.92, 1.85, 1.21, [3, 5]),\n    new Element(34, 'SE', 'Selenium', 78.96, 1.9, 1.22, [2, 4, 6]),\n    new Element(35, 'BR', 'Bromine', 79.9, 2.1, 1.21, [1, 3, 5, 7]),\n    new Element(36, 'KR', 'Krypton', 83.8, 2.02, 1.91, [0]),\n    new Element(37, 'RB', 'Rubidium', 85.47, 1.7, 1.47, [1]),\n    new Element(38, 'SR', 'Strontium', 87.62, 1.7, 1.12, [2]),\n    new Element(39, 'Y', 'Yttrium', 88.91, 1.7, 1.78, [0]),\n    new Element(40, 'ZR', 'Zirconium', 91.22, 1.7, 1.56, [0]),\n    new Element(41, 'NB', 'Niobium', 92.91, 1.7, 1.48, [0]),\n    new Element(42, 'MO', 'Molybdenum', 95.94, 1.7, 1.47, [0]),\n    new Element(43, 'TC', 'Technetium', 98.91, 1.7, 1.35, [0]),\n    new Element(44, 'RU', 'Ruthenium', 101.07, 1.7, 1.4, [0]),\n    new Element(45, 'RH', 'Rhodium', 102.91, 1.7, 1.45, [0]),\n    new Element(46, 'PD', 'Palladium', 106.42, 1.63, 1.5, [0]),\n    new Element(47, 'AG', 'Silver', 107.87, 1.72, 1.59, [0]),\n    new Element(48, 'CD', 'Cadmium', 112.41, 1.58, 1.69, [0]),\n    new Element(49, 'IN', 'Indium', 114.82, 1.93, 1.63, [3]),\n    new Element(50, 'SN', 'Tin', 118.71, 2.17, 1.46, [2, 4]),\n    new Element(51, 'SB', 'Antimony', 121.75, 2.2, 1.46, [3, 5]),\n    new Element(52, 'TE', 'Tellurium', 127.6, 2.06, 1.47, [2, 4, 6]),\n    new Element(53, 'I', 'Iodine', 126.91, 2.15, 1.4, [1, 3, 5, 7]),\n    new Element(54, 'XE', 'Xenon', 131.29, 2.16, 1.98, [0]),\n    new Element(55, 'CS', 'Cesium', 132.91, 1.7, 1.67, [1]),\n    new Element(56, 'BA', 'Barium', 137.33, 1.7, 1.34, [2]),\n    new Element(57, 'LA', 'Lanthanum', 138.91, 1.7, 1.87, [0]),\n    new Element(58, 'CE', 'Cerium', 140.12, 1.7, 1.83, [0]),\n    new Element(59, 'PR', 'Praseodymium', 140.91, 1.7, 1.82, [0]),\n    new Element(60, 'ND', 'Neodymium', 144.24, 1.7, 1.81, [0]),\n    new Element(61, 'PM', 'Promethium', 144.9, 1.7, 1.8, [0]),\n    new Element(62, 'SM', 'Samarium', 150.36, 1.7, 1.8, [0]),\n    new Element(63, 'EU', 'Europium', 151.96, 1.7, 1.99, [0]),\n    new Element(64, 'GD', 'Gadolinium', 157.25, 1.7, 1.79, [0]),\n    new Element(65, 'TB', 'Terbium', 158.93, 1.7, 1.76, [0]),\n    new Element(66, 'DY', 'Dysprosium', 162.5, 1.7, 1.75, [0]),\n    new Element(67, 'HO', 'Holmium', 164.93, 1.7, 1.74, [0]),\n    new Element(68, 'ER', 'Erbium', 167.26, 1.7, 1.73, [0]),\n    new Element(69, 'TM', 'Thulium', 168.93, 1.7, 1.72, [0]),\n    new Element(70, 'YB', 'Ytterbium', 173.04, 1.7, 1.94, [0]),\n    new Element(71, 'LU', 'Lutetium', 174.97, 1.7, 1.72, [0]),\n    new Element(72, 'HF', 'Hafnium', 178.49, 1.7, 1.57, [0]),\n    new Element(73, 'TA', 'Tantalum', 180.95, 1.7, 1.43, [0]),\n    new Element(74, 'W', 'Tungsten', 183.85, 1.7, 1.37, [0]),\n    new Element(75, 'RE', 'Rhenium', 186.21, 1.7, 1.35, [0]),\n    new Element(76, 'OS', 'Osmium', 190.2, 1.7, 1.37, [0]),\n    new Element(77, 'IR', 'Iridium', 192.22, 1.7, 1.32, [0]),\n    new Element(78, 'PT', 'Platinum', 195.08, 1.72, 1.5, [0]),\n    new Element(79, 'AU', 'Gold', 196.97, 1.66, 1.5, [0]),\n    new Element(80, 'HG', 'Mercury', 200.59, 1.55, 1.7, [0]),\n    new Element(81, 'TL', 'Thallium', 204.38, 1.96, 1.55, [1, 3]),\n    new Element(82, 'PB', 'Lead', 207.2, 2.02, 1.54, [2, 4]),\n    new Element(83, 'BI', 'Bismuth', 208.98, 1.7, 1.54, [3, 5]),\n    new Element(84, 'PO', 'Polonium', 210, 1.7, 1.68, [2, 4, 6]),\n    new Element(85, 'AT', 'Astatine', 210, 1.7, 1.7, [1, 3, 5, 7]),\n    new Element(86, 'RN', 'Radon', 222, 1.7, 2.4, [0]),\n    new Element(87, 'FR', 'Francium', 223, 1.7, 2, [1]),\n    new Element(88, 'RA', 'Radium', 226.03, 1.7, 1.9, [2]),\n    new Element(89, 'AC', 'Actinium', 227.03, 1.7, 1.88, [0]),\n    new Element(90, 'TH', 'Thorium', 232.04, 1.7, 1.79, [0]),\n    new Element(91, 'PA', 'Protactinium', 231.04, 1.7, 1.61, [0]),\n    new Element(92, 'U', 'Uranium', 238.03, 1.86, 1.58, [0]),\n    new Element(93, 'NP', 'Neptunium', 237.05, 1.7, 1.55, [0]),\n    new Element(94, 'PU', 'Plutonium', 239.1, 1.7, 1.53, [0]),\n    new Element(95, 'AM', 'Americium', 243.1, 1.7, 1.51, [0]),\n    new Element(96, 'CM', 'Curium', 247.1, 1.7, 1.5, [0]),\n    new Element(97, 'BK', 'Berkelium', 247.1, 1.7, 1.5, [0]),\n    new Element(98, 'CF', 'Californium', 252.1, 1.7, 1.5, [0]),\n    new Element(99, 'ES', 'Einsteinium', 252.1, 1.7, 1.5, [0]),\n    new Element(100, 'FM', 'Fermium', 257.1, 1.7, 1.5, [0]),\n    new Element(101, 'MD', 'Mendelevium', 256.1, 1.7, 1.5, [0]),\n    new Element(102, 'NO', 'Nobelium', 259.1, 1.7, 1.5, [0]),\n    new Element(103, 'LR', 'Lawrencium', 260.1, 1.7, 1.5, [0]),\n    new Element(104, 'RF', 'Rutherfordium', 261, 1.7, 1.6, [0]),\n    new Element(105, 'DB', 'Dubnium', 262, 1.7, 1.6, [0]),\n    new Element(106, 'SG', 'Seaborgium', 263, 1.7, 1.6, [0]),\n    new Element(107, 'BH', 'Bohrium', 262, 1.7, 1.6, [0]),\n    new Element(108, 'HS', 'Hassium', 265, 1.7, 1.6, [0]),\n    new Element(109, 'MT', 'Meitnerium', 268, 1.7, 1.6, [0]),\n    /* eslint-enable no-magic-numbers */\n  ];\n\n  // DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\n  static ByName = {\n    // Duplicate atomic numbers (isotopes)\n    /* eslint-disable no-magic-numbers */\n    D: new Element(1, 'D', 'Deuterium', 2.014, 1.2, 0.23, [1]),\n    T: new Element(1, 'T', 'Tritium', 3.016, 1.2, 0.23, [1]),\n    /* eslint-enable no-magic-numbers */\n\n    // All regular elements will be added later, automatically\n  };\n}\n\n(function () {\n  const byAtomicNumber = Element.ByAtomicNumber;\n  const byName = Element.ByName;\n  for (let i = 0, n = byAtomicNumber.length; i < n; ++i) {\n    const element = byAtomicNumber[i];\n    if (element) {\n      byName[element.name] = element;\n    }\n  }\n}());\n\n// find atom type by chemical element (or create if missing)\nElement.getByName = function (element) {\n  let type = Element.ByName[element];\n  if (!type) {\n    type = Element.ByName[element] = new Element(0, element, 'Unknown', 0, 1.0, 0.01, [0]);\n  }\n  return type;\n};\n\nexport default Element;\n","const cBondTypes = {\n  /** Was generated manually */\n  UNKNOWN: 0,\n  /** Simple covalent bond */\n  COVALENT: 1,\n  /** Aromatic bond */\n  AROMATIC: 2,\n};\n\nfunction getAtomPos(atom) {\n  return atom.position;\n}\n\n/**\n * Bond between atoms.\n *\n * @param {Atom} left     - The first atom.\n * @param {Atom} right    - The second atom.\n * @param {number} order - Order of current bond.\n * @param {number} type - Bond type.\n * @param {boolean} fixed - Indicator of a pre-specified connection (in contrast with guessed one).\n *\n * @exports Bond\n * @constructor\n */\nclass Bond {\n  constructor(left, right, order, type, fixed) {\n    this._left = left;\n    this._right = right;\n    this._fixed = fixed;\n    this._index = -1;\n    if (left > right) {\n      throw new Error('In a bond atom indices must be in increasing order');\n    }\n    this._order = order;\n    this._type = type;\n  }\n\n  getLeft() {\n    return this._left;\n  }\n\n  getRight() {\n    return this._right;\n  }\n\n  getOrder() {\n    return this._order;\n  }\n\n  calcLength() {\n    return this._left.position.distanceTo(this._right.position);\n  }\n\n  _forEachNeighbour(currAtom, process) {\n    const { bonds } = currAtom;\n    for (let i = 0, n = bonds.length; i < n; ++i) {\n      process(bonds[i]._left !== currAtom ? bonds[i]._left : bonds[i]._right);\n    }\n  }\n\n  forEachLevelOne(process) {\n    const left = this._left;\n    const right = this._right;\n    this._forEachNeighbour(left, (atom) => {\n      if (atom === right) {\n        return;\n      }\n      process(atom);\n    });\n    this._forEachNeighbour(right, (atom) => {\n      if (atom === left) {\n        return;\n      }\n      process(atom);\n    });\n  }\n\n  forEachLevelTwo(process) {\n    // TODO refactor this piece of an art?\n    const left = this._left;\n    const right = this._right;\n    const self = this;\n    self._forEachNeighbour(left, (atom) => {\n      if (atom === right) {\n        return;\n      }\n      self._forEachNeighbour(atom, (l2Atom) => {\n        if (l2Atom === left) {\n          return;\n        }\n        process(l2Atom);\n      });\n    });\n    self._forEachNeighbour(right, (atom) => {\n      if (atom === left) {\n        return;\n      }\n      self._forEachNeighbour(atom, (l2Atom) => {\n        if (l2Atom === right) {\n          return;\n        }\n        process(l2Atom);\n      });\n    });\n  }\n\n  _fixDir(refPoint, currDir, posGetter) {\n    // count atoms to the right and to the left of the current plane\n    let rightCount = 0;\n    let leftCount = 0;\n    const tmpVec = refPoint.clone();\n    function checkDir(atom) {\n      tmpVec.copy(posGetter(atom));\n      tmpVec.sub(refPoint);\n      const dotProd = currDir.dot(tmpVec);\n      if (dotProd > 0) {\n        ++rightCount;\n      } else {\n        ++leftCount;\n      }\n    }\n    function checkCarbon(atom) {\n      if (atom.element.name === 'C') {\n        checkDir(atom);\n      }\n    }\n    // count all atoms to the left and right of our plane, start from level 1 and carbons\n    const stages = [\n      [this.forEachLevelOne, checkCarbon],\n      [this.forEachLevelOne, checkDir],\n      [this.forEachLevelTwo, checkCarbon],\n      [this.forEachLevelTwo, checkDir],\n    ];\n\n    for (let stageId = 0; stageId < stages.length; ++stageId) {\n      stages[stageId][0].call(this, stages[stageId][1]);\n      if (leftCount > rightCount) {\n        return currDir.multiplyScalar(-1);\n      }\n      if (leftCount < rightCount) {\n        return currDir;\n      }\n    }\n    return currDir;\n  }\n\n  calcNormalDir(posGetter) {\n    const left = this._left;\n    const right = this._right;\n    let first = left;\n    let second = right;\n    posGetter = posGetter === undefined ? getAtomPos : posGetter;\n    if (left.bonds.length > right.bonds.length) {\n      first = right;\n      second = left;\n    }\n    let third = first;\n    let maxNeibs = 0;\n    const { bonds } = second;\n    for (let i = 0, n = bonds.length; i < n; ++i) {\n      let another = bonds[i]._left;\n      if (bonds[i]._left === second) {\n        another = bonds[i]._right;\n      }\n      if (another.bonds.length > maxNeibs && another !== first) {\n        third = another;\n        maxNeibs = another.bonds.length;\n      }\n    }\n    const secondPos = posGetter(second);\n    const firstV = posGetter(first).clone().sub(secondPos);\n    const secondV = posGetter(third).clone().sub(secondPos);\n    secondV.crossVectors(firstV, secondV);\n    if (secondV.lengthSq() < 0.0001) {\n      secondV.set(0, 1, 0);\n    }\n    firstV.normalize();\n    secondV.normalize();\n    firstV.crossVectors(secondV, firstV);\n    if (firstV.lengthSq() < 0.0001) {\n      firstV.set(0, 1, 0);\n    }\n    firstV.normalize();\n    return this._fixDir(secondPos, firstV, posGetter);\n  }\n\n  static BondType = cBondTypes;\n}\n\nBond.prototype.BondType = cBondTypes;\n\nexport default Bond;\n","import * as THREE from 'three';\nimport Atom from './Atom';\nimport Element from './Element';\n\nconst cNucleicControlNames = ['C3\\'', 'C3*', 'P', 'H5T', 'H3T'];\nconst cNucleicWing1Names = ['OP1', 'O1P'];\nconst cNucleicWing2Names = ['OP2', 'O2P'];\n\nconst cCylinderSource = ['C3\\'', 'C3*', 'C1', 'C1\\'', 'C1*', 'P'];\nconst cCylinderTarget = [{\n  types: ['A', 'DA', 'G', 'DG'],\n  atoms: ['N1'],\n}, {\n  types: ['C', 'DC'],\n  atoms: ['N3'],\n}, {\n  types: ['T', 'DT', 'U', 'DU'],\n  atoms: ['O4'],\n}];\n\n/**\n * Residue instance.\n *\n * @param {Chain} chain      - Chain this residue belongs to.\n * @param {ResidueType} type - Generic residue instance type.\n * @param {number} sequence  - Sequence ID.\n * @param {string} icode     - One character insertion code (usually space or A-Z).\n *\n * @exports Residue\n * @constructor\n */\nclass Residue {\n  constructor(chain, type, sequence, icode) {\n    this._chain = chain;\n    this._component = null;\n    this._type = type;\n    this._sequence = sequence;\n    this._icode = icode;\n    this._mask = 1 | 0;\n    this._index = -1;\n\n    this._atoms = [];\n    this._secondary = null;\n    this._firstAtom = null;\n    this._leadAtom = null;\n    this._wingAtom = null;\n    this._lastAtom = null;\n    this._controlPoint = null;\n    this._midPoint = null;\n    this._wingVector = null;\n    this._cylinders = null;\n    this._isValid = true;\n    this._het = false;\n    this._molecule = null;\n    this.temperature = null;\n    this.occupancy = null;\n  }\n\n  // Getters and setters\n  getChain() {\n    return this._chain;\n  }\n\n  getMolecule() {\n    return this._molecule;\n  }\n\n  getType() {\n    return this._type;\n  }\n\n  getSequence() {\n    return this._sequence;\n  }\n\n  getSecondary() {\n    return this._secondary;\n  }\n\n  getICode() {\n    return this._icode;\n  }\n\n  // Other methods\n\n  addAtom(name, type, xyz, role, het, serial, altLoc, occupancy, tempFactor, charge) {\n    const atom = new Atom(this, name, type, xyz, role, het, serial, altLoc, occupancy, tempFactor, charge);\n    const complex = this._chain.getComplex();\n    complex.addAtom(atom);\n    this._atoms.push(atom);\n    this._het = this._het || het;\n    return atom;\n  }\n\n  getAtomCount() {\n    return this._atoms.length;\n  }\n\n  forEachAtom(process) {\n    const atoms = this._atoms;\n    for (let i = 0, n = atoms.length; i < n; ++i) {\n      if (process(atoms[i])) {\n        break;\n      }\n    }\n  }\n\n  _findAtomByName(name) {\n    let res = null;\n    this.forEachAtom((atom) => {\n      if (atom.name === name) {\n        res = atom;\n        return true;\n      }\n      return false;\n    });\n    return res;\n  }\n\n  _findFirstAtomInList(names) {\n    let res = null;\n    for (let i = 0; i < names.length; ++i) {\n      res = this._findAtomByName(names[i]);\n      if (res !== null) {\n        return res;\n      }\n    }\n    return res;\n  }\n\n  collectMask() {\n    let mask = 0xffffffff;\n    const atoms = this._atoms;\n    for (let i = 0, n = atoms.length; i < n; ++i) {\n      mask &= atoms[i].mask;\n    }\n    this._mask = mask;\n  }\n\n  getCylinderTargetList() {\n    const type = this._type._name;\n    for (let i = 0, n = cCylinderTarget.length; i < n; ++i) {\n      for (let j = 0, m = cCylinderTarget[i].types.length; j < m; ++j) {\n        if (type === cCylinderTarget[i].types[j]) {\n          return cCylinderTarget[i].atoms;\n        }\n      }\n    }\n    return null;\n  }\n\n  _detectLeadWing(dst, next, getAtomPosition) {\n    const leadAtom = this._findFirstAtomInList(cNucleicControlNames);\n    let wingStart = this._findFirstAtomInList(cNucleicWing1Names);\n    let wingEnd = this._findFirstAtomInList(cNucleicWing2Names);\n\n    if (wingStart === null && next !== null) {\n      wingStart = next._findFirstAtomInList(cNucleicWing1Names);\n    }\n\n    if (wingEnd === null && next !== null) {\n      wingEnd = next._findFirstAtomInList(cNucleicWing2Names);\n    }\n\n    if (leadAtom === null || wingStart === null || wingEnd === null) {\n      return;\n    }\n\n    dst._leadAtom = leadAtom;\n    dst._controlPoint = getAtomPosition(leadAtom);\n    dst._wingVector = getAtomPosition(wingEnd).clone().sub(getAtomPosition(wingStart));\n    dst._isValid = true;\n\n    const cylSource = this._findFirstAtomInList(cCylinderSource);\n    const targetList = this.getCylinderTargetList();\n    const cylTarget = targetList !== null ? this._findFirstAtomInList(targetList) : null;\n    if (cylSource === null || cylTarget === null) {\n      return;\n    }\n    dst._cylinders = [getAtomPosition(cylSource), getAtomPosition(cylTarget)];\n  }\n\n  calcWing(prevLeadPos, currLeadPos, prevWingPos, prevWing) {\n    const vectorA = currLeadPos.clone().sub(prevLeadPos);\n    const vectorB = prevLeadPos.clone().sub(prevWingPos);\n    vectorB.crossVectors(vectorA, vectorB);\n    vectorB.crossVectors(vectorA, vectorB).normalize();\n    if (prevWing !== null && prevWing.length() > 0.0001) {\n      const needToNegate = vectorB.length() > 0.0001 && Math.abs(prevWing.angleTo(vectorB)) > Math.PI / 2;\n      if (needToNegate) {\n        vectorB.negate();\n      }\n    }\n    return vectorB;\n  }\n\n  _innerFinalize(prevRes, prev, nextRes, dst, chainAsNucleic, getAtomPosition) {\n    const bFirstInChain = prev === null;\n\n    const lp = getAtomPosition(this._leadAtom);\n    const currLeadPos = new THREE.Vector3(lp.x, lp.y, lp.z);\n    if (chainAsNucleic) {\n      this._detectLeadWing(dst, nextRes, getAtomPosition);\n      return;\n    }\n\n    if (bFirstInChain) { // for first one in chain\n      dst._midPoint = getAtomPosition(this._firstAtom).clone();\n    } else {\n      const prevLeadPos = prev._controlPoint; // lead point of previous monomer\n      dst._midPoint = prevLeadPos.clone().lerp(currLeadPos, 0.5);\n      dst._wingVector = this.calcWing(prevLeadPos, currLeadPos, getAtomPosition(prevRes._wingAtom), prev._wingVector);\n    }\n    dst._controlPoint = currLeadPos;\n  }\n\n  _finalize2(prev, next, asNucleic) {\n    // Should be called AFTER first finalize\n    this._innerFinalize(prev, prev, next, this, asNucleic, (atom) => atom.position);\n  }\n\n  isConnected(anotherResidue) {\n    if (this._chain !== anotherResidue._chain) {\n      return false;\n    }\n    if (this === anotherResidue) {\n      return true;\n    }\n    let res = false;\n    this.forEachAtom((atom) => {\n      const { bonds } = atom;\n      for (let i = 0, n = bonds.length; i < n; ++i) {\n        const bond = bonds[i];\n        if (bond._left.residue === anotherResidue || bond._right.residue === anotherResidue) {\n          res = true;\n          return true;\n        }\n      }\n      return false;\n    });\n    return res;\n  }\n\n  _finalize() {\n    const self = this;\n    [this._firstAtom] = this._atoms;\n    this._lastAtom = this._atoms[this._atoms.length - 1];\n\n    this._leadAtom = null;\n    this._wingAtom = null;\n\n    let tempCount = 0;\n    let temperature = 0; // average temperature\n    let occupCount = 0;\n    let occupancy = 0; // average occupancy\n    this.forEachAtom((a) => {\n      if (self._leadAtom === null) {\n        if (a.role === Element.Constants.Lead) {\n          self._leadAtom = a;\n        }\n      }\n      if (self._wingAtom === null) {\n        if (a.role === Element.Constants.Wing) {\n          self._wingAtom = a;\n        }\n      }\n      if (a.temperature) {\n        temperature += a.temperature;\n        tempCount++;\n      }\n      if (a.occupancy) {\n        occupancy += a.occupancy;\n        occupCount++;\n      }\n      return (self._leadAtom !== null && self._wingAtom !== null);\n    });\n\n    if (tempCount > 0) {\n      this.temperature = temperature / tempCount;\n    }\n    if (occupCount > 0) {\n      this.occupancy = occupancy / occupCount;\n    }\n\n    // Still try to make monomer look valid\n    if (this._leadAtom === null || this._wingAtom === null) {\n      this._isValid = false;\n    }\n    if (this._leadAtom === null) {\n      this._leadAtom = this._firstAtom;\n    }\n    if (this._wingAtom === null) {\n      this._wingAtom = this._lastAtom;\n    }\n  }\n}\n\nexport default Residue;\n","/**\n * Residue type.\n *\n * Predefined acid or created with HET, HETNAM, etc.\n *\n * @param {string} name            - Short name, either standard (ALA, MET, etc.) or non-standard one.\n * @param {string} fullName        - Full residue name.\n * @param {string} letterCode      - 1-letter symbol.\n *\n * @exports ResidueType\n * @constructor\n */\nclass ResidueType {\n  constructor(name, fullName, letterCode) {\n    this._name = name;\n    this._fullName = fullName;\n    this.letterCode = letterCode;\n    this.flags = 0x0000;\n  }\n\n  getName() {\n    return this._name;\n  }\n\n  // DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\n  static StandardTypes = {\n    /* eslint-disable no-magic-numbers */\n    ALA: new ResidueType('ALA', 'Alanine', 'A'),\n    ARG: new ResidueType('ARG', 'Arginine', 'R'),\n    ASN: new ResidueType('ASN', 'Asparagine', 'N'),\n    ASP: new ResidueType('ASP', 'Aspartic Acid', 'D'),\n    CYS: new ResidueType('CYS', 'Cysteine', 'C'),\n    GLN: new ResidueType('GLN', 'Glutamine', 'Q'),\n    GLU: new ResidueType('GLU', 'Glutamic Acid', 'E'),\n    GLY: new ResidueType('GLY', 'Glycine', 'G'),\n    HIS: new ResidueType('HIS', 'Histidine', 'H'),\n    ILE: new ResidueType('ILE', 'Isoleucine', 'I'),\n    LEU: new ResidueType('LEU', 'Leucine', 'L'),\n    LYS: new ResidueType('LYS', 'Lysine', 'K'),\n    MET: new ResidueType('MET', 'Methionine', 'M'),\n    PHE: new ResidueType('PHE', 'Phenylalanine', 'F'),\n    PRO: new ResidueType('PRO', 'Proline', 'P'),\n    PYL: new ResidueType('PYL', 'Pyrrolysine', 'O'),\n    SEC: new ResidueType('SEC', 'Selenocysteine', 'U'),\n    SER: new ResidueType('SER', 'Serine', 'S'),\n    THR: new ResidueType('THR', 'Threonine', 'T'),\n    TRP: new ResidueType('TRP', 'Tryptophan', 'W'),\n    TYR: new ResidueType('TYR', 'Tyrosine', 'Y'),\n    VAL: new ResidueType('VAL', 'Valine', 'V'),\n    A: new ResidueType('A', 'Adenine', 'A'),\n    C: new ResidueType('C', 'Cytosine', 'C'),\n    G: new ResidueType('G', 'Guanine', 'G'),\n    I: new ResidueType('I', 'Inosine', 'I'),\n    T: new ResidueType('T', 'Thymine', 'T'),\n    U: new ResidueType('U', 'Uracil', 'U'),\n    DA: new ResidueType('DA', 'Adenine', 'A'),\n    DC: new ResidueType('DC', 'Cytosine', 'C'),\n    DG: new ResidueType('DG', 'Guanine', 'G'),\n    DI: new ResidueType('DI', 'Inosine', 'I'),\n    DT: new ResidueType('DT', 'Thymine', 'T'),\n    DU: new ResidueType('DU', 'Uracil', 'U'),\n    '+A': new ResidueType('+A', 'Adenine', 'A'),\n    '+C': new ResidueType('+C', 'Cytosine', 'C'),\n    '+G': new ResidueType('+G', 'Guanine', 'G'),\n    '+I': new ResidueType('+I', 'Inosine', 'I'),\n    '+T': new ResidueType('+T', 'Thymine', 'T'),\n    '+U': new ResidueType('+U', 'Uracil', 'U'),\n    WAT: new ResidueType('WAT', 'Water', ''),\n    H2O: new ResidueType('H2O', 'Water', ''),\n    HOH: new ResidueType('HOH', 'Water', ''),\n    DOD: new ResidueType('DOD', 'Water', ''),\n    UNK: new ResidueType('UNK', 'Unknown', ''),\n    UNL: new ResidueType('UNL', 'Unknown Ligand', ''),\n    /* eslint-enable no-magic-numbers */\n  };\n\n  /**\n   * Enumeration of residue flag values.\n   *\n   * @enum {number}\n   * @readonly\n   */\n  static Flags = {\n    // Amino acids\n    /** Amino acid residue */\n    PROTEIN: 0x0001,\n    /** Basic amino acid residue */\n    BASIC: 0x0002,\n    /** Acidic amino acid residue */\n    ACIDIC: 0x0004,\n    /** Polar uncharged side chain amino acid residue */\n    POLAR: 0x0008,\n    /** Non-polar hydrophobic side chain amino acid residue */\n    NONPOLAR: 0x0010,\n    /** Aromatic amino acid residue */\n    AROMATIC: 0x0020,\n\n    // Nucleic acids\n\n    /** Nucleic residue */\n    NUCLEIC: 0x0100,\n    /** Purine nucleic residue */\n    PURINE: 0x0200,\n    /** Pyrimidine nucleic residue */\n    PYRIMIDINE: 0x0400,\n    /** DNA */\n    DNA: 0x0800,\n    /** RNA */\n    RNA: 0x1000,\n\n    /** Water */\n    WATER: 0x10000,\n  };\n}\n\n// Flag combinations\nfunction _addFlag(flag, list) {\n  for (let i = 0, n = list.length; i < n; ++i) {\n    const res = ResidueType.StandardTypes[list[i]];\n    if (res) {\n      res.flags |= flag;\n    }\n  }\n}\n\nconst { Flags } = ResidueType;\n_addFlag(Flags.WATER, ['WAT', 'H2O', 'HOH', 'DOD']);\n\n_addFlag(Flags.PROTEIN, [\n  'ALA', 'ARG', 'ASN', 'ASP', 'CYS', 'GLY', 'GLU', 'GLN', 'HIS', 'ILE',\n  'LEU', 'LYS', 'MET', 'PHE', 'PRO', 'PYL', 'SEC', 'SER', 'THR', 'TRP',\n  'TYR', 'VAL',\n]);\n_addFlag(Flags.BASIC, ['ARG', 'HIS', 'LYS']);\n_addFlag(Flags.ACIDIC, ['ASP', 'GLU']);\n_addFlag(Flags.POLAR, ['ASN', 'CYS', 'GLN', 'SER', 'THR', 'TYR']);\n_addFlag(Flags.NONPOLAR, ['ALA', 'ILE', 'LEU', 'MET', 'PHE', 'PRO', 'TRP', 'VAL', 'GLY']);\n_addFlag(Flags.AROMATIC, ['PHE', 'TRP', 'TYR']);\n\n_addFlag(Flags.NUCLEIC, [\n  'A', 'G', 'I', 'DA', 'DG', 'DI', '+A', '+G', '+I',\n  'C', 'T', 'U', 'DC', 'DT', 'DU', '+C', '+T', '+U',\n]);\n_addFlag(Flags.PURINE, ['A', 'G', 'I', 'DA', 'DG', 'DI', '+A', '+G', '+I']);\n_addFlag(Flags.PYRIMIDINE, ['C', 'T', 'U', 'DC', 'DT', 'DU', '+C', '+T', '+U']);\n_addFlag(Flags.DNA, ['DA', 'DG', 'DI', 'DC', 'DT', 'DU']);\n_addFlag(Flags.RNA, ['A', 'G', 'I', 'C', 'T', 'U']);\n// Table of kdHydrophobicity\nconst hydro = {\n  ILE: 4.5,\n  VAL: 4.2,\n  LEU: 3.8,\n  PHE: 2.8,\n  CYS: 2.5,\n  MET: 1.9,\n  ALA: 1.8,\n  GLY: -0.4,\n  THR: -0.7,\n  SER: -0.8,\n  TRP: -0.9,\n  TYR: -1.3,\n  PRO: -1.6,\n  HIS: -3.2,\n  GLU: -3.5,\n  GLN: -3.5,\n  ASP: -3.5,\n  ASN: -3.5,\n  LYS: -3.9,\n  ARG: -4.5,\n};\n\nfunction _addParam(param, list) {\n  const keys = Object.keys(list);\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const key = keys[i];\n    const value = list[key];\n    ResidueType.StandardTypes[key][param] = value;\n  }\n}\n\n_addParam('hydrophobicity', hydro);\n\nexport default ResidueType;\n","import * as THREE from 'three';\nimport Residue from './Residue';\nimport ResidueType from './ResidueType';\n\n/**\n * Residues in chain are either amino acid either nucleic acid (and water)\n * There might be some modified/mutated residues, which type could not be determined by their name (nucleic or amino); In this\n * case firstly program definites the chain type (by well-known residues) and then definites modified/mutated residues\n */\nconst ChainType = {\n  UNKNOWN: 0,\n  PROTEIN: 1,\n  NUCLEIC: 2,\n};\n\n/**\n * Residue chain.\n *\n * @param {Complex} complex - Molecular complex this chain belongs to.\n * @param {string} name - One character identifier (usually space, A-Z, 0-9, or a-z).\n *\n * @exports Chain\n * @constructor\n */\nclass Chain {\n  constructor(complex, name) {\n    this._complex = complex;\n    this._name = name;\n    this._mask = 1 | 0;\n    this._index = -1;\n    this._residues = [];\n\n    this.minSequence = Number.POSITIVE_INFINITY;\n    this.maxSequence = Number.NEGATIVE_INFINITY;\n  }\n\n  getComplex() {\n    return this._complex;\n  }\n\n  getName() {\n    return this._name;\n  }\n\n  getResidues() {\n    return this._residues;\n  }\n\n  _determineType() {\n    const residues = this._residues;\n\n    const { PROTEIN, NUCLEIC } = ResidueType.Flags;\n\n    this.type = ChainType.UNKNOWN;\n\n    for (let i = 0, n = residues.length; i < n; ++i) {\n      const { flags } = residues[i]._type;\n\n      if ((flags & NUCLEIC) !== 0) {\n        this.type = ChainType.NUCLEIC;\n        break;\n      } else if ((flags & PROTEIN) !== 0) {\n        this.type = ChainType.PROTEIN;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Finds thre residue with specified sequence number and inserion code\n   * @param {Number} seqNum sequence number\n   * @param {string} iCode insertion code\n   * @returns {*} Residue or null if not found\n   */\n  findResidue(seqNum, iCode) {\n    const residues = this._residues;\n\n    for (let i = 0, n = residues.length; i < n; ++i) {\n      const res = residues[i];\n      if (res._sequence === seqNum && res._icode === iCode) {\n        return [res, i];\n      }\n    }\n\n    return null;\n  }\n\n  _finalize() {\n    this._determineType();\n\n    const residues = this._residues;\n\n    let prev = null;\n    for (let i = 0, n = residues.length; i < n; ++i) {\n      const next = (i + 1 < n) ? residues[i + 1] : null;\n      const curr = residues[i];\n      // TODO: skip invalid residues\n      if (1 /* curr._isValid */) { // eslint-disable-line no-constant-condition\n        curr._finalize2(prev, next, this.type === ChainType.NUCLEIC);\n        prev = curr;\n      }\n    }\n\n    // fix very first wing\n    if (residues.length > 1 && residues[1]._wingVector) {\n      const p = residues[1]._wingVector;\n      residues[0]._wingVector = new THREE.Vector3(p.x, p.y, p.z);\n    } else if (residues.length > 0) {\n      residues[0]._wingVector = new THREE.Vector3(1, 0, 0);\n    }\n  }\n\n  updateToFrame(frameData) {\n    const residues = this._residues;\n    let prev = null;\n    let prevData = null;\n    const frameRes = frameData._residues;\n    const n = residues.length;\n    function getAtomPos(atom) {\n      return frameData.getAtomPos(atom.index);\n    }\n\n    for (let i = 0; i < n; ++i) {\n      const curr = residues[i];\n      const currData = frameRes[curr._index];\n      const nextRes = (i + 1 < n) ? residues[i + 1] : null;\n      curr._innerFinalize(prev, prevData, nextRes, currData, this.type === ChainType.NUCLEIC, getAtomPos);\n      prev = curr;\n      prevData = currData;\n    }\n\n    frameRes[residues[0]._index]._wingVector = n > 1\n      ? frameRes[residues[1]._index]._wingVector\n      : new THREE.Vector3(1, 0, 0);\n  }\n\n  /**\n   * Create a new residue.\n   *\n   * @param {string} name - Residue name.\n   * @param {number} sequence - Residue sequence number.\n   * @param {string} iCode - Insertion code.\n   * @returns {Residue} - Newly created residue instance.\n   */\n  addResidue(name, sequence, iCode) {\n    let type = this._complex.getResidueType(name);\n    if (type === null) {\n      type = this._complex.addResidueType(name);\n    }\n    const residue = new Residue(this, type, sequence, iCode);\n    this._complex.addResidue(residue);\n    this._residues.push(residue);\n\n    if (type.flags & (ResidueType.Flags.NUCLEIC | ResidueType.Flags.PROTEIN)) {\n      if (this.maxSequence < sequence) {\n        this.maxSequence = sequence;\n      }\n      if (this.minSequence > sequence) {\n        this.minSequence = sequence;\n      }\n    }\n\n    return residue;\n  }\n\n  getResidueCount() {\n    return this._residues.length;\n  }\n\n  forEachResidue(process) {\n    const residues = this._residues;\n    for (let i = 0, n = residues.length; i < n; ++i) {\n      process(residues[i]);\n    }\n  }\n\n  collectMask() {\n    let mask = 0xffffffff;\n    const residues = this._residues;\n    for (let i = 0, n = residues.length; i < n; ++i) {\n      mask &= residues[i]._mask;\n    }\n    this._mask = mask;\n  }\n}\n\nexport default Chain;\n","import Residue from './Residue';\n\n/** An element of protein secondary structure. */\nclass StructuralElement {\n  /**\n   * Create a secondary structural element of the specified type.\n   *\n   * @param {StructuralElement.Type} type Secondary structure type.\n   * @param {Residue} init Initial residue.\n   * @param {Residue} term Terminal residue.\n   */\n  constructor(type, init, term) {\n    /**\n     * Secondary structure type.\n     * @type {StructuralElement.Type}\n     */\n    this.type = type;\n    /**\n     * Generic secondary structure type.\n     * @type {StructuralElement.Generic}\n     */\n    this.generic = StructuralElement.genericByType[this.type] || 'loop';\n    /**\n     * Initial residue.\n     * @type Residue\n     */\n    this.init = init;\n    /**\n     * Terminal residue.\n     * @type Residue\n     */\n    this.term = term;\n  }\n\n  /**\n   * An internal method for making a final pass over the complex to set all required references.\n   *\n   * **NOTE:** I'm sorry. It's a legacy code waiting for refactoring.\n   * Just copying it as-is right now and hoping for the best.\n   *\n   * @param {object} serialAtomMap A dictionary of atoms\n   * @param {object} residueHash A dictionary of hashed residues to check.\n   * @param {Complex} complex The molecular complex this element belongs to.\n   */\n  _finalize(serialAtomMap, residueHash, complex) {\n    if (this.init instanceof Residue && this.term instanceof Residue) {\n      return;\n    }\n\n    // Link all intermediate residues to this structural element\n    const start = complex.splitUnifiedSerial(this.init);\n    const end = complex.splitUnifiedSerial(this.term);\n    for (let chainId = start.chain; chainId <= end.chain; chainId++) {\n      for (let serialId = start.serial; serialId <= end.serial; serialId++) {\n        for (let { iCode } = start; iCode <= end.iCode; iCode++) {\n          const hashCode = complex.getUnifiedSerial(chainId, serialId, iCode);\n          if (residueHash[hashCode]) {\n            residueHash[hashCode]._secondary = this;\n          }\n        }\n      }\n    }\n\n    // Replace unfined serials by objects\n    this.init = residueHash[this.init];\n    this.term = residueHash[this.term];\n  }\n}\n\n/**\n * Specific type of a secondary structural element.\n * @enum {string}\n * @see StructuralElement.Generic\n */\nStructuralElement.Type = {\n  /** A strand of a [beta-sheet](https://en.wikipedia.org/wiki/Beta_sheet). */\n  STRAND: 'E',\n  /** An isolated beta-bridge (too small for a beta-sheet). */\n  BRIDGE: 'B',\n\n  /** A [3/10 helix](https://en.wikipedia.org/wiki/310_helix) (hydrogen bonding is 3 residues apart). */\n  HELIX_310: 'G',\n  /** An [alpha-helix](https://en.wikipedia.org/wiki/Alpha_helix) (hydrogen bonding is 4 residues apart). */\n  HELIX_ALPHA: 'H',\n  /** A [pi-helix](https://en.wikipedia.org/wiki/Pi_helix) (hydrogen bonding is 5 residues apart). */\n  HELIX_PI: 'I',\n  /** A generic helix of unspecified bonding distance. */\n  HELIX: 'X',\n\n  /** An isolated 3/10-like helical turn. */\n  TURN_310: '3',\n  /** An isolated alpha-like helical turn. */\n  TURN_ALPHA: '4',\n  /** An isolated pi-like helical turn. */\n  TURN_PI: '5',\n  /** An isolated helical [turn](https://en.wikipedia.org/wiki/Turn_(biochemistry)) of unspecified bonding distance. */\n  TURN: 'T',\n\n  /** A bend (a region of high curvature). */\n  BEND: 'S',\n  /** Just a protein section with no particular conformation. */\n  COIL: 'C',\n};\n\n/**\n * Generic type of a secondary structural element.\n * @enum {string}\n * @see StructuralElement.Type\n */\nStructuralElement.Generic = {\n  /** A strand of a sheet. */\n  STRAND: 'strand',\n  /** A helix. */\n  HELIX: 'helix',\n  /** Just a protein section with no particular conformation. */\n  LOOP: 'loop',\n};\n\nconst StructuralElementType = StructuralElement.Type;\nconst StructuralElementGeneric = StructuralElement.Generic;\n\n/**\n * A mapping from specific types to generic ones.\n * @type {Object<StructuralElement.Type, StructuralElement.Generic>}\n */\nStructuralElement.genericByType = {\n  [StructuralElementType.STRAND]: StructuralElementGeneric.STRAND,\n  [StructuralElementType.HELIX_310]: StructuralElementGeneric.HELIX,\n  [StructuralElementType.HELIX_ALPHA]: StructuralElementGeneric.HELIX,\n  [StructuralElementType.HELIX_PI]: StructuralElementGeneric.HELIX,\n  [StructuralElementType.HELIX]: StructuralElementGeneric.HELIX,\n};\n\nexport default StructuralElement;\n","import StructuralElement from './StructuralElement';\n\nconst StructuralElementType = StructuralElement.Type;\n\nexport const typeByPDBHelixClass = {\n  1: StructuralElementType.HELIX_ALPHA,\n  3: StructuralElementType.HELIX_PI,\n  5: StructuralElementType.HELIX_310,\n};\n\n/**\n * Helical secondary structure of a protein.\n * @extends StructuralElement\n */\nclass Helix extends StructuralElement {\n  /**\n   * Create a helix.\n   *\n   * @param {number} helixClass A helix class according to the\n   *   [PDB Format](http://www.wwpdb.org/documentation/file-format-content/format33/sect5.html#HELIX).\n   * @param {Residue} init Initial residue.\n   * @param {Residue} term Terminal residue.\n   * @param {number} serial Serial number of the helix (see PDB Format).\n   * @param {string} name Helix identifier (see PDB Format).\n   * @param {string} comment Comment about this helix (see PDB Format).\n   * @param {number} length Length of this helix, in residues (see PDB Format).\n   */\n  constructor(helixClass, init, term, serial, name, comment, length) {\n    super(typeByPDBHelixClass[helixClass] || StructuralElement.Type.HELIX, init, term);\n\n    /**\n     * Serial number of the helix (see PDB Format).\n     * @type {number}\n     */\n    this.serial = serial;\n    /**\n     * Helix identifier (see PDB Format).\n     * @type {string}\n     */\n    this.name = name;\n    /**\n     * Comment about this helix (see PDB Format).\n     * @type {string}\n     */\n    this.comment = comment;\n    /**\n     * Length of this helix, in residues (see PDB Format).\n     * @type {number}\n     */\n    this.length = length;\n  }\n}\n\nexport default Helix;\n","import StructuralElement from './StructuralElement';\n\n/**\n * A single strand of a sheet in a protein secondary structure.\n * @extends StructuralElement\n */\nclass Strand extends StructuralElement {\n  /**\n   * Create a strand.\n   *\n   * @param {Sheet} sheet Parent sheet this strand belongs to.\n   * @param {Residue} init Initial residue.\n   * @param {Residue} term Terminal residue.\n   * @param {number} sense Sense of strand with respect to previous strand in the sheet.\n   *   - 0 if the first strand,\n   *   - 1 if parallel, and\n   *   - -1 if anti-parallel.\n   * @param {Atom} atomCur Atom in current strand (see PDB Format).\n   * @param {Atom} atomPrev Atom in previous strand (see PDB Format).\n   */\n  constructor(sheet, init, term, sense, atomCur, atomPrev) {\n    super(StructuralElement.Type.STRAND, init, term);\n\n    /**\n     * Parent sheet this strand belongs to.\n     * @type {Sheet}\n     */\n    this.sheet = sheet;\n    /**\n     * Sense of strand with respect to previous strand in the sheet.\n     * - 0 if the first strand,\n     * - 1 if parallel, and\n     * - -1 if anti-parallel.\n     * @type {number}\n     */\n    this.sense = sense;\n    /**\n     * Atom in current strand (see PDB Format).\n     * @type {Atom}\n     */\n    this.atomCur = atomCur;\n    /**\n     * Atom in previous strand (see PDB Format).\n     * @type {Atom}\n     */\n    this.atomPrev = atomPrev;\n  }\n\n  /**\n   * An internal method for making a final pass over the complex to set all required references.\n   *\n   * **NOTE:** I'm sorry. It's a legacy code waiting for refactoring.\n   * Just copying it as-is right now and hoping for the best.\n   *\n   * @param {object} serialAtomMap A dictionary of atoms\n   * @param {object} residueHash A dictionary of hashed residues to check.\n   * @param {Complex} complex The molecular complex this element belongs to.\n   *\n   * @override\n   */\n  _finalize(serialAtomMap, residueHash, complex) {\n    super._finalize(serialAtomMap, residueHash, complex);\n\n    let as = this.atomCur;\n    if (as !== null && !Number.isNaN(as)) {\n      this.atomCur = serialAtomMap[as];\n    }\n    as = this.atomPrev;\n    if (as !== null && !Number.isNaN(as)) {\n      this.atomPrev = serialAtomMap[as];\n    }\n  }\n}\n\nexport default Strand;\n","import Strand from './Strand';\n\n/**\n * Sheet secondary structure of a protein.\n *\n * @param {string} name -\n * @param {number} width -\n *\n * @exports Sheet\n * @constructor\n */\nclass Sheet {\n  constructor(name, width) {\n    this._name = name;\n    this._width = width;\n\n    this._strands = [];\n  }\n\n  // Getters and setters\n  getName() {\n    return this._name;\n  }\n\n  getWidth() {\n    return this._width;\n  }\n\n  addStrand(strand) {\n    this._strands.push(strand);\n    this._width = this._strands.length;\n  }\n\n  addEmptyStrand() {\n    this._strands.push(new Strand(null, null, null, null, null, null));\n  }\n\n  _finalize(serialAtomMap, residueHash, complex) {\n    const s = this._strands;\n    for (let i = 0, n = s.length; i < n; ++i) {\n      s[i]._finalize(serialAtomMap, residueHash, complex);\n    }\n    if (!this._width) {\n      this._width = s.length;\n    }\n    if (s.length !== this._width) {\n      throw new Error(`Sheet ${this._name} is inconsistent.`);\n    }\n  }\n}\n\nexport default Sheet;\n","import * as THREE from 'three';\n\n/**\n * Atom measurements.\n *\n * @param {string} id              - SGroup id\n * @param {string} name            - Name of the group\n * @param {THREE.Vector3} position - Registered coordinates\n * @param {array} atoms            - Atoms group consists of\n * @param {object} saveNode        - XML node from file for saving\n *\n * @exports SGroup\n * @constructor\n */\nclass SGroup {\n  constructor(id, name, position, atoms, saveNode) {\n    this._id = id;\n    this._name = name;\n    this._position = position || new THREE.Vector3();\n    this._atoms = atoms || [];\n    this._charge = 0; // default group charge\n    this._repeat = 1; // how many times group repeated: always > 0\n    this._center = null;\n    this.xmlNodeRef = saveNode || null;\n  }\n\n  /**\n   * Get atom full name.\n   * @returns {string} Atom full name.\n   */\n  getName() {\n    return this._name;\n  }\n\n  getPosition() {\n    return this._position;\n  }\n\n  getCentralPoint() {\n    return this._center;\n  }\n\n  _rebuildSGroupOnAtomChange() {\n    const nLimon = 100000000;\n    if (this._center === null) {\n      return; // nothing to do if we are not relative\n    }\n\n    const bLow = new THREE.Vector3(nLimon, nLimon, nLimon);\n    const bHight = new THREE.Vector3(-nLimon, -nLimon, -nLimon);\n    for (let j = 0, n = this._atoms.length; j < n; j++) {\n      const aPos = this._atoms[j].position;\n      bLow.set(Math.min(bLow.x, aPos.x), Math.min(bLow.y, aPos.y), Math.min(bLow.z, aPos.z));\n      bHight.set(Math.max(bHight.x, aPos.x), Math.max(bHight.y, aPos.y), Math.max(bHight.z, aPos.z));\n    }\n    this._center.addVectors(bLow, bHight);\n    this._center.multiplyScalar(0.5);\n  }\n}\n\nexport default SGroup;\n","import utils from '../../utils';\n\n//----------------------------------------------------------------------------\nclass Range {\n  constructor(min, max) {\n    this.min = min;\n    this.max = typeof max === 'undefined' ? min : max;\n  }\n\n  includes(value) {\n    return this.min <= value && value <= this.max;\n  }\n\n  toString() {\n    const { min, max } = this;\n    return min === max ? String(min) : [min, max].join(':');\n  }\n\n  toJSON() {\n    return [this.min, this.max];\n  }\n}\n\n// ////////////////////////////////////////////////////////////////////////////\n\nclass List {\n  constructor(arg) {\n    if (arg instanceof this.constructor) {\n      return arg;\n    }\n    if (arg instanceof Array) {\n      this._values = arg.slice(0);\n    } else if (arg) {\n      this._values = [arg];\n    } else {\n      this._values = [];\n    }\n  }\n\n  append(value) {\n    const values = this._values;\n    values[values.length] = value;\n    return this;\n  }\n\n  remove(value) {\n    const values = this._values;\n    const index = values.indexOf(value);\n    if (index >= 0) {\n      values.splice(index, 1);\n    }\n    return this;\n  }\n\n  toString() {\n    return this._values.join(',');\n  }\n\n  toJSON() {\n    const values = this._values;\n    const result = [];\n    for (let i = 0, n = values.length; i < n; ++i) {\n      const value = values[i];\n      result[i] = value.toJSON ? value.toJSON() : value;\n    }\n    return result;\n  }\n}\n\n//----------------------------------------------------------------------------\n\nclass RangeList extends List {\n  includes(value) {\n    const list = this._values;\n    for (let i = 0, n = list.length; i < n; ++i) {\n      if (list[i].includes(value)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n//----------------------------------------------------------------------------\n\nconst valuesArray = [];\n\nclass ValueList extends List {\n  constructor(arg, upperOnly) {\n    const list = super(arg);\n    if (upperOnly) {\n      this.upperOnly = true;\n      const values = list._values;\n      for (let i = 0, n = values.length; i < n; ++i) {\n        const value = values[i];\n        if (typeof value === 'string') {\n          values[i] = value.toUpperCase();\n        }\n      }\n    } else {\n      this.upperOnly = false;\n    }\n    return list;\n  }\n\n  includes(value) {\n    // we do not convert to upper case here for perfomance reasons\n    // if list is upper case only, value must be converted before it is sent up to  here\n    return this._values.indexOf(value) !== -1;\n  }\n\n  toString() {\n    // Quote values that are not correct identifiers\n    const values = this._values;\n    valuesArray.length = 0;\n    for (let i = 0, n = values.length; i < n; ++i) {\n      valuesArray[i] = utils.correctSelectorIdentifier(String(values[i]));\n    }\n    return valuesArray.join(',');\n  }\n\n  _validate(value) {\n    return (this.upperOnly && typeof value === 'string') ? value.toUpperCase() : value;\n  }\n\n  append(value) {\n    super.append(this._validate(value));\n    return this;\n  }\n\n  remove(value) {\n    super.remove(this._validate(value));\n    return this;\n  }\n}\n\nexport {\n  Range,\n  List,\n  RangeList,\n  ValueList,\n};\n","import { RangeList, ValueList } from './selectArgs';\n\n/** Base class for atom selectors. */\nclass Selector {\n  toString() {\n    return this.keyword;\n  }\n\n  toJSON() {\n    return [this.name];\n  }\n}\n\nSelector.prototype.name = 'Error';\nSelector.prototype.keyword = 'error';\n\n/** Base class for list-based atom selectors. */\nclass ListSelector extends Selector {\n  constructor(list) {\n    super();\n    this.list = list;\n  }\n\n  toString() {\n    return `${this.keyword} ${this.list}`;\n  }\n\n  toJSON() {\n    return [this.name, this.list.toJSON()];\n  }\n}\n\nclass RangeListSelector extends ListSelector {\n  constructor(arg) {\n    super(new RangeList(arg));\n  }\n}\n\nclass ValueListSelector extends ListSelector {\n  constructor(arg, caseSensitive) {\n    super(new ValueList(arg, !caseSensitive));\n  }\n}\n\nclass NoneSelector extends Selector {\n  includesAtom(_atom) {\n    return false;\n  }\n}\n\nNoneSelector.prototype.name = 'None';\nNoneSelector.prototype.keyword = 'none';\n\nclass AllSelector extends Selector {\n  includesAtom(_atom) {\n    return true;\n  }\n}\n\nAllSelector.prototype.name = 'All';\nAllSelector.prototype.keyword = 'all';\n\nexport {\n  Selector,\n  ListSelector,\n  RangeListSelector,\n  ValueListSelector,\n  NoneSelector,\n  AllSelector,\n};\n","import { Selector, NoneSelector } from './selectorsBase';\n\n//----------------------------------------------------------------------------\n// Operators\n//----------------------------------------------------------------------------\nconst none = new NoneSelector();\n\nclass PrefixOperator extends Selector {\n  constructor(rhs) {\n    super();\n    this.rhs = rhs || none;\n  }\n\n  toString() {\n    const rhs = this.rhs.priority && this.rhs.priority > this.priority ? `(${this.rhs})` : this.rhs;\n    return `${this.keyword} ${rhs}`;\n  }\n\n  toJSON() {\n    return [this.name, this.rhs.toJSON()];\n  }\n}\n\nPrefixOperator.prototype.priority = 1;\n\nclass InfixOperator extends Selector {\n  constructor(lhs, rhs) {\n    super();\n    this.lhs = lhs || none;\n    this.rhs = rhs || none;\n  }\n\n  toString() {\n    const lhs = this.lhs.priority && this.lhs.priority > this.priority ? `(${this.lhs})` : this.lhs;\n    const rhs = this.rhs.priority && this.rhs.priority > this.priority ? `(${this.rhs})` : this.rhs;\n    return `${lhs} ${this.keyword} ${rhs}`;\n  }\n\n  toJSON() {\n    return [this.name, this.lhs.toJSON(), this.rhs.toJSON()];\n  }\n}\n\nInfixOperator.prototype.priority = 1000;\n\nexport { PrefixOperator, InfixOperator };\n","import Atom from './Atom';\nimport ResidueType from './ResidueType';\nimport { parser } from '../utils/SelectionParser';\nimport { Range, RangeList, ValueList } from './selectors/selectArgs';\nimport { PrefixOperator, InfixOperator } from './selectors/selectOps';\nimport {\n  Selector,\n  RangeListSelector,\n  ValueListSelector,\n  NoneSelector,\n  AllSelector,\n} from './selectors/selectorsBase';\n\nconst keywords = {};\n\n//----------------------------------------------------------------------------\n// Named selectors\n//----------------------------------------------------------------------------\n\nfunction defineSelector(name, SelectorClass) {\n  const keyword = name.toLowerCase();\n  SelectorClass.prototype.keyword = keyword;\n  SelectorClass.prototype.name = name;\n\n  const factory = ((...args) => new SelectorClass(...args));\n  factory.SelectorClass = SelectorClass;\n  keywords[keyword] = factory;\n\n  return SelectorClass;\n}\n\ndefineSelector('Serial', class SerialSelector extends RangeListSelector {\n  includesAtom(atom) {\n    return this.list.includes(atom.serial);\n  }\n});\n\ndefineSelector('Name', class NameSelector extends ValueListSelector {\n  includesAtom(atom) {\n    return this.list.includes(atom.name);\n  }\n});\n\ndefineSelector('AltLoc', class AltLocSelector extends ValueListSelector {\n  includesAtom(atom) {\n    return this.list.includes(String.fromCharCode(atom.location));\n  }\n});\n\ndefineSelector('Elem', class ElemSelector extends ValueListSelector {\n  includesAtom(atom) {\n    return this.list.includes(atom.element.name);\n  }\n});\n\ndefineSelector('Residue', class ResidueSelector extends ValueListSelector {\n  includesAtom(atom) {\n    return this.list.includes(atom.residue._type._name);\n  }\n});\n\ndefineSelector('Sequence', class SequenceSelector extends RangeListSelector {\n  includesAtom(atom) {\n    return this.list.includes(atom.residue._sequence);\n  }\n});\n\ndefineSelector('ICode', class ICodeSelector extends ValueListSelector {\n  constructor(arg) {\n    super(arg, true);\n  }\n\n  includesAtom(atom) {\n    return this.list.includes(atom.residue._icode);\n  }\n});\n\ndefineSelector('ResIdx', class ResIdxSelector extends RangeListSelector {\n  includesAtom(atom) {\n    return this.list.includes(atom.residue._index);\n  }\n});\n\ndefineSelector('Chain', class ChainSelector extends ValueListSelector {\n  constructor(arg) {\n    super(arg, true);\n  }\n\n  includesAtom(atom) {\n    return this.list.includes(atom.residue._chain._name);\n  }\n});\n\ndefineSelector('Hetatm', class HetatmSelector extends Selector {\n  includesAtom(atom) {\n    return atom.het;\n  }\n});\n\ndefineSelector('PolarH', class PolarHSelector extends Selector {\n  includesAtom(atom) {\n    return (atom.flags & Atom.Flags.NONPOLARH) === Atom.Flags.HYDROGEN;\n  }\n});\n\ndefineSelector('NonPolarH', class NonPolarHSelector extends Selector {\n  includesAtom(atom) {\n    return (atom.flags & Atom.Flags.NONPOLARH) === Atom.Flags.NONPOLARH;\n  }\n});\n\ndefineSelector('All', AllSelector);\n\ndefineSelector('None', NoneSelector);\n\nconst NULL_SELECTOR = keywords.none();\n\n//----------------------------------------------------------------------------\n// Named operators\n//----------------------------------------------------------------------------\n\nfunction defineOperator(name, priority, OperatorClass) {\n  OperatorClass.prototype.priority = priority;\n  return defineSelector(name, OperatorClass);\n}\ndefineOperator('Not', 1, class NotOperator extends PrefixOperator {\n  includesAtom(atom) {\n    return !this.rhs.includesAtom(atom);\n  }\n});\n\ndefineOperator('And', 2, class AndOperator extends InfixOperator {\n  includesAtom(atom) {\n    return this.lhs.includesAtom(atom) && this.rhs.includesAtom(atom);\n  }\n});\n\ndefineOperator('Or', 3, class OrOperator extends InfixOperator {\n  includesAtom(atom) {\n    return this.lhs.includesAtom(atom) || this.rhs.includesAtom(atom);\n  }\n});\n\n//----------------------------------------------------------------------------\n// Flag selectors\n//----------------------------------------------------------------------------\n\nfunction byResidueTypeFlag(flag, name) {\n  return defineSelector(name, class extends Selector {\n    includesAtom(atom) {\n      return (atom.residue._type.flags & flag) !== 0;\n    }\n  });\n}\n\nbyResidueTypeFlag(ResidueType.Flags.PROTEIN, 'Protein');\nbyResidueTypeFlag(ResidueType.Flags.BASIC, 'Basic');\nbyResidueTypeFlag(ResidueType.Flags.ACIDIC, 'Acidic');\nbyResidueTypeFlag(ResidueType.Flags.BASIC | ResidueType.Flags.ACIDIC, 'Charged');\nbyResidueTypeFlag(ResidueType.Flags.POLAR, 'Polar');\nbyResidueTypeFlag(ResidueType.Flags.NONPOLAR, 'NonPolar');\nbyResidueTypeFlag(ResidueType.Flags.AROMATIC, 'Aromatic');\nbyResidueTypeFlag(ResidueType.Flags.NUCLEIC, 'Nucleic');\nbyResidueTypeFlag(ResidueType.Flags.PURINE, 'Purine');\nbyResidueTypeFlag(ResidueType.Flags.PYRIMIDINE, 'Pyrimidine');\nbyResidueTypeFlag(ResidueType.Flags.WATER, 'Water');\n\n//----------------------------------------------------------------------------\nconst selectors = Object.create(keywords);\n\nselectors.Selector = Selector;\nselectors.RangeListSelector = RangeListSelector;\nselectors.ValueListSelector = ValueListSelector;\nselectors.Range = Range;\nselectors.RangeList = RangeList;\nselectors.ValueList = ValueList;\nselectors.PrefixOperator = PrefixOperator;\nselectors.InfixOperator = InfixOperator;\nselectors.Context = Object.create({});\n\nselectors.GetSelector = function (key) {\n  if (!selectors.Context.hasOwnProperty(key)) {\n    const exc = { message: `selector ${key} is not registered` };\n    throw exc;\n  }\n  return selectors.Context[key] || NULL_SELECTOR;\n};\n\nselectors.ClearContext = function () {\n  Object.keys(selectors.Context).forEach((k) => { delete selectors.Context[k]; });\n};\n\nselectors.keyword = function (key) {\n  return keywords[key.toLowerCase()] || keywords.none;\n};\n\nselectors.parse = function (str) {\n  const res = {};\n  try {\n    res.selector = parser.parse(str);\n  } catch (e) {\n    res.selector = NULL_SELECTOR;\n    res.error = e.message;\n  }\n  return res;\n};\n\nparser.yy = selectors;\nparser.yy.parseError = parser.parseError; // workaround for incorrect JISON parser generator for AMD module\n\nexport default selectors;\n","import * as THREE from 'three';\nimport selectors from './selectors';\n\n/**\n * Basic biological unit class.\n *\n * @exports BiologicalUnit\n * @constructor\n */\nclass BiologicalUnit {\n  constructor(complex) {\n    this._complex = complex;\n    this._selector = selectors.keyword('All')();\n    this._boundaries = {\n      boundingBox: new THREE.Box3(),\n      boundingSphere: new THREE.Sphere(),\n    };\n  }\n\n  computeBoundaries() {\n    const atoms = this._complex._atoms;\n    const n = atoms.length;\n    const selector = this._selector;\n\n    const { boundingBox } = this._boundaries;\n    boundingBox.makeEmpty();\n    if (n === 1) {\n      boundingBox.expandByPoint(atoms[0].position);\n      const bbc = new THREE.Vector3();\n      boundingBox.getCenter(bbc);\n      const s = 2 * atoms[0].element.radius;\n      boundingBox.setFromCenterAndSize(bbc, new THREE.Vector3(s, s, s));\n    } else {\n      for (let i = 0; i < n; ++i) {\n        if (selector.includesAtom(atoms[i])) {\n          boundingBox.expandByPoint(atoms[i].position);\n        }\n      }\n    }\n\n    // Build bounding sphere\n    let radiusSquared = 0.0;\n    const center = new THREE.Vector3();\n    boundingBox.getCenter(center);\n    if (n === 1) {\n      this._boundaries.boundingSphere.set(center, atoms[0].element.radius);\n    } else {\n      for (let i = 0; i < n; ++i) {\n        if (!selector.includesAtom(atoms[i])) {\n          continue;\n        }\n        const pos = atoms[i].position;\n        const lengthSquared = center.distanceToSquared(pos);\n        if (radiusSquared < lengthSquared) {\n          radiusSquared = lengthSquared;\n        }\n      }\n      this._boundaries.boundingSphere.set(center, Math.sqrt(radiusSquared));\n    }\n  }\n\n  getTransforms() {\n    return [];\n  }\n\n  getSelector() {\n    return this._selector;\n  }\n\n  getBoundaries() {\n    return this._boundaries;\n  }\n\n  finalize() {\n  }\n}\n\nexport default BiologicalUnit;\n","import * as THREE from 'three';\nimport selectors from './selectors';\nimport BiologicalUnit from './BiologicalUnit';\n\n/**\n * Biological assembly.\n *\n * @exports Assembly\n * @constructor\n */\n\nclass Assembly extends BiologicalUnit {\n  constructor(complex) {\n    super(complex);\n    this.chains = [];\n    this.matrices = [];\n  }\n\n  computeBoundaries() {\n    super.computeBoundaries();\n    // fix up the boundaries\n    const { matrices } = this;\n    const oldCenter = this._boundaries.boundingSphere.center;\n    const oldRad = this._boundaries.boundingSphere.radius;\n    const boundingBox = this._boundaries.boundingBox = new THREE.Box3();\n    boundingBox.makeEmpty();\n    for (let i = 0, n = matrices.length; i < n; ++i) {\n      boundingBox.expandByPoint(oldCenter.clone().applyMatrix4(matrices[i]));\n    }\n\n    const newRad = boundingBox.max.distanceTo(boundingBox.min) / 2 + oldRad;\n    const center = new THREE.Vector3();\n    boundingBox.getCenter(center);\n    this._boundaries.boundingSphere = new THREE.Sphere().set(center, newRad);\n    boundingBox.max.addScalar(oldRad);\n    boundingBox.min.subScalar(oldRad);\n  }\n\n  /**\n   * Mark a chain as belonging to this biological assembly.\n   * @param {string} chain - chain identifier, usually a single letter\n   */\n  addChain(chain) {\n    this.chains[this.chains.length] = chain;\n  }\n\n  /**\n   * Add a transformation matrix.\n   * @param {THREE.Matrix4} matrix - transformation matrix\n   */\n  addMatrix(matrix) {\n    this.matrices[this.matrices.length] = matrix;\n  }\n\n  getTransforms() {\n    return this.matrices;\n  }\n\n  finalize() {\n    if (this.chains.length > 0) {\n      this._selector = selectors.keyword('Chain')(this.chains);\n    } else {\n      this._selector = selectors.keyword('None')();\n    }\n  }\n}\n\nexport default Assembly;\n","/**\n * This class represents connected component as a part of a complex.\n * WARNING! The whole component entity is build under the assumption that residues\n * are placed in the chains and complex in ascending order of indices\n *\n * @param {Complex} complex - Molecular complex this chain belongs to.\n *\n * @exports Component\n * @constructor\n */\nclass Component {\n  constructor(complex) {\n    this._complex = complex;\n    this._index = -1;\n    this._residueIndices = [];\n    this._cycles = [];\n    this._subDivs = [];\n    this._residueCount = 0;\n  }\n\n  getResidues() {\n    return this._complex._residues;\n  }\n\n  getResidueCount() {\n    return this._residueCount;\n  }\n\n  forEachResidue(process) {\n    const residues = this._complex._residues;\n    const resIdc = this._residueIndices;\n    for (let idIdc = 0, idCount = resIdc.length; idIdc < idCount; ++idIdc) {\n      for (let idx = resIdc[idIdc].start, last = resIdc[idIdc].end; idx <= last; ++idx) {\n        process(residues[idx]);\n      }\n    }\n  }\n\n  setSubDivs(subDivs) {\n    this._subDivs = subDivs;\n    let curr = 0;\n    const resIdc = [];\n    let resCnt = 0;\n    for (let i = 0, n = subDivs.length; i < n; ++i) {\n      if (i === n - 1 || subDivs[i].end + 1 !== subDivs[i + 1].start) {\n        const { start } = subDivs[curr];\n        const { end } = subDivs[i];\n        resIdc[resIdc.length] = {\n          start,\n          end,\n        };\n        resCnt += end - start + 1;\n        curr = i + 1;\n      }\n    }\n\n    this._residueIndices = resIdc;\n    this._residueCount = resCnt;\n  }\n\n  getComplex() {\n    return this._complex;\n  }\n\n  forEachBond(process) {\n    const bonds = this._complex._bonds;\n\n    for (let i = 0, n = bonds.length; i < n; ++i) {\n      const bond = bonds[i];\n      if (bond._left.residue._component === this) {\n        process(bond);\n      }\n    }\n  }\n\n  update() {\n    this.forEachCycle((cycle) => {\n      cycle.update();\n    });\n  }\n\n  forEachAtom(process) {\n    this.forEachResidue((residue) => {\n      residue.forEachAtom(process);\n    });\n  }\n\n  addCycle(cycle) {\n    this._cycles.push(cycle);\n  }\n\n  forEachCycle(process) {\n    const cycles = this._cycles;\n    for (let i = 0, n = cycles.length; i < n; ++i) {\n      process(cycles[i]);\n    }\n  }\n\n  markResidues() {\n    const self = this;\n    self.forEachResidue((residue) => {\n      residue._component = self;\n    });\n  }\n\n  _forEachSubChain(mask, process) {\n    const residues = this._complex._residues;\n    const subs = this._subDivs;\n    for (let i = 0, n = subs.length; i < n; ++i) {\n      for (let idx = subs[i].start, last = subs[i].end; idx <= last; ++idx) {\n        const currRes = residues[idx];\n        if (mask & currRes._mask && currRes._isValid) {\n          let end = idx + 1;\n          for (; end <= last; ++end) {\n            const endRes = residues[end];\n            if (!(mask & endRes._mask && endRes._isValid)) {\n              break;\n            }\n          }\n          process(i, idx, end - 1);\n          idx = end;\n        }\n      }\n    }\n  }\n\n  getMaskedSequences(mask) {\n    const subs = [];\n    let idx = 0;\n    this._forEachSubChain(mask, (_subIdx, start, end) => {\n      subs[idx++] = { start, end };\n    });\n\n    return subs;\n  }\n\n  getMaskedSubdivSequences(mask) {\n    const subs = [];\n    let currIdx = -1;\n    let lastSubIdx = -1;\n    const subDivs = this._subDivs;\n\n    this._forEachSubChain(mask, (subIdx, start, end) => {\n      if (lastSubIdx !== subIdx) {\n        ++currIdx;\n        subs[currIdx] = {\n          arr: [],\n          boundaries: subDivs[subIdx],\n        };\n        lastSubIdx = subIdx;\n      }\n      subs[currIdx].arr[subs[currIdx].arr.length] = { start, end };\n    });\n\n    return subs;\n  }\n}\n\nexport default Component;\n","import utils from '../utils';\n\nconst cMaxPairsForHashCode = 32;\nconst cHashTableSize = 1024 * 1024;\nconst cNumbersPerPair = 4;\nconst cMaxNeighbours = 14;\nconst cInvalidVal = -1;\n// 89237 is a large simple number, can be used for pseudo random hash code create\nconst cBigPrime = 89237;\n\nclass AtomPairs {\n  constructor(maxPairsEstimate) {\n    this.numPairs = 0;\n    this.numMaxPairs = maxPairsEstimate;\n    this.intBuffer = utils.allocateTyped(Int32Array, maxPairsEstimate * cNumbersPerPair);\n    for (let i = 0; i < maxPairsEstimate * cNumbersPerPair; i++) {\n      this.intBuffer[i] = cInvalidVal;\n    }\n    this.hashBuffer = utils.allocateTyped(Int32Array, cHashTableSize * cMaxPairsForHashCode);\n    for (let i = 0; i < cHashTableSize * cMaxPairsForHashCode; i++) {\n      this.hashBuffer[i] = cInvalidVal;\n    }\n  }\n\n  /**\n   * Destroy all pairs memory\n   */\n  destroy() {\n    this.intBuffer = null;\n    this.hashBuffer = null;\n  }\n\n  /**\n   * Add pair of atoms to collection\n   * @param {number} indexA - Index of the 1st vertex.\n   * @param {number} indexB - Index of the 2nd vertex.\n   */\n  addPair(indexA, indexB) {\n    const ia = (indexA < indexB) ? indexA : indexB;\n    const ib = (indexA > indexB) ? indexA : indexB;\n    const codeToAdd = ia + (ib << cMaxNeighbours);\n\n    const hashCode = (ia + (ib * cBigPrime)) & (cHashTableSize - 1);\n    let j = hashCode * cMaxPairsForHashCode;\n    let apI = 0;\n    for (; apI < cMaxPairsForHashCode; apI++) {\n      const code = this.hashBuffer[j + apI];\n      if (code === cInvalidVal) {\n        break;\n      }\n      if (code === codeToAdd) {\n        return false;\n      }\n    }\n    // add this new hash code\n    if (apI >= cMaxPairsForHashCode) {\n      throw new Error('addPair: increase cMaxPairsForHashCode');\n    }\n    this.hashBuffer[j + apI] = codeToAdd;\n\n    // actually add\n    if (this.numPairs >= this.numMaxPairs) {\n      throw new Error('addPair: increase num pairs');\n    }\n    j = this.numPairs * cNumbersPerPair;\n    this.intBuffer[j] = ia;\n    this.intBuffer[j + 1] = ib;\n    this.intBuffer[j + 2] = codeToAdd;\n    this.numPairs++;\n    return true;\n  }\n}\n\nexport default AtomPairs;\n","import AtomPairs from './AtomPairs';\nimport Bond from './Bond';\n\nconst cProfileBondBuilder = false;\nconst cEstBondsMultiplier = 4;\nconst cSpaceCode = 32;\nconst cBondTolerance = 0.45;\nconst cVMDTolerance = 0.6;\nconst cBondRadInJMOL = true;\nconst cEpsilon = 0.001;\n\n/**\n * Get radius used for building bonds.\n *\n * @param {Atom} atom - Atom object.\n * @returns {number} special value for bonding radius for this atom\n */\nfunction _getBondingRadius(atom) {\n  const { element } = atom;\n  if (element) {\n    return element.radiusBonding;\n  }\n  throw new Error('_getBondingRadius: Logic error.');\n}\n\nfunction _isAtomEligible(atom) {\n  // build for all non-hetatm and for hetatm without bonds\n  return !atom.isHet() || (atom.bonds && atom.bonds.length === 0);\n}\n\n/**\n * Bond between atoms.\n *\n * @param {Complex} complex molecular complex\n\n * @exports AutoBond\n * @constructor\n */\nclass AutoBond {\n  constructor(complex) {\n    this._complex = complex;\n    this._maxRad = 1.8;\n    const bBox = this._complex.getDefaultBoundaries().boundingBox;\n    this._vBoxMin = bBox.min.clone();\n    this._vBoxMax = bBox.max.clone();\n\n    this._pairCollection = null;\n  }\n\n  /**\n   * Add existing pairs of connectors (from pdb file after its reading)\n   * @returns {number} 0\n   */\n  _addExistingPairs() {\n    const atoms = this._complex.getAtoms();\n    const numAtoms = atoms.length;\n    let aInd = 0;\n    const collection = this._pairCollection;\n\n    for (; aInd < numAtoms; aInd++) {\n      const { bonds } = atoms[aInd];\n      const numBondsForAtom = bonds.length;\n      for (let bInd = 0; bInd < numBondsForAtom; bInd++) {\n        const bond = bonds[bInd];\n        const indTo = bond._left.index;\n        if (indTo === aInd) {\n          collection.addPair(aInd, bond._right.index);\n        }\n      } // for (b) all bonds in atom\n    } // for (a)\n    return 0;\n  }\n\n  _findPairs() {\n    const vw = this._complex.getVoxelWorld();\n    if (vw === null) {\n      return;\n    }\n\n    const atoms = this._complex._atoms;\n    const atomsNum = atoms.length;\n    const self = this;\n\n    let rA;\n    let isHydrogenA;\n    let posA;\n    let locationA;\n    let atomA;\n\n    const processAtom = function (atomB) {\n      if (isHydrogenA && atomB.isHydrogen()) {\n        return;\n      }\n\n      const locationB = atomB.location;\n      if ((locationA !== cSpaceCode)\n        && (locationB !== cSpaceCode)\n        && (locationA !== locationB)) {\n        return;\n      }\n\n      const dist2 = posA.distanceToSquared(atomB.position);\n      const rB = atomB.element.radiusBonding;\n      const maxAcceptable = cBondRadInJMOL ? rA + rB + cBondTolerance : cVMDTolerance * (rA + rB);\n\n      if (dist2 > (maxAcceptable * maxAcceptable)) {\n        return;\n      }\n\n      if (dist2 < cEpsilon) {\n        return;\n      }\n\n      self._pairCollection.addPair(atomA.index, atomB.index);\n    };\n\n    for (let i = 0; i < atomsNum; ++i) {\n      atomA = atoms[i];\n      if (!_isAtomEligible(atomA)) {\n        continue;\n      }\n\n      rA = atomA.element.radiusBonding;\n      isHydrogenA = atomA.isHydrogen();\n      posA = atomA.position;\n      locationA = atomA.location;\n\n      vw.forEachAtomWithinRadius(posA, 2 * this._maxRad + cBondTolerance, processAtom);\n    }\n  }\n\n  _addPairs() {\n    const atoms = this._complex._atoms;\n\n    for (let i = 0, k = 0; i < this._pairCollection.numPairs; i++, k += 4) {\n      const iA = this._pairCollection.intBuffer[k];\n      const iB = this._pairCollection.intBuffer[k + 1];\n      this._addPair(atoms[iA], atoms[iB]);\n    }\n  }\n\n  _addPair(atomA, atomB) {\n    const bondsA = atomA.bonds;\n    const indexA = atomA.index;\n    const indexB = atomB.index;\n    for (let j = 0, numBonds = bondsA.length; j < numBonds; ++j) {\n      const bond = bondsA[j];\n      if (bond._left.index === indexB || bond._right.index === indexB) {\n        return;\n      }\n    }\n    const left = indexA < indexB ? atomA : atomB;\n    const right = indexA < indexB ? atomB : atomA;\n    const newBond = this._complex.addBond(left, right, 0, Bond.BondType.UNKNOWN, false);\n    bondsA.push(newBond);\n    atomB.bonds.push(newBond);\n  }\n\n  build() {\n    if (cProfileBondBuilder) {\n      console.time('Bonds Builder');\n    }\n    this._buildInner();\n\n    if (cProfileBondBuilder) {\n      console.timeEnd('Bonds Builder');\n    }\n  }\n\n  _buildInner() {\n    const atoms = this._complex._atoms;\n    if (atoms.length < 2) {\n      return;\n    }\n    if (atoms[0].index < 0) {\n      throw new Error('AutoBond: Atoms in complex were not indexed.');\n    }\n\n    this._calcBoundingBox();\n    this._pairCollection = new AtomPairs(atoms.length * cEstBondsMultiplier);\n    this._addExistingPairs();\n    this._findPairs();\n    this._addPairs();\n  }\n\n  _calcBoundingBox() {\n    const atoms = this._complex._atoms;\n    const nAtoms = atoms.length;\n    let maxRad = _getBondingRadius(atoms[0]);\n    for (let i = 1; i < nAtoms; ++i) {\n      maxRad = Math.max(maxRad, _getBondingRadius(atoms[i]));\n    }\n    this._vBoxMax.addScalar(maxRad);\n    this._vBoxMin.addScalar(-maxRad);\n    this._maxRad = maxRad * 1.2;\n  }\n\n  destroy() {\n    if (this._pairCollection) {\n      this._pairCollection.destroy();\n    }\n  }\n}\n\nexport default AutoBond;\n","import * as THREE from 'three';\nimport Bond from './Bond';\nimport Element from './Element';\n\nconst cCrossThresh = 0.1;\nconst cAromaticType = Bond.BondType.AROMATIC;\nconst cAromaticAtoms = [\n  Element.ByName.C.number,\n  Element.ByName.N.number,\n  // Element.ByName.O.number,\n  // Element.ByName.S.number,\n];\n\n/** Conditions for bonds:\n   *   - Cross product with each subsequent bond to add is collinear and point to the same direction\n   *   - Each pair of a adjacent bonds belong to not more than one cycle\n   *   - If there is more than one candidates we try them in ascending order of angle values\n   */\n\nconst _coDirVectors = (function () {\n  const v1Tmp = new THREE.Vector3();\n  const v2Tmp = new THREE.Vector3();\n  const cp = new THREE.Vector3();\n  return function (v1, v2) {\n    v1Tmp.copy(v1).normalize();\n    v2Tmp.copy(v2).normalize();\n    cp.crossVectors(v1Tmp, v2Tmp);\n    if (cp.length() > cCrossThresh) {\n      return false;\n    }\n    // zero vector in out terms must be collinear to any\n    return v1Tmp.dot(v2Tmp) >= 0;\n  };\n}());\n\nfunction _insertAscending(arr, val) {\n  let idx = 0;\n  while (idx < arr.length && arr[idx] < val) {\n    ++idx;\n  }\n  arr.splice(idx, 0, val);\n}\n\nfunction _anotherAtom(bond, currAtom) {\n  return bond._left === currAtom ? bond._right : bond._left;\n}\n\nfunction _cosBetween(v1, v2) {\n  const theta = v1.dot(v2) / (Math.sqrt(v1.lengthSq() * v2.lengthSq()));\n  return THREE.MathUtils.clamp(theta, -1, 1);\n}\n\nfunction _markAromatic(bond) {\n  bond._type = cAromaticType;\n}\n\nclass Cycle {\n  constructor(atomsList) {\n    this.atoms = atomsList;\n    this.update();\n  }\n\n  update() {\n    const { atoms } = this;\n    const center = new THREE.Vector3();\n    const nA = atoms.length;\n    for (let j = 0; j < nA; ++j) {\n      center.add(atoms[j].position);\n    }\n    center.multiplyScalar(1.0 / nA);\n    this.center = center;\n    this.radius = center.distanceTo(atoms[0].position.clone().lerp(atoms[1].position, 0.5));\n  }\n\n  forEachBond(process) {\n    const { atoms } = this;\n    const nA = atoms.length;\n    let currAtom = atoms[0];\n    let nextAtom;\n\n    function checkBond(bond) {\n      if (bond._left === nextAtom || bond._right === nextAtom) {\n        process(bond);\n      }\n    }\n\n    for (let i = 0; i < nA; ++i) {\n      nextAtom = atoms[(i + 1) % nA];\n      currAtom.forEachBond(checkBond);\n      currAtom = nextAtom;\n    }\n  }\n}\n\nfunction _isAromatic(bond) {\n  return bond._type === cAromaticType;\n}\n\nfunction _isPossibleAromatic(bond) {\n  if (bond.type === cAromaticType) {\n    return true;\n  }\n  const rightIdx = cAromaticAtoms.indexOf(bond._right.element.number);\n  const leftIdx = cAromaticAtoms.indexOf(bond._left.element.number);\n  return rightIdx !== -1 && leftIdx !== -1;\n}\n\nfunction _checkCycleSimple(cycle) {\n  return cycle.length > 3;\n}\n\nfunction _checkCycleComplex(cycle) {\n  console.assert(cycle.length > 2);\n  return true;\n}\n\nclass AromaticLoopsMarker {\n  constructor(complex) {\n    this._complex = complex;\n    const bondsData = new Array(complex._bonds.length);\n    const bondMarks = new Array(complex._bonds.length);\n    for (let i = 0, n = bondsData.length; i < n; ++i) {\n      bondsData[i] = [];\n      bondMarks[i] = false;\n    }\n    this._bondsData = bondsData;\n    this._bondMarks = bondMarks;\n    this._resetCycles();\n  }\n\n  _resetCycles() {\n    this._cycles = [];\n    this._currIdx = -1;\n  }\n\n  _haveSameCycle(bondsData, bond1, bond2) {\n    const arr1 = bondsData[bond1._index];\n    const arr2 = bondsData[bond2._index];\n    const n1 = arr1.length;\n    const n2 = arr2.length;\n    let i1 = 0;\n    let i2 = 0;\n    while (i1 < n1 && i2 < n2) {\n      if (arr1[i1] === arr2[i2]) {\n        return true;\n      }\n      if (arr1[i1] > arr2[i2]) {\n        ++i2;\n      } else {\n        ++i1;\n      }\n    }\n    return false;\n  }\n\n  _tryBond(prevBond, currRight, currDir) {\n    const bondsOrder = [];\n    const bondsData = this._bondsData;\n    const currLeft = _anotherAtom(prevBond, currRight);\n    const currVec = currRight.position.clone().sub(currLeft.position);\n    const startAtomRef = this._currStart;\n    const self = this;\n    const bondMarks = this._bondMarks;\n    let checkAromatic = this._checkBond;\n    bondMarks[prevBond._index] = true;\n    checkAromatic = checkAromatic === undefined ? _isAromatic : checkAromatic;\n    currRight.forEachBond((newBond) => {\n      if (!checkAromatic(newBond)\n        || newBond === prevBond\n        || bondMarks[newBond._index]\n        || self._haveSameCycle(bondsData, prevBond, newBond)) {\n        return;\n      }\n      const anotherAtom = _anotherAtom(newBond, currRight);\n      const anotherVec = anotherAtom.position.clone().sub(currRight.position);\n      const val = anotherAtom === startAtomRef ? -2.0 : 1 - _cosBetween(currVec, anotherVec);\n      const newDir = anotherVec.cross(currVec);\n      if (!_coDirVectors(newDir, currDir)) {\n        return;\n      }\n      let idx = 0;\n      while (idx < bondsOrder.length && bondsOrder[idx].val < val) {\n        ++idx;\n      }\n      bondsOrder.splice(idx, 0, { bond: newBond, val, dir: newDir });\n    });\n\n    for (let i = 0, n = bondsOrder.length; i < n; ++i) {\n      const { bond } = bondsOrder[i];\n      const newRight = bond._left === currRight ? bond._right : bond._left;\n      if (newRight === startAtomRef) {\n        ++this._currIdx;\n        this._cycles.push([currRight]);\n        bondMarks[prevBond._index] = false;\n        return true;\n      }\n      if (this._tryBond(bond, newRight, bondsOrder[i].dir)) {\n        _insertAscending(bondsData[bond._index], this._currIdx);\n        this._cycles[this._currIdx].push(currRight);\n        bondMarks[prevBond._index] = false;\n        return true;\n      }\n    }\n    bondMarks[prevBond._index] = false;\n    return false;\n  }\n\n  _startCycle(bond) {\n    // start from left to right\n    this._currStart = bond._left;\n    if (this._tryBond(bond, bond._right, new THREE.Vector3())) {\n      _insertAscending(this._bondsData[bond._index], this._currIdx);\n      this._cycles[this._currIdx].push(bond._left);\n    }\n  }\n\n  _findLoops(checkBond, checkCycle) {\n    this._checkBond = checkBond;\n    const complex = this._complex;\n    const self = this;\n\n    complex.forEachComponent((component) => {\n      self._resetCycles();\n      component.forEachBond((bond) => {\n        if (checkBond(bond)) {\n          self._startCycle(bond);\n        }\n      });\n      const cycles = self._cycles;\n      for (let i = 0, n = cycles.length; i < n; ++i) {\n        const cycle = cycles[i];\n        if (!checkCycle(cycle)) {\n          continue;\n        }\n        const newCycle = new Cycle(cycle);\n        newCycle.forEachBond(_markAromatic);\n        component.addCycle(newCycle);\n      }\n    });\n  }\n\n  markCycles() {\n    this._findLoops(_isAromatic, _checkCycleSimple);\n  }\n\n  detectCycles() {\n    this._findLoops(_isPossibleAromatic, _checkCycleComplex);\n  }\n}\n\nexport default AromaticLoopsMarker;\n","import * as THREE from 'three';\nimport utils from '../utils';\n\n/**\n * Calculate min & max radius of a sphere slice between zMin & zMax\n *\n * @param {Vector3} center - center of the sphere\n * @param {number} radius  - sphere radius\n * @param {number} zMin - lower bound of the slice\n * @param {number} zMax - upper bound of the slice\n */\nfunction _getSphereSliceRadiusRange(center, radius, zMin, zMax) {\n  const dzMin = zMin - center.z;\n  const dzMax = zMax - center.z;\n  const rzMin = Math.sqrt(Math.max(radius * radius - dzMin * dzMin, 0.0));\n  const rzMax = Math.sqrt(Math.max(radius * radius - dzMax * dzMax, 0.0));\n\n  const rMin = Math.min(rzMin, rzMax);\n  let rMax;\n\n  if (zMin <= center.z && zMax >= center.z) {\n    // sphere's main diameter is inside slice\n    rMax = radius;\n  } else {\n    rMax = Math.max(rzMin, rzMax);\n  }\n\n  return [rMin, rMax];\n}\n\n/**\n * Calculate min & max radius of a circle slice between yMin & yMax.\n *\n * To maintain analogy with _getSphereSliceRadiusRange we call radius what in fact is\n * half-width (along X axis) of the slice, i.e. 1D-sphere radius.\n *\n * @param {Vector3} center - center of the circle (z can be ignored)\n * @param {number} radius  - circle radius\n * @param {number} yMin - lower bound of the slice\n * @param {number} yMax - upper bound of the slice\n * @returns {Array} - array of two numbers (min & max radius, or half-width)\n */\nfunction _getCircleSliceRadiusRange(center, radius, yMin, yMax) {\n  const dyMin = yMin - center.y;\n  const dyMax = yMax - center.y;\n  const ryMin = Math.sqrt(Math.max(radius * radius - dyMin * dyMin, 0.0));\n  const ryMax = Math.sqrt(Math.max(radius * radius - dyMax * dyMax, 0.0));\n\n  const rMin = Math.min(ryMin, ryMax);\n  let rMax;\n\n  if (yMin <= center.y && yMax >= center.y) {\n    // slice's main diameter is inside slice\n    rMax = radius;\n  } else {\n    rMax = Math.max(ryMin, ryMax);\n  }\n\n  return [rMin, rMax];\n}\n\n/**\n * VoxelWorld constructor\n *\n * @param {Box3} box - bounding box of the volume to be partitioned\n * @param {Vector3} vCellSizeHint - target voxel size (actual voxel size may differ from this)\n */\nclass VoxelWorld {\n  constructor(box, vCellSizeHint) {\n    this._box = box.clone();\n    const size = new THREE.Vector3();\n    box.getSize(size);\n    this._count = size.clone().divide(vCellSizeHint).floor().max(new THREE.Vector3(1, 1, 1));\n    this._last = this._count.clone().subScalar(1);\n    this._cellSize = size.clone().divide(this._count);\n    this._cellInnerR = 0.5 * Math.min(Math.min(this._cellSize.x, this._cellSize.y), this._cellSize.z);\n    this._cellOuterR = 0.5 * Math.sqrt(this._cellSize.dot(this._cellSize));\n\n    // array of voxels, each element contains index of first atom in voxel\n    const numVoxels = this._count.x * this._count.y * this._count.z;\n    this._voxels = utils.allocateTyped(Int32Array, numVoxels);\n    for (let i = 0; i < numVoxels; ++i) {\n      this._voxels[i] = -1;\n    }\n\n    // array of atoms that stores multiple single-linked lists\n    // two elements for each atom: Atom ref, index of next atom (in this array\n    this._atoms = [];\n  }\n\n  /**\n   * Add all atoms from a complex to voxel world\n   *\n   * @param {Complex} complex - complex\n   */\n  addAtoms(complex) {\n    const self = this;\n\n    let idx = this._atoms.length;\n\n    // resize array of atoms\n    this._atoms.length += 2 * complex.getAtomCount();\n\n    complex.forEachAtom((atom) => {\n      // find which voxel contains this atom\n      const voxelIdx = self._findVoxel(atom.position);\n\n      // push current atom to the head of voxel's atom list\n      self._atoms[idx] = atom;\n      self._atoms[idx + 1] = self._voxels[voxelIdx];\n      self._voxels[voxelIdx] = idx;\n\n      idx += 2;\n    });\n  }\n\n  /**\n   * Get voxel that contains specified 3D point (we use clamp at the edges)\n   *\n   * @param {Vector3} point - a point in 3D\n   * @returns {number} - index of voxel\n   */\n  static _zero = new THREE.Vector3(0, 0, 0);\n\n  static _voxel = new THREE.Vector3();\n\n  _findVoxel(point) {\n    const zero = VoxelWorld._zero;\n    const voxel = VoxelWorld._voxel;\n    voxel.copy(point)\n      .sub(this._box.min)\n      .divide(this._cellSize)\n      .floor()\n      .clamp(zero, this._last);\n    return voxel.x + this._count.x * (voxel.y + this._count.y * voxel.z);\n  }\n\n  /**\n   * Call a function for each atom in voxel\n   *\n   * @param {number} voxel - index of voxel\n   * @param {function(Atom)} process - function to call\n   */\n  _forEachAtomInVoxel(voxel, process) {\n    for (let i = this._voxels[voxel]; i >= 0; i = this._atoms[i + 1]) {\n      process(this._atoms[i]);\n    }\n  }\n\n  /**\n   * Call a function for each voxel that is touched by given sphere. Callback also takes flag\n   * isInside specifying whether voxel lies inside the sphere entirely.\n   *\n   * @param {Vector3} center - center of the sphere\n   * @param {number} radius  - sphere radius\n   * @param {function(number,bool)} process - function to call that takes voxel index and boolean isInside\n   */\n\n  static _xRange = new THREE.Vector2();\n\n  static _yRange = new THREE.Vector2();\n\n  static _zRange = new THREE.Vector2();\n\n  _forEachVoxelWithinRadius(center, radius, process) {\n    const xRange = VoxelWorld._xRange;\n    const yRange = VoxelWorld._yRange;\n    const zRange = VoxelWorld._zRange;\n\n    // switch to a faster method unless cell size is much smaller than sphere radius\n    if (radius / this._cellInnerR < 10) {\n      this._forEachVoxelWithinRadiusSimple(center, radius, process);\n      return;\n    }\n\n    let rRangeXY;\n    let rRangeX;\n    let xVal;\n    let yVal;\n    let zVal;\n    let isInsideX;\n    let isInsideY;\n    let isInsideZ;\n\n    zRange.set(center.z - radius, center.z + radius);\n    zRange.subScalar(this._box.min.z)\n      .divideScalar(this._cellSize.z)\n      .floor()\n      .clampScalar(0, this._count.z - 1);\n\n    for (let z = zRange.x; z <= zRange.y; ++z) {\n      zVal = [this._box.min.z + z * this._cellSize.z,\n        this._box.min.z + (z + 1) * this._cellSize.z];\n\n      isInsideZ = (center.z - radius <= zVal[0]) && (zVal[1] <= center.z + radius);\n\n      rRangeXY = _getSphereSliceRadiusRange(center, radius, zVal[0], zVal[1]);\n\n      yRange.set(center.y - rRangeXY[1], center.y + rRangeXY[1]);\n      yRange.subScalar(this._box.min.y)\n        .divideScalar(this._cellSize.y)\n        .floor()\n        .clampScalar(0, this._count.y - 1);\n\n      for (let y = yRange.x; y <= yRange.y; ++y) {\n        yVal = [this._box.min.y + y * this._cellSize.y,\n          this._box.min.y + (y + 1) * this._cellSize.y];\n\n        isInsideY = (center.y - rRangeXY[0] <= yVal[0]) && (yVal[1] <= center.y + rRangeXY[0]);\n\n        rRangeX = _getCircleSliceRadiusRange(center, rRangeXY[1], yVal[0], yVal[1]);\n\n        xRange.set(center.x - rRangeX[1], center.x + rRangeX[1]);\n        xRange.subScalar(this._box.min.x)\n          .divideScalar(this._cellSize.x)\n          .floor()\n          .clampScalar(0, this._count.x - 1);\n\n        for (let { x } = xRange; x <= xRange.y; ++x) {\n          xVal = [this._box.min.x + x * this._cellSize.x,\n            this._box.min.x + (x + 1) * this._cellSize.x];\n          isInsideX = (center.x - rRangeX[0] <= xVal[0]) && (xVal[1] <= center.x + rRangeX[0]);\n\n          process(x + this._count.x * (y + this._count.y * z), isInsideX && isInsideY && isInsideZ);\n        }\n      }\n    }\n  }\n\n  /**\n   * Call a function for each voxel that is touched by given sphere. Callback also takes flag\n   * isInside specifying whether voxel lies inside the sphere entirely.\n   * This is a version of method that doesn't try to \"calculate\" what voxels fall inside radius\n   * but instead just checks all voxels inside sphere's bounding box. This should be faster\n   * unless cell size is much smaller than sphere radius.\n   *\n   * @param {Vector3} center - center of the sphere\n   * @param {number} radius  - sphere radius\n   * @param {function(number,bool)} process - function to call that takes voxel index and boolean isInside\n   */\n\n  static _vCenter = new THREE.Vector3();\n\n  _forEachVoxelWithinRadiusSimple(center, radius, process) {\n    const xRange = VoxelWorld._xRange;\n    const yRange = VoxelWorld._yRange;\n    const zRange = VoxelWorld._zRange;\n    const vCenter = VoxelWorld._vCenter;\n\n    const distTouch2 = (radius + this._cellOuterR) * (radius + this._cellOuterR);\n    let distInside2 = -1.0;\n    if (radius > this._cellOuterR) {\n      distInside2 = (radius - this._cellOuterR) * (radius - this._cellOuterR);\n    }\n\n    // calculate bounding box for the sphere\n    xRange.set(center.x - radius, center.x + radius);\n    xRange.subScalar(this._box.min.x)\n      .divideScalar(this._cellSize.x)\n      .floor();\n    xRange.x = Math.min(Math.max(xRange.x, 0), this._count.x - 1);\n    xRange.y = Math.min(Math.max(xRange.y, 0), this._count.x - 1);\n\n    yRange.set(center.y - radius, center.y + radius);\n    yRange.subScalar(this._box.min.y)\n      .divideScalar(this._cellSize.y)\n      .floor();\n    yRange.x = Math.min(Math.max(yRange.x, 0), this._count.y - 1);\n    yRange.y = Math.min(Math.max(yRange.y, 0), this._count.y - 1);\n\n    zRange.set(center.z - radius, center.z + radius);\n    zRange.subScalar(this._box.min.z)\n      .divideScalar(this._cellSize.z)\n      .floor();\n    zRange.x = Math.min(Math.max(zRange.x, 0), this._count.z - 1);\n    zRange.y = Math.min(Math.max(zRange.y, 0), this._count.z - 1);\n\n    for (let z = zRange.x; z <= zRange.y; ++z) {\n      const zVal = [this._box.min.z + z * this._cellSize.z,\n        this._box.min.z + (z + 1) * this._cellSize.z];\n      vCenter.z = 0.5 * (zVal[0] + zVal[1]);\n\n      for (let y = yRange.x; y <= yRange.y; ++y) {\n        const yVal = [this._box.min.y + y * this._cellSize.y,\n          this._box.min.y + (y + 1) * this._cellSize.y];\n        vCenter.y = 0.5 * (yVal[0] + yVal[1]);\n\n        for (let { x } = xRange; x <= xRange.y; ++x) {\n          const xVal = [this._box.min.x + x * this._cellSize.x,\n            this._box.min.x + (x + 1) * this._cellSize.x];\n          vCenter.x = 0.5 * (xVal[0] + xVal[1]);\n\n          const d2 = center.distanceToSquared(vCenter);\n          if (d2 <= distTouch2) {\n            process(x + this._count.x * (y + this._count.y * z), d2 <= distInside2);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Call a function for each atom within given sphere\n   *\n   * @param {Vector3} center - center of the sphere\n   * @param {number} radius  - sphere radius\n   * @param {function(Atom)} process - function to call\n   */\n  forEachAtomWithinRadius(center, radius, process) {\n    const self = this;\n    const r2 = radius * radius;\n\n    self._forEachVoxelWithinRadius(center, radius, (voxel, isInside) => {\n      if (isInside) {\n        self._forEachAtomInVoxel(voxel, process);\n      } else {\n        self._forEachAtomInVoxel(voxel, (atom) => {\n          if (center.distanceToSquared(atom.position) <= r2) {\n            process(atom);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Call a function for each atom of given complex within given distance from group of atoms defined by mask\n   *\n   * @param {Complex} complex - complex\n   * @param {number} mask - bit mask\n   * @param {number} dist - distance\n   * @param {function(Atom)} process - function to call\n   */\n  forEachAtomWithinDistFromMasked(complex, mask, dist, process) {\n    this._forEachAtomWithinDistFromGroup((atomProc) => {\n      complex.forEachAtom((atom) => {\n        if ((atom.mask & mask) !== 0) {\n          atomProc(atom);\n        }\n      });\n    }, dist, process);\n  }\n\n  /**\n   * Call a function for each atom of given complex within given distance from group of atoms defined by selector\n   *\n   * @param {Complex} complex - complex\n   * @param {number} selector - selector\n   * @param {number} dist - distance\n   * @param {function(Atom)} process - function to call\n   */\n  forEachAtomWithinDistFromSelected(complex, selector, dist, process) {\n    this._forEachAtomWithinDistFromGroup((atomProc) => {\n      complex.forEachAtom((atom) => {\n        if (selector.includesAtom(atom)) {\n          atomProc(atom);\n        }\n      });\n    }, dist, process);\n  }\n\n  /**\n   * Call a function for each atom of given complex within given distance from group of atoms\n   *\n   * @param {function} forEachAtom - enumerator of atoms in the group\n   * @param {number} dist - distance\n   * @param {function(Atom)} process - function to call\n   */\n  _forEachAtomWithinDistFromGroup(forEachAtom, dist, process) {\n    const self = this;\n    const r2 = dist * dist;\n\n    const voxels = [];\n    const atoms = [];\n    let idx = 0;\n\n    // build \"within radius\" atom list for each voxel\n    forEachAtom((atom) => {\n      self._forEachVoxelWithinRadius(atom.position, dist, (voxel, isInside) => {\n        if (isInside) {\n          // this voxel is inside circle -- no check will be required\n          voxels[voxel] = -1;\n        } else if (typeof voxels[voxel] === 'undefined') {\n          // this voxel isn't covered yet -- start building list of atoms\n          atoms.push(atom);\n          atoms.push(-1);\n          voxels[voxel] = idx;\n          idx += 2;\n        } else if (voxels[voxel] !== -1) {\n          // this voxel has a list of atoms required for distance check -- add atom to the list\n          atoms.push(atom);\n          atoms.push(voxels[voxel]);\n          voxels[voxel] = idx;\n          idx += 2;\n        }\n      });\n    });\n\n    let voxel;\n\n    const processIfWithin = function (atom) {\n      if (typeof voxels[voxel] === 'undefined') {\n        return;\n      }\n\n      idx = voxels[voxel];\n      if (idx === -1) {\n        // this voxel is fully covered\n        process(atom);\n        return;\n      }\n\n      // check distance to each atom within radius from this voxel\n      for (; idx >= 0; idx = atoms[idx + 1]) {\n        if (atom.position.distanceToSquared(atoms[idx].position) < r2) {\n          process(atom);\n          break;\n        }\n      }\n    };\n\n    // for each marked voxel\n    for (voxel in voxels) {\n      if (voxels.hasOwnProperty(voxel)) {\n        self._forEachAtomInVoxel(voxel, processIfWithin);\n      }\n    }\n  }\n}\n\nexport default VoxelWorld;\n","import ResidueType from './ResidueType';\nimport PairCollection from './AtomPairs';\n\nconst MINIMAL_DISTANCE = 0.5;\nconst MIN_HBOND_ENERGY = -9.9;\nconst MAX_HBOND_ENERGY = -0.5;\nconst COUPLING_CONSTANT = -27.888; // = -332 * 0.42 * 0.2\nconst MAX_COUPLING_DISTANCE = 5.0; // how far is the closest atom of a potential partner residue from CA atom\nconst MAX_RESIDUES_THRESHOLD = 1000;\n\nexport default class HBondInfo {\n  constructor(complex) {\n    this._complex = complex;\n    this._hbonds = []; // array of bond info for each residue\n    if (this._complex._residues.length > MAX_RESIDUES_THRESHOLD) {\n      this._buildVW(); // optimized version using voxel grid\n    } else {\n      this._build(); // test all pairs of residues\n    }\n  }\n\n  isBond(from, to) {\n    if (this._hbonds[from]) {\n      const [acc0, acc1] = this._hbonds[from].acceptor;\n      if (acc0 && acc0.residue === to && acc0.energy < MAX_HBOND_ENERGY) {\n        return true;\n      }\n      if (acc1 && acc1.residue === to && acc1.energy < MAX_HBOND_ENERGY) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _build() {\n    const self = this;\n\n    for (let i = 0; i < this._complex._residues.length - 1; ++i) {\n      const ri = this._complex._residues[i];\n      if ((ri.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\n        continue;\n      }\n\n      // get predecessor in chain\n      let preri = null;\n      if (i > 0 && (this._complex._residues[i - 1].getType().flags & ResidueType.Flags.PROTEIN)\n        && ri._sequence === this._complex._residues[i - 1]._sequence + 1) {\n        preri = this._complex._residues[i - 1];\n      }\n\n      for (let j = i + 1; j < this._complex._residues.length; ++j) {\n        const rj = this._complex._residues[j];\n        if ((rj.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\n          continue;\n        }\n\n        // get predecessor in chain\n        let prerj = null;\n        if ((this._complex._residues[j - 1].getType().flags & ResidueType.Flags.PROTEIN)\n          && rj._sequence === this._complex._residues[j - 1]._sequence + 1) {\n          prerj = this._complex._residues[j - 1];\n        }\n\n        self._calcHBondEnergy(preri, ri, rj);\n        if (j !== i + 1) {\n          self._calcHBondEnergy(prerj, rj, ri);\n        }\n      }\n    }\n  }\n\n  _buildVW() {\n    const self = this;\n    const residues = this._complex._residues;\n    let ri;\n    let preri;\n\n    const vw = this._complex.getVoxelWorld();\n    if (vw === null) {\n      return;\n    }\n\n    const pairs = new PairCollection(this._complex._residues.length * this._complex._residues.length / 2);\n\n    function processAtom(atom) {\n      const rj = atom.residue;\n\n      if (rj._index === ri._index) {\n        return;\n      }\n\n      if ((rj.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\n        return;\n      }\n\n      if (!pairs.addPair(ri._index, rj._index)) {\n        // we've seen this pair\n        return;\n      }\n\n      // get predecessor in chain\n      let prerj = rj._index > 0 ? residues[rj._index - 1] : null;\n      if (prerj\n        && ((prerj.getType().flags & ResidueType.Flags.PROTEIN) === 0 || rj._sequence !== prerj._sequence + 1)) {\n        prerj = null;\n      }\n\n      self._calcHBondEnergy(preri, ri, rj);\n      if (rj._index !== ri._index + 1) {\n        self._calcHBondEnergy(prerj, rj, ri);\n      }\n    }\n\n    for (let i = 0; i < residues.length - 1; ++i) {\n      ri = residues[i];\n      if ((ri.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\n        continue;\n      }\n\n      // get predecessor in chain\n      preri = i > 0 ? residues[i - 1] : null;\n      if (preri\n        && ((preri.getType().flags & ResidueType.Flags.PROTEIN) === 0 || ri._sequence !== preri._sequence + 1)) {\n        preri = null;\n      }\n\n      vw.forEachAtomWithinRadius(this._residueGetCAlpha(ri), MAX_COUPLING_DISTANCE, processAtom);\n    }\n  }\n\n  _residueGetCAlpha(res) {\n    for (let i = 0; i < res._atoms.length; ++i) {\n      const { name } = res._atoms[i];\n      if (name === 'CA'\n        || name === 'C1') {\n        return res._atoms[i].position;\n      }\n    }\n\n    return null;\n  }\n\n  _residueGetCO(res) {\n    let c = null;\n    let o = null;\n\n    res.forEachAtom((a) => {\n      if (a.name === 'C') {\n        c = a.position;\n      } else if (a.name === 'O') {\n        o = a.position;\n      }\n    });\n\n    return [c, o];\n  }\n\n  // TODO Support hydrogen defined in complex\n  _residueGetNH(prev, res) {\n    const [c, o] = this._residueGetCO(prev);\n\n    let n;\n    res.forEachAtom((a) => {\n      if (a.name === 'N') {\n        n = a.position;\n      }\n    });\n\n    if (c && o && n) {\n      // calculate hydrogen position\n      const h = c.clone();\n      h.sub(o);\n      h.multiplyScalar(1.0 / h.length());\n      h.add(n);\n\n      return [n, h];\n    }\n\n    return [null, null];\n  }\n\n  _calcHBondEnergy(predonor, donor, acceptor) {\n    let result = 0;\n\n    if (predonor === null) {\n      return result;\n    }\n\n    if (donor.getType().getName() !== 'PRO') {\n      const [n, h] = this._residueGetNH(predonor, donor);\n      const [c, o] = this._residueGetCO(acceptor);\n\n      if (n === null || h === null || c === null || o === null) {\n        return result;\n      }\n\n      const distanceHO = h.distanceTo(o);\n      const distanceHC = h.distanceTo(c);\n      const distanceNC = n.distanceTo(c);\n      const distanceNO = n.distanceTo(o);\n\n      if (distanceHO < MINIMAL_DISTANCE || distanceHC < MINIMAL_DISTANCE\n          || distanceNC < MINIMAL_DISTANCE || distanceNO < MINIMAL_DISTANCE) {\n        result = MIN_HBOND_ENERGY;\n      } else {\n        result = COUPLING_CONSTANT / distanceHO - COUPLING_CONSTANT / distanceHC\n                 + COUPLING_CONSTANT / distanceNC - COUPLING_CONSTANT / distanceNO;\n      }\n\n      // DSSP compatibility mode:\n      result = Math.round(result * 1000) / 1000;\n\n      if (result < MIN_HBOND_ENERGY) {\n        result = MIN_HBOND_ENERGY;\n      }\n    }\n\n    // update donor\n    if (typeof this._hbonds[donor._index] === 'undefined') {\n      this._hbonds[donor._index] = {\n        donor: [],\n        acceptor: [],\n      };\n    }\n    const donorInfo = this._hbonds[donor._index];\n\n    if (donorInfo.acceptor.length < 2) {\n      donorInfo.acceptor.push({\n        residue: acceptor._index,\n        energy: result,\n      });\n    }\n\n    if (donorInfo.acceptor.length > 1) {\n      if (result < donorInfo.acceptor[0].energy) {\n        donorInfo.acceptor[1].residue = donorInfo.acceptor[0].residue;\n        donorInfo.acceptor[1].energy = donorInfo.acceptor[0].energy;\n        donorInfo.acceptor[0].residue = acceptor._index;\n        donorInfo.acceptor[0].energy = result;\n      } else if (result < donorInfo.acceptor[1].energy) {\n        donorInfo.acceptor[1].residue = acceptor._index;\n        donorInfo.acceptor[1].energy = result;\n      }\n    }\n\n    // update acceptor\n    if (typeof this._hbonds[acceptor._index] === 'undefined') {\n      this._hbonds[acceptor._index] = {\n        donor: [],\n        acceptor: [],\n      };\n    }\n    const accInfo = this._hbonds[acceptor._index];\n\n    if (accInfo.donor.length < 2) {\n      accInfo.donor.push({\n        residue: donor._index,\n        energy: result,\n      });\n    }\n\n    if (accInfo.donor.length > 1) {\n      if (result < accInfo.donor[0].energy) {\n        accInfo.donor[1].residue = accInfo.donor[0].residue;\n        accInfo.donor[1].energy = accInfo.donor[0].energy;\n        accInfo.donor[0].residue = donor._index;\n        accInfo.donor[0].energy = result;\n      } else if (result < accInfo.donor[1].energy) {\n        accInfo.donor[1].residue = donor._index;\n        accInfo.donor[1].energy = result;\n      }\n    }\n\n    return result;\n  }\n}\n","import HBondInfo from './HBondInfo';\nimport ResidueType from './ResidueType';\n\nconst BridgeType = Object.freeze({\n  NO_BRIDGE: 0,\n  PARALLEL: 1,\n  ANTI_PARALLEL: 2,\n});\n\nconst HelixFlag = Object.freeze({\n  START: 1,\n  MIDDLE: 2,\n  END: 3,\n  START_AND_END: 4,\n});\n\nconst StructureType = Object.freeze({\n  STRAND: 'E',\n  BRIDGE: 'B',\n  HELIX_310: 'G',\n  HELIX_ALPHA: 'H',\n  HELIX_PI: 'I',\n  TURN: 'T',\n  BEND: 'S',\n  LOOP: ' ',\n});\n\nexport default class SecondaryStructureMap {\n  constructor(complex) {\n    this._complex = complex;\n    this._build();\n  }\n\n  _build() {\n    const self = this;\n    this._hbonds = new HBondInfo(this._complex);\n    this._ss = []; // DSSP map by residue\n\n    // auxilliary data\n    this._sheet = [];\n    this._betaPartners = [];\n    this._bend = [];\n    for (let i = 0; i < this._complex.getResidues().length; ++i) {\n      this._betaPartners[i] = [];\n    }\n    this._helixFlags = [];\n    this._helixFlags[3] = [];\n    this._helixFlags[4] = [];\n    this._helixFlags[5] = [];\n\n    // calculate peptide chain lengths\n    this._chainLengths = [];\n    for (let i = 0; i < this._complex._chains.length; ++i) {\n      const chain = this._complex._chains[i].getResidues();\n      let len = 0;\n      for (; len < chain.length; ++len) {\n        if ((chain[len].getType().flags & ResidueType.Flags.PROTEIN) === 0) {\n          break;\n        }\n      }\n      this._chainLengths[i] = len;\n    }\n\n    this._buildBetaSheets();\n\n    for (let i = 0; i < this._complex._chains.length; ++i) {\n      self._buildAlphaHelices(this._complex._chains[i].getResidues(), this._chainLengths[i], false);\n    }\n  }\n\n  _buildAlphaHelices(inResidues, chainLength, inPreferPiHelices) {\n    // Helix and Turn\n    for (let stride = 3; stride <= 5; ++stride) {\n      if (inResidues.length < stride) {\n        break;\n      }\n\n      for (let i = 0; i + stride < chainLength; ++i) {\n        if (this._hbonds.isBond(inResidues[i + stride]._index, inResidues[i]._index)\n        /* && NoChainBreak(res[i], res[i + stride]) */) {\n          this._helixFlags[stride][inResidues[i + stride]._index] = HelixFlag.END;\n          for (let j = i + 1; j < i + stride; ++j) {\n            if (typeof this._helixFlags[stride][inResidues[j]._index] === 'undefined') {\n              this._helixFlags[stride][inResidues[j]._index] = HelixFlag.MIDDLE;\n            }\n          }\n\n          if (this._helixFlags[stride][inResidues[i]._index] === HelixFlag.END) {\n            this._helixFlags[stride][inResidues[i]._index] = HelixFlag.START_AND_END;\n          } else {\n            this._helixFlags[stride][inResidues[i]._index] = HelixFlag.START;\n          }\n        }\n      }\n    }\n\n    for (let i = 2; i < chainLength - 2; ++i) {\n      const kappa = this._kappa(inResidues[i - 2], inResidues[i], inResidues[i + 2]);\n      this._bend[inResidues[i]._index] = (kappa !== 360 && kappa > 70);\n    }\n\n    for (let i = 1; i + 4 < chainLength; ++i) {\n      if (this._isHelixStart(inResidues[i]._index, 4) && this._isHelixStart(inResidues[i - 1]._index, 4)) {\n        for (let j = i; j <= i + 3; ++j) {\n          this._ss[inResidues[j]._index] = StructureType.HELIX_ALPHA;\n        }\n      }\n    }\n\n    for (let i = 1; i + 3 < chainLength; ++i) {\n      if (this._isHelixStart(inResidues[i]._index, 3) && this._isHelixStart(inResidues[i - 1]._index, 3)) {\n        let empty = true;\n        for (let j = i; empty && j <= i + 2; ++j) {\n          empty = typeof this._ss[inResidues[j]._index] === 'undefined'\n                  || this._ss[inResidues[j]._index] === StructureType.HELIX_310;\n        }\n        if (empty) {\n          for (let j = i; j <= i + 2; ++j) {\n            this._ss[inResidues[j]._index] = StructureType.HELIX_310;\n          }\n        }\n      }\n    }\n\n    for (let i = 1; i + 5 < chainLength; ++i) {\n      if (this._isHelixStart(inResidues[i]._index, 5) && this._isHelixStart(inResidues[i - 1]._index, 5)) {\n        let empty = true;\n        for (let j = i; empty && j <= i + 4; ++j) {\n          empty = typeof this._ss[inResidues[j]._index] === 'undefined'\n                  || this._ss[inResidues[j]._index] === StructureType.HELIX_PI\n                  || (inPreferPiHelices && this._ss[inResidues[j]._index] === StructureType.HELIX_ALPHA);\n        }\n        if (empty) {\n          for (let j = i; j <= i + 4; ++j) {\n            this._ss[inResidues[j]._index] = StructureType.HELIX_PI;\n          }\n        }\n      }\n    }\n\n    for (let i = 1; i + 1 < chainLength; ++i) {\n      if (typeof this._ss[inResidues[i]._index] === 'undefined') {\n        let isTurn = false;\n        for (let stride = 3; stride <= 5 && !isTurn; ++stride) {\n          for (let k = 1; k < stride && !isTurn; ++k) {\n            isTurn = (i >= k) && this._isHelixStart(inResidues[i - k]._index, stride);\n          }\n        }\n\n        if (isTurn) {\n          this._ss[inResidues[i]._index] = StructureType.TURN;\n        } else if (this._bend[inResidues[i]._index]) {\n          this._ss[inResidues[i]._index] = StructureType.BEND;\n        }\n      }\n    }\n  }\n\n  _residueGetCAlpha(res) {\n    for (let i = 0; i < res._atoms.length; ++i) {\n      const { name } = res._atoms[i];\n      if (name === 'CA'\n          || name === 'C1') {\n        return res._atoms[i].position;\n      }\n    }\n\n    return null;\n  }\n\n  _cosinusAngle(p1, p2, p3, p4) {\n    const v12 = p1.clone().sub(p2);\n    const v34 = p3.clone().sub(p4);\n\n    let result = 0;\n\n    const x = v12.dot(v12) * v34.dot(v34);\n    if (x > 0) {\n      result = v12.dot(v34) / Math.sqrt(x);\n    }\n\n    return result;\n  }\n\n  _kappa(prevPrev, res, nextNext) {\n    const curCA = this._residueGetCAlpha(res);\n    const ppCA = this._residueGetCAlpha(prevPrev);\n    const nnCA = this._residueGetCAlpha(nextNext);\n    if (curCA === null || ppCA === null || nnCA === null) {\n      return 180;\n    }\n\n    const ckap = this._cosinusAngle(curCA, ppCA, nnCA, curCA);\n    const skap = Math.sqrt(1 - ckap * ckap);\n    return Math.atan2(skap, ckap) * 180 / Math.PI;\n  }\n\n  _isHelixStart(res, stride) {\n    return (this._helixFlags[stride][res] === HelixFlag.START\n      || this._helixFlags[stride][res] === HelixFlag.START_AND_END);\n  }\n\n  _buildBetaSheets() {\n    // find bridges\n    // check each chain against each other chain, and against itself\n    const bridges = [];\n    for (let a = 0; a < this._complex._chains.length; ++a) {\n      const lenA = this._chainLengths[a];\n      if (lenA <= 4) {\n        continue;\n      }\n\n      const chainA = this._complex._chains[a].getResidues();\n\n      for (let b = a; b < this._complex._chains.length; ++b) {\n        const lenB = this._chainLengths[b];\n        if (lenB <= 4) {\n          continue;\n        }\n\n        const chainB = this._complex._chains[b].getResidues();\n\n        for (let i = 1; i + 1 < lenA; ++i) {\n          const ri = chainA[i];\n\n          let j = 1;\n          if (b === a) {\n            j = i + 3; // check for self-bridges forward down the chain\n          }\n\n          for (; j + 1 < lenB; ++j) {\n            const rj = chainB[j];\n\n            const type = this._testBridge(chainA, i, chainB, j);\n            if (type === BridgeType.NO_BRIDGE) {\n              continue;\n            }\n\n            // there is a bridge, try to attach it to previously found sequence\n            let found = false;\n            for (const bridge of bridges) {\n              if (type !== bridge.type || ri._index !== bridge.i[bridge.i.length - 1] + 1) {\n                continue;\n              }\n\n              if (type === BridgeType.PARALLEL && bridge.j[bridge.j.length - 1] + 1 === rj._index) {\n                bridge.i.push(ri._index);\n                bridge.j.push(rj._index);\n                found = true;\n                break;\n              }\n\n              if (type === BridgeType.ANTI_PARALLEL && bridge.j[0] - 1 === rj._index) {\n                bridge.i.push(ri._index);\n                bridge.j.unshift(rj._index);\n                found = true;\n                break;\n              }\n            }\n\n            // this bridge cannot be attached anywhere, start a new sequence\n            if (!found) {\n              bridges.push({\n                type,\n                i: [ri._index],\n                chainI: ri.getChain()._index,\n                j: [rj._index],\n                chainJ: rj.getChain()._index,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // extend ladders\n    bridges.sort((a, b) => {\n      if (a.chainI < b.chainI || (a.chainI === b.chainI && a.i[0] < b.i[0])) {\n        return -1;\n      }\n      return 1;\n    });\n\n    for (let i = 0; i < bridges.length; ++i) {\n      for (let j = i + 1; j < bridges.length; ++j) {\n        const ibi = bridges[i].i[0];\n        const iei = bridges[i].i[bridges[i].i.length - 1];\n        const jbi = bridges[i].j[0];\n        const jei = bridges[i].j[bridges[i].j.length - 1];\n        const ibj = bridges[j].i[0];\n        const iej = bridges[j].i[bridges[j].i.length - 1];\n        const jbj = bridges[j].j[0];\n        const jej = bridges[j].j[bridges[j].j.length - 1];\n\n        if (bridges[i].type !== bridges[j].type\n          || this._hasChainBreak(Math.min(ibi, ibj), Math.max(iei, iej))\n          || this._hasChainBreak(Math.min(jbi, jbj), Math.max(jei, jej))\n          || ibj - iei >= 6 || (iei >= ibj && ibi <= iej)) {\n          continue;\n        }\n\n        let bulge = false;\n        if (bridges[i].type === BridgeType.PARALLEL) {\n          bulge = ((jbj - jei < 6 && ibj - iei < 3) || (jbj - jei < 3));\n        } else {\n          bulge = ((jbi - jej < 6 && ibj - iei < 3) || (jbi - jej < 3));\n        }\n\n        if (bulge) {\n          bridges[i].i = bridges[i].i.concat(bridges[j].i);\n          if (bridges[i].type === BridgeType.PARALLEL) {\n            bridges[i].j = bridges[i].j.concat(bridges[j].j);\n          } else {\n            bridges[i].j = bridges[j].j.concat(bridges[i].j);\n          }\n          bridges.splice(j--, 1);\n        }\n      }\n    }\n\n    // Sheet\n    const ladderset = new Set();\n    for (let i = 0; i < bridges.length; ++i) {\n      ladderset.add(bridges[i]);\n    }\n\n    let sheet = 1;\n    let ladder = 0;\n    while (ladderset.size > 0) {\n      let bridge = ladderset.values().next().value;\n      ladderset.delete(bridge);\n\n      const sheetset = new Set();\n      sheetset.add(bridge);\n\n      let toMove;\n      do {\n        toMove = new Set();\n        for (const a of sheetset.values()) {\n          for (const b of ladderset.values()) {\n            if (this._areBridgesLinked(a, b)) {\n              toMove.add(b);\n            }\n          }\n        }\n        for (bridge of toMove.values()) {\n          sheetset.add(bridge);\n          ladderset.delete(bridge);\n        }\n      } while (toMove.size > 0);\n\n      for (bridge of sheetset.values()) {\n        bridge.ladder = ladder;\n        bridge.sheet = sheet;\n        bridge.link = sheetset;\n        ++ladder;\n      }\n\n      ++sheet;\n    }\n\n    for (let i = 0; i < bridges.length; ++i) {\n      const bridge = bridges[i];\n\n      // find out if any of the i and j set members already have\n      // a bridge assigned, if so, we're assigning bridge 2\n\n      let betai = 0;\n      let betaj = 0;\n\n      for (let l = 0; l < bridge.i.length; ++l) {\n        if (this._betaPartners[bridge.i[l]][0]) {\n          betai = 1;\n          break;\n        }\n      }\n\n      for (let l = 0; l < bridge.j.length; ++l) {\n        if (this._betaPartners[bridge.j[l]][0]) {\n          betaj = 1;\n          break;\n        }\n      }\n\n      let ss = StructureType.BRIDGE;\n      if (bridge.i.length > 1) {\n        ss = StructureType.STRAND;\n      }\n\n      if (bridge.type === BridgeType.PARALLEL) {\n        let j = 0;\n        for (let k = 0; k < bridge.i.length; ++k) {\n          this._betaPartners[bridge.i[k]][betai] = {\n            residue: bridge.j[j++],\n            ladder: bridge.ladder,\n            parallel: true,\n          };\n        }\n\n        j = 0;\n        for (let k = 0; k < bridge.j.length; ++k) {\n          this._betaPartners[bridge.j[k]][betaj] = {\n            residue: bridge.i[j++],\n            ladder: bridge.ladder,\n            parallel: true,\n          };\n        }\n      } else {\n        let j = bridge.j.length - 1;\n        for (let k = 0; k < bridge.i.length; ++k) {\n          this._betaPartners[bridge.i[k]][betai] = {\n            residue: bridge.j[j--],\n            ladder: bridge.ladder,\n            parallel: false,\n          };\n        }\n\n        j = bridge.i.length - 1;\n        for (let k = 0; k < bridge.j.length; ++k) {\n          this._betaPartners[bridge.j[k]][betaj] = {\n            residue: bridge.i[j--],\n            ladder: bridge.ladder,\n            parallel: false,\n          };\n        }\n      }\n\n      for (let k = bridge.i[0]; k <= bridge.i[bridge.i.length - 1]; ++k) {\n        if (this._ss[k] !== StructureType.STRAND) {\n          this._ss[k] = ss;\n          this._sheet[k] = bridge.sheet;\n        }\n      }\n\n      for (let k = bridge.j[0]; k <= bridge.j[bridge.j.length - 1]; ++k) {\n        if (this._ss[k] !== StructureType.STRAND) {\n          this._ss[k] = ss;\n          this._sheet[k] = bridge.sheet;\n        }\n      }\n    }\n  }\n\n  _testBridge(chainA, from, chainB, to) {\n    let result = BridgeType.NO_BRIDGE;\n\n    const a = chainA[from - 1]._index;\n    const b = chainA[from]._index;\n    const c = chainA[from + 1]._index;\n    const d = chainB[to - 1]._index;\n    const e = chainB[to]._index;\n    const f = chainB[to + 1]._index;\n\n    const isBond = this._hbonds.isBond.bind(this._hbonds);\n    if ((isBond(c, e) && isBond(e, a)) || (isBond(f, b) && isBond(b, d))) {\n      result = BridgeType.PARALLEL;\n    } else if ((isBond(c, d) && isBond(f, a)) || (isBond(e, b) && isBond(b, e))) {\n      result = BridgeType.ANTI_PARALLEL;\n    }\n    return result;\n  }\n\n  // return true if any of the residues in bridge a is identical to any of the residues in bridge b\n  _areBridgesLinked(a, b) {\n    const ai = new Set(a.i);\n    const aj = new Set(a.j);\n\n    for (const i of b.i) {\n      if (ai.has(i) || aj.has(i)) {\n        return true;\n      }\n    }\n\n    for (const i of b.j) {\n      if (ai.has(i) || aj.has(i)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _hasChainBreak(from, to) {\n    for (let i = from + 1; i <= to; ++i) {\n      if (this._complex._residues[i]._sequence !== this._complex._residues[i - 1]._sequence + 1) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nSecondaryStructureMap.StructureType = StructureType;\n","import * as THREE from 'three';\nimport logger from '../utils/logger';\nimport Atom from './Atom';\nimport Chain from './Chain';\nimport Helix from './Helix';\nimport Strand from './Strand';\nimport Sheet from './Sheet';\nimport Component from './Component';\nimport ResidueType from './ResidueType';\nimport Bond from './Bond';\nimport AutoBond from './AutoBond';\nimport AromaticLoopsMarker from './AromaticLoopsMarker';\nimport BiologicalUnit from './BiologicalUnit';\nimport selectors from './selectors';\nimport VoxelWorld from './VoxelWorld';\nimport SecondaryStructureMap from './SecondaryStructureMap';\nimport StructuralElement from './StructuralElement';\n\nconst VOXEL_SIZE = 5.0;\n\nconst { StructureType } = SecondaryStructureMap;\nconst StructuralElementType = StructuralElement.Type;\n\n// see http://www.wwpdb.org/documentation/file-format-content/format33/sect5.html#HELIX\nconst helixClassMap = {\n  [StructureType.HELIX_ALPHA]: 1,\n  [StructureType.HELIX_PI]: 3,\n  [StructureType.HELIX_310]: 5,\n};\n\nconst loopMap = {\n  [StructureType.BRIDGE]: StructuralElementType.BRIDGE,\n  [StructureType.TURN]: StructuralElementType.TURN,\n  [StructureType.BEND]: StructuralElementType.BEND,\n  [StructureType.LOOP]: StructuralElementType.COIL,\n};\n\n/**\n * The entire complex of the molecules under study.\n *\n * @exports Complex\n * @constructor\n */\nclass Complex {\n  constructor() {\n    this._chains = [];\n    this._components = [];\n    this._helices = [];\n    this._sheets = [];\n    this.structures = [];\n\n    this._residueTypes = Object.create(ResidueType.StandardTypes);\n    this._atoms = [];\n    this._residues = [];\n    this._bonds = [];\n    this._sgroups = [];\n    this._molecules = [];\n    this._maskNeedsUpdate = false;\n\n    this.metadata = {};\n\n    this.symmetry = [];\n    this.units = [new BiologicalUnit(this)];\n    this._currentUnit = 0; // default biological unit is the asymmetric unit\n  }\n\n  addAtom(atom) {\n    const index = this._atoms.length;\n    this._atoms.push(atom);\n    return index;\n  }\n\n  addSheet(sheet) {\n    const index = this._sheets.length;\n    this._sheets.push(sheet);\n    return index;\n  }\n\n  addHelix(helix) {\n    const index = this._helices.length;\n    this._helices.push(helix);\n    return index;\n  }\n\n  getAtoms() {\n    return this._atoms;\n  }\n\n  getBonds() {\n    return this._bonds;\n  }\n\n  getAtomCount() {\n    return this._atoms.length;\n  }\n\n  addResidue(residue) {\n    const index = this._residues.length;\n    this._residues.push(residue);\n    return index;\n  }\n\n  updateToFrame(frameData) {\n    this.forEachChain((chain) => {\n      chain.updateToFrame(frameData);\n    });\n  }\n\n  addResidueType(resName) {\n    const rt = this._residueTypes[resName] = new ResidueType(resName, 'Unknown', '');\n    return rt;\n  }\n\n  getResidueCount() {\n    return this._residues.length;\n  }\n\n  getResidues() {\n    return this._residues;\n  }\n\n  getSGroupCount() {\n    return this._sgroups.length;\n  }\n\n  getSGroups() {\n    return this._sgroups;\n  }\n\n  /*\n     Extract atom by its fullname: #chainName#.#residueId#.#atomName#\n     */\n  getAtomByFullname(fullName) {\n    const parts = fullName.split('.');\n    if (parts.length !== 3) {\n      return null;\n    }\n\n    const chainName = parts[0];\n    const resId = parseInt(parts[1], 10);\n    if (Number.isNaN(resId)) {\n      return null;\n    }\n    const atomName = parts[2].toUpperCase();\n\n    let currAtom = null;\n    this.forEachChain((chain) => {\n      if (currAtom) {\n        return;\n      }\n      if (chain._name.localeCompare(chainName) === 0) {\n        chain.forEachResidue((residue) => {\n          if (currAtom) {\n            return;\n          }\n          if (residue._sequence === resId) {\n            residue.forEachAtom((atom) => {\n              if (currAtom) {\n                return;\n              }\n              if (atomName.localeCompare(atom.name) === 0) {\n                currAtom = atom;\n              }\n            });\n          }\n        });\n      }\n    });\n\n    return currAtom;\n  }\n\n  /**\n   * Create a new chain.\n   *\n   * @param {string} name - Chain name.\n   * @returns {Chain} - Newly created chain.\n   */\n  addChain(name) {\n    const result = new Chain(this, name);\n    this._chains.push(result);\n    return result;\n  }\n\n  getChain(name) {\n    for (let i = 0, n = this._chains.length; i < n; ++i) {\n      const chain = this._chains[i];\n      if (chain.getName() === name) {\n        return chain;\n      }\n    }\n    return null;\n  }\n\n  getChainCount() {\n    return this._chains.length;\n  }\n\n  getMolecules() {\n    return this._molecules;\n  }\n\n  getMoleculeCount() {\n    return this._molecules.length;\n  }\n\n  forEachAtom(process) {\n    const atoms = this._atoms;\n    for (let i = 0, n = atoms.length; i < n; ++i) {\n      process(atoms[i]);\n    }\n  }\n\n  forEachBond(process) {\n    const bonds = this._bonds;\n    for (let i = 0, n = bonds.length; i < n; ++i) {\n      process(bonds[i]);\n    }\n  }\n\n  forEachResidue(process) {\n    const residues = this._residues;\n    for (let i = 0, n = residues.length; i < n; ++i) {\n      process(residues[i]);\n    }\n  }\n\n  forEachChain(process) {\n    const chains = this._chains;\n    for (let i = 0, n = chains.length; i < n; ++i) {\n      process(chains[i]);\n    }\n  }\n\n  forEachMolecule(process) {\n    const molecules = this._molecules;\n    const n = molecules.length;\n    for (let i = 0; i < n; ++i) {\n      process(molecules[i]);\n    }\n  }\n\n  forEachSGroup(process) {\n    const groups = this._sgroups;\n    for (let i = 0, n = groups.length; i < n; ++i) {\n      process(groups[i]);\n    }\n  }\n\n  forEachComponent(process) {\n    const components = this._components;\n    for (let i = 0, n = components.length; i < n; ++i) {\n      process(components[i]);\n    }\n  }\n\n  forEachVisibleComponent(process) {\n    const components = this._components;\n    for (let i = 0, n = components.length; i < n; ++i) {\n      process(components[i]);\n    }\n  }\n\n  addBond(left, right, order, type, fixed) {\n    const bond = new Bond(left, right, order, type, fixed);\n    this._bonds.push(bond);\n    return bond;\n  }\n\n  getBondCount() {\n    return this._bonds.length;\n  }\n\n  getResidueType(name) {\n    return this._residueTypes[name] || null;\n  }\n\n  getUnifiedSerial(chain, serial, iCode) {\n    /* eslint-disable no-magic-numbers */\n    const maxSerial = 65536;\n    const chainShift = maxSerial * 256;\n    /* eslint-enable no-magic-numbers */\n    return serial + iCode * maxSerial + chain * chainShift;\n  }\n\n  splitUnifiedSerial(uniSerial) {\n    /* eslint-disable no-magic-numbers */\n    const maxSerial = 65536;\n    const chainShift = maxSerial * 256;\n    /* eslint-enable no-magic-numbers */\n    const chainId = Math.floor(uniSerial / chainShift);\n    const remnant = uniSerial - chainId * chainShift;\n    const insCode = Math.floor(remnant / maxSerial);\n    const ser = remnant - insCode * maxSerial;\n    return { chain: chainId, serial: ser, iCode: insCode };\n  }\n\n  _fillCmpEdit() {\n    const self = this;\n    const components = this._components;\n\n    function addComp() {\n      const comp = new Component(self);\n      comp._index = components.length;\n      components[comp._index] = comp;\n      return comp;\n    }\n\n    this.forEachChain((chain) => {\n      const residues = chain._residues;\n      const resCount = residues.length;\n      if (resCount < 1) {\n        return;\n      }\n      let comp = addComp();\n      let currStart = residues[0]._index;\n\n      for (let i = 0; i < resCount; ++i) {\n        const currRes = residues[i];\n        currRes._component = comp;\n\n        const nextRes = i === resCount - 1 ? null : residues[i + 1];\n        if (!nextRes\n          || !currRes.isConnected(nextRes)\n          || currRes._index !== nextRes._index - 1) {\n          // the last condition is broken and incorrect\n          // the refactoring of the Component is required in order to fix this issue\n          comp.setSubDivs([{\n            start: currStart,\n            end: currRes._index,\n          }]);\n          if (nextRes) {\n            currStart = nextRes._index;\n            comp = addComp();\n          }\n        }\n      }\n    });\n  }\n\n  // This function was added in the moment of despair\n  // It was the dark times for miew\n  _fillCmpNoedit() {\n    const comp = new Component(this);\n    comp._index = 0;\n\n    const residues = this._residues;\n    const resCount = residues.length;\n    if (resCount === 0) {\n      return;\n    }\n\n    const currSubDivs = [];\n    let currStart = 0;\n    for (let i = 0; i < resCount; ++i) {\n      const currRes = residues[i];\n      currRes._component = comp;\n\n      const nextRes = i === resCount - 1 ? null : residues[i + 1];\n      if (!nextRes\n        || !currRes.isConnected(nextRes)) {\n        // wrap up this interval\n        currSubDivs[currSubDivs.length] = {\n          start: currStart,\n          end: i,\n        };\n        if (nextRes) {\n          currStart = i + 1;\n        }\n      }\n    }\n\n    comp.setSubDivs(currSubDivs);\n    this._components[comp._index] = comp;\n  }\n\n  /**\n   * Fill components information.\n   * @param {boolean} enableEditing - Restructure Complex to enable per-component editing.\n   */\n  _fillComponents(enableEditing) {\n    if (enableEditing) {\n      this._fillCmpEdit();\n    } else {\n      this._fillCmpNoedit();\n    }\n  }\n\n  getCurrentUnit() {\n    return this._currentUnit;\n  }\n\n  getDefaultBoundaries() {\n    return this.units[0].getBoundaries();\n  }\n\n  getBoundaries() {\n    return this.units[this._currentUnit].getBoundaries();\n  }\n\n  getTransforms() {\n    return this.units[this._currentUnit].getTransforms();\n  }\n\n  getSelector() {\n    return this.units[this._currentUnit].getSelector();\n  }\n\n  resetCurrentUnit() {\n    this._currentUnit = 0;\n    this.setCurrentUnit(1);\n  }\n\n  setCurrentUnit(newUnit) {\n    if (newUnit !== null && newUnit !== undefined\n      && newUnit !== this._currentUnit\n      && newUnit >= 0\n      && newUnit < this.units.length) {\n      this._currentUnit = newUnit;\n      return true;\n    }\n    return false;\n  }\n\n  _computeBounds() {\n    const { units } = this;\n    for (let i = 0, n = units.length; i < n; ++i) {\n      units[i].computeBoundaries();\n    }\n  }\n\n  onAtomPositionChanged() {\n    this.forEachChain((a) => {\n      a._finalize();\n    });\n    this.forEachComponent((c) => {\n      c.update();\n    });\n    // Update bounding sphere and box\n    this._computeBounds();\n    this._finalizeBonds();\n    this.forEachSGroup((s) => {\n      s._rebuildSGroupOnAtomChange();\n    });\n  }\n\n  update() {\n    if (this._maskNeedsUpdate) {\n      this.updateStructuresMask();\n      this._maskNeedsUpdate = false;\n    }\n  }\n\n  _finalizeBonds() {\n    const bonds = this.getBonds();\n    const n = bonds.length;\n    for (let i = 0; i < n; ++i) {\n      bonds[i]._index = i;\n    }\n  }\n\n  /**\n   * Finalizes complex's inner data(i.e. after parsing).\n   * @param {objects} opts - Build bonds automatically.\n   * @param {boolean} opts.needAutoBonding     - Build bonds automatically.\n   * @param {boolean} opts.detectAromaticLoops - Find/mark aromatic loops.\n   * @param {boolean} opts.enableEditing       - Restructure Complex to enable per-component editing.\n   * @param {Array<Atom>} [opts.serialAtomMap] - Array of atoms ordered by their serials.\n   */\n  finalize(opts) {\n    opts = opts || {};\n    // Put bonds into atoms\n    const bonds = this._bonds;\n    let i;\n    let n;\n    // remove invalid bonds\n    for (i = bonds.length - 1; i >= 0; i--) {\n      const bond = bonds[i];\n      if (bond._left === null || bond._right === null) {\n        bonds.splice(i, 1);\n      } else {\n        bond._left.bonds.push(bond);\n        bond._right.bonds.push(bond);\n      }\n    }\n\n    const residues = this._residues;\n    for (i = 0, n = residues.length; i < n; ++i) {\n      residues[i]._finalize();\n    }\n\n    this.forEachChain((a) => {\n      a._finalize();\n    });\n\n    // WARNING! this MUST be done BEFORE computeBounds is called\n    const { units } = this;\n    for (i = 0, n = units.length; i < n; ++i) {\n      units[i].finalize();\n    }\n    // try setting first biomolecule by defaults\n    this.setCurrentUnit(1);\n\n    const residueHash = {};\n    for (i = 0, n = residues.length; i < n; ++i) {\n      const res = residues[i];\n      // This code is extremely dangerous for non-PDB formats\n      residueHash[this.getUnifiedSerial(\n        res.getChain().getName().charCodeAt(0),\n        res.getSequence(), res.getICode().charCodeAt(0),\n      )] = res;\n    }\n\n    const { structures } = this;\n    for (i = 0, n = structures.length; i < n; ++i) {\n      structures[i]._finalize(opts.serialAtomMap, residueHash, this);\n    }\n\n    const helices = this._helices;\n    for (i = 0, n = helices.length; i < n; ++i) {\n      helices[i]._finalize(opts.serialAtomMap, residueHash, this);\n    }\n\n    const sheets = this._sheets;\n    for (i = 0, n = sheets.length; i < n; ++i) {\n      sheets[i]._finalize(opts.serialAtomMap, residueHash, this);\n    }\n\n    // Update bounding sphere and box\n    this._computeBounds();\n\n    const atoms = this._atoms;\n    for (i = 0, n = atoms.length; i < n; ++i) {\n      const currAtom = atoms[i];\n      currAtom.index = i;\n    }\n\n    if (opts.needAutoBonding) {\n      const autoConnector = new AutoBond(this);\n      autoConnector.build();\n      autoConnector.destroy();\n    }\n\n    const chains = this._chains;\n    for (i = 0, n = chains.length; i < n; ++i) {\n      chains[i]._index = i;\n    }\n\n    for (i = 0, n = residues.length; i < n; ++i) {\n      residues[i]._index = i;\n    }\n\n    // mark non-polar hydrogens\n    for (i = 0, n = atoms.length; i < n; ++i) {\n      const atom = atoms[i];\n      if (atom.flags & Atom.Flags.HYDROGEN && atom.bonds.length === 1) {\n        const bond = atom.bonds[0];\n        const other = (bond._left !== atom && bond._left) || bond._right;\n        if (other.flags & Atom.Flags.CARBON) {\n          atom.flags |= Atom.Flags.NONPOLARH;\n        }\n      }\n    }\n\n    this._finalizeBonds();\n    this._fillComponents(opts.enableEditing);\n\n    const marker = new AromaticLoopsMarker(this);\n    marker.markCycles();\n    if (opts.detectAromaticLoops) { // TODO remove this condition clause, it is for debug purposes only!\n      marker.detectCycles(); // TODO add conditional detection\n    }\n\n    this._finalizeMolecules();\n  }\n\n  _finalizeMolecules() {\n    // add reference to molecule into residue\n    for (let i = 0; i < this._molecules.length; i++) {\n      const molecule = this._molecules[i];\n      const count = molecule.residues.length;\n      for (let j = 0; j < count; j++) {\n        const residue = molecule.residues[j];\n        residue._molecule = molecule;\n      }\n    }\n  }\n\n  updateStructuresMask() {\n    const updater = (structure) => structure.collectMask();\n    this.forEachResidue(updater);\n    this.forEachChain(updater);\n    this.forEachMolecule(updater);\n  }\n\n  countAtomsByMask(mask) {\n    let count = 0;\n\n    this.forEachAtom((atom) => {\n      if ((atom.mask & mask) !== 0) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  getNumAtomsBySelector(selector) {\n    let count = 0;\n\n    this.forEachAtom((atom) => {\n      if (selector.includesAtom(atom)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  resetAtomMask(mask) {\n    this.forEachAtom((atom) => {\n      atom.mask = mask;\n    });\n  }\n\n  markAtoms(selector, mask) {\n    const setMask = mask;\n    const clearMask = ~setMask;\n    let count = 0;\n    const totalSelector = selectors.keyword('And')(selector, this.getSelector());\n\n    this.forEachAtom((atom) => {\n      if (totalSelector.includesAtom(atom)) {\n        atom.mask |= setMask;\n        count++;\n      } else {\n        atom.mask &= clearMask;\n      }\n    });\n    this._maskNeedsUpdate = true;\n\n    return count;\n  }\n\n  markAtomsAdditionally(selector, mask) {\n    const setMask = mask;\n    let count = 0;\n\n    this.forEachAtom((atom) => {\n      if (selector.includesAtom(atom) && (atom.mask & mask) !== mask) {\n        atom.mask |= setMask;\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  clearAtomBits(mask) {\n    const clearMask = ~mask;\n    this.forEachAtom((atom) => {\n      atom.mask &= clearMask;\n    });\n    const reseter = (a) => {\n      a._mask &= clearMask;\n    };\n    this.forEachAtom(reseter);\n    this.forEachResidue(reseter);\n    this.forEachChain(reseter);\n    this.forEachMolecule(reseter);\n  }\n\n  getAtomNames() {\n    if (this.hasOwnProperty('_atomNames')) {\n      return this._atomNames;\n    }\n\n    const dict = {};\n    this.forEachAtom((atom) => {\n      dict[atom.name] = 1;\n    });\n    this._atomNames = Object.keys(dict);\n\n    return this._atomNames;\n  }\n\n  getElements() {\n    if (this.hasOwnProperty('_elements')) {\n      return this._elements;\n    }\n\n    const dict = {};\n    this.forEachAtom((atom) => {\n      dict[atom.element.name] = 1;\n    });\n    this._elements = Object.keys(dict);\n\n    return this._elements;\n  }\n\n  getResidueNames() {\n    if (this.hasOwnProperty('_residueNames')) {\n      return this._residueNames;\n    }\n\n    const dict = {};\n    this.forEachResidue((res) => {\n      dict[res._type._name] = 1;\n    });\n    this._residueNames = Object.keys(dict);\n\n    return this._residueNames;\n  }\n\n  getChainNames() {\n    if (this.hasOwnProperty('_chainNames')) {\n      return this._chainNames;\n    }\n\n    const dict = {};\n    this.forEachChain((chain) => {\n      dict[chain._name] = 1;\n    });\n    this._chainNames = Object.keys(dict);\n\n    return this._chainNames;\n  }\n\n  getAltLocNames() {\n    if (this.hasOwnProperty('_altlocNames')) {\n      return this._altlocNames;\n    }\n\n    const dict = {};\n    this.forEachAtom((atom) => {\n      dict[String.fromCharCode(atom.location)] = 1;\n    });\n    this._altlocNames = Object.keys(dict);\n\n    return this._altlocNames;\n  }\n\n  getVoxelWorld() {\n    if (!this.hasOwnProperty('_voxelWorld')) {\n      try {\n        this._voxelWorld = new VoxelWorld(\n          this.getDefaultBoundaries().boundingBox,\n          new THREE.Vector3(VOXEL_SIZE, VOXEL_SIZE, VOXEL_SIZE),\n        );\n        this._voxelWorld.addAtoms(this);\n      } catch (e) {\n        logger.warn('Unable to create voxel world');\n        this._voxelWorld = null;\n      }\n    }\n\n    return this._voxelWorld;\n  }\n\n  /**\n   * Simple function to make unified routine procedure without code duplication.\n   * @param {Array} srcArray   - Source chemical structure array (will be part of resulting chemical structure array).\n   * @param {Array} dstArray   - Resulting chemical structure array.\n   * @param {number} param     - Parameter for processor.\n   * @param {function} functor - Processor for every element in array.\n   */\n  addElement(srcArray, dstArray, param, functor) {\n    const { length } = srcArray;\n    for (let i = 0; i < length; ++i) {\n      const elem = srcArray[i];\n      functor(elem, param);\n      dstArray.push(elem);\n    }\n  }\n\n  // this function joins multiple complexes into one (this)\n  // atom, bond, ... objects are reused -- so input complexes are no longer valid\n  joinComplexes(complexes) {\n    // clear target complex\n    this._chains = [];\n    this._components = [];\n    this._helices = [];\n    this._sheets = [];\n    this.structures = [];\n    this._atoms = [];\n    this._residues = [];\n    this._bonds = [];\n    this._sgroups = [];\n\n    const self = this;\n    let atomBias = 0;\n    let bondBias = 0;\n    let residueBias = 0;\n    let chainBias = 0;\n    let componentBias = 0;\n\n    function processAtom(atom, bias) {\n      atom.serial += bias;\n      atom.index += bias;\n    }\n\n    function processBond(bond, bias) {\n      bond._index += bias;\n    }\n\n    function processResidue(residue, bias) {\n      residue._index += bias;\n    }\n\n    function processChain(chain, bias) {\n      chain._complex = self;\n      chain._index += bias;\n    }\n\n    function processComponent(component, bias) {\n      component._complex = self;\n      component._index += bias;\n    }\n\n    /**\n     * Simple function to do nothing.\n     */\n    function doNothing() {\n    }\n\n    for (let i = 0; i < complexes.length; ++i) {\n      const c = complexes[i];\n      this.addElement(c._atoms, this._atoms, atomBias, processAtom);\n      this.addElement(c._bonds, this._bonds, bondBias, processBond);\n      this.addElement(c._residues, this._residues, residueBias, processResidue);\n      this.addElement(c._chains, this._chains, chainBias, processChain);\n      this.addElement(c._sheets, this._sheets, 0, doNothing);\n      this.addElement(c._helices, this._helices, 0, doNothing);\n      this.addElement(c._sgroups, this._sgroups, 0, doNothing);\n      this.addElement(c._components, this._components, componentBias, processComponent);\n      this.addElement(c.structures, this.structures, 0, doNothing);\n      // merge residue types\n      for (const rt in c._residueTypes) {\n        if (c._residueTypes.hasOwnProperty(rt)) {\n          this._residueTypes[rt] = c._residueTypes[rt];\n        }\n      }\n\n      atomBias += c._atoms.length;\n      bondBias += c._bonds.length;\n      residueBias += c._residues.length;\n      chainBias += c._chains.length;\n      componentBias += c._components.length;\n    }\n\n    this._computeBounds();\n  }\n\n  /**\n   * Replace secondary structure with calculated one.\n   *\n   * DSSP algorithm implementation is used.\n   *\n   * Kabsch W, Sander C. 1983. Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and\n   * geometrical features. Biopolymers. 22(12):2577-2637. doi:10.1002/bip.360221211.\n   */\n  dssp() {\n    const ssMap = new SecondaryStructureMap(this);\n\n    const structures = this.structures = [];\n    const helices = this._helices = [];\n    const sheets = this._sheets = [];\n\n    const getSheet = (index) => {\n      let item = sheets[index];\n      if (!item) {\n        item = sheets[index] = new Sheet(String(index), 0);\n      }\n      return item;\n    };\n\n    let lastCode;\n    let lastSheetIndex;\n    let lastHelixIndex = 0;\n    let curStructure = null;\n    for (let i = 0, n = this._residues.length; i < n; ++i) {\n      const curCode = ssMap._ss[i];\n      const curResidue = this._residues[i];\n      const curSheetIndex = ssMap._sheet[i];\n\n      // expand the last structure\n      if (curCode === lastCode && curSheetIndex === lastSheetIndex) {\n        curResidue._secondary = curStructure;\n        if (curStructure) {\n          curStructure.term = curResidue;\n        }\n        if (curStructure instanceof Helix) {\n          curStructure.length++;\n        }\n        continue;\n      }\n\n      // create a new structure\n      const helixClass = helixClassMap[curCode];\n      const loopType = loopMap[curCode];\n      if (curCode === StructureType.STRAND) {\n        const curSheet = getSheet(curSheetIndex);\n        curStructure = new Strand(curSheet, curResidue, curResidue, 0, null, null);\n        curSheet.addStrand(curStructure);\n      } else if (helixClass !== undefined) {\n        lastHelixIndex++;\n        curStructure = new Helix(helixClass, curResidue, curResidue, lastHelixIndex, String(lastHelixIndex), '', 1);\n        helices.push(curStructure);\n      } else if (loopType !== undefined) {\n        curStructure = new StructuralElement(loopType, curResidue, curResidue);\n      } else {\n        curStructure = null;\n      }\n\n      if (curStructure) {\n        structures.push(curStructure);\n      }\n\n      curResidue._secondary = curStructure;\n\n      lastCode = curCode;\n      lastSheetIndex = curSheetIndex;\n    }\n\n    this._sheets = sheets.filter((_sheet) => true); // squeeze sheets array\n  }\n}\n\nComplex.prototype.id = 'Complex';\nComplex.prototype.name = '';\n\nexport default Complex;\n","import * as THREE from 'three';\nimport utils from '../utils';\n\nfunction pow2ceil(v) {\n  let p = 2;\n  v = (v - 1) >> 1;\n  while (v) {\n    p <<= 1;\n    v >>= 1;\n  }\n  return p;\n}\n\n/**\n * Volume constructor\n *\n * @param {Object} type - Float32Array, Int8Array, etc...\n * @param {Object|Array} dimensions - number of data points on each axis (x, y, z)\n * @param {Box3} box - bounding box defining data place in metric space,\n *                     it's corners correspond to extreme data points\n * @param {Number} vecSize - dimension of the field data point (1 = scalar, 3 = 3D vector)\n * @param {Object} data - typed array of the same type as specified by the 1st parameter,\n *                        layout: point by point along X,\n *                                row by row along Y,\n *                                plane by plane along Z\n * @param {Number} volumeInfo - volume info values to define threshold to filter the noise\n */\n\nclass Volume {\n  constructor(type, dimensions, box, vecSize, data, volumeInfo) {\n    this._box = box.clone();\n    this._dimVec = Math.max(Math.floor(vecSize || 1), 1);\n    this._volumeInfo = volumeInfo;\n\n    if (dimensions instanceof Array) {\n      [this._dimX, this._dimY, this._dimZ] = dimensions;\n    } else {\n      this._dimX = dimensions.x;\n      this._dimY = dimensions.y;\n      this._dimZ = dimensions.z;\n    }\n    this._dimX = Math.max(Math.floor(this._dimX), 1);\n    this._dimY = Math.max(Math.floor(this._dimY), 1);\n    this._dimZ = Math.max(Math.floor(this._dimZ), 1);\n\n    this._rowElements = this._dimVec * this._dimX;\n    this._planeElements = this._rowElements * this._dimY;\n    this._totalElements = this._planeElements * this._dimZ;\n\n    this._data = data || utils.allocateTyped(type, this._totalElements);\n\n    // override getter/setter for vector fields\n    switch (this._dimVec) {\n      case 1:\n        break;\n\n      case 2:\n        this.getValue = function (x, y, z) {\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\n          return [this._data[idx], this._data[idx + 1]];\n        };\n\n        this.setValue = function (x, y, z, a, b) {\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\n          this._data[idx] = a;\n          this._data[idx + 1] = b;\n        };\n\n        this.addValue = function (x, y, z, a, b) {\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\n          this._data[idx] += a;\n          this._data[idx + 1] += b;\n        };\n        break;\n\n      case 3:\n        this.getValue = function (x, y, z) {\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\n          return [this._data[idx], this._data[idx + 1], this._data[idx + 2]];\n        };\n\n        this.setValue = function (x, y, z, a, b, c) {\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\n          this._data[idx] = a;\n          this._data[idx + 1] = b;\n          this._data[idx + 2] = c;\n        };\n\n        this.addValue = function (x, y, z, a, b, c) {\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\n          this._data[idx] += a;\n          this._data[idx + 1] += b;\n          this._data[idx + 2] += c;\n        };\n        break;\n\n      default:\n        throw new Error('Volume: invalid vector dimension');\n    }\n  }\n\n  // default getter assumes it's a scalar field\n  getValue(x, y, z) {\n    return this._data[x + y * this._rowElements + z * this._planeElements];\n  }\n\n  // default setter assumes it's a scalar field\n  setValue(x, y, z, val) {\n    this._data[x + y * this._rowElements + z * this._planeElements] = val;\n  }\n\n  // default adder assumes it's a scalar field\n  addValue(x, y, z, val) {\n    this._data[x + y * this._rowElements + z * this._planeElements] += val;\n  }\n\n  getDimensions() {\n    return [this._dimX, this._dimY, this._dimZ];\n  }\n\n  getBox() {\n    return this._box;\n  }\n\n  getVolumeInfo() {\n    return this._volumeInfo;\n  }\n\n  getCellSize() {\n    const boxSize = new THREE.Vector3();\n    this._box.getSize(boxSize);\n    const res = new THREE.Vector3();\n    res.x = this._dimX > 1 ? boxSize.x / (this._dimX - 1) : 0;\n    res.y = this._dimY > 1 ? boxSize.y / (this._dimY - 1) : 0;\n    res.z = this._dimZ > 1 ? boxSize.z / (this._dimZ - 1) : 0;\n    return res;\n  }\n\n  computeGradient() {\n    if (this._dimVec !== 1) {\n      // gradient can only be computed for scalar fields\n      return null;\n    }\n\n    // create a 3D vector field of gradients\n    const gradient = new Volume(Float32Array, [this._dimX, this._dimY, this._dimZ], this._box, 3);\n\n    // calculate cell side lengths\n    const vl = this.getCellSize();\n\n    // gradient axis scaling values and averaging factors, to correctly\n    // calculate the gradient for volumes with irregular cell spacing\n    const vs = new THREE.Vector3(-0.5 / vl.x, -0.5 / vl.y, -0.5 / vl.z);\n\n    // TODO Check for intended bug in VMD (min is zero)\n    function clamp(val, min, max) {\n      return Math.min(max, Math.max(min, val));\n    }\n\n    const xSize = this._dimX;\n    const ySize = this._dimY;\n    const zSize = this._dimZ;\n    const volMap = this._data;\n\n    function _voxelValue(x, y, z) {\n      return volMap[z * xSize * ySize + y * xSize + x];\n    }\n\n    for (let zi = 0; zi < zSize; ++zi) {\n      const zm = clamp(zi - 1, 0, zSize - 1);\n      const zp = clamp(zi + 1, 0, zSize - 1);\n\n      for (let yi = 0; yi < ySize; ++yi) {\n        const ym = clamp(yi - 1, 0, ySize - 1);\n        const yp = clamp(yi + 1, 0, ySize - 1);\n\n        for (let xi = 0; xi < xSize; ++xi) {\n          const xm = clamp(xi - 1, 0, xSize - 1);\n          const xp = clamp(xi + 1, 0, xSize - 1);\n\n          // Calculate the volume gradient at each grid cell.\n          // Gradients are now stored unnormalized, since we need them in pure\n          // form in order to draw field lines etc.  Shading code will now have\n          // to do renormalization for itself on-the-fly.\n\n          // XXX this gradient is only correct for orthogonal grids, since\n          // we're using the array index offsets rather to calculate the gradient\n          // rather than voxel coordinate offsets.  This will have to be\n          // re-worked for non-orthogonal datasets.\n\n          gradient.setValue(\n            xi, yi, zi,\n            (_voxelValue(xp, yi, zi) - _voxelValue(xm, yi, zi)) * vs.x,\n            (_voxelValue(xi, yp, zi) - _voxelValue(xi, ym, zi)) * vs.y,\n            (_voxelValue(xi, yi, zp) - _voxelValue(xi, yi, zm)) * vs.z,\n          );\n        }\n      }\n    }\n\n    return gradient;\n  }\n\n  normalize() {\n    const data = this._data;\n\n    // get min/max\n    let min = data[0];\n    let max = data[0];\n    for (let i = 1; i < data.length; ++i) {\n      min = Math.min(min, data[i]);\n      max = Math.max(max, data[i]);\n    }\n\n    const d = 1.0 / (max - min);\n    if (d === 0) {\n      return;\n    }\n\n    // normalize\n    for (let i = 0; i < data.length; ++i) {\n      data[i] = d * (data[i] - min);\n    }\n  }\n\n  getTiledTextureStride() {\n    return [this._dimX + 2, this._dimY + 2];\n  }\n\n  buildTiledTexture() {\n    let tilesX = Math.ceil(Math.sqrt(this._dimZ * this._dimY / this._dimX));\n\n    let width = tilesX * (this._dimX + 2) - 1;\n    width = pow2ceil(width);\n    tilesX = Math.floor(width / (this._dimX + 2));\n\n    const tilesY = Math.ceil(this._dimZ / tilesX);\n    let height = tilesY * (this._dimY + 2) - 1;\n    height = pow2ceil(height);\n\n    const data = new Uint8Array(width * height);\n\n    let src;\n    let dst;\n    for (let tileRow = 0; tileRow < tilesY; ++tileRow) {\n      // process each pixel row of this tile row\n      for (let row = 0; row < this._dimY; ++row) {\n        src = tileRow * tilesX * this._planeElements + row * this._rowElements;\n        dst = width * (tileRow * (this._dimY + 2) + row);\n        // copy a series of rows through several XY planes\n        for (let t = 0; t < tilesX; ++t) {\n          // copy one row of one XY plane\n          for (let x = 0; x < this._dimX; ++x) {\n            data[dst++] = 255.0 * this._data[src++];\n          }\n\n          // repeat last pixel of previous tile\n          data[dst++] = 255.0 * this._data[src - 1];\n\n          if (t < tilesX - 1) {\n            // skip to the same row of next XY plane\n            src += this._planeElements - this._rowElements;\n            // repeat first pixel of next tile\n            data[dst++] = 255.0 * this._data[src];\n          }\n        }\n      }\n    }\n\n    // fill pixels between tile rows with copy of edge pixels\n    for (let tileRow = 0; tileRow < tilesY; ++tileRow) {\n      // copy last pixel row of this tile row to the following pixel row of the texture\n      src = width * (tileRow * (this._dimY + 2) + this._dimY - 1);\n      dst = src + width;\n      for (let x = 0; x < width; ++x) {\n        data[dst++] = data[src++];\n      }\n      if (tileRow < tilesY - 1) {\n        // copy first pixel row of next tile row to the preceding pixel row of the texture\n        src = width * (tileRow + 1) * (this._dimY + 2);\n        dst = src - width;\n        for (let x = 0; x < width; ++x) {\n          data[dst++] = data[src++];\n        }\n      }\n    }\n\n    const texture = new THREE.DataTexture(\n      data, width, height, THREE.LuminanceFormat, THREE.UnsignedByteType,\n      THREE.UVMapping, THREE.ClampToEdgeWrapping, THREE.ClampToEdgeWrapping, THREE.LinearFilter, THREE.LinearFilter,\n    );\n    texture.needsUpdate = true;\n    return texture;\n  }\n\n  /* ********************************************************************************\n   *\n   * Methods that provide direct access to internal array (for better performance)\n   *\n   ******************************************************************************** */\n\n  getData() {\n    return this._data;\n  }\n\n  getDirectIdx(x, y, z) {\n    return x * this._dimVec + y * this._rowElements + z * this._planeElements;\n  }\n\n  getStrideX() {\n    return this._dimVec;\n  }\n\n  getStrideY() {\n    return this._rowElements;\n  }\n\n  getStrideZ() {\n    return this._planeElements;\n  }\n}\n\nVolume.prototype.id = 'Volume';\n\nexport default Volume;\n","import Atom from './chem/Atom';\nimport Element from './chem/Element';\nimport Bond from './chem/Bond';\nimport Residue from './chem/Residue';\nimport ResidueType from './chem/ResidueType';\nimport Chain from './chem/Chain';\nimport Helix from './chem/Helix';\nimport Strand from './chem/Strand';\nimport Sheet from './chem/Sheet';\nimport SGroup from './chem/SGroup';\nimport Assembly from './chem/Assembly';\nimport Complex from './chem/Complex';\nimport Volume from './chem/Volume';\nimport VoxelWorld from './chem/VoxelWorld';\nimport selectors from './chem/selectors';\nimport Molecule from './chem/Molecule';\n\nexport default {\n  Atom,\n  Element,\n  Bond,\n  Residue,\n  ResidueType,\n  Chain,\n  Helix,\n  Strand,\n  Sheet,\n  SGroup,\n  Assembly,\n  Complex,\n  Volume,\n  VoxelWorld,\n  selectors,\n  Molecule,\n};\n","/**\n * Residue Molecule.\n *\n * @param {Complex} complex - Molecular complex this Molecule belongs to.\n * @param {String} name - Molecule's name.\n * @param {Integer} index - Molecule's index in file.\n *\n * @exports Molecule\n * @constructor\n */\nclass Molecule {\n  constructor(complex, name, index) {\n    this.complex = complex;\n    this.name = name || '';\n    this.residues = [];\n    this.mask = 1 | 0;\n    this.index = index || -1; // start with 1\n  }\n\n  forEachResidue(process) {\n    const { residues } = this;\n    for (let i = 0, n = residues.length; i < n; ++i) {\n      process(residues[i]);\n    }\n  }\n\n  collectMask() {\n    let mask = 0xffffffff;\n    const { residues } = this;\n    for (let i = 0, n = residues.length; i < n; ++i) {\n      mask &= residues[i]._mask;\n    }\n    this.mask = mask;\n  }\n}\n\nexport default Molecule;\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport * as THREE from 'three';\n\nclass CSS2DObject extends THREE.Object3D {\n  constructor(element) {\n    super();\n    const self = this;\n    this._element = element;\n    this._element.style.position = 'absolute';\n    this.addEventListener('removed', () => {\n      if (self._element.parentNode !== null) {\n        self._element.parentNode.removeChild(self._element);\n      }\n    });\n  }\n\n  getElement() {\n    return this._element;\n  }\n\n  /**\n   * Sets label transparency.\n   *\n   * @param {number} transp    - in [0; 1] 1 means fully transparent\n   */\n  setTransparency(transp) {\n    const el = this.getElement();\n    if (el === null) {\n      return;\n    }\n    if (transp === 1.0) {\n      el.style.display = 'none';\n      return;\n    }\n    el.style.display = 'inline';\n    const op = 1.0 - transp;\n    const top = op.toString();\n    const op100 = op * 100;\n    el.style.opacity = top;\n    el.style.filter = `alpha(opacity=${op100})`; // IE fallback\n  }\n\n  clone() {\n    const obj = new CSS2DObject(this._element);\n    obj.copy(this);\n    return obj;\n  }\n}\n\nexport default CSS2DObject;\n","import * as THREE from 'three';\n\nclass RCGroup extends THREE.Group {\n  raycast(raycaster, intersects) {\n    if (!this.visible) {\n      return;\n    }\n\n    const { children } = this;\n    for (let i = 0, n = children.length; i < n; ++i) {\n      children[i].raycast(raycaster, intersects);\n    }\n  }\n\n  enableSubset(mask, innerOnly) {\n    const { children } = this;\n    for (let i = 0, n = children.length; i < n; ++i) {\n      if (children[i].enableSubset) {\n        children[i].enableSubset(mask, innerOnly);\n      }\n    }\n  }\n\n  disableSubset(mask, innerOnly) {\n    const { children } = this;\n    for (let i = 0, n = children.length; i < n; ++i) {\n      if (children[i].disableSubset) {\n        children[i].disableSubset(mask, innerOnly);\n      }\n    }\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  updateToFrame(frameData) {\n    const { children } = this;\n    for (let i = 0, n = children.length; i < n; ++i) {\n      if (children[i].updateToFrame) {\n        children[i].updateToFrame(frameData);\n      }\n    }\n  }\n\n  getSubset(mask, innerOnly) {\n    const totalSubset = [];\n    const { children } = this;\n    for (let i = 0, n = children.length; i < n; ++i) {\n      if (children[i].getSubset) {\n        Array.prototype.push.apply(totalSubset, children[i].getSubset(mask, innerOnly));\n      }\n    }\n    return totalSubset;\n  }\n}\n\nexport default RCGroup;\n","export default \"uniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\n\\nattribute vec2 uv;\\nattribute vec3 position;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\";","/* eslint-disable no-magic-numbers */\nimport * as THREE from 'three';\nimport logger from '../utils/logger';\nimport CSS2DObject from './CSS2DObject';\nimport RCGroup from './RCGroup';\nimport vertexScreenQuadShader from './shaders/ScreenQuad.vert';\nimport fragmentScreenQuadFromTex from './shaders/ScreenQuadFromTex.frag';\nimport fragmentScreenQuadFromTexWithDistortion from './shaders/ScreenQuadFromTexWithDistortion.frag';\n\nconst LAYERS = {\n  DEFAULT: 0, VOLUME: 1, TRANSPARENT: 2, PREPASS_TRANSPARENT: 3, VOLUME_BFPLANE: 4, COLOR_FROM_POSITION: 5, SHADOWMAP: 6,\n};\n\nconst SELECTION_LAYERS = [ // These layers, that are used in the selection by ray casting\n  LAYERS.DEFAULT, LAYERS.TRANSPARENT,\n];\n\nTHREE.Object3D.prototype.resetTransform = function () {\n  this.position.set(0, 0, 0);\n  this.quaternion.set(0, 0, 0, 1);\n  this.scale.set(1, 1, 1);\n};\n\n// update world matrix of this object and all its ancestors\nTHREE.Object3D.prototype.updateMatrixWorldRecursive = function () {\n  if (this.parent != null) {\n    this.parent.updateMatrixWorldRecursive();\n  }\n  this.updateMatrixWorld();\n};\n// add object to parent, saving objects' world transform\nTHREE.Object3D.prototype.addSavingWorldTransform = (function () {\n  const _worldMatrixInverse = new THREE.Matrix4();\n\n  return function (object) {\n    if (object instanceof THREE.Object3D) {\n      _worldMatrixInverse.copy(this.matrixWorld).invert();\n      _worldMatrixInverse.multiply(object.matrixWorld);\n      object.matrix.copy(_worldMatrixInverse);\n      object.matrix.decompose(object.position, object.quaternion, object.scale);\n      this.add(object);\n    }\n  };\n}());\n\n// render a tiny transparent quad in the center of the screen\nTHREE.WebGLRenderer.prototype.renderDummyQuad = (function () {\n  const _material = new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.0, depthWrite: false });\n\n  const _scene = new THREE.Scene();\n  const _quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(0.01, 0.01), _material);\n  _scene.add(_quad);\n\n  const _camera = new THREE.OrthographicCamera(-0.5, 0.5, 0.5, -0.5, -10000, 10000);\n  _camera.position.z = 100;\n\n  return function () {\n    this.render(_scene, _camera);\n  };\n}());\n\nTHREE.WebGLRenderer.prototype.renderScreenQuad = (function () {\n  const _scene = new THREE.Scene();\n  const _quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(1.0, 1.0));\n  _scene.add(_quad);\n\n  const _camera = new THREE.OrthographicCamera(-0.5, 0.5, 0.5, -0.5, -10000, 10000);\n  _camera.position.z = 100;\n\n  return function (material) {\n    _quad.material = material;\n    this.render(_scene, _camera);\n  };\n}());\n\nTHREE.Matrix4.prototype.isIdentity = (function () {\n  const identity = new THREE.Matrix4();\n  return function () {\n    return identity.equals(this);\n  };\n}());\n\nTHREE.Matrix4.prototype.applyToPointsArray = function (array, stride, w) {\n  if (!array || !stride || stride < 3) {\n    return array;\n  }\n  w = w || 0; // use point as normal by default\n  const e = this.elements;\n  for (let i = 0; i < array.length; i += stride) {\n    const x = array[i];\n    const y = array[i + 1];\n    const z = array[i + 2];\n\n    const persp = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\n    array[i] = (e[0] * x + e[4] * y + e[8] * z + e[12] * w) * persp;\n    array[i + 1] = (e[1] * x + e[5] * y + e[9] * z + e[13] * w) * persp;\n    array[i + 2] = (e[2] * x + e[6] * y + e[10] * z + e[14] * w) * persp;\n  }\n  return array;\n};\n\nclass ScreenQuadMaterial extends THREE.RawShaderMaterial {\n  constructor(params) {\n    if (params.uniforms === undefined) {\n      params.uniforms = {};\n    }\n    params.uniforms.srcTex = { type: 't', value: null };\n    params.vertexShader = vertexScreenQuadShader;\n    params.transparent = false;\n    params.depthTest = false;\n    params.depthWrite = false;\n    super(params);\n  }\n}\n\nTHREE.WebGLRenderer.prototype.renderScreenQuadFromTex = (function () {\n  const _material = new ScreenQuadMaterial({\n    uniforms: { opacity: { type: 'f', value: 1.0 } },\n    fragmentShader: fragmentScreenQuadFromTex,\n    transparent: true,\n  });\n\n  return function (srcTex, opacity) {\n    _material.uniforms.srcTex.value = srcTex;\n    _material.transparent = (opacity < 1.0);\n    _material.uniforms.opacity.value = opacity;\n    this.renderScreenQuad(_material);\n  };\n}());\n\nTHREE.WebGLRenderer.prototype.renderScreenQuadFromTexWithDistortion = (function () {\n  const _material = new ScreenQuadMaterial({\n    uniforms: { coef: { type: 'f', value: 1.0 } },\n    fragmentShader: fragmentScreenQuadFromTexWithDistortion,\n  });\n\n  return function (srcTex, coef) {\n    _material.uniforms.srcTex.value = srcTex;\n    _material.uniforms.coef.value = coef;\n    this.renderScreenQuad(_material);\n  };\n}());\n\n/**\n * @param {number} angle - Field of view in degrees.\n */\nTHREE.PerspectiveCamera.prototype.setMinimalFov = function (angle) {\n  if (this.aspect >= 1.0) {\n    this.fov = angle;\n  } else {\n    this.fov = THREE.MathUtils.radToDeg(2 * Math.atan(Math.tan(THREE.MathUtils.degToRad(angle) * 0.5) / this.aspect));\n  }\n};\n\n/**\n * @param {THREE.PerspectiveCamera} camera - Base camera for this stereo camera.\n * @param {number} angle - Field of view in degrees.\n */\nTHREE.StereoCamera.prototype.updateHalfSized = function (camera, angle) {\n  const originalAspect = camera.aspect;\n  const originalFov = camera.fov;\n\n  camera.aspect = originalAspect / 2.0;\n  camera.setMinimalFov(angle);\n  camera.updateProjectionMatrix();\n\n  this.update(camera);\n\n  camera.aspect = originalAspect;\n  camera.fov = originalFov;\n  camera.updateProjectionMatrix();\n};\n\n/**\n * @param {number} radius - Radius of bounding sphere in angstroms to fit on screen.\n * @param {number} angle - Field of view in degrees.\n */\nTHREE.PerspectiveCamera.prototype.setDistanceToFit = function (radius, angle) {\n  this.position.z = radius / Math.sin(0.5 * THREE.MathUtils.degToRad(angle));\n};\n\n/**\n * @param {RCGroup} gfxObj - All objects on scene.\n * @param {THREE.PerspectiveCamera} camera - Camera used for rendering.\n * @param {number} clipPlane - Distance to clip plane.\n * @param {number} fogFarPlane - Distance to fog far plane.\n */\nTHREE.Raycaster.prototype.intersectVisibleObject = function (gfxObj, camera, clipPlane, fogFarPlane) {\n  const intersects = this.intersectObject(gfxObj, false);\n  if (intersects.length === 0) {\n    return null;\n  }\n\n  // find point closest to camera that doesn't get clipped by camera near plane or clipPlane (if it exists)\n  const nearPlane = Math.min(camera.near, clipPlane);\n  let i;\n  let p = intersects[0];\n  const v = new THREE.Vector3();\n  for (i = 0; i < intersects.length; ++i) {\n    p = intersects[i];\n    v.copy(p.point);\n    v.applyMatrix4(camera.matrixWorldInverse);\n    if (v.z <= -nearPlane) {\n      break;\n    }\n  }\n  if (i === intersects.length) {\n    return null;\n  }\n\n  // check that selected intersection point is not clipped by camera far plane or occluded by fog (if it exists)\n  const farPlane = Math.min(camera.far, fogFarPlane);\n  v.copy(p.point);\n  v.applyMatrix4(camera.matrixWorldInverse);\n  if (v.z <= -farPlane) {\n    return null;\n  }\n  return p;\n};\n\nTHREE.Matrix4.prototype.extractScale = (function () {\n  const _v = new THREE.Vector3();\n\n  return function (scale) {\n    if (scale === undefined) {\n      logger.debug('extractScale(): new is too expensive operation to do it on-the-fly');\n      scale = _v.clone();\n    }\n\n    const te = this.elements;\n    scale.x = _v.set(te[0], te[1], te[2]).length();\n    scale.y = _v.set(te[4], te[5], te[6]).length();\n    scale.z = _v.set(te[8], te[9], te[10]).length();\n\n    // if determine is negative, we need to invert one scale\n    const det = this.determinant();\n    if (det < 0) {\n      scale.x = -scale.x;\n    }\n    return scale;\n  };\n}());\n\nfunction _calcCylinderMatrix(posBegin, posEnd, radius) {\n  const posCenter = posBegin.clone().lerp(posEnd, 0.5);\n  const matScale = new THREE.Matrix4();\n  matScale.makeScale(radius, posBegin.distanceTo(posEnd), radius);\n\n  const matRotHalf = new THREE.Matrix4();\n  matRotHalf.makeRotationX(Math.PI / 2);\n\n  const matRotLook = new THREE.Matrix4();\n  const vUp = new THREE.Vector3(0, 1, 0);\n  matRotLook.lookAt(posCenter, posEnd, vUp);\n\n  matRotLook.multiply(matRotHalf);\n  matRotLook.multiply(matScale);\n  matRotLook.setPosition(posCenter);\n  return matRotLook;\n}\n\nfunction _calcChunkMatrix(eye, target, up, rad) {\n  const matScale = new THREE.Matrix4();\n  matScale.makeScale(rad.x, rad.y, 0);\n\n  const matRotLook = new THREE.Matrix4();\n  matRotLook.lookAt(eye, target, up);\n  matRotLook.multiply(matScale);\n  matRotLook.setPosition(eye);\n\n  return matRotLook;\n}\n\nfunction _groupHasGeometryToRender(group) {\n  let hasGeoms = false;\n  group.traverse((node) => {\n    if (node.hasOwnProperty('geometry') || node instanceof CSS2DObject) {\n      hasGeoms = true;\n    }\n  });\n  return hasGeoms;\n}\n\nfunction _buildDistorionMesh(widthSegments, heightSegements, coef) {\n  // solve equation r_u = r_d * (1 + k * r_d^2)\n  // for r_d using iterations\n  // takes: r_u^2\n  // returns: r_d / r_u  factor that can be used to distort point coords\n  function calcInverseBarrel(r2) {\n    const epsilon = 1e-5;\n    let prevR2 = 0.0;\n    let curR2 = r2;\n    let dr = 1.0;\n    while (Math.abs(curR2 - prevR2) > epsilon) {\n      dr = 1.0 + coef * curR2;\n      prevR2 = curR2;\n      curR2 = r2 / (dr * dr);\n    }\n\n    return 1.0 / dr;\n  }\n\n  const geo = new THREE.PlaneBufferGeometry(2.0, 2.0, widthSegments, heightSegements);\n\n  const pos = geo.getAttribute('position');\n  for (let i = 0; i < pos.count; ++i) {\n    const x = pos.array[3 * i];\n    const y = pos.array[3 * i + 1];\n    const c = calcInverseBarrel(x * x + y * y);\n    pos.setXY(i, c * x, c * y);\n  }\n\n  return geo;\n}\n\nTHREE.BufferAttribute.prototype.copyAtList = function (attribute, indexList) {\n  console.assert(\n    this.itemSize === attribute.itemSize,\n    'DEBUG: BufferAttribute.copyAtList buffers have different item size.',\n  );\n  const { itemSize } = this;\n  for (let i = 0, n = indexList.length; i < n; ++i) {\n    for (let j = 0; j < itemSize; ++j) {\n      this.array[i * itemSize + j] = attribute.array[indexList[i] * itemSize + j];\n    }\n  }\n  return this;\n};\n\nfunction fillArray(array, value, startIndex, endIndex) {\n  startIndex = (typeof startIndex !== 'undefined') ? startIndex : 0;\n  endIndex = (typeof endIndex !== 'undefined') ? endIndex : array.length;\n  for (let i = startIndex; i < endIndex; ++i) {\n    array[i] = value;\n  }\n}\n\n/** @param {THREE.Object3D} object - Parent object. */\nfunction removeChildren(object) {\n  const { children } = object;\n  for (let i = 0, n = children.length; i < n; ++i) {\n    const child = children[i];\n    child.parent = null;\n    child.dispatchEvent({ type: 'removed' });\n  }\n  object.children = [];\n}\n\nfunction clearTree(object) {\n  object.traverse((obj) => {\n    if (obj instanceof THREE.Mesh || obj instanceof THREE.LineSegments || obj instanceof THREE.Line) {\n      obj.geometry.dispose();\n    }\n  });\n  removeChildren(object);\n}\n\nfunction destroyObject(object) {\n  clearTree(object);\n  if (object.parent) {\n    object.parent.remove(object);\n  } else {\n    object.dispatchEvent({ type: 'removed' });\n  }\n}\n\nfunction belongToSelectLayers(object) {\n  for (let i = 0; i < SELECTION_LAYERS.length; i++) {\n    if (((object.layers.mask >> SELECTION_LAYERS[i]) & 1) === 1) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction processObjRenderOrder(root, idMaterial) {\n  // set renderOrder to 0 for Backdrop and to 1 in other cases to render Backdrop earlier all other materials\n  const renderOrder = +(idMaterial !== 'BA');\n  root.traverse((object) => {\n    if (object.isGroup) {\n      object.renderOrder = renderOrder;\n    }\n  });\n}\n\nfunction applySelectionMaterial(geo) {\n  geo.traverse((node) => {\n    if ('material' in node) {\n      node.material = node.material.clone(true);\n      // using z-offset to magically fix selection rendering artifact (on z-sprites)\n      node.material.setValues({\n        depthFunc: THREE.LessEqualDepth,\n        overrideColor: true,\n        fog: false,\n        lights: false,\n        shadowmap: false,\n      });\n      node.material.setUberOptions({ fixedColor: new THREE.Color(0xFFFF00), zOffset: -1e-6 });\n    }\n  });\n}\n\nfunction getMiddlePoint(point1, point2, optionalTarget) {\n  const result = optionalTarget || new THREE.Vector3();\n\n  result.set(0, 0, 0);\n  result.addScaledVector(point1, 0.5);\n  result.addScaledVector(point2, 0.5);\n\n  return result;\n}\n\n// Monkey-patch for \"InstancedBufferGeometry.instanceCount becomes undefined after copy()\"\n// https://github.com/mrdoob/three.js/issues/22151\nconst _oldInstancedBufferGeometryCopy = THREE.InstancedBufferGeometry.prototype.copy;\n\nTHREE.InstancedBufferGeometry.prototype.copy = function (source) {\n  _oldInstancedBufferGeometryCopy.call(this, source);\n  if (this.instanceCount === undefined) {\n    this.instanceCount = Infinity;\n  }\n};\n\nexport default {\n  calcCylinderMatrix: _calcCylinderMatrix,\n  calcChunkMatrix: _calcChunkMatrix,\n  groupHasGeometryToRender: _groupHasGeometryToRender,\n  buildDistorionMesh: _buildDistorionMesh,\n  RCGroup,\n  fillArray,\n  clearTree,\n  destroyObject,\n  belongToSelectLayers,\n  processObjRenderOrder,\n  applySelectionMaterial,\n  getMiddlePoint,\n  LAYERS,\n};\n","export default \"precision highp float;\\n\\nvarying vec2 vUv;\\nuniform sampler2D srcTex;\\nuniform float opacity;\\n\\nvoid main() {\\n  vec4 color = texture2D(srcTex, vUv);\\n  gl_FragColor = vec4(color.xyz, color.a * opacity);\\n}\\n\";","export default \"precision highp float;\\n\\nvarying vec2 vUv;\\nuniform sampler2D srcTex;\\nuniform float coef;\\n\\nvoid main() {\\n  vec2 uv = vUv * 2.0 - 1.0;\\n  float r2 = dot(uv, uv);\\n  vec2 tc = uv * (1.0 + coef * r2);\\n  if (!all(lessThan(abs(tc), vec2(1.0))))\\n    discard;\\n  tc = 0.5 * (tc + 1.0);\\n  gl_FragColor = texture2D(srcTex, tc);\\n}\\n\";","import * as THREE from 'three';\nimport gfxutils from './gfx/gfxutils';\n\nconst _defaultBoundaries = {\n  boundingBox: new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)),\n  boundingSphere: new THREE.Sphere(new THREE.Vector3(0, 0, 0), 1),\n};\n\nclass Visual extends gfxutils.RCGroup {\n  constructor(name, dataSource) {\n    super(name, dataSource);\n    this.name = name;\n    this._dataSource = dataSource;\n  }\n\n  release() {\n    if (this.parent) {\n      this.parent.remove(this);\n    }\n  }\n\n  getDataSource() {\n    return this._dataSource;\n  }\n\n  getBoundaries() {\n    return _defaultBoundaries;\n  }\n}\n\nexport default Visual;\n","function _ensureArray(x) {\n  if (x === null || x === undefined || Array.isArray(x)) {\n    return x;\n  }\n  return [x];\n}\n\n/** An indexed list of objects or classes. */\nclass EntityList {\n  /**\n   * Create a list of objects.\n   * The objects can be indexed by one or more properties for the later retrieval.\n   *\n   * @param {!Array<Object>=} entities A list of objects to automatically register at creation time.\n   * @param {!Array<string>=} indices A list of property names to use for case-insensitive indexing.\n   *   By default, a single `.id` property is used.\n   * @see EntityList#register\n   */\n  constructor(entities = [], indices = ['id']) {\n    this._list = [];\n    this._dict = {};\n    this._indices = [...indices];\n    this._indices.forEach((index) => {\n      this._dict[index] = {};\n    });\n\n    entities.forEach((entity) => this.register(entity));\n  }\n\n  /**\n   * Add a value to the end of a list.\n   * The list will contain only one copy of the value.\n   *\n   * @param {!Array} list An array.\n   * @param {*} value A value to add.\n   * @see EntityList.unregisterFromList\n   * @see EntityList.registerInDict\n   */\n  static registerInList(list, value) {\n    if (!list.includes(value)) {\n      list.push(value);\n    }\n  }\n\n  /**\n   * Remove a value from a list if it is there.\n   *\n   * @param {!Array} list An array.\n   * @param {*} value A value to remove.\n   * @see EntityList.registerInList\n   */\n  static unregisterFromList(list, value) {\n    const pos = list.indexOf(value);\n    if (pos !== -1) {\n      list.splice(pos, 1);\n    }\n  }\n\n  /**\n   * Add a value to a dictionary.\n   * The value may be stored under multiple different keys (aliases).\n   * There might be multiples values stored under the same key.\n   *\n   * @param {!Object<string,*>} dict A dictionary.\n   * @param {!Array<string>} keys An array of keys.\n   * @param {*} value A value to add.\n   * @see EntityList.unregisterFromDict\n   * @see EntityList.registerInList\n   */\n  static registerInDict(dict, keys, value) {\n    keys.forEach((key) => {\n      key = key.toLowerCase();\n      const list = dict[key] = dict[key] || [];\n      if (!list.includes(value)) {\n        list.push(value);\n      }\n    });\n  }\n\n  /**\n   * Remove a value from a dictionary.\n   * The value may be stored under multiple different keys (aliases).\n   * There might be multiples values stored under the same key.\n   *\n   * @param {!Object<string,*>} dict A dictionary.\n   * @param {!Array<string>} keys An array of keys.\n   * @param {*} value A value to add.\n   * @see EntityList.registerInDict\n   */\n  static unregisterFromDict(dict, keys, value) {\n    keys.forEach((key) => {\n      key = key.toLowerCase();\n      const list = dict[key];\n      if (list) {\n        const pos = list.indexOf(value);\n        if (pos !== -1) {\n          list.splice(pos, 1);\n        }\n        if (list.length === 0) {\n          delete dict[key];\n        }\n      }\n    });\n  }\n\n  /**\n   * Add an entity to this list.\n   *\n   * @param {!Object} entity An object or a class to register. The object must include all\n   *   properties specified as indices on construction.\n   * @see EntityList#unregister\n   */\n  register(entity) {\n    EntityList.registerInList(this._list, entity);\n    this._indices.forEach((index) => {\n      EntityList.registerInDict(this._dict[index], _ensureArray(entity[index]), entity);\n    });\n  }\n\n  /**\n   * Remove an entity from this list.\n   *\n   * @param {!Object} entity An object or a class to unregister. The object may be\n   *   missing from the list but it must include all properties specified as indices\n   *   on construction.\n   * @see EntityList#register\n   */\n  unregister(entity) {\n    EntityList.unregisterFromList(this._list, entity);\n    this._indices.forEach((index) => {\n      EntityList.unregisterFromDict(this._dict[index], _ensureArray(entity[index]), entity);\n    });\n  }\n\n  /**\n   * An ordered list of all registered entities.\n   * It is a read-only copy, use {@link EntityList#register} and {@link EntityList#unregister}\n   * to modify it.\n   *\n   * @type {!Array<Object>}\n   */\n  get all() {\n    return [...this._list];\n  }\n\n  /**\n   * The first registered entity.\n   * Use it if you do not care which entity you are referring to.\n   *\n   * @type {Object=}\n   */\n  get first() {\n    return this._list[0];\n  }\n\n  /**\n   * Retrieve a list of keys for the index.\n   *\n   * @param {string=} index One of the indices specified during the list construction. If omitted,\n   *   the first of the indices is used.\n   * @returns {!Array<string>} An unordered list of keys in the index, i.e. particular property\n   *   values for all registered entities.\n   */\n  keys(index) {\n    return Object.keys(this._dict[index || this._indices[0]]);\n  }\n\n  /**\n   * Retrieve an entity by its key.\n   *\n   * @param {string} key A case-insensitive property value to look-up.\n   * @param {string=} index One of the indices specified during the list construction. If omitted,\n   *   the first of the indices is used.\n   * @returns {Object=} An object registered in the index under the key. If there are multiple\n   *   objects under the same key, the first one is returned.\n   */\n  get(key, index) {\n    const dict = this._dict[index || this._indices[0]];\n    if (dict) {\n      const values = dict[key && key.toLowerCase()];\n      return values && values.length > 0 ? values[0] : undefined;\n    }\n    return undefined;\n  }\n}\n\nexport default EntityList;\n","import settings from '../settings';\nimport logger from './logger';\n\nfunction makeContextDependent(prototype) {\n  Object.defineProperties(prototype, {\n    logger: {\n      get() {\n        return this.context && this.context.logger ? this.context.logger : logger;\n      },\n    },\n    settings: {\n      get() {\n        return this.context && this.context.settings ? this.context.settings : settings;\n      },\n    },\n  });\n}\n\nexport default makeContextDependent;\n","import * as THREE from 'three';\n\nclass CollisionSphere {\n  constructor(position, radius) {\n    this._position = position;\n    this._radius = radius;\n  }\n\n  static _sphere = new THREE.Sphere();\n\n  raycast(raycaster) {\n    const sphere = CollisionSphere._sphere;\n    sphere.set(this._position, this._radius);\n\n    const p = new THREE.Vector3();\n    if (raycaster.ray.intersectSphere(sphere, p)) {\n      return {\n        distance: raycaster.ray.origin.distanceTo(p),\n        point: p,\n      };\n    }\n    return null;\n  }\n}\n\nconst SphereCollisionGeo = (base) => class extends base {\n  constructor(count, ...args) {\n    super(...args);\n    this._objects = new Array(count);\n    this.boundingSphere = null;\n    this.boundingBox = null;\n  }\n\n  setSphere(idx, position, radius) {\n    this._objects[idx] = new CollisionSphere(position, radius);\n  }\n\n  raycast(raycaster, intersects) {\n    // TODO raycast with bounding sphere? How to deal with updates?\n    for (let i = 0, n = this._objects.length; i < n; ++i) {\n      const inters = this._objects[i].raycast(raycaster);\n      if (inters) {\n        inters.chunkIdx = i;\n        intersects.push(inters);\n      }\n    }\n  }\n\n  computeBoundingBox() {\n    const objects = this._objects;\n    let { boundingBox } = this;\n    if (boundingBox === null) {\n      this.boundingBox = boundingBox = new THREE.Box3();\n    }\n    boundingBox.makeEmpty();\n    for (let i = 0, n = objects.length; i < n; ++i) {\n      boundingBox.expandByPoint(objects[i]._position);\n    }\n  }\n\n  computeBoundingSphere() {\n    this.computeBoundingBox();\n    const objects = this._objects;\n    const { boundingBox } = this;\n    // Build bounding sphere\n    let radiusSquared = 0.0;\n    const center = new THREE.Vector3();\n    boundingBox.getCenter(center);\n    for (let i = 0, n = objects.length; i < n; ++i) {\n      const pos = objects[i]._position;\n      const lengthSquared = center.distanceToSquared(pos);\n      if (radiusSquared < lengthSquared) {\n        radiusSquared = lengthSquared;\n      }\n    }\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new THREE.Sphere();\n    }\n    this.boundingSphere.set(center, Math.sqrt(radiusSquared));\n  }\n};\nexport default SphereCollisionGeo;\n","import _ from 'lodash';\nimport * as THREE from 'three';\nimport utils from '../../utils';\nimport SphereCollisionGeo from './SphereCollisionGeo';\n\nconst tmpColor = new THREE.Color();\n\nconst OFFSET_SIZE = 4;\nconst COLOR_SIZE = 3;\nconst { copySubArrays } = utils;\n\nfunction setArrayXYZ(arr, idx, x, y, z) {\n  arr[idx] = x;\n  arr[idx + 1] = y;\n  arr[idx + 2] = z;\n}\n\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\n  arr[idx] = x;\n  arr[idx + 1] = y;\n  arr[idx + 2] = z;\n  arr[idx + 3] = w;\n}\nclass InstancedSpheresGeometry extends SphereCollisionGeo(THREE.InstancedBufferGeometry) {\n  constructor(spheresCount, sphereComplexity, useZSprites) {\n    super(spheresCount);\n    this._sphGeometry = useZSprites ? new THREE.PlaneBufferGeometry(2, 2, 1, 1)\n      : new THREE.SphereBufferGeometry(1, sphereComplexity * 2, sphereComplexity, 0, Math.PI * 2, 0, Math.PI);\n    this._init(spheresCount, this._sphGeometry);\n  }\n\n  setItem(itemIdx, itemPos, itemRad) {\n    setArrayXYZW(this._offsets, itemIdx * OFFSET_SIZE, itemPos.x, itemPos.y, itemPos.z, itemRad);\n    this.setSphere(itemIdx, itemPos, itemRad);\n  }\n\n  setColor(itemIdx, colorVal) {\n    tmpColor.set(colorVal);\n    setArrayXYZ(this._colors, itemIdx * COLOR_SIZE, tmpColor.r, tmpColor.g, tmpColor.b);\n  }\n\n  startUpdate() {\n    return true;\n  }\n\n  finishUpdate() {\n    this.getAttribute('offset').needsUpdate = true;\n    this.getAttribute('color').needsUpdate = true;\n  }\n\n  finalize() {\n    this.finishUpdate();\n    this.computeBoundingSphere();\n  }\n\n  setOpacity(chunkIndices, value) {\n    const alphaArr = this._alpha;\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\n      alphaArr[chunkIndices[i]] = value;\n    }\n    this.getAttribute('alphaColor').needsUpdate = true;\n  }\n\n  getSubset(chunkIndices) {\n    const instanceCount = chunkIndices.length;\n    const geom = new THREE.InstancedBufferGeometry();\n    this._init.call(geom, instanceCount, this._sphGeometry);\n\n    copySubArrays(this._offsets, geom._offsets, chunkIndices, OFFSET_SIZE);\n    copySubArrays(this._colors, geom._colors, chunkIndices, COLOR_SIZE);\n    geom.boundingSphere = this.boundingSphere;\n    geom.boundingBox = this.boundingBox;\n    return [geom];\n  }\n\n  _init(spheresCount, sphereGeo) {\n    this.copy(sphereGeo);\n\n    this._offsets = utils.allocateTyped(Float32Array, spheresCount * OFFSET_SIZE);\n    this._colors = utils.allocateTyped(Float32Array, spheresCount * COLOR_SIZE);\n    const alpha = this._alpha = utils.allocateTyped(Float32Array, spheresCount);\n    _.fill(alpha, 1.0);\n\n    this.setAttribute('offset', new THREE.InstancedBufferAttribute(this._offsets, OFFSET_SIZE, false, 1));\n    this.setAttribute('color', new THREE.InstancedBufferAttribute(this._colors, COLOR_SIZE, false, 1));\n    this.setAttribute('alphaColor', new THREE.InstancedBufferAttribute(alpha, 1, false, 1));\n  }\n}\nexport default InstancedSpheresGeometry;\n","import * as THREE from 'three';\n\n/**\n * This class adds raycasting interface to indexed\n * THREE.BufferGeometry.\n * @constructor\n */\n\nclass RaycastableBufferGeometry extends THREE.BufferGeometry {\n  // This method was copied from three.js\n\n  static _vA = new THREE.Vector3();\n\n  static _vB = new THREE.Vector3();\n\n  static _vC = new THREE.Vector3();\n\n  static _uvA = new THREE.Vector2();\n\n  static _uvB = new THREE.Vector2();\n\n  static _uvC = new THREE.Vector2();\n\n  static _barycoord = new THREE.Vector3();\n\n  static _intersectionPoint = new THREE.Vector3();\n\n  uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n    const barycoord = RaycastableBufferGeometry._barycoord;\n    THREE.Triangle.barycoordFromPoint(point, p1, p2, p3, barycoord);\n\n    uv1.multiplyScalar(barycoord.x);\n    uv2.multiplyScalar(barycoord.y);\n    uv3.multiplyScalar(barycoord.z);\n\n    uv1.add(uv2).add(uv3);\n    return uv1.clone();\n  }\n\n  checkIntersection(object, raycaster, ray, pA, pB, pC, point) {\n    const intersect = ray.intersectTriangle(pA, pB, pC, false, point);\n\n    if (intersect === null) {\n      return null;\n    }\n\n    return {\n      point: point.clone(),\n    };\n  }\n\n  checkBufferGeometryIntersection(object, raycaster, ray, position, uv, a, b, c) {\n    const vA = RaycastableBufferGeometry._vA;\n    const vB = RaycastableBufferGeometry._vB;\n    const vC = RaycastableBufferGeometry._vC;\n    const intersectionPoint = RaycastableBufferGeometry._intersectionPoint;\n\n    vA.fromBufferAttribute(position, a);\n    vB.fromBufferAttribute(position, b);\n    vC.fromBufferAttribute(position, c);\n\n    const intersection = this.checkIntersection(\n      object, raycaster, ray, vA, vB, vC, intersectionPoint,\n    );\n    if (intersection) {\n      if (uv) {\n        const uvA = RaycastableBufferGeometry._uvA;\n        const uvB = RaycastableBufferGeometry._uvB;\n        const uvC = RaycastableBufferGeometry._uvC;\n\n        uvA.fromBufferAttribute(uv, a);\n        uvB.fromBufferAttribute(uv, b);\n        uvC.fromBufferAttribute(uv, c);\n        intersection.uv = this.uvIntersection(\n          intersectionPoint, vA, vB, vC, uvA, uvB, uvC,\n        );\n      }\n      const normal = new THREE.Vector3();\n      THREE.Triangle.getNormal(vA, vB, vC, normal);\n      intersection.face = new THREE.Face3(a, b, c, normal);\n      intersection.faceIndex = a;\n    }\n\n    return intersection;\n  }\n\n  raycast(raycaster, intersects) {\n    const { ray } = raycaster;\n    if (this.boundingSphere === null) {\n      this.computeBoundingSphere();\n    }\n\n    if (raycaster.ray.intersectsSphere(this.boundingSphere) === false) {\n      return;\n    }\n\n    if (this.boundingBox !== null) {\n      if (ray.intersectsBox(this.boundingBox) === false) {\n        return;\n      }\n    }\n\n    let a;\n    let b;\n    let c;\n    const {\n      index,\n      attributes: { position, uv },\n    } = this;\n\n    if (index === null) {\n      return;\n    }\n    // indexed buffer geometry\n    for (let i = 0, l = index.count; i < l; i += 3) {\n      a = index.getX(i);\n      b = index.getX(i + 1);\n      c = index.getX(i + 2);\n\n      const intersection = this.checkBufferGeometryIntersection(this, raycaster, ray, position, uv, a, b, c);\n\n      if (intersection) {\n        intersection.faceIndex = Math.floor(i / 3); // triangle number in indices buffer semantics\n        intersects.push(intersection);\n      }\n    }\n  }\n}\n\nexport default RaycastableBufferGeometry;\n","import _ from 'lodash';\nimport * as THREE from 'three';\nimport utils from '../../utils';\nimport RaycastableBufferGeometry from './RaycastableBufferGeometry';\n\nconst MAX_IDC_16BIT = 65535;\nconst VEC_SIZE = 3;\nconst tmpColor = new THREE.Color();\n\n/**\n * This class represents geometry which consists of separate chunks.\n * Each chunk has same index and similar geometry with equal points and faces count.\n * Each chunk has by default only one color.\n * @constructor\n */\n\nclass ChunkedObjectsGeometry extends RaycastableBufferGeometry {\n  constructor(chunkGeo, chunksCount) {\n    super();\n\n    if (this.constructor === ChunkedObjectsGeometry) {\n      throw new Error('Can not instantiate abstract class!');\n    }\n\n    this._chunkGeo = chunkGeo;\n\n    this._init(chunkGeo, chunksCount);\n  }\n\n  startUpdate() {\n    return true;\n  }\n\n  finishUpdate() {\n    this.getAttribute('position').needsUpdate = true;\n    this.getAttribute('normal').needsUpdate = true;\n    this.getAttribute('color').needsUpdate = true;\n  }\n\n  setColor(chunkIdx, colorVal) {\n    tmpColor.set(colorVal);\n    const colors = this._colors;\n    const chunkSize = this._chunkSize;\n    for (let i = chunkIdx * chunkSize, end = i + chunkSize; i < end; ++i) {\n      const idx = i * VEC_SIZE;\n      colors[idx] = tmpColor.r;\n      colors[idx + 1] = tmpColor.g;\n      colors[idx + 2] = tmpColor.b;\n    }\n  }\n\n  finalize() {\n    this.finishUpdate();\n    this.computeBoundingSphere();\n  }\n\n  setOpacity(chunkIndices, value) {\n    const alphaArr = this._alpha;\n    const chunkSize = this._chunkSize;\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\n      const left = chunkIndices[i] * chunkSize;\n      _.fill(alphaArr, value, left, left + chunkSize);\n    }\n    this.getAttribute('alphaColor').needsUpdate = true;\n  }\n\n  raycast(raycaster, intersects) {\n    const inters = [];\n    super.raycast(raycaster, inters);\n    const facesPerChunk = this._chunkGeo.index.count / 3;\n    for (let i = 0, n = inters.length; i < n; ++i) {\n      if (!inters[i].hasOwnProperty('faceIndex')) {\n        continue;\n      }\n      inters[i].chunkIdx = Math.floor(inters[i].faceIndex / facesPerChunk);\n      intersects.push(inters[i]);\n    }\n  }\n\n  getSubset(chunkIndices) {\n    const instanceCount = chunkIndices.length;\n    const geom = new THREE.BufferGeometry();\n    this._init.call(geom, this._chunkGeo, instanceCount);\n\n    const srcPos = this._positions;\n    const srcNorm = this._normals;\n    const srcColor = this._colors;\n\n    const dstPos = geom._positions;\n    const dstNorm = geom._normals;\n    const dstColor = geom._colors;\n\n    const chunkSize = this._chunkSize * VEC_SIZE;\n\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\n      const dstPtOffset = i * chunkSize;\n      const ptIdxBegin = chunkIndices[i] * chunkSize;\n      const ptIdxEnd = ptIdxBegin + chunkSize;\n      dstPos.set(srcPos.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset);\n      dstNorm.set(srcNorm.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset);\n      dstColor.set(srcColor.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset);\n    }\n\n    geom.boundingSphere = this.boundingSphere;\n    geom.boundingBox = this.boundingBox;\n    return [geom];\n  }\n\n  _init(chunkGeo, chunksCount) {\n    const chunkSize = this._chunkSize = chunkGeo.attributes.position.count;\n    const chunkIndex = chunkGeo.index.array;\n    const chunkIndexSize = chunkIndex.length;\n    const pointsCount = this._chunkSize * chunksCount;\n    const use32bitIndex = pointsCount > MAX_IDC_16BIT;\n    const indexSize = chunkIndexSize * chunksCount;\n    const index = this._index = utils.allocateTyped(use32bitIndex ? Uint32Array : Uint16Array, indexSize);\n    this._positions = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE);\n    this._normals = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE);\n    this._colors = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE);\n    const alpha = this._alpha = utils.allocateTyped(Float32Array, pointsCount);\n    _.fill(alpha, 1.0);\n\n    for (let i = 0; i < chunksCount; ++i) {\n      const offset = i * chunkIndexSize;\n      const posOffset = i * chunkSize;\n      index.set(chunkIndex, offset);\n      for (let j = 0; j < chunkIndexSize; ++j) {\n        index[offset + j] += posOffset;\n      }\n    }\n\n    this.setIndex(new THREE.BufferAttribute(this._index, 1));\n    this.setAttribute('position', new THREE.BufferAttribute(this._positions, VEC_SIZE));\n    this.setAttribute('normal', new THREE.BufferAttribute(this._normals, VEC_SIZE));\n    this.setAttribute('color', new THREE.BufferAttribute(this._colors, VEC_SIZE));\n    this.setAttribute('alphaColor', new THREE.BufferAttribute(alpha, 1));\n  }\n}\nexport default ChunkedObjectsGeometry;\n","import * as THREE from 'three';\nimport utils from '../../utils';\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry';\nimport SphereCollisionGeo from './SphereCollisionGeo';\n\nconst VEC_SIZE = 3;\n\nclass SimpleSpheresGeometry extends SphereCollisionGeo(ChunkedObjectsGeometry) {\n  constructor(spheresCount, sphereComplexity) {\n    const sphGeometry = new THREE.SphereBufferGeometry(\n      1, sphereComplexity * 2, sphereComplexity,\n      0, Math.PI * 2, 0, Math.PI,\n    );\n    super(spheresCount, sphGeometry, spheresCount);\n\n    const normals = this._normals;\n    const geoNormals = sphGeometry.attributes.normal.array;\n    const chunkSize = this._chunkSize;\n    this._chunkPos = this._chunkGeo.attributes.position.array;\n    this._tmpPositions = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE);\n    for (let i = 0; i < spheresCount; ++i) {\n      normals.set(geoNormals, chunkSize * VEC_SIZE * i);\n    }\n  }\n\n  setItem(itemIdx, itemPos, itemRad) {\n    const tmpPos = this._tmpPositions;\n    const chunkSize = this._chunkSize;\n    const geoPos = this._chunkPos;\n\n    for (let i = 0; i < chunkSize; ++i) {\n      const idx = i * 3;\n      tmpPos[idx] = itemPos.x + geoPos[idx] * itemRad;\n      tmpPos[idx + 1] = itemPos.y + geoPos[idx + 1] * itemRad;\n      tmpPos[idx + 2] = itemPos.z + geoPos[idx + 2] * itemRad;\n    }\n\n    this._positions.set(tmpPos, chunkSize * itemIdx * VEC_SIZE);\n    this.setSphere(itemIdx, itemPos, itemRad);\n  }\n}\nexport default SimpleSpheresGeometry;\n","import * as THREE from 'three';\nimport utils from '../../utils';\nimport gfxutils from '../gfxutils';\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry';\n\nconst VEC_SIZE = 3;\nconst centerPos = new THREE.Vector3();\nconst tmpVector = new THREE.Vector3();\nconst normMtx = new THREE.Matrix3();\n\nclass Simple2CCylindersGeometry extends ChunkedObjectsGeometry {\n  constructor(instanceCount, polyComplexity) {\n    const cylGeometry = new THREE.CylinderBufferGeometry(1, 1, 1.0, Math.max(3, polyComplexity), 2, true);\n    super(cylGeometry, 2 * instanceCount);\n\n    const chunkSize = this._chunkSize;\n    this._chunkPos = this._chunkGeo.attributes.position.array;\n    this._chunkNorms = this._chunkGeo.attributes.normal.array;\n    this._tmpVector = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE);\n  }\n\n  setItem(itemIdx, botPos, topPos, itemRad) {\n    const chunkSize = this._chunkSize;\n    const firstOffset = chunkSize * 2 * itemIdx * VEC_SIZE;\n    const secondOffset = firstOffset + chunkSize * VEC_SIZE;\n\n    const tmpArray = this._tmpVector;\n    const geoPos = this._chunkPos;\n    const geoNorm = this._chunkNorms;\n\n    centerPos.lerpVectors(botPos, topPos, 0.5);\n    const mtx1 = gfxutils.calcCylinderMatrix(botPos, centerPos, itemRad);\n    normMtx.getNormalMatrix(mtx1);\n\n    let idx;\n    for (let i = 0; i < chunkSize; ++i) {\n      idx = i * VEC_SIZE;\n      tmpVector.fromArray(geoPos, idx);\n      tmpVector.applyMatrix4(mtx1);\n      tmpVector.toArray(tmpArray, idx);\n    }\n    this._positions.set(tmpArray, firstOffset);\n\n    // now shift center to get another part of the cylinder\n    centerPos.sub(botPos);\n    for (let i = 0; i < chunkSize; ++i) {\n      idx = i * VEC_SIZE;\n      tmpArray[idx] += centerPos.x;\n      tmpArray[idx + 1] += centerPos.y;\n      tmpArray[idx + 2] += centerPos.z;\n    }\n    this._positions.set(tmpArray, secondOffset);\n\n    for (let i = 0; i < chunkSize; ++i) {\n      idx = i * VEC_SIZE;\n      tmpVector.fromArray(geoNorm, idx);\n      tmpVector.applyMatrix3(normMtx);\n      tmpVector.toArray(tmpArray, idx);\n    }\n    this._normals.set(tmpArray, firstOffset);\n    this._normals.set(tmpArray, secondOffset);\n  }\n\n  setColor(itemIdx, colorVal1, colorVal2) {\n    const first = 2 * itemIdx;\n    super.setColor(first, colorVal1);\n\n    const second = first + 1;\n    super.setColor(second, colorVal2);\n  }\n}\n\nexport default Simple2CCylindersGeometry;\n","import * as THREE from 'three';\nimport utils from '../../utils';\n\nconst MAX_POINTS_COUNT_16BIT = 65536;\nconst PTS_PER_TRIANGLE = 3;\n\nclass CylinderBufferGeometry extends THREE.BufferGeometry {\n  constructor(\n    radiusTop,\n    radiusBottom,\n    height,\n    radialSegments,\n    heightSegments,\n    openEnded,\n  ) {\n    super();\n\n    const thetaStart = 0;\n    const thetaLength = 2 * Math.PI;\n\n    this.type = 'CylinderBufferGeometry';\n\n    this.parameters = {\n      radiusTop,\n      radiusBottom,\n      height,\n      radialSegments,\n      heightSegments,\n      openEnded,\n    };\n\n    const hasTop = openEnded === false && radiusTop > 0;\n    const hasBottom = openEnded === false && radiusBottom > 0;\n    const vertexCount = (heightSegments + 1) * radialSegments\n      + hasTop * (radialSegments + 1)\n      + hasBottom * (radialSegments + 1);\n    const facesCount = (2 * heightSegments + hasTop + hasBottom) * radialSegments;\n\n    const heightHalf = height / 2;\n\n    /* eslint-disable no-magic-numbers */\n    const positions = new THREE.BufferAttribute(utils.allocateTyped(Float32Array, vertexCount * 3), 3);\n    const normals = new THREE.BufferAttribute(utils.allocateTyped(Float32Array, vertexCount * 3), 3);\n    const indices = new THREE.Uint16BufferAttribute(utils.allocateTyped(Uint16Array, facesCount * PTS_PER_TRIANGLE), 1);\n    /* eslint-enable no-magic-numbers */\n\n    const uvs = new THREE.BufferAttribute(utils.allocateTyped(Float32Array, vertexCount * 2), 2);\n    console.assert(vertexCount < MAX_POINTS_COUNT_16BIT, 'DEBUG: Cylinder Geometry has too many vertices (65536 max).');\n\n    let currVtxIdx = 0;\n    let currFaceIdx = 0;\n    const tanTheta = -(radiusBottom - radiusTop) / height;\n\n    // setup cylinder data\n    for (let y = 0; y <= heightSegments; y++) {\n      // faces\n      if (y !== heightSegments) {\n        for (let i = 0; i < radialSegments; i++) {\n          const v1 = currVtxIdx + i;\n          const v2 = currVtxIdx + radialSegments + i;\n          const v3 = currVtxIdx + radialSegments + ((i + 1) % radialSegments);\n          const v4 = currVtxIdx + ((i + 1) % radialSegments);\n\n          indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, v1, v4, v2);\n          currFaceIdx++;\n          indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, v2, v4, v3);\n          currFaceIdx++;\n        }\n      }\n\n      // vertices\n      const v = y / heightSegments;\n      const radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n      for (let x = 0; x < radialSegments; x++) {\n        const u = x / radialSegments;\n\n        const vx = radius * Math.sin(u * thetaLength + thetaStart);\n        const vy = v * height - heightHalf;\n        const vz = radius * Math.cos(u * thetaLength + thetaStart);\n\n        const normal = new THREE.Vector3(\n          vx,\n          Math.sqrt(vx * vx + vz * vz) * tanTheta,\n          vz,\n        ).normalize();\n\n        positions.setXYZ(currVtxIdx, vx, vy, vz);\n        normals.setXYZ(currVtxIdx, normal.x, normal.y, normal.z);\n        uvs.setXY(currVtxIdx, u, v);\n        ++currVtxIdx;\n      }\n    }\n\n    // top cap\n    if (hasTop) {\n      const startTIdx = currVtxIdx;\n      const lastIdx = currVtxIdx + radialSegments;\n      for (let fTIdx = 0; fTIdx < radialSegments; ++fTIdx) {\n        const currSrcIdx = currVtxIdx - radialSegments;\n        positions.setXYZ(\n          currVtxIdx,\n          positions.getX(currSrcIdx),\n          positions.getY(currSrcIdx),\n          positions.getZ(currSrcIdx),\n        );\n        normals.setXYZ(currVtxIdx, 0, 1, 0);\n        uvs.setXY(currVtxIdx, 1, 1);\n\n        const nextTVtx = startTIdx + ((fTIdx + 1) % radialSegments);\n        indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, currVtxIdx, nextTVtx, lastIdx);\n        currFaceIdx++;\n        currVtxIdx++;\n      }\n\n      positions.setXYZ(currVtxIdx, 0, heightHalf, 0);\n      normals.setXYZ(currVtxIdx, 0, 1, 0);\n      uvs.setXY(currVtxIdx, 1, 1);\n      ++currVtxIdx;\n    }\n\n    // bottom cap\n    if (hasBottom) {\n      const startBIdx = currVtxIdx;\n      const lastBIdx = currVtxIdx + radialSegments;\n      for (let fBIdx = 0; fBIdx < radialSegments; ++fBIdx) {\n        const currSrcBIdx = fBIdx;\n        positions.setXYZ(\n          currVtxIdx,\n          positions.getX(currSrcBIdx), positions.getY(currSrcBIdx), positions.getZ(currSrcBIdx),\n        );\n        normals.setXYZ(currVtxIdx, 0, -1, 0);\n        uvs.setXY(currVtxIdx, 0, 0);\n\n        const nextBVtx = startBIdx + ((fBIdx + 1) % radialSegments);\n        indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, nextBVtx, currVtxIdx, lastBIdx);\n        currFaceIdx++;\n        currVtxIdx++;\n      }\n\n      positions.setXYZ(currVtxIdx, 0, -heightHalf, 0);\n      normals.setXYZ(currVtxIdx, 0, -1, 0);\n      uvs.setXY(currVtxIdx, 0, 0);\n    }\n\n    this.setIndex(indices);\n    this.setAttribute('position', positions);\n    this.setAttribute('normal', normals);\n    this.setAttribute('uv', uvs);\n  }\n\n  clone() {\n    const { parameters } = this;\n\n    return new CylinderBufferGeometry(\n      parameters.radiusTop,\n      parameters.radiusBottom,\n      parameters.height,\n      parameters.radialSegments,\n      parameters.heightSegments,\n      parameters.openEnded,\n    );\n  }\n}\n\nexport default CylinderBufferGeometry;\n","import _ from 'lodash';\nimport * as THREE from 'three';\nimport utils from '../../utils';\nimport gfxutils from '../gfxutils';\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry';\nimport CylinderBufferGeometry from './CylinderBufferGeometry';\n\nconst tmpColor = new THREE.Color();\nconst invMatrix = new THREE.Matrix4();\n\nconst OFFSET_SIZE = 4;\nconst COLOR_SIZE = 3;\nconst { copySubArrays } = utils;\n\nfunction setArrayXYZ(arr, idx, x, y, z) {\n  arr[idx] = x;\n  arr[idx + 1] = y;\n  arr[idx + 2] = z;\n}\n\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\n  arr[idx] = x;\n  arr[idx + 1] = y;\n  arr[idx + 2] = z;\n  arr[idx + 3] = w;\n}\n\nfunction sortNumber(a, b) {\n  return a - b;\n}\n\nfunction _prepareCylinderInfo(chunkIndices) {\n  chunkIndices.sort(sortNumber);\n  const chunksIdx = [];\n  const cylinderInfo = [];\n  for (let i = 0, n = chunkIndices.length; i < n; ++i) {\n    const val = chunkIndices[i];\n    const even = (val | 0) % 2 === 0;\n    const newPar = {\n      first: false,\n      second: false,\n    };\n    if (even) {\n      newPar.first = true;\n      newPar.second = i + 1 < n && chunkIndices[i + 1] === chunkIndices[i] + 1;\n      if (newPar.second) {\n        ++i;\n      }\n    } else {\n      newPar.second = true;\n    }\n    chunksIdx.push(Math.floor(val / 2));\n    cylinderInfo.push(newPar);\n  }\n  return { indices: chunksIdx, cylinderInfo };\n}\n\nfunction _assignOpacity(cylinderInfo, color1, color2) {\n  for (let i = 0, n = cylinderInfo.length; i < n; ++i) {\n    const info = cylinderInfo[i];\n    if (!info.first) {\n      color1[COLOR_SIZE * i] = -0.5;\n    }\n    if (!info.second) {\n      color2[COLOR_SIZE * i] = -0.5;\n    }\n  }\n}\nclass Instanced2CCylindersGeometry extends THREE.InstancedBufferGeometry {\n  constructor(instanceCount, polyComplexity, useZSprites, openEnded) {\n    super();\n    this._useZSprites = useZSprites;\n    this._cylGeometry = useZSprites ? new THREE.PlaneBufferGeometry(2, 2, 1, 1)\n      : new CylinderBufferGeometry(1, 1, 1.0, Math.max(3, polyComplexity), 2, openEnded);\n    this._init(instanceCount, this._cylGeometry, this._useZSprites);\n\n    this._collisionGeo = new Simple2CCylindersGeometry(instanceCount, 3);\n  }\n\n  setItem(itemIdx, botPos, topPos, itemRad) {\n    const matrix = gfxutils.calcCylinderMatrix(botPos, topPos, itemRad);\n    let me = matrix.elements;\n    const mtxOffset = itemIdx * OFFSET_SIZE;\n\n    this._collisionGeo.setItem(itemIdx, botPos, topPos, itemRad);\n    setArrayXYZW(this._matVector1, mtxOffset, me[0], me[4], me[8], me[12]);\n    setArrayXYZW(this._matVector2, mtxOffset, me[1], me[5], me[9], me[13]);\n    setArrayXYZW(this._matVector3, mtxOffset, me[2], me[6], me[10], me[14]);\n\n    if (this._useZSprites) {\n      invMatrix.copy(matrix).invert();\n      me = invMatrix.elements;\n      setArrayXYZW(this._invmatVector1, mtxOffset, me[0], me[4], me[8], me[12]);\n      setArrayXYZW(this._invmatVector2, mtxOffset, me[1], me[5], me[9], me[13]);\n      setArrayXYZW(this._invmatVector3, mtxOffset, me[2], me[6], me[10], me[14]);\n    }\n  }\n\n  setColor(itemIdx, colorVal1, colorVal2) {\n    const colorIdx = itemIdx * COLOR_SIZE;\n    tmpColor.set(colorVal1);\n    setArrayXYZ(this._color1, colorIdx, tmpColor.r, tmpColor.g, tmpColor.b);\n    tmpColor.set(colorVal2);\n    setArrayXYZ(this._color2, colorIdx, tmpColor.r, tmpColor.g, tmpColor.b);\n  }\n\n  computeBoundingSphere() {\n    this._collisionGeo.computeBoundingSphere();\n    this.boundingSphere = this._collisionGeo.boundingSphere;\n  }\n\n  computeBoundingBox() {\n    this._collisionGeo.computeBoundingBox();\n    this.boundingBox = this._collisionGeo.boundingBox;\n  }\n\n  raycast(raycaster, intersects) {\n    this._collisionGeo.raycast(raycaster, intersects);\n  }\n\n  startUpdate() {\n    return true;\n  }\n\n  finishUpdate() {\n    this.getAttribute('matVector1').needsUpdate = true;\n    this.getAttribute('matVector2').needsUpdate = true;\n    this.getAttribute('matVector3').needsUpdate = true;\n    this.getAttribute('color').needsUpdate = true;\n    this.getAttribute('color2').needsUpdate = true;\n    this.getAttribute('alphaColor').needsUpdate = true;\n    if (this._useZSprites) {\n      this.getAttribute('invmatVector1').needsUpdate = true;\n      this.getAttribute('invmatVector2').needsUpdate = true;\n      this.getAttribute('invmatVector3').needsUpdate = true;\n    }\n\n    this._collisionGeo.finishUpdate();\n  }\n\n  finalize() {\n    this.finishUpdate();\n    this.computeBoundingSphere();\n  }\n\n  setOpacity(chunkIndices, value) {\n    const alphaArr = this._alpha;\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\n      alphaArr[Math.floor(chunkIndices[i] / 2)] = value;\n    }\n    this.getAttribute('alphaColor').needsUpdate = true;\n  }\n\n  getSubset(chunkIndices) {\n    const info = _prepareCylinderInfo(chunkIndices);\n    const cylinderIndices = info.indices;\n    const instanceCount = cylinderIndices.length;\n    const geom = new THREE.InstancedBufferGeometry();\n    this._init.call(geom, instanceCount, this._cylGeometry, this._useZSprites);\n\n    copySubArrays(this._matVector1, geom._matVector1, cylinderIndices, OFFSET_SIZE);\n    copySubArrays(this._matVector2, geom._matVector2, cylinderIndices, OFFSET_SIZE);\n    copySubArrays(this._matVector3, geom._matVector3, cylinderIndices, OFFSET_SIZE);\n\n    if (this._useZSprites) {\n      copySubArrays(this._invmatVector1, geom._invmatVector1, cylinderIndices, OFFSET_SIZE);\n      copySubArrays(this._invmatVector2, geom._invmatVector2, cylinderIndices, OFFSET_SIZE);\n      copySubArrays(this._invmatVector3, geom._invmatVector3, cylinderIndices, OFFSET_SIZE);\n    }\n\n    copySubArrays(this._color1, geom._color1, cylinderIndices, COLOR_SIZE);\n    copySubArrays(this._color2, geom._color2, cylinderIndices, COLOR_SIZE);\n    _assignOpacity(info.cylinderInfo, geom._color1, geom._color2);\n    geom.boundingSphere = this.boundingSphere;\n    geom.boundingBox = this.boundingBox;\n    return [geom];\n  }\n\n  getGeoParams() {\n    return this._cylGeometry.parameters;\n  }\n\n  _init(instanceCount, cylinderGeo, useZSprites) {\n    this.copy(cylinderGeo);\n    this._matVector1 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\n    this._matVector2 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\n    this._matVector3 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\n    this._color1 = utils.allocateTyped(Float32Array, instanceCount * COLOR_SIZE);\n    this._color2 = utils.allocateTyped(Float32Array, instanceCount * COLOR_SIZE);\n    const alpha = this._alpha = utils.allocateTyped(Float32Array, instanceCount);\n    _.fill(alpha, 1.0);\n\n    this.setAttribute('matVector1', new THREE.InstancedBufferAttribute(this._matVector1, OFFSET_SIZE, false, 1));\n    this.setAttribute('matVector2', new THREE.InstancedBufferAttribute(this._matVector2, OFFSET_SIZE, false, 1));\n    this.setAttribute('matVector3', new THREE.InstancedBufferAttribute(this._matVector3, OFFSET_SIZE, false, 1));\n    this.setAttribute('color', new THREE.InstancedBufferAttribute(this._color1, COLOR_SIZE, false, 1));\n    this.setAttribute('color2', new THREE.InstancedBufferAttribute(this._color2, COLOR_SIZE, false, 1));\n\n    this.setAttribute('alphaColor', new THREE.InstancedBufferAttribute(this._alpha, 1, false, 1));\n\n    if (useZSprites) {\n      this._invmatVector1 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\n      this._invmatVector2 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\n      this._invmatVector3 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\n\n      this.setAttribute(\n        'invmatVector1',\n        new THREE.InstancedBufferAttribute(this._invmatVector1, OFFSET_SIZE, false, 1),\n      );\n      this.setAttribute(\n        'invmatVector2',\n        new THREE.InstancedBufferAttribute(this._invmatVector2, OFFSET_SIZE, false, 1),\n      );\n      this.setAttribute(\n        'invmatVector3',\n        new THREE.InstancedBufferAttribute(this._invmatVector3, OFFSET_SIZE, false, 1),\n      );\n    }\n  }\n}\n\nexport default Instanced2CCylindersGeometry;\n","import * as THREE from 'three';\nimport utils from '../../utils';\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry';\n\nconst VEC_SIZE = 3;\nconst TRI_SIZE = 3;\nconst tmpPrev = new THREE.Vector3();\nconst tmpNext = new THREE.Vector3();\nconst tmpRes = new THREE.Vector3();\nconst simpleNormal = new THREE.Vector3(1.0, 0.0, 0.0);\nconst normalOnCut = new THREE.Vector3();\nconst nearRingPt = new THREE.Vector3();\n\nfunction _createExtrudedChunkGeometry(shape, ringsCount) {\n  const geo = new THREE.BufferGeometry();\n  const ptsCount = shape.length;\n  const totalPts = ptsCount * ringsCount;\n  const type = totalPts <= 65536 ? Uint16Array : Uint32Array;\n  const facesPerChunk = (ringsCount - 1) * ptsCount * 2;\n  const indices = new THREE.BufferAttribute(utils.allocateTyped(type, facesPerChunk * TRI_SIZE), 1);\n\n  let currVtxIdx = 0;\n  let currFaceIdx = 0;\n  for (let y = 0; y < ringsCount; y++) {\n    // faces\n    if (y !== ringsCount - 1) {\n      for (let i = 0; i < ptsCount; i++) {\n        const v1 = currVtxIdx + i;\n        const v2 = currVtxIdx + ptsCount + i;\n        const v3 = currVtxIdx + ptsCount + ((i + 1) % ptsCount);\n        const v4 = currVtxIdx + ((i + 1) % ptsCount);\n\n        indices.setXYZ(currFaceIdx * TRI_SIZE, v1, v4, v2);\n        currFaceIdx++;\n        indices.setXYZ(currFaceIdx * TRI_SIZE, v2, v4, v3);\n        currFaceIdx++;\n      }\n    }\n\n    currVtxIdx += ptsCount;\n  }\n\n  geo.setIndex(indices);\n  const pos = utils.allocateTyped(Float32Array, totalPts * VEC_SIZE);\n  geo.setAttribute('position', new THREE.BufferAttribute(pos, VEC_SIZE));\n\n  geo._positions = shape;\n\n  return geo;\n}\n\nclass ExtrudedObjectsGeometry extends ChunkedObjectsGeometry {\n  constructor(shape, ringsCount, chunksCount) {\n    const chunkGeo = _createExtrudedChunkGeometry(shape, ringsCount);\n    super(chunkGeo, chunksCount);\n    this._ringsCount = ringsCount;\n\n    const tmpShape = this._tmpShape = [];\n    for (let i = 0; i < shape.length; ++i) {\n      tmpShape[i] = new THREE.Vector3();\n    }\n  }\n\n  setItem(itemIdx, matrices, hasSlope = false, hasCut = false) {\n    const ptsCount = this._chunkGeo._positions.length;\n    const ringsCount = this._ringsCount;\n    const chunkStartIdx = ptsCount * this._ringsCount * itemIdx * VEC_SIZE;\n\n    this._setPoints(matrices, ptsCount, ringsCount, chunkStartIdx);\n\n    if (hasSlope) {\n      this._setSlopeNormals(ptsCount, ringsCount, chunkStartIdx);\n    } else {\n      this._setBaseNormals(ptsCount, ringsCount, chunkStartIdx);\n    }\n\n    if (hasCut) {\n      this._addCut(ptsCount, ringsCount, chunkStartIdx);\n    }\n  }\n\n  _setPoints(matrices, ptsCount, ringsCount, chunkStartIdx) {\n    const tmpShape = this._tmpShape;\n    const positions = this._positions;\n    const shape = this._chunkGeo._positions;\n\n    for (let i = 0, vtxIdx = chunkStartIdx; i < ringsCount; ++i) {\n      const mtx = matrices[i];\n\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\n        tmpShape[j].copy(shape[j]).applyMatrix4(mtx).toArray(positions, vtxIdx);\n      }\n    }\n  }\n\n  _setBaseNormals(ptsCount, ringsCount, chunkStartIdx) {\n    const nPtsInRing = ptsCount * VEC_SIZE;\n\n    for (let i = 0, vtxIdx = chunkStartIdx; i < ringsCount; ++i, vtxIdx += nPtsInRing) {\n      this._countNormalsInRing(ptsCount, vtxIdx, false);\n    }\n  }\n\n  _setSlopeNormals(ptsCount, ringsCount, chunkStartIdx) {\n    const normals = this._normals;\n    const nPtsInRing = ptsCount * VEC_SIZE;\n\n    let vtxIdx = chunkStartIdx;\n    // First ring\n    // In all cases, besides cut, second ring is coincident to first. So values of first ring's normals doesn't\n    // matter (In the cut case special handler will be applied later and will set them to correct values)\n    for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\n      simpleNormal.toArray(normals, vtxIdx);\n    }\n    // second ring\n    // If it isn't first Item we take normals' values from the last ring of the previous item (these rings are coincident)\n    // else we count normals' values based on next ring information\n    if (vtxIdx - 2 * nPtsInRing > 0) {\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\n        tmpRes.fromArray(normals, vtxIdx - 2 * nPtsInRing).toArray(normals, vtxIdx);\n      }\n    } else {\n      this._countNormalsInRing(ptsCount, vtxIdx, true, +nPtsInRing);\n      vtxIdx += nPtsInRing;\n    }\n    // other rings\n    // we count normals' values based on previous ring information\n    for (let i = 2; i < ringsCount; ++i, vtxIdx += nPtsInRing) {\n      this._countNormalsInRing(ptsCount, vtxIdx, true, -nPtsInRing);\n    }\n  }\n\n  // Counting normals:\n  // - Slope\n  //   Radius changes throught part => normals aren't parallel with the plane contains section points\n  //   normal = vTangentInSectionPlane x vToSuchPointInPrevSection (all vectors are scaled for being 1 in length)\n  // - No slope\n  //   Radius doesn't change throught part => normals are parallel with the plane contains section points\n  //   normal = vToPrevPointInSection + vToNextPointInSection (all vectors are scaled for being 1 in length)\n  _countNormalsInRing(ptsCount, vtxIdx, isSlope, shiftToExtraPt) {\n    const tmpShape = this._tmpShape;\n    const normals = this._normals;\n\n    tmpShape[0].fromArray(this._positions, vtxIdx);\n    tmpShape[ptsCount - 1].fromArray(this._positions, vtxIdx + (ptsCount - 1) * VEC_SIZE);\n\n    for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\n      if (j < ptsCount - 1) {\n        tmpShape[j + 1].fromArray(this._positions, vtxIdx + VEC_SIZE);\n      }\n\n      if (isSlope) {\n        nearRingPt.fromArray(this._positions, vtxIdx + shiftToExtraPt);\n\n        tmpPrev.subVectors(tmpShape[(j + ptsCount - 1) % ptsCount], tmpShape[(j + 1) % ptsCount]).normalize();\n        tmpNext.subVectors(tmpShape[j], nearRingPt).normalize();\n        tmpRes.crossVectors(tmpNext, tmpPrev).normalize().toArray(normals, vtxIdx);\n      } else {\n        tmpPrev.subVectors(tmpShape[j], tmpShape[(j + ptsCount - 1) % ptsCount]).normalize();\n        tmpNext.subVectors(tmpShape[j], tmpShape[(j + 1) % ptsCount]).normalize();\n        tmpRes.addVectors(tmpPrev, tmpNext).normalize().toArray(normals, vtxIdx);\n      }\n    }\n  }\n\n  _addCut(ptsCount, ringsCount, chunkStartIdx) {\n    // Nothing to do if item is flat or only line\n    if (ptsCount < 3 || ringsCount < 2) {\n      return;\n    }\n    const positions = this._positions;\n    const normals = this._normals;\n    const tmpShape = this._tmpShape;\n    const nPtsInRing = ptsCount * VEC_SIZE;\n\n    // Normal to the cut plane is equal to cross product of two vectors which are lying in it\n    tmpShape[0].fromArray(positions, chunkStartIdx);\n    tmpShape[1].fromArray(positions, chunkStartIdx + VEC_SIZE);\n    tmpShape[2].fromArray(positions, chunkStartIdx + 2 * VEC_SIZE);\n\n    tmpPrev.subVectors(tmpShape[1], tmpShape[0]).normalize();\n    tmpNext.subVectors(tmpShape[1], tmpShape[2]).normalize();\n    normalOnCut.crossVectors(tmpPrev, tmpNext).normalize();\n\n    let vtxIdx = chunkStartIdx;\n    // First and second rings normals' values are equal to value of normal to the cutting plane\n    for (let j = 0; j < ptsCount * 2; ++j, vtxIdx += VEC_SIZE) {\n      normalOnCut.toArray(normals, vtxIdx);\n    }\n    if (ringsCount > 2) {\n      // Third ring points are coincident to first ring points, but have different normals. It makes sharp angle near cut\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\n        tmpRes.fromArray(positions, vtxIdx - nPtsInRing).toArray(positions, vtxIdx);\n      }\n    }\n  }\n}\n\nexport default ExtrudedObjectsGeometry;\n","import _ from 'lodash';\nimport * as THREE from 'three';\nimport utils from '../../utils';\n\nconst MAX_IDC_16BIT = 65535;\nconst VERTEX_PER_SEGMENT = 4;\nconst POS_SIZE = 4;\nconst DIR_SIZE = 3;\nconst COL_SIZE = 3;\nconst tmpColor = new THREE.Color();\nconst direction = new THREE.Vector3();\n\nfunction setArrayXYZ(arr, idx, x, y, z) {\n  arr[idx] = x;\n  arr[idx + 1] = y;\n  arr[idx + 2] = z;\n}\n\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\n  arr[idx] = x;\n  arr[idx + 1] = y;\n  arr[idx + 2] = z;\n  arr[idx + 3] = w;\n}\n\nfunction getSubset(arr, startSegmentIdx, segmentsCount, elemSize) {\n  const start = startSegmentIdx * VERTEX_PER_SEGMENT;\n  const end = start + segmentsCount * VERTEX_PER_SEGMENT;\n  return arr.subarray(start * elemSize, end * elemSize);\n}\n\n/**\n * This class represents lines geometry which consists of screen-aligned narrow quad of variable width.\n *\n * @constructor\n *\n * @param {number}  segmentsCount   Number of segments per chunk.\n * collision geometry.\n */\n\nclass ThickLinesGeometry extends THREE.BufferGeometry {\n  constructor(segmentsCount) {\n    super();\n    this._initVertices(segmentsCount);\n  }\n\n  startUpdate() {\n    return true;\n  }\n\n  finishUpdate() {\n    this.getAttribute('position').needsUpdate = true;\n    this.getAttribute('color').needsUpdate = true;\n    this.getAttribute('alphaColor').needsUpdate = true;\n    this.getAttribute('direction').needsUpdate = true;\n  }\n\n  setColor(segmentIdx, colorVal) {\n    tmpColor.set(colorVal);\n    let idx = segmentIdx * VERTEX_PER_SEGMENT * COL_SIZE;\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b);\n    idx += COL_SIZE;\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b);\n    idx += COL_SIZE;\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b);\n    idx += COL_SIZE;\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b);\n  }\n\n  setSegment(segmentIdx, pos1, pos2) {\n    direction.subVectors(pos1, pos2);\n    direction.normalize();\n    const positions = this._positions;\n    const directions = this._directions;\n    let idx = segmentIdx * VERTEX_PER_SEGMENT * POS_SIZE;\n    let dirIdx = segmentIdx * VERTEX_PER_SEGMENT * DIR_SIZE;\n    setArrayXYZW(positions, idx, pos1.x, pos1.y, pos1.z, 0.5);\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z);\n    idx += POS_SIZE;\n    dirIdx += DIR_SIZE;\n    setArrayXYZW(positions, idx, pos1.x, pos1.y, pos1.z, -0.5);\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z);\n    idx += POS_SIZE;\n    dirIdx += DIR_SIZE;\n    setArrayXYZW(positions, idx, pos2.x, pos2.y, pos2.z, 0.5);\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z);\n    idx += POS_SIZE;\n    dirIdx += DIR_SIZE;\n    setArrayXYZW(positions, idx, pos2.x, pos2.y, pos2.z, -0.5);\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z);\n  }\n\n  setOpacity(startSegIdx, endSegIdx, value) {\n    const start = startSegIdx * VERTEX_PER_SEGMENT;\n    const end = endSegIdx * VERTEX_PER_SEGMENT;\n    _.fill(this.alpha, value, end, start);\n    this.getAttribute('alphaColor').needsUpdate = true;\n  }\n\n  getSubsetSegments(startSegmentIdx, segmentsCount) {\n    return [\n      getSubset(this._positions, startSegmentIdx, segmentsCount, POS_SIZE),\n      getSubset(this._directions, startSegmentIdx, segmentsCount, DIR_SIZE),\n    ];\n  }\n\n  getSubsetColors(startSegmentIdx, segmentsCount) {\n    return getSubset(this._colors, startSegmentIdx, segmentsCount, COL_SIZE);\n  }\n\n  getSubsetOpacities(startSegmentIdx, segmentsCount) {\n    return getSubset(this._alpha, startSegmentIdx, segmentsCount, 1);\n  }\n\n  getNumVertexPerSegment() {\n    return VERTEX_PER_SEGMENT;\n  }\n\n  getPositionSize() {\n    return POS_SIZE;\n  }\n\n  setSegments(startSegmentIdx, positions) {\n    const startPos = startSegmentIdx * VERTEX_PER_SEGMENT * POS_SIZE;\n    if (positions instanceof Array && positions.length === 2) {\n      this._positions.set(positions[0], startPos);\n      const startDir = startSegmentIdx * VERTEX_PER_SEGMENT * DIR_SIZE;\n      this._directions.set(positions[1], startDir); // dirs are geo part of vertex\n    } else {\n      this._positions.set(positions, startPos);\n    }\n  }\n\n  setColors(startSegmentIdx, colors) {\n    const start = startSegmentIdx * VERTEX_PER_SEGMENT * COL_SIZE;\n    this._colors.set(colors, start);\n  }\n\n  _initVertices(segmentsCount) {\n    this._buffersSize = segmentsCount * VERTEX_PER_SEGMENT;\n    const pointsCount = this._buffersSize;\n    const use32bitIndex = pointsCount > MAX_IDC_16BIT;\n    this._index = utils.allocateTyped(use32bitIndex ? Uint32Array : Uint16Array, segmentsCount * 6);\n    this._positions = utils.allocateTyped(Float32Array, pointsCount * POS_SIZE);\n    this._colors = utils.allocateTyped(Float32Array, pointsCount * COL_SIZE);\n    this._directions = utils.allocateTyped(Float32Array, pointsCount * DIR_SIZE);\n    const alpha = this._alpha = utils.allocateTyped(Float32Array, pointsCount);\n    _.fill(alpha, 1.0);\n\n    const index = this._index;\n    let indexOffset = 0;\n    let pointOffset = 0;\n    for (let j = 0; j < segmentsCount; j++, indexOffset += 6, pointOffset += VERTEX_PER_SEGMENT) {\n      index[indexOffset] = pointOffset;\n      index[indexOffset + 1] = pointOffset + 1;\n      index[indexOffset + 2] = pointOffset + 3;\n      index[indexOffset + 3] = pointOffset;\n      index[indexOffset + 4] = pointOffset + 2;\n      index[indexOffset + 5] = pointOffset + 3;\n    }\n    this.setIndex(new THREE.BufferAttribute(this._index, 1));\n\n    this.setAttribute('position', new THREE.BufferAttribute(this._positions, POS_SIZE));\n    this.setAttribute('color', new THREE.BufferAttribute(this._colors, COL_SIZE));\n    this.setAttribute('alphaColor', new THREE.BufferAttribute(alpha, 1));\n    this.setAttribute('direction', new THREE.BufferAttribute(this._directions, DIR_SIZE));\n  }\n}\n\nexport default ThickLinesGeometry;\n","import * as THREE from 'three';\nimport BaseLinesGeometry from './ThickLinesGeometry';\n\n/**\n * This class represents geometry which consists lines. This can build bounding volumes\n * @constructor\n *\n * @param {number}  segmentsCount   Number of segments per chunk.\n */\nclass LinesGeometry extends BaseLinesGeometry {\n  startUpdate() {\n    return true;\n  }\n\n  computeBoundingSphere() {\n    const { boundingBox } = this;\n    // Build bounding sphere\n    let radiusSquared = 0.0;\n    const center = new THREE.Vector3();\n    if (boundingBox) {\n      boundingBox.getCenter(center);\n    }\n    const positions = this._positions;\n    const sphere = this.boundingSphere || new THREE.Sphere();\n    const size = this._positions.length;\n    const pos = new THREE.Vector3();\n    const posSize = this.getPositionSize();\n    for (let i = 0; i < size; i += posSize) {\n      pos.set(positions[i], positions[i + 1], positions[i + 2]);\n      const lengthSquared = center.distanceToSquared(pos);\n      if (radiusSquared < lengthSquared) {\n        radiusSquared = lengthSquared;\n      }\n    }\n    sphere.set(center, Math.sqrt(radiusSquared));\n    this.boundingSphere = sphere;\n  }\n\n  computeBoundingBox() {\n    const positions = this._positions;\n    const box = new THREE.Box3();\n    const size = this._positions.length;\n    const tmpVec = new THREE.Vector3();\n    const posSize = this.getPositionSize();\n    for (let i = 0; i < size; i += posSize) {\n      tmpVec.set(positions[i], positions[i + 1], positions[i + 2]);\n      box.expandByPoint(tmpVec);\n    }\n    this.boundingBox = box;\n  }\n\n  finalize() {\n    this.finishUpdate();\n    this.computeBoundingSphere();\n  }\n}\n\nexport default LinesGeometry;\n","import * as THREE from 'three';\nimport utils from '../../utils';\nimport gfxutils from '../gfxutils';\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry';\n\nconst VEC_SIZE = 3;\nconst tmpVector = new THREE.Vector3();\nconst normMtx = new THREE.Matrix3();\n\nclass CylinderCollisionGeo extends ChunkedObjectsGeometry {\n  constructor(instanceCount, polyComplexity) {\n    const cylGeometry = new THREE.CylinderBufferGeometry(1, 1, 1.0, Math.max(3, polyComplexity), 2, true);\n    super(cylGeometry, instanceCount);\n\n    const chunkSize = this._chunkSize;\n    this._chunkPos = this._chunkGeo.attributes.position.array;\n    this._chunkNorms = this._chunkGeo.attributes.normal.array;\n    this._tmpVector = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE);\n  }\n\n  setItem(itemIdx, botPos, topPos, itemRad) {\n    const chunkSize = this._chunkSize;\n    const itemOffset = chunkSize * itemIdx * VEC_SIZE;\n\n    const tmpArray = this._tmpVector;\n    const geoPos = this._chunkPos;\n    const geoNorm = this._chunkNorms;\n\n    const mtx1 = gfxutils.calcCylinderMatrix(botPos, topPos, itemRad);\n    normMtx.getNormalMatrix(mtx1);\n    let idx;\n    for (let i = 0; i < chunkSize; ++i) {\n      idx = i * VEC_SIZE;\n      tmpVector.fromArray(geoPos, idx);\n      tmpVector.applyMatrix4(mtx1);\n      tmpVector.toArray(tmpArray, idx);\n    }\n    this._positions.set(tmpArray, itemOffset);\n\n    for (let i = 0; i < chunkSize; ++i) {\n      idx = i * VEC_SIZE;\n      tmpVector.fromArray(geoNorm, idx);\n      tmpVector.applyMatrix3(normMtx);\n      tmpVector.toArray(tmpArray, idx);\n    }\n    this._normals.set(tmpArray, itemOffset);\n  }\n}\nexport default CylinderCollisionGeo;\n","import LinesGeometry from './LinesGeometry';\nimport CylinderCollisionGeo from './CylinderCollisionGeo';\n\nconst COLLISION_RAD = 0.1;\n\n/**\n * This class represents geometry which consists of separate chunks.\n * Each chunk has same index and similar geometry with equal points and faces count.\n * Each chunk has by default only one color.\n * @constructor\n *\n * @param {number}  chunksCount     Total chunks count.\n * @param {number}  segmentsCount   Number of segments per chunk.\n * @param {boolean} enableCollision Enable or disable collision where each segment is\n *                                  a collidable cylinder.\n * collision geometry.\n */\nclass ChunkedLinesGeometry extends LinesGeometry {\n  constructor(chunksCount, segmentsCount, enableCollision) {\n    super(chunksCount * segmentsCount);\n    this._init(segmentsCount);\n    this._collisionGeo = enableCollision ? new CylinderCollisionGeo(chunksCount * segmentsCount, 3) : null;\n  }\n\n  startUpdate() {\n    return true;\n  }\n\n  computeBoundingSphere() {\n    const collisionGeo = this._collisionGeo;\n    if (collisionGeo) {\n      collisionGeo.computeBoundingSphere();\n      this.boundingSphere = collisionGeo.boundingSphere;\n      return;\n    }\n    super.computeBoundingSphere();\n  }\n\n  computeBoundingBox() {\n    const collisionGeo = this._collisionGeo;\n    if (collisionGeo) {\n      collisionGeo.computeBoundingBox();\n      this.boundingBox = collisionGeo.boundingBox;\n      return;\n    }\n    super.computeBoundingBox();\n  }\n\n  raycast(raycaster, intersects) {\n    const collisionGeo = this._collisionGeo;\n    if (!collisionGeo) {\n      return;\n    }\n    const segCount = this._chunkSize;\n    this._collisionGeo.raycast(raycaster, intersects);\n    for (let i = 0, n = intersects.length; i < n; ++i) {\n      let { chunkIdx } = intersects[i];\n      if (chunkIdx === undefined) {\n        continue;\n      }\n      chunkIdx = (chunkIdx / segCount) | 0;\n      intersects[i].chunkIdx = chunkIdx;\n    }\n  }\n\n  setColor(chunkIdx, colorVal) {\n    const chunkSize = this._chunkSize;\n    for (let i = chunkIdx * chunkSize, end = i + chunkSize; i < end; ++i) {\n      super.setColor(i, colorVal);\n    }\n  }\n\n  setSegment(chunkIdx, segIdx, pos1, pos2) {\n    const chunkSize = this._chunkSize;\n    const idx = chunkIdx * chunkSize + segIdx;\n    super.setSegment(idx, pos1, pos2);\n    if (this._collisionGeo) {\n      this._collisionGeo.setItem(chunkIdx * chunkSize + segIdx, pos1, pos2, COLLISION_RAD);\n    }\n  }\n\n  finalize() {\n    this.finishUpdate();\n    this.computeBoundingSphere();\n  }\n\n  setOpacity(chunkIndices, value) {\n    const chunkSize = this._chunkSize;\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\n      const left = chunkIndices[i] * chunkSize;\n      super.setOpacity(left, left + chunkSize - 1, value);\n    }\n  }\n\n  getSubset(chunkIndices) {\n    const instanceCount = chunkIndices.length;\n    const chunkSize = this._chunkSize;\n    const subset = new ChunkedLinesGeometry(instanceCount, chunkSize, false);\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\n      const dstPtOffset = i * chunkSize;\n      const startSegIdx = chunkIndices[i] * chunkSize;\n      subset.setSegments(dstPtOffset, this.getSubsetSegments(startSegIdx, chunkSize));\n      subset.setColors(dstPtOffset, this.getSubsetColors(startSegIdx, chunkSize));\n    }\n\n    subset.boundingSphere = this.boundingSphere;\n    subset.boundingBox = this.boundingBox;\n    return [subset];\n  }\n\n  _init(chunkSize) {\n    this._chunkSize = chunkSize;\n  }\n}\n\nexport default ChunkedLinesGeometry;\n","import * as THREE from 'three';\nimport LinesGeometry from './LinesGeometry';\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry';\n\nconst COLLISION_RAD = 0.3;\nconst tmpVector = new THREE.Vector3();\n\nclass TwoColorLinesGeometry extends LinesGeometry {\n  constructor(segmentsCount) {\n    super(segmentsCount * 2);\n    this._init(segmentsCount);\n    this._collisionGeo = new Simple2CCylindersGeometry(segmentsCount, 3);\n  }\n\n  setItem(itemIdx, botPos, topPos) {\n    this._collisionGeo.setItem(itemIdx, botPos, topPos, COLLISION_RAD);\n    const offset = 2 * itemIdx;// there are two points per segment\n    tmpVector.lerpVectors(botPos, topPos, 0.5);\n    super.setSegment(offset, botPos, tmpVector);\n    super.setSegment(offset + 1, tmpVector, topPos);\n  }\n\n  setColor(itemIdx, colorVal1, colorVal2) {\n    const offset = 2 * itemIdx;// there are two points per segment\n    super.setColor(offset, colorVal1);\n    super.setColor(offset + 1, colorVal2);\n  }\n\n  raycast(raycaster, intersects) {\n    if (this._collisionGeo) {\n      this._collisionGeo.raycast(raycaster, intersects);\n    }\n  }\n\n  getSubset(segmentIndices) {\n    const instanceCount = segmentIndices.length;\n    const subset = new TwoColorLinesGeometry(instanceCount, false);\n    for (let i = 0, n = instanceCount; i < n; ++i) {\n      const startSegIdx = segmentIndices[i];\n      subset.setSegments(i, this.getSubsetSegments(startSegIdx, 1));\n      subset.setColors(i, this.getSubsetColors(startSegIdx, 1));\n    }\n\n    subset.boundingSphere = this.boundingSphere;\n    subset.boundingBox = this.boundingBox;\n    return [subset];\n  }\n\n  _init(segmentsCount) {\n    this._segCounts = segmentsCount * 2;\n  }\n}\n// (???)parent = LinesGeometry.prototype;\n\nexport default TwoColorLinesGeometry;\n","import * as THREE from 'three';\nimport ChunkedLinesGeometry from './ChunkedLinesGeometry';\nimport SphereCollisionGeo from './SphereCollisionGeo';\n\nconst vectors = [\n  new THREE.Vector3(1, 0, 0),\n  new THREE.Vector3(-1, 0, 0),\n  new THREE.Vector3(0, 1, 0),\n  new THREE.Vector3(0, -1, 0),\n  new THREE.Vector3(0, 0, 1),\n  new THREE.Vector3(0, 0, -1),\n];\nconst vecCount = vectors.length;\nconst tempPos1 = new THREE.Vector3();\nconst tempPos2 = new THREE.Vector3();\n\nclass CrossGeometry extends SphereCollisionGeo(ChunkedLinesGeometry) {\n  constructor(chunksCount) {\n    super(chunksCount, chunksCount, (vecCount / 2) | 0, false);\n  }\n\n  setItem(itemIdx, itemPos, itemRad) {\n    this.setSphere(itemIdx, itemPos, itemRad);\n\n    for (let i = 0; i < vecCount / 2; ++i) {\n      const first = i * 2;\n      tempPos1.x = itemPos.x + vectors[first].x * itemRad;\n      tempPos1.y = itemPos.y + vectors[first].y * itemRad;\n      tempPos1.z = itemPos.z + vectors[first].z * itemRad;\n      const second = first + 1;\n      tempPos2.x = itemPos.x + vectors[second].x * itemRad;\n      tempPos2.y = itemPos.y + vectors[second].y * itemRad;\n      tempPos2.z = itemPos.z + vectors[second].z * itemRad;\n      this.setSegment(itemIdx, i, tempPos1, tempPos2);\n    }\n  }\n}\nexport default CrossGeometry;\n","import * as THREE from 'three';\nimport utils from '../../utils';\nimport RaycastableBufferGeometry from './RaycastableBufferGeometry';\n\nconst POS_RAD_SIZE = 4;\nconst COLOR_SIZE = 3;\nconst tmpColor = new THREE.Color();\n\n/**\n * This is a base class for isosurface algorithms.\n * @param spheresCount - number of atoms/spheres\n * @param opts - geometry specific options\n * @constructor\n */\nclass IsoSurfaceGeometry extends RaycastableBufferGeometry {\n  constructor(spheresCount, opts) {\n    super();\n\n    this._opts = opts;\n    this.zClip = this._opts.zClip;\n    this._posRad = utils.allocateTyped(Float32Array, spheresCount * POS_RAD_SIZE);\n    this._colors = utils.allocateTyped(Float32Array, spheresCount * COLOR_SIZE);\n  }\n\n  setItem(chunkIdx, pos, radius) {\n    const posRad = this._posRad;\n    let idx = POS_RAD_SIZE * chunkIdx;\n    posRad[idx++] = pos.x;\n    posRad[idx++] = pos.y;\n    posRad[idx++] = pos.z;\n    posRad[idx] = radius;\n  }\n\n  setColor(chunkIdx, colorVal) {\n    tmpColor.set(colorVal);\n    const colors = this._colors;\n    let idx = COLOR_SIZE * chunkIdx;\n    colors[idx++] = tmpColor.r;\n    colors[idx++] = tmpColor.g;\n    colors[idx] = tmpColor.b;\n  }\n\n  finalize() {\n    this.finishUpdate();\n    this.computeBoundingSphere();\n  }\n\n  finishUpdate() {\n    this._build();\n  }\n\n  setOpacity() {\n    // not implemented\n  }\n\n  raycast() {\n  }\n\n  getSubset() {\n    return [];\n  }\n}\nexport default IsoSurfaceGeometry;\n","import utils from '../../utils';\n\n/**\n * Class for marching cube\n * Stores 8 points and 8 float values are stored together in linear array\n * Int values for has intersection or not - in integer32 linear array\n * Int values for bits flags - in integer32 linear array\n *\n */\nclass IsoSurfaceMarchCube {\n  constructor() {\n    this.pointsValuesLinear = null;\n    this.hasIntersection = null;\n    this.bitsInside = null;\n  }\n\n  create(numCellsPerSide) {\n    const vx7000000 = 0x7000000;\n    const n3 = numCellsPerSide * numCellsPerSide * numCellsPerSide;\n    if (n3 > vx7000000) {\n      throw new Error('Too large cube dimension: lead to memory huge uasge');\n    }\n    this.pointsValuesLinear = utils.allocateTyped(Float32Array, (2 << (2 + 2)) * n3);\n    this.hasIntersection = utils.allocateTyped(Int32Array, n3);\n    this.bitsInside = utils.allocateTyped(Int32Array, n3);\n    return 0;\n  }\n\n  destroy() {\n    this.bitsInside = null;\n    this.hasIntersection = null;\n    this.pointsValuesLinear = null;\n  }\n}\n\n/* eslint-disable no-magic-numbers */\nIsoSurfaceMarchCube.prototype.striIndicesMarchCube = [\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1,\n  3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1,\n  3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1,\n  3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1,\n  9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1,\n  1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1,\n  9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\n  2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1,\n  8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1,\n  9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\n  4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1,\n  3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1,\n  1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1,\n  4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1,\n  4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1,\n  9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1,\n  1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\n  5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1,\n  2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1,\n  9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\n  0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\n  2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1,\n  10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1,\n  4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1,\n  5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1,\n  5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1,\n  9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1,\n  0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1,\n  1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1,\n  10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1,\n  8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1,\n  2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1,\n  7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1,\n  9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1,\n  2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1,\n  11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1,\n  9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1,\n  5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1,\n  11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1,\n  11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\n  1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1,\n  9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1,\n  5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1,\n  2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\n  0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\n  5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1,\n  6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1,\n  0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1,\n  3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1,\n  6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1,\n  5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1,\n  1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\n  10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1,\n  6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1,\n  1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1,\n  8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1,\n  7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1,\n  3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\n  5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1,\n  0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1,\n  9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1,\n  8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1,\n  5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1,\n  0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1,\n  6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1,\n  10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1,\n  10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1,\n  8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1,\n  1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1,\n  3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1,\n  0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1,\n  10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1,\n  0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1,\n  3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1,\n  6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1,\n  9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1,\n  8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1,\n  3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1,\n  6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1,\n  0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1,\n  10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1,\n  10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1,\n  1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1,\n  2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1,\n  7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1,\n  7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1,\n  2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1,\n  1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1,\n  11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1,\n  8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1,\n  0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1,\n  7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\n  10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\n  2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\n  6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1,\n  7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1,\n  2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1,\n  1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1,\n  10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1,\n  10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1,\n  0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1,\n  7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1,\n  6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1,\n  8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1,\n  9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1,\n  6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1,\n  1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1,\n  4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1,\n  10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1,\n  8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1,\n  0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1,\n  1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1,\n  8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1,\n  10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1,\n  4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1,\n  10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\n  5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\n  11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1,\n  9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\n  6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1,\n  7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1,\n  3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1,\n  7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1,\n  9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1,\n  3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1,\n  6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1,\n  9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1,\n  1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1,\n  4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1,\n  7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1,\n  6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1,\n  3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1,\n  0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1,\n  6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1,\n  1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1,\n  0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1,\n  11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1,\n  6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1,\n  5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1,\n  9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1,\n  1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1,\n  1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1,\n  10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1,\n  0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1,\n  5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1,\n  10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1,\n  11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1,\n  0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1,\n  9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1,\n  7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1,\n  2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1,\n  8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1,\n  9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1,\n  9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1,\n  1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1,\n  9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1,\n  9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1,\n  5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1,\n  0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1,\n  10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1,\n  2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1,\n  0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1,\n  0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1,\n  9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1,\n  5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1,\n  3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1,\n  5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1,\n  8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1,\n  0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1,\n  9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1,\n  0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1,\n  1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1,\n  3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1,\n  4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1,\n  9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1,\n  11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1,\n  11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1,\n  2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1,\n  9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1,\n  3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1,\n  1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1,\n  4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1,\n  4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1,\n  0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1,\n  3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1,\n  3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1,\n  0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1,\n  9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1,\n  1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n];\n/* eslint-enable no-magic-numbers */\n\nexport default IsoSurfaceMarchCube;\n","import * as THREE from 'three';\nimport IsoSurfaceMarchCube from './IsoSurfaceMarchCube';\nimport utils from '../../utils';\n\nconst edgeTable = [\n  0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\n  0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\n  0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\n  0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\n  0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c,\n  0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\n  0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac,\n  0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\n  0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c,\n  0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\n  0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\n  0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\n  0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c,\n  0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\n  0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc,\n  0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\n  0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\n  0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\n  0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\n  0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\n  0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\n  0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\n  0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\n  0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460,\n  0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\n  0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0,\n  0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\n  0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230,\n  0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\n  0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190,\n  0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\n  0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0];\n\nfunction _voxelGradientFast(v, point, grad) {\n  const g = v.getValue(point.x, point.y, point.z);\n  grad.set(g[0], g[1], g[2]);\n}\n\n// Helper class GridCell\nclass GridCell {\n  constructor() {\n    this._arrSize = 8;\n    this.p = new Array(this._arrSize);\n    this.g = new Array(this._arrSize);\n    this.val = new Array(this._arrSize);\n    for (let i = 0; i < this._arrSize; ++i) {\n      this.p[i] = new THREE.Vector3();\n      this.g[i] = new THREE.Vector3();\n    }\n    this.cubeIndex = 0;\n  }\n}\n\n// Helper class Triangle\nclass Triangle {\n  constructor() {\n    this.a = {\n      p: new THREE.Vector3(),\n      n: new THREE.Vector3(),\n    };\n\n    this.b = {\n      p: new THREE.Vector3(),\n      n: new THREE.Vector3(),\n    };\n\n    this.c = {\n      p: new THREE.Vector3(),\n      n: new THREE.Vector3(),\n    };\n  }\n}\n\nfunction createArray(arrSize) {\n  const arr = new Array(arrSize);\n  for (let i = 0; i < arrSize; ++i) {\n    arr[i] = new THREE.Vector3();\n  }\n\n  return arr;\n}\n\nclass IsoSurface {\n  constructor() {\n    this._numTriangles = 0;\n    this._numVertices = 0;\n    this._position = [];\n    this._normals = [];\n    this._colors = null;\n    this._indices = [];\n    this._volumetricData = null;\n    this._xAxis = new THREE.Vector3();\n    this._yAxis = new THREE.Vector3();\n    this._zAxis = new THREE.Vector3();\n    this._xDir = new THREE.Vector3();\n    this._yDir = new THREE.Vector3();\n    this._zDir = new THREE.Vector3();\n  }\n\n  _prepareAxesAndDirs() {\n    const volData = this._volumetricData;\n\n    const cellSize = volData.getCellSize();\n\n    // calculate cell axes\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n    const zAxis = this._zAxis;\n    const xDir = this._xDir;\n    const yDir = this._yDir;\n    const zDir = this._zDir;\n\n    xAxis.set(cellSize.x, 0, 0);\n    yAxis.set(0, cellSize.y, 0);\n    zAxis.set(0, 0, cellSize.z);\n\n    xDir.set(1, 0, 0);\n    yDir.set(0, 1, 0);\n    zDir.set(0, 0, 1);\n\n    // flip normals if coordinate system is in the wrong handedness\n    const tmp = new THREE.Vector3();\n    tmp.crossVectors(xDir, yDir);\n    if (tmp.dot(zDir) < 0) {\n      xDir.negate();\n      yDir.negate();\n      zDir.negate();\n    }\n\n    // check that the grid is in the all-positive octant of the coordinate system\n    if (xDir.x < 0 || xDir.y < 0 || xDir.z < 0\n      || yDir.x < 0 || yDir.y < 0 || yDir.z < 0\n      || zDir.x < 0 || zDir.y < 0 || zDir.z < 0) {\n      return false;\n    }\n\n    // check that the grid is axis-aligned\n    const notZero = (axe) => Math.abs(axe) > Number.EPSILON;\n    return !(notZero(xAxis.y) || notZero(xAxis.z)\n          || notZero(yAxis.x) || notZero(yAxis.z)\n          || notZero(zAxis.x) || notZero(zAxis.y));\n  }\n\n  _vertexInterp(isoLevel, grid, ind1, ind2, vertex, normal) {\n    const p1 = grid.p[ind1];\n    const p2 = grid.p[ind2];\n    const n1 = grid.g[ind1];\n    const n2 = grid.g[ind2];\n    const valP1 = grid.val[ind1];\n    const valP2 = grid.val[ind2];\n    const isoDiffP1 = isoLevel - valP1;\n    const diffValP2P1 = valP2 - valP1;\n\n    let mu = 0.0;\n\n    if (Math.abs(diffValP2P1) > 0.0) {\n      mu = isoDiffP1 / diffValP2P1;\n    }\n    mu = mu > 1.0 ? 1.0 : mu;\n    vertex.lerpVectors(p1, p2, mu);\n    normal.lerpVectors(n1, n2, mu);\n  }\n\n  static _triTable = IsoSurfaceMarchCube.prototype.striIndicesMarchCube;\n\n  static _arrSize = 12;\n\n  static _firstIndices = [0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3];\n\n  static _secondIndices = [1, 2, 3, 0, 5, 6, 7, 4, 4, 5, 6, 7];\n\n  static _vertexList = createArray(IsoSurface._arrSize);\n\n  static _normalList = createArray(IsoSurface._arrSize);\n\n  _polygonize(grid, isoLevel, triangles) {\n    const { cubeIndex } = grid;\n    let i = 0;\n    const arrSize = IsoSurface._arrSize;\n    const firstIndices = IsoSurface._firstIndices;\n    const secondIndices = IsoSurface._secondIndices;\n    const vertexList = IsoSurface._vertexList;\n    const normalList = IsoSurface._normalList;\n\n    for (; i < arrSize; ++i) {\n      if (edgeTable[cubeIndex] & (1 << i)) {\n        this._vertexInterp(\n          isoLevel, grid,\n          firstIndices[i],\n          secondIndices[i],\n          vertexList[i],\n          normalList[i],\n        );\n      }\n    }\n\n    let triCount = 0;\n    const triTblIdx = cubeIndex * 16;\n    const triTable = IsoSurface._triTable;\n\n    for (i = 0; triTable[triTblIdx + i] !== -1; i += 3) {\n      triangles[triCount].a.p.copy(vertexList[triTable[triTblIdx + i]]);\n      triangles[triCount].a.n.copy(normalList[triTable[triTblIdx + i]]);\n\n      triangles[triCount].b.p.copy(vertexList[triTable[triTblIdx + i + 1]]);\n      triangles[triCount].b.n.copy(normalList[triTable[triTblIdx + i + 1]]);\n\n      triangles[triCount].c.p.copy(vertexList[triTable[triTblIdx + i + 2]]);\n      triangles[triCount].c.n.copy(normalList[triTable[triTblIdx + i + 2]]);\n      ++triCount;\n    }\n\n    return triCount;\n  }\n\n  _doGridPosNorms(isoValue, step, appendSimple) {\n    const vol = this._volumetricData;\n    const volData = this._volumetricData.getData();\n    const dim = vol.getDimensions();\n    const xSize = dim[0];\n    const ySize = dim[1];\n    const zSize = dim[2];\n    const stepX = step * vol.getStrideX();\n    const stepY = step * vol.getStrideY();\n    const stepZ = step * vol.getStrideZ();\n\n    const gc = new GridCell();\n    const gcVal = gc.val;\n    const gcValSize = gc.val.length;\n    const additions = [\n      new THREE.Vector3(0, 0, 0), // 0\n      new THREE.Vector3(step, 0, 0), // 1\n      new THREE.Vector3(step, step, 0), // 2\n      new THREE.Vector3(0, step, 0), // 3\n      new THREE.Vector3(0, 0, step), // 4\n      new THREE.Vector3(step, 0, step), // 5\n      new THREE.Vector3(step, step, step), // 6\n      new THREE.Vector3(0, step, step), // 7\n    ];\n\n    const tmpTriCount = 5;\n    const triangles = new Array(tmpTriCount);\n    for (let j = 0; j < tmpTriCount; ++j) {\n      triangles[j] = new Triangle();\n    }\n\n    let appendVertex;\n    const self = this;\n    const positions = this._position;\n    const normals = this._normals;\n    if (appendSimple) {\n      // Special case for axis-aligned grid with positive unit vector normals\n      appendVertex = (function () {\n        const axis = new THREE.Vector3(self._xAxis.x, self._yAxis.y, self._zAxis.z);\n        return function (triVertex) {\n          const vertex = triVertex.p.clone();\n          vertex.multiply(axis);\n          positions.push(vertex.add(self._origin));\n          normals.push(triVertex.n.clone());\n        };\n      }());\n    } else {\n      appendVertex = (function () {\n        const posMtx = new THREE.Matrix3();\n        posMtx.set(\n          self._xAxis.x, self._yAxis.x, self._zAxis.x,\n          self._xAxis.y, self._yAxis.y, self._zAxis.y,\n          self._xAxis.z, self._yAxis.z, self._zAxis.z,\n        );\n        const normMtx = new THREE.Matrix3();\n        normMtx.set(\n          self._xDir.x, self._yDir.x, self._zDir.x,\n          self._xDir.y, self._yDir.y, self._zDir.y,\n          self._xDir.z, self._yDir.z, self._zDir.z,\n        );\n\n        return function (triVertex) {\n          positions.push(triVertex.p.clone().applyMatrix3(posMtx).add(self._origin));\n          normals.push(triVertex.n.clone().applyMatrix3(normMtx));\n        };\n      }());\n    }\n    const indices = this._indices;\n\n    let globTriCount = 0;\n\n    for (let z = 0; z < (zSize - step); z += step) {\n      for (let y = 0; y < (ySize - step); y += step) {\n        let idx = vol.getDirectIdx(0, y, z);\n        for (let x = 0; x < (xSize - step); x += step, idx += stepX) {\n          /* eslint-disable no-multi-spaces */\n          /* eslint-disable computed-property-spacing */\n          gcVal[0] = volData[idx];\n          gcVal[1] = volData[idx + stepX];\n          gcVal[3] = volData[idx + stepY];\n          gcVal[2] = volData[idx + stepX + stepY];\n          gcVal[4] = volData[idx + stepZ];\n          gcVal[5] = volData[idx + stepX + stepZ];\n          gcVal[7] = volData[idx + stepY + stepZ];\n          gcVal[6] = volData[idx + stepX + stepY + stepZ];\n          /* eslint-enable no-multi-spaces */\n          /* eslint-enable computed-property-spacing */\n\n          // Determine the index into the edge table which\n          // tells us which vertices are inside of the surface\n          let cubeIndex = 0;\n          let i = 0;\n          for (; i < gcValSize; ++i) {\n            if (gcVal[i] < isoValue) {\n              cubeIndex |= (1 << i);\n            }\n          }\n\n          if (edgeTable[cubeIndex] === 0) {\n            continue;\n          }\n\n          gc.cubeIndex = cubeIndex;\n          for (i = 0; i < gcValSize; ++i) {\n            gc.p[i].set(x + additions[i].x, y + additions[i].y, z + additions[i].z);\n            _voxelGradientFast(this._gradient, gc.p[i], gc.g[i]);\n          }\n\n          // calculate vertices and facets for this cube,\n          // calculate normals by interpolating between the negated\n          // normalized volume gradients for the 8 reference voxels\n          const triCount = this._polygonize(gc, isoValue, triangles);\n          globTriCount += triCount;\n\n          // append triangles using different techniques\n          for (i = 0; i < triCount; ++i) {\n            indices.push(this._numTriangles * 3);\n            indices.push(this._numTriangles * 3 + 1);\n            indices.push(this._numTriangles * 3 + 2);\n            ++this._numTriangles;\n\n            appendVertex(triangles[i].a);\n            appendVertex(triangles[i].b);\n            appendVertex(triangles[i].c);\n          }\n        }\n      }\n    }\n\n    return globTriCount;\n  }\n\n  compute(volData, origin, isoValue, step) {\n    this._volumetricData = volData;\n    this._origin = origin;\n\n    this._gradient = volData.computeGradient();\n\n    this._doGridPosNorms(isoValue, step, this._prepareAxesAndDirs());\n  }\n\n  _remapIndices(vertexMap, idcCount) {\n    const indices = this._indices;\n    const newIndices = utils.allocateTyped(Uint32Array, idcCount);\n    for (let i = 0; i < idcCount; ++i) {\n      indices[i] = vertexMap[indices[i]];\n      newIndices[i] = indices[i];\n    }\n    this._indices = newIndices;\n  }\n\n  _remapVertices(vertices, normals, count) {\n    const newPositions = utils.allocateTyped(Float32Array, count * 3);\n    const newNormals = utils.allocateTyped(Float32Array, count * 3);\n    for (let i = 0; i < count; ++i) {\n      const pos = vertices[i];\n      newPositions[i * 3] = pos.x;\n      newPositions[i * 3 + 1] = pos.y;\n      newPositions[i * 3 + 2] = pos.z;\n      const norm = normals[i].normalize();\n      newNormals[i * 3] = norm.x;\n      newNormals[i * 3 + 1] = norm.y;\n      newNormals[i * 3 + 2] = norm.z;\n    }\n    this._position = newPositions;\n    this._normals = newNormals;\n  }\n\n  vertexFusion(offset, len) {\n    const faceVer = this._indices.length;\n    const vertices = this._position;\n    const normals = this._normals;\n    const oldVerCount = vertices.length | 0;\n    if (faceVer === 0 || oldVerCount === 0) {\n      return;\n    }\n    const vMap = utils.allocateTyped(Uint32Array, oldVerCount);\n    vMap[0] = 0;\n    let newVer = 1;\n\n    let i = 1;\n    for (; i < oldVerCount; ++i) {\n      const start = newVer - offset < 0 ? 0 : newVer - offset;\n      const end = start + len > newVer ? newVer : start + len;\n      let matchedIndex = -1;\n\n      for (let j = start; j < end; ++j) {\n        if (Math.abs(vertices[i] - vertices[j]) < Number.EPSILON) {\n          matchedIndex = j;\n          break;\n        }\n      }\n\n      if (matchedIndex !== -1) {\n        vMap[i] = matchedIndex;\n      } else {\n        vertices[newVer].copy(vertices[i]);\n        normals[newVer].copy(normals[i]);\n        vMap[i] = newVer;\n        ++newVer;\n      }\n    }\n\n    this._remapIndices(vMap, faceVer);\n    this._remapVertices(vertices, normals, newVer);\n  }\n\n  // Assign per-vertex colors from a volumetric texture map (same dimensions as the original volumetric data).\n  // Along with color dominating atom is determined for each vertex\n  // and vertices with atom out of \"visible\" subset get filtered out.\n  // XXX only handles orthogonal volumes currently\n  setColorVolTex(colorMap, atomMap, atomWeightMap, visibilitySelector) {\n    let i;\n    let idx;\n    const numVerts = this._position.length / 3;\n    const vertices = this._position;\n    const origin = this._origin;\n    const dim = this._volumetricData.getDimensions();\n    const xs = dim[0] - 1;\n    const ys = dim[1] - 1;\n    const zs = dim[2] - 1;\n\n    const colorData = colorMap.getData();\n    const strideX = colorMap.getStrideX();\n    const strideY = colorMap.getStrideY();\n    const strideZ = colorMap.getStrideZ();\n\n    let atomWeightData;\n    let atomStrideX;\n    let atomStrideY;\n    let atomStrideZ;\n\n    if (visibilitySelector !== null) {\n      atomWeightData = atomWeightMap.getData();\n      atomStrideX = atomWeightMap.getStrideX();\n      atomStrideY = atomWeightMap.getStrideY();\n      atomStrideZ = atomWeightMap.getStrideZ();\n    }\n\n    const xInv = 1.0 / this._xAxis.x;\n    const yInv = 1.0 / this._yAxis.y;\n    const zInv = 1.0 / this._zAxis.z;\n\n    let atomLookup = [];\n    let atomWeights = [];\n    const colors = utils.allocateTyped(Float32Array, numVerts * 3);\n\n    function interp(mu, idx1, idx2, c) {\n      c[0] = (1 - mu) * colorData[idx1] + mu * colorData[idx2];\n      c[1] = (1 - mu) * colorData[idx1 + 1] + mu * colorData[idx2 + 1];\n      c[2] = (1 - mu) * colorData[idx1 + 2] + mu * colorData[idx2 + 2];\n    }\n\n    function collectWeight(ai, coefX, coefY, coefZ) {\n      const a = atomMap[ai]; // atomWeightMap is a scalar field, so index into atom map should be the same\n      if (a != null) {\n        atomLookup[a.index] = a;\n        const w = coefX * coefY * coefZ * atomWeightData[ai];\n        if (typeof atomWeights[a.index] === 'undefined') {\n          atomWeights[a.index] = w;\n        } else {\n          atomWeights[a.index] += w;\n        }\n      }\n    }\n\n    const vMap = utils.allocateTyped(Int32Array, numVerts);\n    let newVerCount = 0;\n\n    for (i = 0; i < numVerts; i++) {\n      const ind = i * 3;\n      const vx = (vertices[ind] - origin.x) * xInv;\n      const vy = (vertices[ind + 1] - origin.y) * yInv;\n      const vz = (vertices[ind + 2] - origin.z) * zInv;\n      const x = Math.min(Math.max(vx, 0), xs) | 0;\n      const y = Math.min(Math.max(vy, 0), ys) | 0;\n      const z = Math.min(Math.max(vz, 0), zs) | 0;\n\n      const mux = (vx - x);\n      const muy = (vy - y);\n      const muz = (vz - z);\n\n      if (visibilitySelector != null) {\n        // collect atom weights\n        atomLookup = [];\n        atomWeights = [];\n        idx = atomWeightMap.getDirectIdx(x, y, z);\n        collectWeight(idx, 1 - mux, 1 - muy, 1 - muz);\n        collectWeight(idx + atomStrideX, mux, 1 - muy, 1 - muz);\n        collectWeight(idx + atomStrideY, 1 - mux, muy, 1 - muz);\n        collectWeight(idx + atomStrideX + atomStrideY, mux, muy, 1 - muz);\n        collectWeight(idx + atomStrideZ, 1 - mux, 1 - muy, muz);\n        collectWeight(idx + atomStrideX + atomStrideZ, mux, 1 - muy, muz);\n        collectWeight(idx + atomStrideY + atomStrideZ, 1 - mux, muy, muz);\n        collectWeight(idx + atomStrideX + atomStrideY + atomStrideZ, mux, muy, muz);\n\n        // find dominant atom\n        let maxWeight = 0.0;\n        let dominantIdx = -1;\n        for (const atomIdx in atomWeights) {\n          if (atomWeights[atomIdx] > maxWeight) {\n            dominantIdx = atomIdx;\n            maxWeight = atomWeights[atomIdx];\n          }\n        }\n\n        if (dominantIdx < 0 || !visibilitySelector.includesAtom(atomLookup[dominantIdx])) {\n          // this vertex doesn't belong to visible subset and will be skipped\n          vMap[i] = -1;\n          continue;\n        }\n      }\n\n      vMap[i] = newVerCount++;\n\n      // color tri-linear interpolation\n      const dx = (x < xs) ? strideX : 0;\n      const dy = (y < ys) ? strideY : 0;\n      const dz = (z < zs) ? strideZ : 0;\n\n      const c0 = [0, 0, 0];\n      const c1 = [0, 0, 0];\n      const c2 = [0, 0, 0];\n      const c3 = [0, 0, 0];\n\n      idx = colorMap.getDirectIdx(x, y, z);\n      interp(mux, idx, idx + dx, c0);\n      interp(mux, idx + dy, idx + dx + dy, c1);\n      interp(mux, idx + dz, idx + dx + dz, c2);\n      interp(mux, idx + dy + dz, idx + dx + dy + dz, c3);\n\n      const cz0 = [0, 0, 0];\n      cz0[0] = (1 - muy) * c0[0] + muy * c1[0];\n      cz0[1] = (1 - muy) * c0[1] + muy * c1[1];\n      cz0[2] = (1 - muy) * c0[2] + muy * c1[2];\n\n      const cz1 = [0, 0, 0];\n      cz1[0] = (1 - muy) * c2[0] + muy * c3[0];\n      cz1[1] = (1 - muy) * c2[1] + muy * c3[1];\n      cz1[2] = (1 - muy) * c2[2] + muy * c3[2];\n\n      colors[ind] = (1 - muz) * cz0[0] + muz * cz1[0];\n      colors[ind + 1] = (1 - muz) * cz0[1] + muz * cz1[1];\n      colors[ind + 2] = (1 - muz) * cz0[2] + muz * cz1[2];\n    }\n    this._colors = colors;\n\n    if (visibilitySelector != null) {\n      // shift visible vertices towards beginning of array\n      for (i = 0; i < numVerts; ++i) {\n        const j = vMap[i];\n        if (j < 0) {\n          continue;\n        }\n\n        // assert: j <= i\n        this._position[j * 3] = this._position[i * 3];\n        this._position[j * 3 + 1] = this._position[i * 3 + 1];\n        this._position[j * 3 + 2] = this._position[i * 3 + 2];\n        this._normals[j * 3] = this._normals[i * 3];\n        this._normals[j * 3 + 1] = this._normals[i * 3 + 1];\n        this._normals[j * 3 + 2] = this._normals[i * 3 + 2];\n        this._colors[j * 3] = this._colors[i * 3];\n        this._colors[j * 3 + 1] = this._colors[i * 3 + 1];\n        this._colors[j * 3 + 2] = this._colors[i * 3 + 2];\n      }\n\n      // rebuild index list\n      const numTriangles = this._indices.length / 3;\n      let newTriCount = 0;\n      for (i = 0; i < numTriangles; ++i) {\n        const i0 = vMap[this._indices[3 * i]];\n        const i1 = vMap[this._indices[3 * i + 1]];\n        const i2 = vMap[this._indices[3 * i + 2]];\n        if (i0 >= 0 && i1 >= 0 && i2 >= 0) {\n          this._indices[3 * newTriCount] = i0;\n          this._indices[3 * newTriCount + 1] = i1;\n          this._indices[3 * newTriCount + 2] = i2;\n          ++newTriCount;\n        }\n      }\n\n      // shrink arrays to data size\n      this._position = new Float32Array(this._position.buffer.slice(0, newVerCount * 3 * 4));\n      this._normals = new Float32Array(this._normals.buffer.slice(0, newVerCount * 3 * 4));\n      this._colors = new Float32Array(this._colors.buffer.slice(0, newVerCount * 3 * 4));\n      this._indices = new Uint32Array(this._indices.buffer.slice(0, newTriCount * 3 * 4));\n    }\n  }\n\n  toMesh() {\n    const geo = new THREE.BufferGeometry();\n    geo.setIndex(new THREE.BufferAttribute(this._indices, 1));\n    geo.setAttribute('position', new THREE.BufferAttribute(this._position, 3));\n    geo.setAttribute('normal', new THREE.BufferAttribute(this._normals, 3));\n    geo.setAttribute('color', new THREE.BufferAttribute(this._colors, 3));\n    geo.computeBoundingSphere();\n    return geo;\n  }\n}\nexport default IsoSurface;\n","import * as THREE from 'three';\nimport IsoSurfaceGeometry from './IsoSurfaceGeometry';\nimport IsoSurface from './IsoSurface';\nimport utils from '../../utils';\n\n/**\n * This is a base class for volumetric maps based isosurface algorithms.\n * @param spheresCount - number of atoms/spheres\n * @param opts - geometry specific options\n * @constructor\n */\n\nclass VolumeSurfaceGeometry extends IsoSurfaceGeometry {\n  _build() {\n    const params = this._opts;\n    this.numVoxels = [128, 128, 128];\n    this.xAxis = new THREE.Vector3(1.0, 0.0, 0.0);\n    this.yAxis = new THREE.Vector3(0.0, 1.0, 0.0);\n    this.zAxis = new THREE.Vector3(0.0, 0.0, 1.0);\n\n    this.origin = new THREE.Vector3(0.0, 0.0, 0.0);\n    this._visibilitySelector = params.visibilitySelector;\n\n    this._calcSurface(params);\n  }\n\n  _findMinMax(posRadArray) {\n    const itemSize = 4;\n    const itemsCount = posRadArray.length / itemSize;\n    const maxPosRad = [posRadArray[0], posRadArray[1], posRadArray[2], posRadArray[3]];\n    const minPosRad = [posRadArray[0], posRadArray[1], posRadArray[2], posRadArray[3]];\n    for (let i = 1; i < itemsCount; ++i) {\n      const ind = i * itemSize;\n\n      for (let itemIdx = 0; itemIdx < itemSize; ++itemIdx) {\n        const tmpVal = posRadArray[ind + itemIdx];\n        maxPosRad[itemIdx] = Math.max(tmpVal, maxPosRad[itemIdx]);\n        minPosRad[itemIdx] = Math.min(tmpVal, minPosRad[itemIdx]);\n      }\n    }\n    return { maxPosRad, minPosRad };\n  }\n\n  _findNumVoxels(posRadArray, params) {\n    const { numVoxels } = this;\n    const minMaxValues = this._findMinMax(posRadArray);\n    const minCoordRad = minMaxValues.minPosRad;\n    const maxCoordRad = minMaxValues.maxPosRad;\n\n    // minrad\n    if (minCoordRad[3] > 4.0) {\n      params.gridSpacing *= minCoordRad[3];\n    }\n\n    let gridPadding = params.radScale * maxCoordRad[3] * 1.7;\n    let padRad = gridPadding;\n    padRad = 0.65 * Math.sqrt(4.0 / 3.0 * Math.PI * padRad * padRad * padRad);\n    gridPadding = Math.max(gridPadding, padRad);\n\n    let i = 0;\n    for (; i < 3; ++i) {\n      minCoordRad[i] -= gridPadding;\n      maxCoordRad[i] += gridPadding;\n    }\n\n    for (i = 0; i < 3; ++i) {\n      numVoxels[i] = Math.ceil((maxCoordRad[i] - minCoordRad[i]) / params.gridSpacing);\n    }\n    this.xAxis.x = (numVoxels[0] - 1) * params.gridSpacing;\n    this.yAxis.y = (numVoxels[1] - 1) * params.gridSpacing;\n    this.zAxis.z = (numVoxels[2] - 1) * params.gridSpacing;\n\n    [this.origin.x, this.origin.y, this.origin.z] = minCoordRad;\n\n    return { bbox: minMaxValues, dim: numVoxels };\n  }\n\n  _makeSurface(surface, params) {\n    const isoSurf = new IsoSurface();\n    isoSurf.compute(surface.volMap, this.origin, params.isoValue, 1);\n    isoSurf.vertexFusion(9, 9);// normalization is included\n\n    if (isoSurf._numTriangles > 0) {\n      isoSurf.setColorVolTex(surface.volTexMap, surface.atomMap, surface.atomWeightMap, this._visibilitySelector);\n      this.setIndex(new THREE.BufferAttribute(isoSurf._indices, 1));\n      this.setAttribute('position', new THREE.BufferAttribute(isoSurf._position, 3));\n      this.setAttribute('normal', new THREE.BufferAttribute(isoSurf._normals, 3));\n      this.setAttribute('color', new THREE.BufferAttribute(isoSurf._colors, 3));\n    } else { // geometry should have at least empty position attributes to be processed in wireframe mode by three.js\n      this.setAttribute('position', new THREE.BufferAttribute(utils.allocateTyped(Float32Array, 0), 3));\n    }\n  }\n\n  _calcSurface(params) {\n    const packedArrays = {\n      posRad: this._posRad,\n      colors: this._colors,\n      atoms: this._opts.atoms,\n    };\n\n    if (packedArrays.posRad.length === 0) {\n      return;\n    }\n    const boundaries = this._findNumVoxels(packedArrays.posRad, params);\n\n    const box = new THREE.Box3(\n      this.origin,\n      new THREE.Vector3(this.xAxis.x, this.yAxis.y, this.zAxis.z).add(this.origin),\n    );\n    const surface = this._computeSurface(packedArrays, box, boundaries, params);\n\n    this._makeSurface(surface, params);\n  }\n}\n\nexport default VolumeSurfaceGeometry;\n","import VolumeSurfaceGeometry from './VolumeSurfaceGeometry';\nimport chem from '../../chem';\n\nconst { Volume } = chem;\n\n/**\n * This class implements 'quick' isosurface geometry generation algorithm.\n * @param spheresCount - number of atoms/spheres\n * @param opts - geometry specific options\n * @constructor\n */\n\nclass QuickSurfGeometry extends VolumeSurfaceGeometry {\n  _computeSurface(packedArrays, box, boundaries, params) {\n    // beware of shifting this multiple times!\n    this._shiftByOrigin(packedArrays.posRad);\n\n    const surface = {\n      volMap: new Volume(Float32Array, this.numVoxels, box),\n      volTexMap: new Volume(Float32Array, this.numVoxels, box, 3),\n    };\n\n    if (this._visibilitySelector != null) {\n      surface.atomMap = [];\n      surface.atomWeightMap = new Volume(Float32Array, this.numVoxels, box);\n    }\n\n    this.gaussdensity(surface, packedArrays, null, params);\n    return surface;\n  }\n\n  gaussdensity(surface, packedArrays, atomicNum, params) {\n    const numAtoms = packedArrays.posRad.length / 4;\n    const { posRad, colors } = packedArrays;\n    const { numVoxels } = this;\n    const { radScale, gaussLim, gridSpacing } = params;\n    const invIsoValue = 1.0 / params.isoValue;\n    const invGridSpacing = 1.0 / gridSpacing;\n    const maxVoxelX = numVoxels[0] - 1;\n    const maxVoxelY = numVoxels[1] - 1;\n    const maxVoxelZ = numVoxels[2] - 1;\n    // TODO is densityMap and volTexMap initialized?\n\n    const { volMap, volTexMap } = surface;\n    const volData = volMap.getData();\n    const strideX = volMap.getStrideX();\n\n    const volTexData = volTexMap.getData();\n    const texStrideX = volTexMap.getStrideX();\n\n    let atomWeightData;\n    if (this._visibilitySelector != null) {\n      atomWeightData = surface.atomWeightMap.getData();\n    }\n\n    const { atomMap } = surface;\n\n    for (let i = 0; i < numAtoms; ++i) {\n      const ind = i * 4;\n      const scaledRad = posRad[ind + 3] * radScale;\n      const atomicNumFactor = atomicNum === null ? 1.0 : atomicNum[i];\n      const radInv = 1 / (2 * scaledRad * scaledRad);\n      let radLim = gaussLim * scaledRad;\n      const radLim2 = radLim * radLim;\n      radLim *= invGridSpacing;\n\n      let tmp = posRad[ind] * invGridSpacing;\n      const xMin = Math.max((tmp - radLim) | 0, 0);\n      const xMax = Math.min((tmp + radLim) | 0, maxVoxelX);\n      tmp = posRad[ind + 1] * invGridSpacing;\n      const yMin = Math.max((tmp - radLim) | 0, 0);\n      const yMax = Math.min((tmp + radLim) | 0, maxVoxelY);\n      tmp = posRad[ind + 2] * invGridSpacing;\n      const zMin = Math.max((tmp - radLim) | 0, 0);\n      const zMax = Math.min((tmp + radLim) | 0, maxVoxelZ);\n\n      let dz = zMin * gridSpacing - posRad[ind + 2];\n      for (let z = zMin; z <= zMax; ++z, dz += gridSpacing) {\n        let dy = yMin * gridSpacing - posRad[ind + 1];\n        for (let y = yMin; y <= yMax; ++y, dy += gridSpacing) {\n          const dy2dz2 = dy * dy + dz * dz;\n\n          if (dy2dz2 >= radLim2) {\n            continue;\n          }\n\n          let addr = volMap.getDirectIdx(xMin, y, z);\n          let texAddr = volTexMap.getDirectIdx(xMin, y, z);\n          let dx = xMin * gridSpacing - posRad[ind];\n          for (let x = xMin; x <= xMax; ++x, dx += gridSpacing, addr += strideX, texAddr += texStrideX) {\n            const r2 = dx * dx + dy2dz2;\n            const expVal = -r2 * radInv;\n\n            let density = Math.exp(expVal) * atomicNumFactor;\n\n            // store most relevant atom (with highest density)\n            if (this._visibilitySelector != null\n              && density > atomWeightData[addr]) { // NOSONAR\n              atomWeightData[addr] = density;\n              // we use same index into atom map and atomWeightMap\n              atomMap[addr] = packedArrays.atoms[i];\n            }\n\n            volData[addr] += density;\n\n            // TODO check for volTexMap routine?\n            density *= invIsoValue;\n            const colInd = i * 3;\n            volTexData[texAddr] += density * colors[colInd];\n            volTexData[texAddr + 1] += density * colors[colInd + 1];\n            volTexData[texAddr + 2] += density * colors[colInd + 2];\n          }\n        }\n      }\n    }\n  }\n\n  _shiftByOrigin(posRadArray) {\n    const originX = this.origin.x;\n    const originY = this.origin.y;\n    const originZ = this.origin.z;\n\n    const itemSize = 4;\n    const itemsCount = posRadArray.length / itemSize;\n    for (let i = 0; i < itemsCount; ++i) {\n      const ind = i * itemSize;\n\n      posRadArray[ind] -= originX;\n      posRadArray[ind + 1] -= originY;\n      posRadArray[ind + 2] -= originZ;\n    }\n  }\n}\n\nexport default QuickSurfGeometry;\n","import * as THREE from 'three';\nimport utils from '../../utils';\n\n/**\n * Modifed from SpatialHash\n *\n * Main differences are:\n * - Optimized grid size to ensure we only ever need to look +/-1 cell\n * - Aware of atomic radii and will only output atoms within rAtom + rExtra\n *   (see withinRadii method)\n *\n * (Uses rounding rather than bitshifting as consequence of arbitrary grid size)\n * @class\n * @param {Float32Array} posRad - x, y, z coordinates and radiuses\n * @param {Float32Array} min - xyz min coordinates\n * @param {Float32Array} max - xyz max coordinates\n * @param {number} maxDistance - max distance\n */\nfunction AVHash(posRad, min, max, maxDistance) {\n  const itemSize = 4;\n  const nAtoms = posRad.length / itemSize;\n\n  const minX = min[0];\n  const minY = min[1];\n  const minZ = min[2];\n\n  const maxX = max[0];\n  const maxY = max[1];\n  const maxZ = max[2];\n\n  function hashFunc(w, minW) {\n    return Math.floor((w - minW) / maxDistance);\n  }\n\n  const iDim = hashFunc(maxX, minX) + 1;\n  const jDim = hashFunc(maxY, minY) + 1;\n  const kDim = hashFunc(maxZ, minZ) + 1;\n\n  const nCells = iDim * jDim * kDim;\n\n  const jkDim = jDim * kDim;\n\n  /* Get cellID for cartesian x,y,z */\n  const cellID = function (x, y, z) {\n    return (((hashFunc(x, minX) * jDim) + hashFunc(y, minY)) * kDim) + hashFunc(z, minZ);\n  };\n\n  /* Initial building, could probably be optimized further */\n  const preHash = [];\n  let i;\n  let cid;\n  for (i = 0; i < nAtoms; i++) {\n    const iIdx = itemSize * i;\n    cid = cellID(posRad[iIdx], posRad[iIdx + 1], posRad[iIdx + 2]);\n\n    if (preHash[cid] === undefined) {\n      preHash[cid] = [i];\n    } else {\n      preHash[cid].push(i);\n    }\n  }\n\n  const cellOffsets = utils.allocateTyped(Uint32Array, nCells);\n  const cellLengths = utils.allocateTyped(Uint16Array, nCells);\n  const data = utils.allocateTyped(Uint32Array, nAtoms);\n\n  let offset = 0;\n  let maxCellLength = 0;\n  let j;\n  for (i = 0; i < nCells; i++) {\n    const start = cellOffsets[i] = offset;\n\n    const subArray = preHash[i];\n\n    if (subArray !== undefined) {\n      for (j = 0; j < subArray.length; j++) {\n        data[offset] = subArray[j];\n        offset++;\n      }\n    }\n\n    const cellLength = offset - start;\n    cellLengths[i] = cellLength;\n\n    if (cellLength > maxCellLength) {\n      maxCellLength = cellLength;\n    }\n  }\n\n  // Maximum number of neighbours we could ever produce (27 adjacent cells of equal population)\n  this.neighbourListLength = (27 * maxCellLength) + 1;\n\n  /**\n   * Populate the supplied out array with atom indices that are within rAtom + rExtra\n   * of x,y,z\n   *\n   * -1 in out array indicates the end of the list\n   *\n   * @param  {number} x - x coordinate\n   * @param  {number} y - y coordinate\n   * @param  {number} z - z coordinate\n   * @param  {number} rExtra - additional radius\n   * @param  {Float32Array} out - pre-allocated output array\n   * @return {undefined}\n   */\n  this.withinRadii = function (x, y, z, rExtra, out) {\n    let outIdx = 0;\n\n    const nearI = hashFunc(x, minX);\n    const nearJ = hashFunc(y, minY);\n    const nearK = hashFunc(z, minZ);\n\n    const loI = Math.max(0, nearI - 1);\n    const loJ = Math.max(0, nearJ - 1);\n    const loK = Math.max(0, nearK - 1);\n\n    const hiI = Math.min(iDim - 1, nearI + 1);\n    const hiJ = Math.min(jDim - 1, nearJ + 1);\n    const hiK = Math.min(kDim - 1, nearK + 1);\n\n    for (i = loI; i <= hiI; ++i) {\n      const iOffset = i * jkDim;\n\n      for (j = loJ; j <= hiJ; ++j) {\n        const jOffset = j * kDim;\n\n        for (let k = loK; k <= hiK; ++k) {\n          cid = iOffset + jOffset + k;\n\n          const cellStart = cellOffsets[cid];\n          const cellEnd = cellStart + cellLengths[cid];\n\n          for (let dataIndex = cellStart; dataIndex < cellEnd; dataIndex++) {\n            const atomIndex = data[dataIndex];\n            const baseIndex = itemSize * atomIndex;\n            const dx = posRad[baseIndex] - x;\n            const dy = posRad[baseIndex + 1] - y;\n            const dz = posRad[baseIndex + 2] - z;\n            const rSum = posRad[baseIndex + 3] + rExtra;\n\n            if ((dx * dx + dy * dy + dz * dz) <= (rSum * rSum)) {\n              out[outIdx++] = data[dataIndex];\n            }\n          }\n        }\n      }\n    }\n    // Add terminator\n    out[outIdx] = -1;\n  };\n}\nfunction ContactSurface(packedArrays, boundaries, params, _indexList) {\n  // Field generation method adapted from AstexViewer (Mike Hartshorn)\n  // by Fred Ludlow.\n  // Other parts based heavily on NGL (Alexander Rose) EDT Surface class\n  //\n  // Should work as a drop-in alternative to EDTSurface (though some of\n  // the EDT paramters are not relevant in this method).\n\n  const itemSize = 4;\n  const { posRad, colors, atoms } = packedArrays;\n  const nAtoms = posRad.length / itemSize;\n\n  const { bbox } = boundaries;\n\n  const min = bbox.minPosRad;\n  const max = bbox.maxPosRad;\n\n  let r2; // Atom positions, expanded radii (squared)\n  let maxRadius;\n\n  // Parameters\n  let probeRadius;\n  let scaleFactor;\n  let probePositions;\n\n  // Cache last value for obscured test\n  let lastClip = -1;\n\n  // Grid params\n  let dim;\n  let grid;\n  let volTex;\n  let weights;\n  let weightsMap = null;\n  let atomMap = null;\n  let visibilitySelector = null;\n\n  // grid indices -> xyz coords\n  let gridx;\n  let gridy;\n  let gridz;\n\n  // Lookup tables:\n  let sinTable;\n  let cosTable;\n\n  // Spatial Hash\n  let hash;\n\n  // Neighbour array to be filled by hash\n  let neighbours;\n\n  // Vectors for Torus Projection\n  const mid = new THREE.Vector3(0.0, 0.0, 0.0);\n  const n1 = new THREE.Vector3(0.0, 0.0, 0.0);\n  const n2 = new THREE.Vector3(0.0, 0.0, 0.0);\n\n  let ngTorus;\n\n  function uniformArray(TypeName, n, a) {\n    const array = utils.allocateTyped(TypeName, n);\n    for (let innI = 0; innI < n; ++innI) {\n      array[innI] = a;\n    }\n\n    return array;\n  }\n\n  function fillGridDim(a, start, step) {\n    for (let innI = 0; innI < a.length; innI++) {\n      a[innI] = start + (step * innI);\n    }\n  }\n\n  function initializeGrid() {\n    ({ scaleFactor } = params);\n    ({ dim } = boundaries);\n\n    ngTorus = Math.min(5, 2 + Math.floor(probeRadius * scaleFactor));\n\n    const gridSize = dim[0] * dim[1] * dim[2];\n    grid = uniformArray(Float32Array, gridSize, -1001.0);\n    volTex = utils.allocateTyped(Float32Array, gridSize * 3);\n    weights = utils.allocateTyped(Float32Array, gridSize);\n    if (visibilitySelector) {\n      weightsMap = utils.allocateTyped(Float32Array, gridSize);\n      atomMap = [];\n    }\n\n    gridx = utils.allocateTyped(Float32Array, dim[0]);\n    gridy = utils.allocateTyped(Float32Array, dim[1]);\n    gridz = utils.allocateTyped(Float32Array, dim[2]);\n\n    fillGridDim(gridx, min[0], 1 / scaleFactor);\n    fillGridDim(gridy, min[1], 1 / scaleFactor);\n    fillGridDim(gridz, min[2], 1 / scaleFactor);\n  }\n\n  function initializeAngleTables() {\n    let theta = 0.0;\n    const step = 2 * Math.PI / probePositions;\n\n    cosTable = utils.allocateTyped(Float32Array, probePositions);\n    sinTable = utils.allocateTyped(Float32Array, probePositions);\n    for (let innI = 0; innI < probePositions; innI++) {\n      cosTable[innI] = Math.cos(theta);\n      sinTable[innI] = Math.sin(theta);\n      theta += step;\n    }\n  }\n\n  function initializeHash() {\n    hash = new AVHash(posRad, min, max, 2.01 * maxRadius);\n    neighbours = new Int32Array(hash.neighbourListLength);\n  }\n\n  function init() {\n    ({\n      probeRadius,\n      scaleFactor,\n      probePositions,\n      visibilitySelector,\n    } = params);\n    r2 = utils.allocateTyped(Float32Array, nAtoms);\n    maxRadius = 0;\n    for (let innI = 0; innI < nAtoms; ++innI) {\n      const rExt = posRad[innI * itemSize + 3] += probeRadius;\n      if (rExt > maxRadius) {\n        maxRadius = rExt;\n      }\n      r2[innI] = rExt * rExt;\n    }\n\n    initializeGrid();\n    initializeAngleTables();\n    initializeHash();\n\n    lastClip = -1;\n  }\n\n  function singleAtomObscures(ai, innX, innY, innZ) {\n    const innCI = itemSize * ai;\n    const ra2 = r2[ai];\n    const dx = posRad[innCI] - innX;\n    const dy = posRad[innCI + 1] - innY;\n    const dz = posRad[innCI + 2] - innZ;\n    const d2 = dx * dx + dy * dy + dz * dz;\n\n    return d2 < ra2;\n  }\n\n  function obscured(innX, innY, innZ, a, b) {\n    // Is the point at x,y,z obscured by any of the atoms\n    // specifeid by indices in neighbours. Ignore indices\n    // a and b (these are the relevant atoms in projectPoints/Torii)\n\n    // Cache the last clipped atom (as very often the same one in\n    // subsequent calls)\n    let ai;\n\n    if (lastClip !== -1) {\n      ai = lastClip;\n      if (ai !== a && ai !== b && singleAtomObscures(ai, innX, innY, innZ)) {\n        return ai;\n      }\n      lastClip = -1;\n    }\n\n    let ni = 0;\n    ai = neighbours[ni];\n    while (ai >= 0) {\n      if (ai !== a && ai !== b && singleAtomObscures(ai, innX, innY, innZ)) {\n        lastClip = ai;\n        return ai;\n      }\n      ai = neighbours[++ni];\n    }\n\n    lastClip = -1;\n\n    return -1;\n  }\n\n  function projectPoints() {\n    // For each atom:\n    //     Iterate over a subsection of the grid, for each point:\n    //         If current value < 0.0, unvisited, set positive\n    //\n    //         In any case: Project this point onto surface of the atomic sphere\n    //         If this projected point is not obscured by any other atom\n    //             Calcualte delta distance and set grid value to minimum of\n    //             itself and delta\n\n    // Should we alias frequently accessed closure constiables??\n    // Assume JS engine capable of optimizing this\n    // anyway...\n    const maxRad = 4.0;\n    const sigma = (maxRad) / 3;\n    const sigma2Inv = 1 / (2 * sigma * sigma);\n\n    for (let innI = 0; innI < nAtoms; innI++) {\n      const innCI = itemSize * innI;\n      const ax = posRad[innCI];\n      const ay = posRad[innCI + 1];\n      const az = posRad[innCI + 2];\n      const ar = posRad[innCI + 3];\n      const ar2 = r2[innI];\n\n      hash.withinRadii(ax, ay, az, ar, neighbours);\n\n      // Number of grid points, round this up...\n      const ng = Math.ceil(ar * scaleFactor);\n\n      // Center of the atom, mapped to grid points (take floor)\n      const iax = Math.floor(scaleFactor * (ax - min[0]));\n      const iay = Math.floor(scaleFactor * (ay - min[1]));\n      const iaz = Math.floor(scaleFactor * (az - min[2]));\n\n      // Extents of grid to consider for this atom\n      const minx = Math.max(0, iax - ng);\n      const miny = Math.max(0, iay - ng);\n      const minz = Math.max(0, iaz - ng);\n\n      // Add two to these points:\n      // - iax are floor'd values so this ensures coverage\n      // - these are loop limits (exclusive)\n      const maxx = Math.min(dim[0], iax + ng + 2);\n      const maxy = Math.min(dim[1], iay + ng + 2);\n      const maxz = Math.min(dim[2], iaz + ng + 2);\n\n      const colIdx = innI * 3;\n      const cr = colors[colIdx];\n      const cg = colors[colIdx + 1];\n      const cb = colors[colIdx + 2];\n\n      for (let iz = minz; iz < maxz; iz++) {\n        const dz = gridz[iz] - az;\n        const zOffset = dim[1] * dim[0] * iz;\n\n        for (let iy = miny; iy < maxy; iy++) {\n          const dy = gridy[iy] - ay;\n          const dzy2 = dz * dz + dy * dy;\n          const zyOffset = zOffset + dim[0] * iy;\n\n          for (let ix = minx; ix < maxx; ix++) {\n            const idx = ix + zyOffset;\n            const dx = gridx[ix] - ax;\n            const d2 = dzy2 + dx * dx;\n\n            if (d2 < ar2) {\n              const w = Math.exp(-d2 * sigma2Inv);\n              const cIdx = idx * 3;\n              volTex[cIdx] += cr * w;\n              volTex[cIdx + 1] += cg * w;\n              volTex[cIdx + 2] += cb * w;\n              weights[idx] += w;\n              if (visibilitySelector !== null && w > weightsMap[idx]) {\n                weightsMap[idx] = w;\n                atomMap[idx] = atoms[innI];\n              }\n\n              if (grid[idx] < 0.0) {\n                // Unvisited, make positive\n                grid[idx] = -grid[idx];\n              }\n              // Project on to the surface of the sphere\n              // sp is the projected point ( dx, dy, dz ) * ( ra / d )\n              const d = Math.sqrt(d2);\n              const ap = ar / d;\n              let spx = dx * ap;\n              let spy = dy * ap;\n              let spz = dz * ap;\n\n              spx += ax;\n              spy += ay;\n              spz += az;\n\n              if (obscured(spx, spy, spz, innI, -1) === -1) {\n                const dd = ar - d;\n                if (dd < grid[idx]) {\n                  grid[idx] = dd;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function normalToLine(out, p) {\n    out.x = out.y = out.z = 1.0;\n    if (p.x !== 0) {\n      out.x = (p.y + p.z) / -p.x;\n    } else if (p.y !== 0) {\n      out.y = (p.x + p.z) / -p.y;\n    } else if (p.z !== 0) {\n      out.z = (p.x + p.y) / -p.z;\n    }\n    return out;\n  }\n\n  function projectTorus(a, b) {\n    const aIdx = itemSize * a;\n    const bIdx = itemSize * b;\n    const xa = posRad[aIdx];\n    const ya = posRad[aIdx + 1];\n    const za = posRad[aIdx + 2];\n    const r1 = posRad[aIdx + 3];\n    let dx = mid.x = posRad[bIdx] - xa;\n    let dy = mid.y = posRad[bIdx + 1] - ya;\n    let dz = mid.z = posRad[bIdx + 2] - za;\n    const innR2 = posRad[bIdx + 3];\n    let d2 = dx * dx + dy * dy + dz * dz;\n\n    // This check now redundant as already done in AVHash.withinRadii\n    // if( d2 > (( r1 + r2 ) * ( r1 + r2 )) ){ return; }\n\n    const d = Math.sqrt(d2);\n\n    // Find angle between a->b vector and the circle\n    // of their intersection by cosine rule\n    const cosA = (r1 * r1 + d * d - innR2 * innR2) / (2.0 * r1 * d);\n\n    // distance along a->b at intersection\n    const dmp = r1 * cosA;\n\n    mid.normalize();\n\n    // Create normal to line\n    normalToLine(n1, mid);\n    n1.normalize();\n\n    // Cross together for second normal vector\n    n2.crossVectors(mid, n1);\n    n2.normalize();\n\n    // r is radius of circle of intersection\n    const rInt = Math.sqrt(r1 * r1 - dmp * dmp);\n\n    n1.multiplyScalar(rInt);\n    n2.multiplyScalar(rInt);\n    mid.multiplyScalar(dmp);\n\n    mid.x += xa;\n    mid.y += ya;\n    mid.z += za;\n\n    lastClip = -1;\n\n    const ng = ngTorus;\n\n    for (let innI = 0; innI < probePositions; innI++) {\n      const cost = cosTable[innI];\n      const sint = sinTable[innI];\n\n      const px = mid.x + cost * n1.x + sint * n2.x;\n      const py = mid.y + cost * n1.y + sint * n2.y;\n      const pz = mid.z + cost * n1.z + sint * n2.z;\n\n      if (obscured(px, py, pz, a, b) === -1) {\n        // As above, iterate over our grid...\n        // px, py, pz in grid coords\n        const iax = Math.floor(scaleFactor * (px - min[0]));\n        const iay = Math.floor(scaleFactor * (py - min[1]));\n        const iaz = Math.floor(scaleFactor * (pz - min[2]));\n\n        const minx = Math.max(0, iax - ng);\n        const miny = Math.max(0, iay - ng);\n        const minz = Math.max(0, iaz - ng);\n\n        const maxx = Math.min(dim[0], iax + ng + 2);\n        const maxy = Math.min(dim[1], iay + ng + 2);\n        const maxz = Math.min(dim[2], iaz + ng + 2);\n\n        for (let iz = minz; iz < maxz; iz++) {\n          dz = pz - gridz[iz];\n          const zOffset = dim[1] * dim[0] * iz;\n          for (let iy = miny; iy < maxy; iy++) {\n            dy = py - gridy[iy];\n            const dzy2 = dz * dz + dy * dy;\n            const zyOffset = zOffset + dim[0] * iy;\n            for (let ix = minx; ix < maxx; ix++) {\n              dx = px - gridx[ix];\n              d2 = dzy2 + dx * dx;\n              const idx = ix + zyOffset;\n              const current = grid[idx];\n\n              if (current > 0.0 && d2 < (current * current)) {\n                grid[idx] = Math.sqrt(d2);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function projectTorii() {\n    for (let innI = 0; innI < nAtoms; innI++) {\n      const innIdx = itemSize * innI;\n      hash.withinRadii(\n        posRad[innIdx], posRad[innIdx + 1], posRad[innIdx + 2],\n        posRad[innIdx + 3], neighbours,\n      );\n      let ia = 0;\n      let ni = neighbours[ia];\n      while (ni >= 0) {\n        if (innI < ni) {\n          projectTorus(innI, ni);\n        }\n        ni = neighbours[++ia];\n      }\n    }\n  }\n\n  function fixNegatives() {\n    for (let innI = 0, n = grid.length; innI < n; innI++) {\n      if (grid[innI] < 0) grid[innI] = 0;\n      let w = weights[innI];\n      if (w > 0) {\n        w = 1 / w;\n        const innInnI = innI * 3;\n        volTex[innInnI] *= w;\n        volTex[innInnI + 1] *= w;\n        volTex[innInnI + 2] *= w;\n      }\n    }\n  }\n\n  function getVolume() {\n    // Basic steps are:\n    // 1) Initialize\n    // 2) Project points\n    // 3) Project torii\n    console.time('ContactSurface.getVolume');\n\n    console.time('ContactSurface.init');\n    init();\n    console.timeEnd('ContactSurface.init');\n\n    console.time('ContactSurface.projectPoints');\n    projectPoints();\n    console.timeEnd('ContactSurface.projectPoints');\n\n    console.time('ContactSurface.projectTorii');\n    projectTorii();\n    console.timeEnd('ContactSurface.projectTorii');\n    fixNegatives();\n    console.timeEnd('ContactSurface.getVolume');\n  }\n\n  this.build = function () {\n    // type and cutoff left in for compatibility with EDTSurface.getSurface\n    // function signature\n    getVolume();\n    this.volTexMap = volTex;\n    this.weightsMap = weightsMap;\n    this.atomMap = atomMap;\n    this.volMap = grid;\n  };\n}\nexport default ContactSurface;\n","import VolumeSurfaceGeometry from './VolumeSurfaceGeometry';\nimport ContactSurface from './ContactSurface';\nimport chem from '../../chem';\n\nconst { Volume } = chem;\n\n/**\n * This class implements 'contact' isosurface geometry generation algorithm.\n * @param spheresCount - number of atoms/spheres\n * @param opts - geometry specific options\n * @constructor\n */\n\nclass ContactSurfaceGeometry extends VolumeSurfaceGeometry {\n  _computeSurface(packedArrays, box, boundaries, params) {\n    const contactSurface = new ContactSurface(packedArrays, boundaries, params);\n    contactSurface.build();\n\n    const surface = {\n      volMap: new Volume(Float32Array, this.numVoxels, box, 1, contactSurface.volMap),\n      volTexMap: new Volume(Float32Array, this.numVoxels, box, 3, contactSurface.volTexMap),\n      atomMap: contactSurface.atomMap,\n      atomWeightMap: new Volume(Float32Array, this.numVoxels, box, 1, contactSurface.weightsMap),\n    };\n    return surface;\n  }\n}\n\nexport default ContactSurfaceGeometry;\n","import * as THREE from 'three';\n\n/**\n * Class for colored atom. Need for atom structure clusterization\n *\n * @param {Vector3} vCenter   Center of atom\n * @param {number}  radiusAt  Radius of atom\n */\nclass IsoSurfaceAtomColored {\n  constructor(vCenter, radiusAt) {\n    this.coord = new THREE.Vector3();\n    this.coord.copy(vCenter);\n    this.radius = radiusAt;\n    this.colorX = 0.99999;\n    this.colorY = 0.0;\n    this.colorZ = 0.0;\n    this.atomType = 0;\n    this.srcAtom = null;\n  }\n}\nexport default IsoSurfaceAtomColored;\n","import * as THREE from 'three';\nimport utils from '../../utils';\n\n// suppress some JSHint warnings\n/* jshint bitwise: false */\n\n/**\n * Build normals for isosurface, using atoms information\n *\n * @param {number} numAtoms     - Number of atoms in molecule\n * @param {Element} atoms      - Array of atoms\n * @param {Vector3} vBoxMin     - Bounding box min\n * @param {Vector3} vBoxMax     - Bounding box max\n * @param {number} probeRadius     - Normals for output\n *\n */\nclass IsosurfaceBuildNormals {\n  constructor(numAtoms, atoms, vBoxMin, vBoxMax, probeRadius) {\n    this._numAtoms = numAtoms;\n    this._atoms = atoms;\n    this._vBoxMin = new THREE.Vector3();\n    this._vBoxMax = new THREE.Vector3();\n    this._vBoxMin.copy(vBoxMin);\n    this._vBoxMax.copy(vBoxMax);\n    this._probeRadius = probeRadius;\n\n    this._atomsList = null;\n    this._voxelList = null;\n  }\n\n  createVoxels() {\n    let numAtomsRefs;\n    let rad;\n    const ATOM_VOXEL_REF_SCALE = 4.5;\n\n    const numAtoms = this._numAtoms | 0;\n    const atoms = this._atoms;\n    const dx = this._vBoxMax.x - this._vBoxMin.x;\n    const dy = this._vBoxMax.y - this._vBoxMin.y;\n    const dz = this._vBoxMax.z - this._vBoxMin.z;\n    let w = (dx < dy) ? dx : dy;\n    w = (dz < w) ? dz : w;\n    let maxRad = 0.0;\n    let aveRad = 0.0;\n\n    let i;\n    for (i = 0; i < numAtoms; i++) {\n      rad = (atoms[i].radius + this._probeRadius) * 2.0;\n      maxRad = (rad > maxRad) ? rad : maxRad;\n      aveRad += rad;\n    }\n    let numCells = Math.floor(w / maxRad);\n    if (numCells < 2) {\n      numCells = 2;\n    }\n    aveRad /= numAtoms;\n\n    this._numCells = numCells;\n    this._aveRad = aveRad;\n    this._maxRad = maxRad;\n\n    const side = numCells;\n    const side2 = numCells * numCells;\n    const side3 = numCells * numCells * numCells;\n\n    const xScale = this._xScale = 1.0 / (this._vBoxMax.x - this._vBoxMin.x);\n    const yScale = this._yScale = 1.0 / (this._vBoxMax.y - this._vBoxMin.y);\n    const zScale = this._zScale = 1.0 / (this._vBoxMax.z - this._vBoxMin.z);\n\n    // estimate number of individual atom refs in each voxel list\n    let maxAtomsRefs = 0;\n\n    const xNumVoxMult = xScale * numCells;\n    const yNumVoxMult = yScale * numCells;\n    const zNumVoxMult = zScale * numCells;\n\n    for (i = 0; i < numAtoms; i++) {\n      const radAffect = (atoms[i].radius + this._probeRadius) * ATOM_VOXEL_REF_SCALE;\n      const diaAffect = radAffect * 2.0;\n      let numVoxX = Math.floor(xNumVoxMult * diaAffect + 0.8);\n      let numVoxY = Math.floor(yNumVoxMult * diaAffect + 0.8);\n      let numVoxZ = Math.floor(zNumVoxMult * diaAffect + 0.8);\n      // avoid case numVox? == 0\n      // also use loop i <=\n      numVoxX++;\n      numVoxY++;\n      numVoxZ++;\n      maxAtomsRefs += numVoxX * numVoxY * numVoxZ;\n    } // for (i)\n    // maxAtomsRefs = numAtoms * MAX_ATOMS_IN_SINGLE_VOXEL;\n\n    this._voxelList = utils.allocateTyped(Int32Array, side3);\n    const atomsList = [];\n    atomsList.length = maxAtomsRefs;\n    if ((this._voxelList === null) || (atomsList === null)) {\n      return 0 - 1;\n    }\n    // init voxel list\n    for (i = 0; i < side3; i++) {\n      this._voxelList[i] = -1;\n    }\n    numAtomsRefs = 0;\n\n    // create voxel lists\n    for (i = 0; i < numAtoms; i++) {\n      // use multiplier 4 to locate this atom in different voxels\n      rad = (atoms[i].radius + this._probeRadius) * ATOM_VOXEL_REF_SCALE;\n      let xIndMin = Math.floor((atoms[i].coord.x - this._vBoxMin.x - rad) * numCells * xScale);\n      let yIndMin = Math.floor((atoms[i].coord.y - this._vBoxMin.y - rad) * numCells * yScale);\n      let zIndMin = Math.floor((atoms[i].coord.z - this._vBoxMin.z - rad) * numCells * zScale);\n      let xIndMax = Math.floor((atoms[i].coord.x - this._vBoxMin.x + rad) * numCells * xScale);\n      let yIndMax = Math.floor((atoms[i].coord.y - this._vBoxMin.y + rad) * numCells * yScale);\n      let zIndMax = Math.floor((atoms[i].coord.z - this._vBoxMin.z + rad) * numCells * zScale);\n\n      xIndMin = (xIndMin >= 0) ? xIndMin : 0;\n      yIndMin = (yIndMin >= 0) ? yIndMin : 0;\n      zIndMin = (zIndMin >= 0) ? zIndMin : 0;\n\n      xIndMax = (xIndMax < numCells) ? xIndMax : (numCells - 1);\n      yIndMax = (yIndMax < numCells) ? yIndMax : (numCells - 1);\n      zIndMax = (zIndMax < numCells) ? zIndMax : (numCells - 1);\n\n      for (let z = zIndMin; z <= zIndMax; z++) {\n        for (let y = yIndMin; y <= yIndMax; y++) {\n          for (let x = xIndMin; x <= xIndMax; x++) {\n            // add atom with index \"i\" to this voxel list\n            const indVoxel = x + y * side + z * side2;\n            // assert indVoxel >= 0\n            // assert indVoxel < side3\n\n            // add first\n            if (this._voxelList[indVoxel] < 0) {\n              atomsList[numAtomsRefs * 2 + 0] = i;\n              atomsList[numAtomsRefs * 2 + 1] = 0 - 1;\n              this._voxelList[indVoxel] = numAtomsRefs;\n              numAtomsRefs++;\n              // assert numAtomsRefs < maxAtomsRefs - 1\n              continue;\n            }\n            // insert into head of list\n            const indexNext = this._voxelList[indVoxel];\n            this._voxelList[indVoxel] = numAtomsRefs;\n            atomsList[numAtomsRefs * 2 + 0] = i;\n            atomsList[numAtomsRefs * 2 + 1] = indexNext;\n            numAtomsRefs++;\n          } // for (x)\n        } // for (y)\n      } // for (z)\n    } // for (i)\n\n    // convert Array to Int32Array\n    this._atomsList = Int32Array.from(atomsList);\n\n    return 0;\n  }\n\n  destroyVoxels() {\n    this._atomsList = null;\n    this._voxelList = null;\n\n    this._atoms = null;\n    this._vertices = null;\n    this._vBoxMin = null;\n    this._vBoxMax = null;\n  }\n\n  /**\n   * Enumerate all atoms affecting specified point\n   *\n   * @param {Vector3}    point    - point in 3D\n   * @param {func(atom)} process  - function to call for each atom\n   */\n  forEachRelatedAtom(point, process) {\n    // find corresponding voxel\n    const xInd = Math.floor((point.x - this._vBoxMin.x) * this._numCells * this._xScale);\n    const yInd = Math.floor((point.y - this._vBoxMin.y) * this._numCells * this._yScale);\n    const zInd = Math.floor((point.z - this._vBoxMin.z) * this._numCells * this._zScale);\n    const indVoxel = xInd + yInd * this._numCells + zInd * this._numCells * this._numCells;\n\n    // run through atoms affecting this voxel\n    const atoms = this._atoms;\n    for (let ref = this._voxelList[indVoxel]; ref >= 0; ref = this._atomsList[ref * 2 + 1]) {\n      const indexAtom = this._atomsList[ref * 2];\n      process(atoms[indexAtom]);\n    }\n  }\n\n  /**\n   * Get atom closest to specified point\n   *\n   * @param {Vector3} point  - point in 3D\n   *\n   * @returns {IsoSurfaceAtomColored} atom, or null if not found\n   */\n  getClosestAtom(point) {\n    let closest = null;\n    let minDist2 = Number.MAX_VALUE;\n\n    this.forEachRelatedAtom(point, (atom) => {\n      const dist2 = point.distanceToSquared(atom.coord);\n      if (dist2 < minDist2) {\n        minDist2 = dist2;\n        closest = atom;\n      }\n    });\n\n    return closest;\n  }\n\n  /**\n   * Build normals for isosurface, using atoms information\n   *\n   * @param {number} numVertices  - Number of vertices in final geometry (to render)\n   * @param {Vector3} vertices    - Geometry vertices (3d coordinates array)\n   * @param {Vector3} normals     - Normals for output\n   *\n   * @returns {number} 0, if success\n   */\n  buildNormals(numVertices, vertices, normals) {\n    const self = this;\n    let numCloseAtoms = 0;\n    let vx = 0;\n    let vy = 0;\n    let vz = 0;\n    let dist2;\n    let vNormalX = 0;\n    let vNormalY = 0;\n    let vNormalZ = 0;\n    let koef = 0;\n    let w = 0;\n    const r25 = 2.5;\n    const r01 = 0.1;\n\n    const maxRadAffect = this._aveRad * r25;\n    const maxRadAffect2 = maxRadAffect * maxRadAffect;\n    const expScale = -this._aveRad * r01;\n\n    // some stats\n    // numSlowAtoms = 0;\n\n    const gatherNormals = function (atom) {\n      const dx = vx - atom.coord.x;\n      const dy = vy - atom.coord.y;\n      const dz = vz - atom.coord.z;\n      dist2 = dx * dx + dy * dy + dz * dz;\n      if (dist2 > maxRadAffect2) {\n        return;\n      }\n\n      // get weight for gaussian smoothing\n      const rad = atom.radius + self._probeRadius;\n      koef = dist2 - (rad * rad);\n      if (koef < 0.0) {\n        koef = -koef;\n      }\n      w = Math.exp(expScale * koef);\n\n      vNormalX += dx * w;\n      vNormalY += dy * w;\n      vNormalZ += dz * w;\n      numCloseAtoms++;\n    };\n\n    let maxClosedAtoms = 0;\n    // process all vertices, one by one\n    for (let i = 0; i < numVertices; i++) {\n      vx = vertices[i].x;\n      vy = vertices[i].y;\n      vz = vertices[i].z;\n\n      numCloseAtoms = 0;\n      vNormalX = vNormalY = vNormalZ = 0.0;\n\n      this.forEachRelatedAtom(vertices[i], gatherNormals);\n\n      maxClosedAtoms = (numCloseAtoms > maxClosedAtoms) ? numCloseAtoms : maxClosedAtoms;\n\n      // normalize vNormal\n      dist2 = vNormalX * vNormalX + vNormalY * vNormalY + vNormalZ * vNormalZ;\n      if (numCloseAtoms > 0) {\n        koef = 1.0 / Math.sqrt(dist2);\n        vNormalX *= koef;\n        vNormalY *= koef;\n        vNormalZ *= koef;\n      }\n      normals[i].x = vNormalX;\n      normals[i].y = vNormalY;\n      normals[i].z = vNormalZ;\n    } // for (i) all vertices\n\n    return 0;\n  }\n\n  /**\n   * Build vertex colors for isosurface, using atoms information\n   *\n   * @param {number} numVertices  - Number of vertices in final geometry (to render)\n   * @param {Vector3} vertices    - Geometry vertices (3d coordinates array)\n   * @param {Vector3} colors                - Colors for output\n   * @param {number} radiusColorSmoothness  - Radius of smoothness sphere\n   *\n   * @returns {number} 0, if success\n   */\n  buildColors(numVertices, vertices, colors, radiusColorSmoothness) {\n    const self = this;\n    let vx = 0.0;\n    let vy = 0.0;\n    let vz = 0.0;\n    let koef = 0.0;\n    let w = 0.0;\n    const KOEF_ADD = 0.8;\n\n    const maxRadAffect = radiusColorSmoothness;\n    const maxRadAffect2 = maxRadAffect * maxRadAffect;\n\n    let colorsClose = [];\n    let weights = [];\n    let weightsSum = 0;\n\n    const gatherColors = function (atom) {\n      const dx = vx - atom.coord.x;\n      const dy = vy - atom.coord.y;\n      const dz = vz - atom.coord.z;\n      const dist2 = dx * dx + dy * dy + dz * dz;\n      if (dist2 > maxRadAffect2) {\n        return;\n      }\n\n      // get weight for gaussian smoothing\n      const rad = atom.radius + self._probeRadius;\n      koef = dist2 - (rad * rad);\n      if (koef < 0.0) {\n        koef = -koef;\n      }\n      w = 1.0 / (KOEF_ADD + koef);\n\n      colorsClose.push([atom.colorX, atom.colorY, atom.colorZ]);\n      weights.push(w); // save weights for use\n      weightsSum += w; // calc sum of weights fo further normalization\n    };\n\n    // process all vertices, one by one\n    for (let i = 0; i < numVertices; i++) {\n      vx = vertices[i].x;\n      vy = vertices[i].y;\n      vz = vertices[i].z;\n\n      colorsClose = [];\n      weights = [];\n      weightsSum = 0;\n\n      this.forEachRelatedAtom(vertices[i], gatherColors);\n\n      // normalized weighted sum of colors\n      for (let j = 0; j < colorsClose.length; ++j) {\n        const weightNormalized = weights[j] / weightsSum;\n        colors[i].x += colorsClose[j][0] * weightNormalized;\n        colors[i].y += colorsClose[j][1] * weightNormalized;\n        colors[i].z += colorsClose[j][2] * weightNormalized;\n      }\n    } // for (i) all vertices\n    return 0;\n  }\n}\nexport default IsosurfaceBuildNormals;\n","import * as THREE from 'three';\n\n/**\n * Class for geometry (triangle mesh) representation\n *\n *\n * @param {number} maxNumVertices Maximum possible number of vertices in mesh\n * @param {number} maxNumTriangles Maximum possible number of triangles in mesh\n * @param {boolean} needVertexColors Obvious\n */\nclass IsoSurfaceGeo {\n  constructor(maxNumVertices, maxNumTriangles, needVertexColors) {\n    this._maxNumVertices = maxNumVertices;\n    this._maxNumTriangles = maxNumTriangles;\n    this._vertices = new Array(maxNumVertices);\n    this._normals = new Array(maxNumVertices);\n    this._colors = null;\n    if (needVertexColors) {\n      this._colors = new Array(maxNumVertices);\n    }\n    this._indices = new Array(maxNumTriangles * (1 + 2));\n    this._numVertices = 0;\n    this._numTriangles = 0;\n\n    let i;\n    for (i = 0; i < maxNumVertices; i++) {\n      this._vertices[i] = new THREE.Vector3();\n      this._normals[i] = new THREE.Vector3();\n    }\n    for (i = 0; i < maxNumTriangles * (1 + 2); i++) {\n      this._indices[i] = -1;\n    }\n    if (needVertexColors) {\n      for (i = 0; i < maxNumVertices; i++) {\n        this._colors[i] = new THREE.Vector3();\n      }\n    }\n  }\n\n  destroy() {\n    this._vertices = null;\n    this._normals = null;\n    this._indices = null;\n  }\n}\nexport default IsoSurfaceGeo;\n","import * as THREE from 'three';\nimport IsoSurfaceGeometry from './IsoSurfaceGeometry';\nimport IsoSurfaceAtomColored from './IsoSurfaceAtomColored';\nimport IsosurfaceBuildNormals from './IsosurfaceBuildNormals';\nimport IsoSurfaceMarchCube from './IsoSurfaceMarchCube';\nimport IsoSurfaceGeo from './IsoSurfaceGeo';\nimport chem from '../../chem';\nimport utils from '../../utils';\n\nconst COLOR_SIZE = 3;\nconst HASH_SIZE = 32768;\nconst { Element } = chem;\n\n/**\n * This class implements 'quick' isosurface geometry generation algorithm.\n * @param spheresCount - number of atoms/spheres\n * @param opts - geometry specific options\n * @constructor\n */\n\nclass SSIsosurfaceGeometry extends IsoSurfaceGeometry {\n  _build() {\n    // convert geoOut into arrays of positions, indices, normals\n    this._innerBuild();\n    const geoOut = this.getGeo();\n    this.destroy();\n    this._fromGeo(geoOut);\n  }\n\n  _fromGeo(geoOut) {\n    let colors = null;\n    const positions = utils.allocateTyped(Float32Array, (1 + 2) * geoOut._numVertices);\n    const normals = utils.allocateTyped(Float32Array, (1 + 2) * geoOut._numVertices);\n    if (geoOut._colors !== null) {\n      colors = utils.allocateTyped(Float32Array, (1 + 2) * geoOut._numVertices);\n    }\n    const indices = utils.allocateTyped(Uint32Array, (1 + 2) * geoOut._numTriangles);\n\n    for (let i = 0, j = 0; i < geoOut._numVertices; i++) {\n      positions[j + 0] = (geoOut._vertices[i].x);\n      positions[j + 1] = (geoOut._vertices[i].y);\n      positions[j + 2] = (geoOut._vertices[i].z);\n      normals[j + 0] = geoOut._normals[i].x;\n      normals[j + 1] = geoOut._normals[i].y;\n      normals[j + 2] = geoOut._normals[i].z;\n      j += 3;\n    }\n    if (colors !== null) {\n      for (let i = 0, j = 0; i < geoOut._numVertices; i++, j += 3) {\n        colors[j + 0] = geoOut._colors[i].x;\n        colors[j + 1] = geoOut._colors[i].y;\n        colors[j + 2] = geoOut._colors[i].z;\n      }\n    }\n\n    const numTri3 = geoOut._numTriangles * (1 + 2);\n    for (let i = 0; i < numTri3; i++) {\n      indices[i] = geoOut._indices[i];\n    }\n\n    this.setIndex(new THREE.BufferAttribute(indices, 1));\n    this.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    this.setAttribute('normal', new THREE.BufferAttribute(normals, 3));\n    this.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n    this.computeBoundingBox();\n    this.computeBoundingSphere();\n\n    geoOut.destroy();\n  }\n\n  convertToAtomsColored(packedArrays, atomsColored) {\n    const { atoms, colors } = packedArrays;\n    for (let i = 0, numAtoms = atoms.length; i < numAtoms; i++) {\n      const vCenter = atoms[i].position;\n      const { radius } = atoms[i].element;\n      atomsColored[i] = new IsoSurfaceAtomColored(vCenter, radius);\n      const nm = atoms[i].element.number;\n      atomsColored[i].atomType = this.getType(nm);\n      let cIdx = COLOR_SIZE * i;\n      atomsColored[i].colorX = colors[cIdx++];\n      atomsColored[i].colorY = colors[cIdx++];\n      atomsColored[i].colorZ = colors[cIdx];\n      atomsColored[i].srcAtom = atoms[i];\n    }\n  }\n\n  getGeo() {\n    return this.geoOut;\n  }\n\n  destroy() {\n    this.atoms = null;\n\n    this.hashLines = null;\n    this.hashEntries = null;\n  }\n\n  /**\n   * Calculates bounding box for array with spheres (atoms)\n   *\n   * @param {Object}  atoms      Atoms array\n   * @param {Vector3} vBoxMin    Bounding box min point\n   * @param {Vector3} vBoxMax    Bounding box max point\n   */\n  getBoundingBox(atoms, vBoxMin, vBoxMax) {\n    const bigNum = 10000000.0;\n\n    vBoxMin.x = vBoxMin.y = vBoxMin.z = bigNum;\n    vBoxMax.x = vBoxMax.y = vBoxMax.z = 0 - bigNum;\n\n    const probeRadius2 = this.probeRadius * this.atomRadiusScale;\n    let radMax = 0.0;\n    for (let i = 0, num = atoms.length; i < num; i++) {\n      const vCenter = atoms[i].coord;\n      const rad = atoms[i].radius + probeRadius2;\n      radMax = (rad > radMax) ? rad : radMax;\n      if (vCenter.x - rad < vBoxMin.x) {\n        vBoxMin.x = vCenter.x - rad;\n      }\n      if (vCenter.y - rad < vBoxMin.y) {\n        vBoxMin.y = vCenter.y - rad;\n      }\n      if (vCenter.z - rad < vBoxMin.z) {\n        vBoxMin.z = vCenter.z - rad;\n      }\n      if (vCenter.x + rad > vBoxMax.x) {\n        vBoxMax.x = vCenter.x + rad;\n      }\n      if (vCenter.y + rad > vBoxMax.y) {\n        vBoxMax.y = vCenter.y + rad;\n      }\n      if (vCenter.z + rad > vBoxMax.z) {\n        vBoxMax.z = vCenter.z + rad;\n      }\n    }\n    vBoxMin.x -= radMax;\n    vBoxMin.y -= radMax;\n    vBoxMin.z -= radMax;\n    vBoxMax.x += radMax;\n    vBoxMax.y += radMax;\n    vBoxMax.z += radMax;\n  }\n\n  /**\n   * Calculate (x,y,z) cordinate of the cell corner point\n   *\n   * @param {Vector3} vBoxMin Bounding box min point\n   * @param {Vector3} vBoxMax Bounding box max point\n   * @param {number} x Cell integer x coordinate\n   * @param {number} y Cell integer y coordinate\n   * @param {number} z Cell integer z coordinate\n   * @param {number} numPoints NUm points in cell on side\n   * @param {Vector3} vOut Output vector\n   */\n  getCornerCoord(vBoxMin, vBoxMax, x, y, z, numPoints, vOut) {\n    const invNP = 1.0 / (numPoints - 1.0);\n    const tx = x * invNP;\n    const ty = y * invNP;\n    const tz = z * invNP;\n\n    vOut.x = vBoxMin.x * (1.0 - tx) + vBoxMax.x * tx;\n    vOut.y = vBoxMin.y * (1.0 - ty) + vBoxMax.y * ty;\n    vOut.z = vBoxMin.z * (1.0 - tz) + vBoxMax.z * tz;\n  }\n\n  /**\n   * Calculate point of intersection of sphere surface\n   * and cell edge, given by [indexA, indexB] line\n   *\n   * @param {number} indexA Cell vertex index in [0..11]\n   * @param {number} indexB Cell vertex index in [0..11]\n   * @param {array}  sign   Sign array for all 8 vertices\n   * @param {object} cube   Cube\n   * @param {number} indexPointValue for value placement\n   * @param {Vector3} vOut  Point of intersection\n   */\n  buildEdgePoint(indexA, indexB, sign, cube, indexPointValue, vOut) {\n    if (sign[indexA] ^ sign[indexB]) {\n      const cTwentyFour = 24;\n      const t = (0 - cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexA])\n        / (cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexB]\n          - cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexA]);\n      const xa = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 0];\n      const ya = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 1];\n      const za = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 2];\n      const xb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 0];\n      const yb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 1];\n      const zb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 2];\n\n      vOut.x = xa * (1.0 - t) + xb * t;\n      vOut.y = ya * (1.0 - t) + yb * t;\n      vOut.z = za * (1.0 - t) + zb * t;\n    }\n  }\n\n  /**\n   * Check if triangle is visible (vertices are close to atoms included in visibility set)\n   *\n   * @param {Vector3} v0 Vertex #0\n   * @param {Vector3} v1 Vertex #1\n   * @param {Vector3} v2 Vertex #2\n   * @returns {boolean} true if triangle is visible\n   */\n  isTriangleVisible(v0, v1, v2) {\n    const a0 = this.voxelWorld.getClosestAtom(v0);\n    const a1 = this.voxelWorld.getClosestAtom(v1);\n    const a2 = this.voxelWorld.getClosestAtom(v2);\n    if (a0 === null || a1 === null || a2 === null\n      || a0.srcAtom === null || a1.srcAtom === null || a2.srcAtom === null) {\n      return false;\n    }\n\n    return this.visibilitySelector.includesAtom(a0.srcAtom)\n      && this.visibilitySelector.includesAtom(a1.srcAtom)\n      && this.visibilitySelector.includesAtom(a2.srcAtom);\n  }\n\n  /**\n   * Add triangle to result geometry\n   *\n   * @param {Vector3} v0 Vertex #0\n   * @param {Vector3} v1 Vertex #1\n   * @param {Vector3} v2 Vertex #2\n   * @returns {boolean} false if no more triangles can be added\n   */\n  addTriangle(v0, v1, v2) {\n    if (this.visibilitySelector && !this.isTriangleVisible(v0, v1, v2)) {\n      return true;\n    }\n\n    const geo = this.geoOut;\n\n    if (geo._numTriangles >= this.maxNumTriangles) {\n      return false;\n    }\n\n    // Add vertex with optimize\n    const indInGeo0 = this.addVertexToGeo(geo, v0);\n    const indInGeo1 = this.addVertexToGeo(geo, v1);\n    const indInGeo2 = this.addVertexToGeo(geo, v2);\n    if ((indInGeo0 | indInGeo1 | indInGeo2) < 0) {\n      return false;\n    }\n\n    const itr = 3 * geo._numTriangles;\n    geo._indices[itr + 0] = indInGeo0;\n    geo._indices[itr + 1] = indInGeo1;\n    geo._indices[itr + 2] = indInGeo2;\n    geo._numTriangles++;\n    return true;\n  }\n\n  /**\n   * Build result geometry (triangle mesh) from marching cube cells\n   *\n   * @param {number} meshRes Marchnig cube vertex count on each side\n   * @param {Vector3} vBoxMin Bounding box point min\n   * @param {Vector3} vBoxMax Bounding box point max\n   * @param {number} corners float values array for each cube point\n   * @param {Vector3} vCellStep vector to next cube cell diagonal point\n   * @param {object} cube IsoSurfaceMarchCube object\n   * @returns {number} 0, if success (<0) is error\n   */\n  buildGeoFromCorners(meshRes, vBoxMin, vBoxMax, corners, vCellStep, cube) {\n    const arrSize = 12;\n    const cNumVerts = 8;\n    const numCells = meshRes - 1;\n    const side = meshRes;\n    const side2 = meshRes * meshRes;\n\n    const vaEdges = new Array(arrSize);\n    for (let i = 0; i < arrSize; i++) {\n      vaEdges[i] = new THREE.Vector3();\n    }\n    const sign = [];\n    for (let i = 0; i < cNumVerts; i++) {\n      sign[i] = 1.0;\n    }\n    const vCorner = new THREE.Vector3();\n    let indCell = 0;\n    let indY = 0;\n    for (let y = 0; y < numCells; y++, indY += side2) {\n      let indZ = 0;\n      for (let z = 0; z < numCells; z++, indZ += side) {\n        for (let x = 0; x < numCells; x++) {\n          if (!cube.hasIntersection[indCell]) {\n            // next cell\n            indCell++;\n            continue;\n          }\n          const bitsInside = cube.bitsInside[indCell];\n\n          this.getCornerCoord(vBoxMin, vBoxMax, x, y, z, meshRes, vCorner);\n\n          const indPointValues = indCell * (2 << (2 + 2));\n          for (let i = 0, j = 0; i < cNumVerts; i++) {\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.x;\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.y;\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.z;\n          }\n\n          cube.pointsValuesLinear[indPointValues + 3] += vCellStep.x;\n          cube.pointsValuesLinear[indPointValues + 2 * 3] += vCellStep.x;\n          cube.pointsValuesLinear[indPointValues + 5 * 3] += vCellStep.x;\n          cube.pointsValuesLinear[indPointValues + 6 * 3] += vCellStep.x;\n\n          cube.pointsValuesLinear[indPointValues + 2 * 3 + 2] += vCellStep.z;\n          cube.pointsValuesLinear[indPointValues + 3 * 3 + 2] += vCellStep.z;\n          cube.pointsValuesLinear[indPointValues + 6 * 3 + 2] += vCellStep.z;\n          cube.pointsValuesLinear[indPointValues + 7 * 3 + 2] += vCellStep.z;\n\n          cube.pointsValuesLinear[indPointValues + 4 * 3 + 1] += vCellStep.y;\n          cube.pointsValuesLinear[indPointValues + 5 * 3 + 1] += vCellStep.y;\n          cube.pointsValuesLinear[indPointValues + 6 * 3 + 1] += vCellStep.y;\n          cube.pointsValuesLinear[indPointValues + 7 * 3 + 1] += vCellStep.y;\n\n          // now current cell has intersections (from -x to +x) on some cube edges\n          const indValues = indPointValues + 24;\n          for (let i = 0; i < cNumVerts; ++i) {\n            sign[i] = (cube.pointsValuesLinear[indValues + i] < 0.0) ? 1 : 0;\n          }\n\n          this.buildEdgePoint(0, 1, sign, cube, indPointValues, vaEdges[0]);\n          this.buildEdgePoint(1, 2, sign, cube, indPointValues, vaEdges[1]);\n          this.buildEdgePoint(2, 3, sign, cube, indPointValues, vaEdges[2]);\n          this.buildEdgePoint(3, 0, sign, cube, indPointValues, vaEdges[3]);\n\n          this.buildEdgePoint(4, 5, sign, cube, indPointValues, vaEdges[4]);\n          this.buildEdgePoint(5, 6, sign, cube, indPointValues, vaEdges[5]);\n          this.buildEdgePoint(6, 7, sign, cube, indPointValues, vaEdges[6]);\n          this.buildEdgePoint(7, 4, sign, cube, indPointValues, vaEdges[7]);\n\n          this.buildEdgePoint(0, 4, sign, cube, indPointValues, vaEdges[8]);\n          this.buildEdgePoint(1, 5, sign, cube, indPointValues, vaEdges[9]);\n          this.buildEdgePoint(2, 6, sign, cube, indPointValues, vaEdges[10]);\n          this.buildEdgePoint(3, 7, sign, cube, indPointValues, vaEdges[11]);\n\n          const offs = bitsInside * (2 << (1 + 2));\n          for (let numTri = 0, indTri = 0; numTri < (2 + 2 + 2); numTri++, indTri += 3) {\n            // s_triIndicesMarchCube is external array, defined in mold_ind.js\n            const i0 = cube.striIndicesMarchCube[offs + indTri];\n            if (i0 < 0) {\n              break;\n            }\n            const i1 = cube.striIndicesMarchCube[offs + indTri + 1];\n            const i2 = cube.striIndicesMarchCube[offs + indTri + 2];\n\n            if (!this.addTriangle(vaEdges[i0], vaEdges[i1], vaEdges[i2])) {\n              return 0 - 2;\n            }\n          } // for numTri\n\n          // next cell (cube)\n          indCell++;\n        } // for (x)\n      } // for (z)\n    } // for (y)\n    return 0;\n  }\n\n  /**\n   * Returns number of cell with intersection with at least one sphere.\n   * Using this number, we can estimate required number of vertices\n   * and triangles to build result mesh.\n   *\n   * @param {number} side Number of points in cube voxels\n   * @param {number} numCells Number of cells in cube voxels (per direction)\n   * @param {array} corners Array of float values for cube corner points\n   * @param {object} cube IsoSurfaceMarchCube object\n   * @returns {number} numIntersectedCells\n   */\n  getNumIntersectedCells(side, numCells, corners, cube) {\n    const side2 = side * side;\n    const cNumVerts = 8;\n    let numIntersectedCells = 0;\n\n    let indCell = 0;\n    let indY = 0;\n    for (let y = 0; y < numCells; y++, indY += side2) {\n      let indZ = 0;\n      for (let z = 0; z < numCells; z++, indZ += side) {\n        for (let x = 0; x < numCells; x++) {\n          const cubeValuesIndex = indCell * (2 << (2 + 2)) + 24;\n          const indCorner = x + indZ + indY;\n\n          cube.pointsValuesLinear[cubeValuesIndex] = corners[indCorner];\n          cube.pointsValuesLinear[cubeValuesIndex + 1] = corners[indCorner + 1];\n          cube.pointsValuesLinear[cubeValuesIndex + 2] = corners[indCorner + side + 1];\n          cube.pointsValuesLinear[cubeValuesIndex + 3] = corners[indCorner + side];\n          cube.pointsValuesLinear[cubeValuesIndex + 4] = corners[side2 + indCorner];\n          cube.pointsValuesLinear[cubeValuesIndex + 5] = corners[side2 + indCorner + 1];\n          cube.pointsValuesLinear[cubeValuesIndex + 6] = corners[side2 + indCorner + side + 1];\n          cube.pointsValuesLinear[cubeValuesIndex + 7] = corners[side2 + indCorner + side];\n\n          // check read exception\n          // assert(side2 + indCorner + side + 1 < side3);\n\n          // get bit flags inside\n          let bitsInside = 0;\n          for (let i = 0; i < cNumVerts; ++i) {\n            if (cube.pointsValuesLinear[cubeValuesIndex + i] < 0.0) {\n              bitsInside |= (1 << i);\n            }\n          }\n\n          if ((bitsInside === 0) || (bitsInside === ((1 << cNumVerts) - 1))) {\n            cube.hasIntersection[indCell] = false;\n          } else {\n            cube.hasIntersection[indCell] = true;\n            numIntersectedCells++;\n          }\n          cube.bitsInside[indCell] = bitsInside;\n          // next cell\n          indCell++;\n        } // for (x)\n      } // for (z)\n    } // for (y)\n    return numIntersectedCells;\n  }\n\n  getType(letter) {\n    /* eslint-disable no-magic-numbers */\n    const atomT = [0, 0, 1, 1, 2, 6, 3, 6, 4, 6, 5, 6, 6, 0, 7, 3, 8, 2, 9, 6, 10, 6, 11, 6, 12, 6, 13, 6, 14, 6, 15, 4,\n      16, 5, 17, 6, 18, 6, 19, 6, 20, 6, 21, 6, 22, 6, 23, 6, 24, 6, 25, 6, 26, 6, 27, 6, 28, 6, 29, 6, 30, 6, 31, 6,\n      32, 6, 33, 6, 34, 6, 35, 6, 36, 6, 37, 6, 38, 6, 39, 6, 40, 6, 41, 6, 42, 6, 43, 6, 44, 6, 45, 6, 46, 6, 47, 6,\n      48, 6, 49, 6, 50, 6, 51, 6, 52, 6, 53, 6, 54, 6, 55, 6, 56, 6, 57, 6, 58, 6, 59, 6, 60, 6, 61, 6, 62, 6, 63, 6,\n      64, 6, 65, 6, 66, 6, 67, 6, 68, 6, 69, 6, 70, 6, 71, 6, 72, 6, 73, 6, 74, 6, 75, 6, 76, 6, 77, 6, 78, 6, 79, 6,\n      80, 6, 81, 6, 82, 6, 83, 6, 84, 6, 85, 6, 86, 6, 87, 6, 88, 6, 89, 6, 90, 6, 91, 6, 92, 6, 93, 6, 94, 6, 95, 6,\n      96, 6, 97, 6, 98, 6, 99, 6, 100, 6, 101, 6, 102, 6, 103, 6, 104, 6, 105, 6, 106, 6, 107, 6, 108, 6, 109, 6];\n    /* eslint-enable no-magic-numbers */\n\n    if (letter < 1 || letter > atomT.length / 2\n      || (Object.keys(Element.ByAtomicNumber).length * 2) !== atomT.length) {\n      throw new Error('atomT.length  should be equal Element.ByAtomicNumber.length * 2');\n    }\n    return atomT[letter * 2];\n  }\n\n  /**\n   * Calculate values for marching cube grid points\n   * positive values are outside sphere, negative - is inside\n   *\n   * @param {array} corners array of float values\n   * @param {number} side Number of point in cube in 1 dimennsion\n   * @param {Vector3} vBoxMin Bounding box min point\n   * @param {Vector3} vBoxMax Bounding box max point\n   * @param {array} atoms Array of input atoms\n   * @param {number} probeRad radius for atom probing\n   */\n  calculateGridCorners(corners, side, vBoxMin, vBoxMax, atoms, probeRad) {\n    const side2 = side * side;\n    const side3 = side2 * side;\n    const vCorner = new THREE.Vector3();\n    const vDif = new THREE.Vector3();\n    /* eslint-disable no-magic-numbers */\n    const aLot = +1.0e12;\n    /* eslint-enable no-magic-numbers */\n\n    for (let i = 0; i < side3; i++) {\n      corners[i] = aLot; // to large value\n    }\n\n    const xScale = (side - 1) / (vBoxMax.x - vBoxMin.x);\n    const yScale = (side - 1) / (vBoxMax.y - vBoxMin.y);\n    const zScale = (side - 1) / (vBoxMax.z - vBoxMin.z);\n\n    for (let s = 0, numAtoms = atoms.length; s < numAtoms; s++) {\n      const atom = atoms[s];\n      const radius = atom.radius + probeRad;\n\n      const fx = ((atom.coord.x - radius) - vBoxMin.x) * xScale;\n      const fy = ((atom.coord.y - radius) - vBoxMin.y) * yScale;\n      const fz = ((atom.coord.z - radius) - vBoxMin.z) * zScale;\n\n      const indXMin = Math.floor(fx);\n      const indYMin = Math.floor(fy);\n      const indZMin = Math.floor(fz);\n\n      let indXMax = Math.floor(((atom.coord.x + radius) - vBoxMin.x) * xScale);\n      let indYMax = Math.floor(((atom.coord.y + radius) - vBoxMin.y) * yScale);\n      let indZMax = Math.floor(((atom.coord.z + radius) - vBoxMin.z) * zScale);\n\n      indXMax++;\n      indYMax++;\n      indZMax++;\n      indXMax = (indXMax <= (side - 1)) ? indXMax : (side - 1);\n      indYMax = (indYMax <= (side - 1)) ? indYMax : (side - 1);\n      indZMax = (indZMax <= (side - 1)) ? indZMax : (side - 1);\n\n      for (let y = indYMin; y <= indYMax; y++) {\n        const indY = y * side2;\n        for (let z = indZMin; z <= indZMax; z++) {\n          const indZ = z * side;\n          for (let x = indXMin; x <= indXMax; x++) {\n            const ind = indY + indZ + x;\n            this.getCornerCoord(vBoxMin, vBoxMax, x, y, z, side, vCorner);\n            vDif.x = vCorner.x - atom.coord.x;\n            vDif.y = vCorner.y - atom.coord.y;\n            vDif.z = vCorner.z - atom.coord.z;\n            const distToSphere = Math.sqrt(vDif.x * vDif.x + vDif.y * vDif.y + vDif.z * vDif.z);\n            // val: < 0, if inside sphere\n            // val: > 0, if outside sphere\n            const val = distToSphere - radius;\n            if (val < corners[ind]) {\n              corners[ind] = val;\n            }\n          } // for (x)\n        } // for (z)\n      } // for (y)\n    } // for (s)\n  }\n\n  /**\n   * Create memory pool for vertex hash management\n   *\n   * @param {number} maxNumVertices Maximum possible number of vertices (that will be build)\n   * @param {number} maxNumTriangles Maximum possible number of triangles (that will be build)\n   * @returns {number} 0, if success. (<0) is non memory\n   */\n  createVertexHash(maxNumVertices, maxNumTriangles) {\n    this.hashLines = utils.allocateTyped(Int32Array, HASH_SIZE * 2);\n    if (this.hashLines === null) {\n      return 0 - 1;\n    }\n    for (let i = 0, j = 0; i < HASH_SIZE; i++) {\n      this.hashLines[j++] = 0; // num vertices in this hash line\n      this.hashLines[j++] = 0 - 1; // index of the first entry\n    }\n\n    this.maxNumVertices = maxNumVertices;\n    this.maxNumTriangles = maxNumTriangles;\n\n    this.numHashEtriesAllocated = maxNumVertices;\n    this.hashEntries = utils.allocateTyped(Int32Array, 2 * this.numHashEtriesAllocated);\n    if (this.hashEntries === null) {\n      return 0 - 1;\n    }\n    for (let i = 0, j = 0; i < this.numHashEtriesAllocated; i++) {\n      this.hashEntries[j++] = 0 - 1; // index of vertex\n      this.hashEntries[j++] = 0 - 1; // next hash entry index\n    }\n    this.numHashEntryIndex = 0;\n    return 0;\n  }\n\n  /**\n   * Allocate and return new hash entry. Just check possible amount.\n   *\n   * @returns {number} index of hash entry, that can be used for geometry add vertex functionality\n   */\n  getNewHashEntry() {\n    if (this.numHashEntryIndex < this.numHashEtriesAllocated) {\n      const i = this.numHashEntryIndex;\n      this.numHashEntryIndex++;\n      return i;\n    }\n    return 0 - 1;\n  }\n\n  /**\n   * Add vertex to geometry structure\n   * using vertex hash table to quickly check, is this vertex already exist in geometry\n   *\n   * @param {object} geoOut Geometry to build\n   * @param {Vector3} vAdd Vertex to add\n   * @returns {number} index of added (or existing) vertex in geometry.\n   */\n  addVertexToGeo(geoOut, vAdd) {\n    let entry;\n    const oneHynberes = 0.01;\n    const n815851 = 815851;\n    const n37633 = 37633;\n    const n2453543 = 2453543;\n    const r106 = 1.0e-6;\n\n    const hashResolution = this.marCubeResoultion << 2;\n    const v = new THREE.Vector3();\n    const ix = Math.floor(hashResolution * (vAdd.x - this.vBoxMin.x) / (this.vBoxMax.x + oneHynberes - this.vBoxMin.x));\n    const iy = Math.floor(hashResolution * (vAdd.y - this.vBoxMin.y) / (this.vBoxMax.y + oneHynberes - this.vBoxMin.y));\n    const iz = Math.floor(hashResolution * (vAdd.z - this.vBoxMin.z) / (this.vBoxMax.z + oneHynberes - this.vBoxMin.z));\n    let iHash = ix * n815851 + iz * n37633 + iy * n2453543;\n    iHash &= (HASH_SIZE - 1);\n    const hLineIndex = iHash + iHash;\n\n    // search vertex via hash\n    // search in hash list\n    if (this.vBoxMin !== null && this.vBoxMax !== null) {\n      for (entry = this.hashLines[hLineIndex + 1]; entry >= 0; entry = this.hashEntries[entry * 2 + 1]) {\n        const ind = this.hashEntries[entry * 2 + 0]; // vertex index\n        v.copy(geoOut._vertices[ind]);\n        v.x -= vAdd.x;\n        v.y -= vAdd.y;\n        v.z -= vAdd.z;\n        const dot2 = v.x * v.x + v.y * v.y + v.z * v.z;\n        if (dot2 < r106) {\n          return ind;\n        } // if (found)\n      } // for (entry)\n    } // search\n\n    // add new vertex to geometry\n    if (geoOut._numVertices >= this.maxNumVertices) {\n      return 0 - 1;\n    }\n\n    const iVertAdd = geoOut._numVertices;\n    geoOut._vertices[iVertAdd].copy(vAdd);\n\n    // add to hash\n    if (this.vBoxMin !== null && this.vBoxMax !== null) {\n      entry = this.getNewHashEntry();\n      if (entry < 0) {\n        return 0 - 1;\n      }\n      const entryFirst = this.hashLines[hLineIndex + 1];\n      this.hashLines[hLineIndex + 1] = entry;\n      this.hashEntries[entry * 2 + 0] = iVertAdd;\n      this.hashEntries[entry * 2 + 1] = entryFirst;\n\n      this.hashLines[hLineIndex + 0]++; // num vertices in line ++\n    }\n    geoOut._numVertices++;\n    return iVertAdd;\n  }\n\n  /**\n   *\n   * @param {number} side some placeholder description\n   * @param {number} probeSphereRadius some placeholder description\n   * @param {object} vBoxMin some placeholder description\n   * @param {object} vBoxMax some placeholder description\n   * @param {object} geoOut some placeholder description\n   * @param {object} corners some placeholder description\n   * @returns {number} always 0\n   */\n  modifyExcludedFromGeo(\n    side, probeSphereRadius,\n    vBoxMin, vBoxMax,\n    geoOut, corners,\n  ) {\n    let ind;\n    let distToSphere;\n    let distToBorder;\n    const r11 = 1.1;\n\n    function innerBlockWorkAround() {\n      if (distToBorder > 0.0) {\n        // point is inside probe sphere\n        if (corners[ind] < 0.0) {\n          corners[ind] = distToBorder; // was inside surface, now is oustide ( > 0)\n        }\n        if (distToBorder > corners[ind]) {\n          corners[ind] = distToBorder; // find positive maximum\n        }\n      } else if (distToBorder > corners[ind]) { // point is outside sphere\n        corners[ind] = distToBorder; // find negative maximum\n      }\n    }\n\n    const side2 = side * side;\n    const xScale = (side - 1) / (vBoxMax.x - vBoxMin.x);\n    const yScale = (side - 1) / (vBoxMax.y - vBoxMin.y);\n    const zScale = (side - 1) / (vBoxMax.z - vBoxMin.z);\n\n    const probeSpRad2 = (probeSphereRadius * 2) * (probeSphereRadius * 2);\n    const sideInv = 1.0 / (side - 1);\n\n    for (let i = 0; i < geoOut._numVertices; i++) {\n      const vCenter = geoOut._vertices[i];\n\n      const radEst = probeSphereRadius * r11;\n\n      let indXMin = Math.floor(((vCenter.x - radEst) - vBoxMin.x) * xScale);\n      let indYMin = Math.floor(((vCenter.y - radEst) - vBoxMin.y) * yScale);\n      let indZMin = Math.floor(((vCenter.z - radEst) - vBoxMin.z) * zScale);\n\n      let indXMax = Math.floor(((vCenter.x + radEst) - vBoxMin.x) * xScale);\n      let indYMax = Math.floor(((vCenter.y + radEst) - vBoxMin.y) * yScale);\n      let indZMax = Math.floor(((vCenter.z + radEst) - vBoxMin.z) * zScale);\n\n      indXMin = (indXMin >= 0) ? indXMin : 0;\n      indYMin = (indYMin >= 0) ? indYMin : 0;\n      indZMin = (indZMin >= 0) ? indZMin : 0;\n      indXMax = (indXMax <= (side - 1)) ? indXMax : (side - 1);\n      indYMax = (indYMax <= (side - 1)) ? indYMax : (side - 1);\n      indZMax = (indZMax <= (side - 1)) ? indZMax : (side - 1);\n\n      for (let iy = indYMin; iy <= indYMax; iy++) {\n        const indY = iy * side2;\n        for (let iz = indZMin; iz <= indZMax; iz++) {\n          const indZ = iz * side;\n          for (let ix = indXMin; ix <= indXMax; ix++) {\n            ind = indY + indZ + ix;\n            // getCornerCoord(vBoxMin, vBoxMax, ix, iy, iz, side, &vCorner);\n            let t = ix * sideInv;\n            const xCorner = vBoxMin.x * (1.0 - t) + vBoxMax.x * t;\n            t = iy * sideInv;\n            const yCorner = vBoxMin.y * (1.0 - t) + vBoxMax.y * t;\n            t = iz * sideInv;\n            const zCorner = vBoxMin.z * (1.0 - t) + vBoxMax.z * t;\n\n            const dx = xCorner - vCenter.x;\n            const dy = yCorner - vCenter.y;\n            const dz = zCorner - vCenter.z;\n            const dist2 = dx * dx + dy * dy + dz * dz;\n            if (dist2 < probeSpRad2) {\n              distToSphere = Math.sqrt(dist2);\n              distToBorder = -(distToSphere - probeSphereRadius);\n              innerBlockWorkAround();\n            } // if (dist from corner point to sphere center more 2 radiuses)\n          } // for (ix)\n        } // for (iz)\n      } // for (iy)\n    } // for (i) all geo vertices\n    return 0;\n  }\n\n  _innerBuild() {\n    let ok;\n    const expandFactor = 1.2;\n\n    // performance test\n    // this.performanceTest();\n\n    // Create temporary atoms (but colored)\n    const packedArrays = {\n      posRad: this._posRad,\n      colors: this._colors,\n      atoms: this._opts.atoms,\n    };\n    this.complex = this._opts.parent;\n    this.atoms = packedArrays.atoms;\n    this.meshResolution = this._opts.gridSpacing;\n    this.atomRadiusScale = this._opts.radScale;\n    this.colorMode = this._opts.colorMode;\n    this.probeRadius = this._opts.probeRadius;\n    this.useVertexColors = true;\n    this.excludeProbe = this._opts.excludeProbe;\n    this.visibilitySelector = this._opts.visibilitySelector;\n\n    this.geoOut = null;\n\n    this.hashLines = null;\n    this.hashEntries = null;\n    this.numHashEtriesAllocated = 0;\n    this.numHashEntryIndex = 0;\n    this.maxNumVertices = 0;\n    this.maxNumTriangles = 0;\n\n    const atomsColored = new Array(this.atoms.length);\n    this.convertToAtomsColored(packedArrays, atomsColored);\n\n    // find bbox for spheres scene\n    const vBoxMin = this.vBoxMin = new THREE.Vector3();\n    const vBoxMax = this.vBoxMax = new THREE.Vector3();\n    this.getBoundingBox(atomsColored, vBoxMin, vBoxMax);\n\n    const marCubeResoultion = this.marCubeResoultion = this.meshResolution * (2 + 2);\n\n    // build grid corners for Marching cube algorithm\n    const side = marCubeResoultion;\n    const side2 = side * side;\n    const side3 = side2 * side;\n    const corners = utils.allocateTyped(Float32Array, side3);\n    const rProbeRadius = this.probeRadius * this.atomRadiusScale;\n\n    this.calculateGridCorners(corners, side, vBoxMin, vBoxMax, atomsColored, rProbeRadius);\n\n    const numCells = marCubeResoultion - 1;\n    const cube = new IsoSurfaceMarchCube();\n    ok = cube.create(numCells);\n    if (ok < 0) {\n      return ok;\n    }\n    // copy corners to cells\n    const vCellStep = new THREE.Vector3();\n    vCellStep.x = (vBoxMax.x - vBoxMin.x) / numCells;\n    vCellStep.y = (vBoxMax.y - vBoxMin.y) / numCells;\n    vCellStep.z = (vBoxMax.z - vBoxMin.z) / numCells;\n\n    let numIntersectedCellsEstim = this.getNumIntersectedCells(side, numCells, corners, cube);\n    let maxNumVertices = Math.floor(numIntersectedCellsEstim * expandFactor);\n    let maxNumTriangles = Math.floor(numIntersectedCellsEstim * expandFactor * 2);\n\n    this.geoOut = new IsoSurfaceGeo(maxNumVertices, maxNumTriangles, this.useVertexColors);\n\n    ok = this.createVertexHash(maxNumVertices, maxNumTriangles);\n    if (ok < 0) {\n      return ok;\n    }\n\n    // build voxel world (used to check triangle-to-atom tie and to calculate normals and colors)\n    let probeRadForNormalsColors = rProbeRadius;\n    if (this.excludeProbe) {\n      probeRadForNormalsColors = 0.01;\n    }\n    this.voxelWorld = new IsosurfaceBuildNormals(\n      atomsColored.length, atomsColored,\n      vBoxMin, vBoxMax, probeRadForNormalsColors,\n    );\n    this.voxelWorld.createVoxels();\n\n    ok = this.buildGeoFromCorners(marCubeResoultion, vBoxMin, vBoxMax, corners, vCellStep, cube);\n    if (this.excludeProbe) {\n      // using 3d mesh (geoOut) as a surface points\n      // move probe sphere and try to minimuze corners values\n      this.modifyExcludedFromGeo(side, rProbeRadius, vBoxMin, vBoxMax, this.geoOut, corners);\n\n      // delete old builded geo\n      this.geoOut._vertices = null;\n      this.geoOut._colors = null;\n      this.geoOut._indices = null;\n      this.geoOut._normals = null;\n      this.geoOut._numVertices = 0;\n      this.geoOut._numTriangles = 0;\n      this.geoOut = null;\n\n      // estimage geo vertices budget again\n      numIntersectedCellsEstim = this.getNumIntersectedCells(side, numCells, corners, cube);\n      maxNumVertices = Math.floor(numIntersectedCellsEstim * expandFactor);\n      maxNumTriangles = Math.floor(numIntersectedCellsEstim * expandFactor * 2);\n\n      // creates empty new geometry\n      this.geoOut = new IsoSurfaceGeo(maxNumVertices, maxNumTriangles, this.useVertexColors);\n      ok = this.createVertexHash(maxNumVertices, maxNumTriangles);\n      if (ok < 0) {\n        return ok;\n      }\n      // build vertices and triangles from corners values\n      ok = this.buildGeoFromCorners(side, vBoxMin, vBoxMax, corners, vCellStep, cube);\n    }\n\n    // build vertex normals\n    this.voxelWorld.buildNormals(this.geoOut._vertices.length, this.geoOut._vertices, this.geoOut._normals);\n    // More value : more smooth color mixing\n    // value about 0.7: very rough colors borders\n    let radiusColorSmoothness = 6.5;\n    if (this.excludeProbe) {\n      radiusColorSmoothness -= 1.5;\n    }\n    if (this.useVertexColors) {\n      this.voxelWorld.buildColors(\n        this.geoOut._vertices.length, this.geoOut._vertices,\n        this.geoOut._colors, radiusColorSmoothness,\n      );\n    }\n    this.voxelWorld.destroyVoxels();\n    this.voxelWorld = null;\n\n    // remove objects\n    cube.destroy();\n\n    return ok;\n  }\n}\n\n// All code below must be erased from every device and each developer's memory\n\nexport default SSIsosurfaceGeometry;\n","import InstancedSpheresGeometry from './InstancedSpheresGeometry';\nimport SimpleSpheresGeometry from './SimpleSpheresGeometry';\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry';\nimport Instanced2CCylindersGeometry from './Instanced2CCylindersGeometry';\nimport ExtrudedObjectsGeometry from './ExtrudedObjectsGeometry';\nimport ChunkedLinesGeometry from './ChunkedLinesGeometry';\nimport TwoColorLinesGeometry from './TwoColorLinesGeometry';\nimport CrossGeometry from './CrossGeometry';\nimport QuickSurfGeometry from './QuickSurfGeometry';\nimport ContactSurfaceGeometry from './ContactSurfaceGeometry';\nimport SSIsosurfaceGeometry from './SSIsosurfaceGeometry';\nimport LabelsGeometry from './LabelsGeometry';\n\nexport default {\n  InstancedSpheresGeometry,\n  SimpleSpheresGeometry,\n  Simple2CCylindersGeometry,\n  Instanced2CCylindersGeometry,\n  ExtrudedObjectsGeometry,\n  ChunkedLinesGeometry,\n  TwoColorLinesGeometry,\n  CrossGeometry,\n  QuickSurfGeometry,\n  ContactSurfaceGeometry,\n  SSIsosurfaceGeometry,\n  LabelsGeometry,\n};\n","import * as THREE from 'three';\nimport EventDispatcher from '../../utils/EventDispatcher';\n\nfunction createLabel(fieldTxt, className) {\n  const text = document.createElement('div');\n  text.className = className;\n\n  if (typeof fieldTxt === 'string') {\n    const spanText = document.createElement('span');\n    spanText.style.fontSize = '150%';\n    const strings = fieldTxt.split('\\n');\n\n    for (let i = 0, n = strings.length; i < n; ++i) {\n      const spanNodeP = document.createElement('span');\n      const spanNodeText = document.createTextNode(strings[i]);\n      spanNodeP.appendChild(spanNodeText);\n      spanText.appendChild(spanNodeP);\n      if (i < n - 1) {\n        spanText.appendChild(document.createElement('br'));\n      }\n    }\n\n    text.appendChild(spanText);\n  } else {\n    text.appendChild(fieldTxt);\n  }\n  text.worldPos = new THREE.Vector3();\n  return text;\n}\nclass LabelsGeometry extends EventDispatcher {\n  constructor(instanceCount, opts) {\n    super();\n    this._opts = opts;\n    this.items = [];\n    this.needsUpdate = false;\n\n    let xTranslation = -50;\n    let yTranslation = -50;\n    switch (opts.horizontalAlign) {\n      case 'left':\n        xTranslation = 0;\n        break;\n      case 'right':\n        xTranslation = -100;\n        break;\n      default:\n        break;\n    }\n\n    switch (opts.verticalAlign) {\n      case 'top':\n        yTranslation = -100;\n        break;\n      case 'bottom':\n        yTranslation = 0;\n        break;\n      default:\n        break;\n    }\n\n    const deltaPos = new THREE.Vector3(opts.dx || 0, opts.dy || 0, opts.dz || 0);\n    this.userData = {\n      translation: `translate(${xTranslation}%, ${yTranslation}%)`,\n      offset: deltaPos,\n    };\n  }\n\n  setItem(itemIdx, itemPos, fieldTxt) {\n    const opts = this._opts;\n    const text = this.items[itemIdx] || createLabel(fieldTxt, 'label');\n\n    text.worldPos.copy(itemPos);\n    text.style.textAlign = opts.horizontalAlign;\n    text.style.verticalAlign = opts.verticalAlign;\n    this.items[itemIdx] = text;\n  }\n\n  setColor(itemIdx, fColor, bColor) {\n    const text = this.items[itemIdx];\n    text.opts = {\n      color: fColor,\n      background: bColor,\n    };\n  }\n\n  startUpdate() {\n    return true;\n  }\n\n  finishUpdate() {\n    this.needsUpdate = true;\n    this.dispatchEvent({ type: 'update' });\n  }\n\n  finalize() {\n    this.finishUpdate();\n  }\n\n  // unimplemented functions\n  raycast() {\n  }\n\n  setOpacity() {\n\n  }\n\n  getSubset() {\n    return [];\n  }\n}\n\nexport default LabelsGeometry;\n","export default {\n\n  precision: 'mediump',\n\n  /**\n   *\n   * @param {THREE.WebGLRenderer} renderer\n   */\n  init(renderer) {\n    this.precision = renderer.capabilities.getMaxPrecision('highp');\n  },\n};\n","import * as THREE from 'three';\n\nconst noiseWidth = 4;\nconst noiseHeight = 4;\nconst _noiseData = new Uint8Array([\n  24, 52, 0, 254, 145, 0, 122, 0, 0, 7, 170, 0,\n  34, 214, 0, 173, 8, 0, 86, 249, 0, 160, 4, 0,\n  226, 46, 0, 224, 211, 0, 3, 157, 0, 174, 247, 0,\n  12, 182, 0, 220, 216, 0, 1, 109, 0, 253, 154, 0,\n]);\nconst _noiseWrapS = THREE.RepeatWrapping;\nconst _noiseWrapT = THREE.RepeatWrapping;\nconst _noiseMinFilter = THREE.NearestFilter;\nconst _noiseMagFilter = THREE.NearestFilter;\nconst _noiseMapping = THREE.UVMapping;\nconst noiseTexture = new THREE.DataTexture(\n  _noiseData, noiseWidth, noiseHeight, THREE.RGBFormat,\n  THREE.UnsignedByteType, _noiseMapping, _noiseWrapS, _noiseWrapT, _noiseMagFilter, _noiseMinFilter, 1,\n);\nnoiseTexture.needsUpdate = true;\n\nexport default {\n  noiseWidth,\n  noiseHeight,\n  noiseTexture,\n};\n","/* eslint-disable no-magic-numbers */\n/* eslint-disable guard-for-in */\nimport * as THREE from 'three';\nimport vertexShader from './Uber.vert';\nimport fragmentShader from './Uber.frag';\nimport capabilities from '../capabilities';\nimport noise from '../noiseTexture';\n\n// Length of _samplesKernel is used in Uber.frag\n// If you want to change length of _samplesKernel, please, remember change it in Uber.frag too.\n// You can easy find places for replace using word:_samplesKernel\nconst _samplesKernel = [\n  new THREE.Vector2(-0.541978, 0.840393),\n  new THREE.Vector2(0.125533, -0.992089),\n  new THREE.Vector2(0.374329, 0.927296),\n  new THREE.Vector2(-0.105475, 0.994422),\n];\n\nconst defaultUniforms = THREE.UniformsUtils.merge([\n\n  THREE.UniformsLib.fog,\n  THREE.UniformsLib.lights,\n\n  {\n    // are updated automatically by three.js (see THREE.ShaderLib.common)\n    diffuse: { value: new THREE.Color(0xeeeeee) },\n    opacity: { value: 1.0 },\n\n    specular: { type: 'c', value: new THREE.Color(0x111111) },\n    shininess: { type: 'f', value: 30 },\n    fixedColor: { type: 'c', value: new THREE.Color(0xffffff) },\n    zOffset: { type: 'f', value: 0.0 },\n    zClipValue: { type: 'f', value: 0.0 },\n    clipPlaneValue: { type: 'f', value: 0.0 },\n    nearPlaneValue: { type: 'f', value: -0.5 },\n    invModelViewMatrix: { type: '4fv', value: new THREE.Matrix4() },\n    world2colorMatrix: { type: '4fv', value: new THREE.Matrix4() },\n    dashedLineSize: { type: 'f', value: 0.1 },\n    dashedLinePeriod: { type: 'f', value: 0.2 },\n    projMatrixInv: { type: '4fv', value: new THREE.Matrix4() },\n    viewport: { type: 'v2', value: new THREE.Vector2() },\n    lineWidth: { type: 'f', value: 2.0 },\n    // default value must be the same as settings\n    fogAlpha: { type: 'f', value: 1.0 },\n    samplesKernel: { type: 'v2v', value: null },\n    noiseTex: { type: 't', value: null },\n    noiseTexelSize: { type: 'v2', value: null },\n    srcTexelSize: { type: 'v2', value: null },\n  },\n\n]);\n\nconst uberOptionNames = [\n  'shininess',\n  'opacity',\n  'zOffset',\n  'diffuse',\n  'specular',\n  'fixedColor',\n  'zClipCoef',\n  'zClipValue',\n  'clipPlaneValue',\n  'world2colorMatrix',\n  'dashedLineSize',\n  'dashedLinePeriod',\n  'projMatrixInv',\n  'viewport',\n  'lineWidth',\n  'fogAlpha',\n  'samplesKernel',\n  'noiseTex',\n  'noiseTexelSize',\n  'srcTexelSize',\n];\n\nfunction UberMaterial(params) {\n  THREE.RawShaderMaterial.call(this);\n\n  // add fog\n  this.fog = true;\n  // used for instanced geometry\n  this.instancedPos = false;\n  this.instancedMatrix = false;\n  // atoms and links color\n  this.attrColor = false;\n  // second link color for cylinders\n  this.attrColor2 = false;\n  //\n  this.attrAlphaColor = false;\n  // overrides color for all vertices (used in selection)\n  this.overrideColor = false;\n  // zsrpites\n  this.sphereSprite = false;\n  this.cylinderSprite = false;\n  // clip Surfs individually\n  this.zClip = false;\n  // clip scene with global clip plane\n  this.clipPlane = false;\n  // enable fake (chess-like) opacity\n  this.fakeOpacity = false;\n  // render only depth, don't take care about the pixel color (used for transparency depth prepass)\n  this.prepassTransparancy = false;\n  // used to render pixel positions\n  this.colorFromPos = false;\n  // used to render shadowmap\n  this.shadowmap = false;\n  // used to describe shadowmap type\n  this.shadowmapType = 'random';\n  // used to render pixel view deph\n  this.colorFromDepth = false;\n  // mark that rendering is for orthographic camera\n  this.orthoCam = false;\n  // used to render dashed line\n  this.dashedLine = false;\n  // mark as transparent\n  this.transparent = true;\n  // mark as thick lines\n  this.thickLine = false;\n  // makes fog begin transparency (required for transparent background)\n  this.fogTransparent = false;\n  // used to render surface normals to G buffer for ssao effect\n  this.normalsToGBuffer = false;\n  // used for toon material\n  this.toonShading = false;\n\n  // uber options of \"root\" materials are inherited from single uber-options object that resides in prototype\n  this.uberOptions = Object.create(UberMaterial.prototype.uberOptions);\n\n  // set default values\n  THREE.RawShaderMaterial.prototype.setValues.call(this, {\n    uniforms: THREE.UniformsUtils.clone(defaultUniforms),\n    vertexShader: this.precisionString() + vertexShader,\n    fragmentShader: this.precisionString() + fragmentShader,\n    lights: true,\n    fog: true,\n    side: THREE.DoubleSide,\n  });\n\n  this.setValues(params);\n}\n\nUberMaterial.prototype = Object.create(THREE.RawShaderMaterial.prototype);\nUberMaterial.prototype.constructor = UberMaterial;\n\nUberMaterial.prototype.precisionString = function () {\n  const { precision } = capabilities;\n  const str = `precision ${precision} float;\\n`\n    + `precision ${precision} int;\\n\\n`;\n  return str;\n};\n\n// properties that convert to uniforms\nUberMaterial.prototype.uberOptions = {\n  diffuse: new THREE.Color(0xffffff), // used in phong lighting\n  specular: new THREE.Color(0x111111), // used in phong lighting\n  shininess: 30, // used in phong lighting\n  opacity: 1, // set mesh opacity\n  fixedColor: new THREE.Color(0xffffff), // color to override (see OVERRIDE_COLOR)\n  zOffset: 0.0, // used fo zsprites (see SPHERE_SPRITE CYLINDER_SPRITE)\n  zClipCoef: 2.0, // use for Surfs clipping (mesh param, isn't used in shader)  FIXME move to representation param\n  zClipValue: 0.0, //  value to clip Surfs in shader  (see ZCLIP)\n  clipPlaneValue: 0.0, // value to clip scene globally (see CLIPPLANE)\n  world2colorMatrix: new THREE.Matrix4(),\n  dashedLineSize: 0.1,\n  dashedLinePeriod: 0.3,\n  projMatrixInv: new THREE.Matrix4(),\n  viewport: new THREE.Vector2(800, 600),\n  lineWidth: 2.0,\n  fogAlpha: 1.0,\n  samplesKernel: _samplesKernel,\n  noiseTex: noise.noiseTexture,\n  noiseTexelSize: new THREE.Vector2(1.0 / noise.noiseWidth, 1.0 / noise.noiseHeight),\n  srcTexelSize: new THREE.Vector2(1.0 / 800.0, 1.0 / 600.0),\n\n  copy(source) {\n    this.diffuse.copy(source.diffuse);\n    this.specular.copy(source.specular);\n    this.shininess = source.shininess;\n    this.opacity = source.opacity;\n    this.fixedColor.copy(source.fixedColor);\n    this.zOffset = source.zOffset;\n    this.zClipCoef = source.zClipCoef;\n    this.zClipValue = source.zClipValue;\n    this.clipPlaneValue = source.clipPlaneValue;\n    this.world2colorMatrix.copy(source.world2colorMatrix);\n    this.dashedLineSize = source.dashedLineSize;\n    this.dashedLinePeriod = source.dashedLinePeriod;\n    this.projMatrixInv = source.projMatrixInv;\n    this.viewport = source.viewport;\n    this.lineWidth = source.lineWidth; // used for thick lines only\n    this.toonShading = source.toonShading;\n    this.fogAlpha = source.fogAlpha;\n    this.samplesKernel = source.samplesKernel;\n    this.noiseTex = source.noiseTex;\n    this.noiseTexelSize = source.noiseTexelSize;\n    this.srcTexelSize = source.srcTexelSize;\n  },\n};\n\nUberMaterial.prototype.copy = function (source) {\n  THREE.RawShaderMaterial.prototype.copy.call(this, source);\n\n  this.fragmentShader = source.fragmentShader;\n  this.vertexShader = source.vertexShader;\n\n  this.uniforms = THREE.UniformsUtils.clone(source.uniforms);\n  this.defines = { ...source.defines };\n  this.extensions = source.extensions;\n\n  this.fog = source.fog;\n  this.instancedPos = source.instancedPos;\n  this.instancedMatrix = source.instancedMatrix;\n  this.attrColor = source.attrColor;\n  this.attrColor2 = source.attrColor2;\n  this.attrAlphaColor = source.attrAlphaColor;\n  this.overrideColor = source.overrideColor;\n  this.sphereSprite = source.sphereSprite;\n  this.cylinderSprite = source.cylinderSprite;\n  this.zClip = source.zClip;\n  this.clipPlane = source.clipPlane;\n  this.fakeOpacity = source.fakeOpacity;\n  this.colorFromPos = source.colorFromPos;\n  this.shadowmap = source.shadowmap;\n  this.shadowmapType = source.shadowmapType;\n  this.colorFromDepth = source.colorFromDepth;\n  this.orthoCam = source.orthoCam;\n  this.prepassTransparancy = source.prepassTransparancy;\n  this.dashedLine = source.dashedLine;\n  this.thickLine = source.thickLine;\n  this.fogTransparent = source.fogTransparent;\n  this.normalsToGBuffer = source.normalsToGBuffer;\n  this.toonShading = source.toonShading;\n\n  this.uberOptions.copy(source.uberOptions);\n\n  return this;\n};\n\n// create copy of this material\n// its options are prototyped after this material's options\nUberMaterial.prototype.createInstance = function () {\n  const inst = new UberMaterial();\n  inst.copy(this);\n  inst.uberOptions = Object.create(this.uberOptions);\n  return inst;\n};\n\nUberMaterial.prototype.setValues = function (values) {\n  if (typeof values === 'undefined') {\n    return;\n  }\n\n  // set direct values\n  THREE.RawShaderMaterial.prototype.setValues.call(this, values);\n\n  const defines = {};\n  const extensions = {};\n\n  if (this.fog) {\n    defines.USE_FOG = 1;\n  }\n  if (this.instancedPos) {\n    defines.INSTANCED_POS = 1;\n  }\n  if (this.instancedMatrix) {\n    defines.INSTANCED_MATRIX = 1;\n  }\n  if (this.attrColor) {\n    defines.ATTR_COLOR = 1;\n  }\n  if (this.attrColor2) {\n    defines.ATTR_COLOR2 = 1;\n  }\n  if (this.attrAlphaColor) {\n    defines.ATTR_ALPHA_COLOR = 1;\n  }\n  if (this.overrideColor) {\n    defines.OVERRIDE_COLOR = 1;\n  }\n  if (this.sphereSprite) {\n    defines.SPHERE_SPRITE = 1;\n    extensions.fragDepth = 1;\n  }\n  if (this.cylinderSprite) {\n    defines.CYLINDER_SPRITE = 1;\n    extensions.fragDepth = 1;\n  }\n  if (this.zClip) {\n    defines.ZCLIP = 1;\n  }\n  if (this.clipPlane) {\n    defines.CLIP_PLANE = 1;\n  }\n  if (this.fakeOpacity) {\n    defines.FAKE_OPACITY = 1;\n  }\n  if (this.lights) {\n    defines.USE_LIGHTS = 1;\n  }\n  if (this.colorFromPos) {\n    defines.COLOR_FROM_POS = 1;\n  }\n  if (this.shadowmap) {\n    defines.SHADOWMAP = 1;\n    if (this.shadowmapType === 'pcf') {\n      defines.SHADOWMAP_PCF_SHARP = 1;\n    } else if (this.shadowmapType === 'random') {\n      defines.SHADOWMAP_PCF_RAND = 1;\n    } else {\n      defines.SHADOWMAP_BASIC = 1;\n    }\n  }\n  if (this.colorFromDepth) {\n    defines.COLOR_FROM_DEPTH = 1;\n  }\n  if (this.orthoCam) {\n    defines.ORTHOGRAPHIC_CAMERA = 1;\n  }\n  if (this.prepassTransparancy) {\n    defines.PREPASS_TRANSP = 1;\n  }\n  if (this.dashedLine) {\n    defines.DASHED_LINE = 1;\n  }\n  if (this.thickLine) {\n    defines.THICK_LINE = 1;\n  }\n  if (this.fogTransparent) {\n    defines.FOG_TRANSPARENT = 1;\n  }\n  if (this.normalsToGBuffer) {\n    extensions.drawBuffers = 1;\n    defines.NORMALS_TO_G_BUFFER = 1;\n  }\n  if (this.toonShading) {\n    defines.TOON_SHADING = 1;\n  }\n  // set dependent values\n  this.defines = defines;\n  this.extensions = extensions;\n};\n\nUberMaterial.prototype.setUberOptions = function (values) {\n  if (typeof values === 'undefined') {\n    return;\n  }\n\n  for (const key in values) {\n    if (!values.hasOwnProperty(key)) {\n      continue;\n    }\n\n    if (this.uberOptions[key] instanceof THREE.Color) {\n      this.uberOptions[key] = values[key].clone();\n    } else {\n      this.uberOptions[key] = values[key];\n    }\n  }\n};\n\nUberMaterial.prototype.clone = function (shallow) {\n  if (!shallow) {\n    return THREE.Material.prototype.clone.call(this);\n  }\n  return this.createInstance();\n};\n\nUberMaterial.prototype.updateUniforms = function () {\n  const self = this;\n\n  uberOptionNames.forEach((p) => {\n    if (self.uniforms.hasOwnProperty(p)) {\n      if (self.uberOptions[p] instanceof THREE.Color\n            || self.uberOptions[p] instanceof THREE.Matrix4) {\n        self.uniforms[p].value = self.uberOptions[p].clone();\n      } else {\n        self.uniforms[p].value = self.uberOptions[p];\n      }\n    }\n  });\n};\n\nexport default UberMaterial;\n","export default \"float INSTANCED_SPRITE_OVERSCALE = 1.3;\\n\\nattribute vec3 normal;\\n\\n#ifdef NORMALS_TO_G_BUFFER\\n  varying vec3 viewNormal;\\n#endif\\n#if !defined (SPHERE_SPRITE) && !defined (CYLINDER_SPRITE)\\n  varying vec3 vNormal;\\n#endif\\n\\n#ifdef THICK_LINE\\n  attribute vec4 position; // W contains vert pos or neg offset\\n#else\\n  attribute vec3 position;\\n#endif\\n\\nvarying vec3 vWorldPosition;\\nvarying vec3 vViewPosition;\\n\\n#ifdef ATTR_ALPHA_COLOR\\n  attribute float alphaColor;\\n  varying float alphaCol;\\n#endif\\n\\n#if defined(USE_LIGHTS) && defined(SHADOWMAP)\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec3 vDirectionalShadowNormal[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n#endif\\n\\n#ifdef ATTR_COLOR\\n  attribute vec3 color;\\n  varying vec3 vColor;\\n#endif\\n\\n#ifdef ATTR_COLOR2\\n  attribute vec3 color2;\\n  varying vec3 vColor2;\\n  attribute vec2 uv;\\n  #ifndef CYLINDER_SPRITE\\n    varying vec2 vUv;\\n  #endif\\n#endif\\n\\n#ifdef INSTANCED_POS\\n  attribute vec4 offset;\\n  #ifdef SPHERE_SPRITE\\n    varying vec4 instOffset;\\n  varying vec4 spritePosEye;\\n  #endif\\n#endif\\n\\n#ifdef INSTANCED_MATRIX\\n  attribute vec4 matVector1;\\n  attribute vec4 matVector2;\\n  attribute vec4 matVector3;\\n  attribute vec4 invmatVector1;\\n  attribute vec4 invmatVector2;\\n  attribute vec4 invmatVector3;\\n\\n  #ifdef CYLINDER_SPRITE\\n    varying vec4 matVec1;\\n    varying vec4 matVec2;\\n    varying vec4 matVec3;\\n    varying vec4 invmatVec1;\\n    varying vec4 invmatVec2;\\n    varying vec4 invmatVec3;\\n    varying vec4 spritePosEye;\\n  #endif\\n#endif\\n\\nuniform mat4 modelViewMatrix; // optional\\nuniform mat4 projectionMatrix; // optional\\nuniform mat3 normalMatrix; // optional\\nuniform mat4 modelMatrix; // optional\\n\\n#ifdef DASHED_LINE\\n  attribute float lineDistance;\\n  varying float vLineDistance;\\n#endif\\n\\n#ifdef THICK_LINE\\n  attribute vec3 direction;\\n  uniform mat4 projMatrixInv;\\n  uniform vec2 viewport;\\n  uniform float lineWidth;\\n\\n  vec4 transform(vec4 coord){\\n    return projectionMatrix * modelViewMatrix * coord;\\n  }\\n\\n  vec2 project(vec4 device){\\n    vec3 device_normal = device.xyz/device.w;\\n    vec2 clip_pos = (device_normal*0.5+0.5).xy;\\n    return clip_pos * viewport;\\n  }\\n\\n  vec4 unproject(vec2 screen, float z, float w){\\n    vec2 clip_pos = screen/viewport;\\n    vec2 device_normal = clip_pos*2.0-1.0;\\n    return vec4(device_normal*w, z, w);\\n  }\\n#endif\\n\\n\\n/////////////////////////////////////////// Main ///////////////////////////////////////////////\\nvoid main() {\\n\\n#ifdef ATTR_ALPHA_COLOR\\n  alphaCol = alphaColor;\\n#endif\\n\\n#ifdef INSTANCED_MATRIX\\n  vec3 objectNormal = vec3(\\n    dot(normal, matVector1.xyz),\\n    dot(normal, matVector2.xyz),\\n    dot(normal, matVector3.xyz));\\n#else\\n  vec3 objectNormal = vec3( normal );\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\\n#if !defined (SPHERE_SPRITE) && !defined (CYLINDER_SPRITE)\\n  vNormal = normalize(transformedNormal);\\n#endif\\n\\n#ifdef NORMALS_TO_G_BUFFER\\n  viewNormal = normalize(mat3(modelViewMatrix)*objectNormal);\\n#endif\\n\\n  vec4 localPos = vec4(position.xyz, 1.0);\\n  vec4 worldPos = modelMatrix * localPos;\\n  vec4 mvPosition = modelViewMatrix * localPos;\\n\\n// make thick line offset\\n#ifdef THICK_LINE\\n   // get screen pos\\n   vec4 dPos = transform(vec4(position.xyz, 1.0));\\n   vec2 sPos = project(dPos);\\n   // move pos forward\\n   vec3 position2 = position.xyz + direction.xyz * 0.5;\\n   // get screen offset pos\\n   vec4 dPos2 = transform(vec4(position2.xyz, 1.0));\\n   vec2 sPos2 = project(dPos2);\\n   // screen line direction\\n   vec2 sDir = normalize(sPos2 - sPos);\\n   // vertex offset (orthogonal to line direction)\\n   vec2 offset1 = vec2(-sDir.y, sDir.x);\\n   // move screen vertex\\n   vec2 newPos = sPos + offset1 * position.w * lineWidth;\\n   // get moved pos in view space\\n   vec4 dNewPos =  unproject(newPos, dPos.z, dPos.w);\\n   mvPosition.xyz = (projMatrixInv * dNewPos).xyz;\\n#endif // THICK_LINE\\n\\n#ifdef INSTANCED_POS\\n  #ifdef SPHERE_SPRITE\\n    instOffset = offset;\\n\\n    vec4 posEye = modelViewMatrix * vec4( offset.xyz, 1.0 );\\n    float scale = length(modelViewMatrix[0]);\\n    mvPosition = posEye + vec4( position.xyz * offset.w * scale * INSTANCED_SPRITE_OVERSCALE, 0.0 );\\n    posEye.w = offset.w * scale;\\n\\n    spritePosEye = posEye;\\n #else\\n    localPos = vec4( offset.xyz + position.xyz * offset.w, 1.0 );\\n    worldPos = modelMatrix * localPos;\\n    mvPosition = modelViewMatrix * localPos;\\n  #endif\\n#endif\\n\\n#ifdef INSTANCED_MATRIX\\n  #ifdef CYLINDER_SPRITE\\n    matVec1 = matVector1;\\n    matVec2 = matVector2;\\n    matVec3 = matVector3;\\n    invmatVec1 = invmatVector1;\\n    invmatVec2 = invmatVector2;\\n    invmatVec3 = invmatVector3;\\n\\n    // calculate eye coords of cylinder endpoints\\n    vec4 v = vec4(0, -0.5, 0, 1);\\n    vec4 p1 = modelViewMatrix * vec4(dot(v, matVector1), dot(v, matVector2), dot(v, matVector3), 1.0);\\n    v.y = 0.5;\\n    vec4 p2 = modelViewMatrix * vec4(dot(v, matVector1), dot(v, matVector2), dot(v, matVector3), 1.0);\\n\\n    // sprite is placed at the center of cylinder\\n    vec4 posEye;\\n    posEye.xyz = mix(p1.xyz, p2.xyz, 0.5);\\n    posEye.w = 1.0;\\n    spritePosEye = posEye;\\n\\n    // cylinder radius in eye space\\n    float rad = length(modelViewMatrix[0]) * length(vec3(matVector1.x, matVector2.x, matVector3.x));\\n    vec2 spriteSize;\\n    #ifdef ORTHOGRAPHIC_CAMERA\\n      // In ortho projection we skip z coordinate\\n      // basic sprite size at screen plane (covers only cylinder axis)\\n      vec2 spriteSizeScreen = abs(p2.xy - p1.xy);\\n\\n      spriteSize = vec2(1.0, 1.0) * INSTANCED_SPRITE_OVERSCALE * (spriteSizeScreen + 2.0 * rad);\\n    #else\\n      // basic sprite size at screen plane (covers only cylinder axis)\\n      vec2 spriteSizeScreen = abs(p2.xy / p2.z - p1.xy / p1.z);\\n\\n      // full sprite size in eye coords\\n      float minZ = min(abs(p1.z), abs(p2.z));\\n      spriteSize = vec2(1.0, 1.0) * INSTANCED_SPRITE_OVERSCALE * abs(posEye.z) * (spriteSizeScreen + 2.0 * rad / minZ);\\n    #endif\\n\\n    mvPosition = posEye + vec4( position.xy * 0.5 * spriteSize, 0, 0 );\\n  #else\\n    localPos = vec4(dot(localPos, matVector1), dot(localPos, matVector2), dot(localPos, matVector3), 1.0);\\n    worldPos = modelMatrix * localPos;\\n    mvPosition = modelViewMatrix * localPos;\\n  #endif\\n#endif\\n\\n  gl_Position = projectionMatrix * mvPosition;\\n\\n  vWorldPosition = worldPos.xyz;\\n  vViewPosition = - mvPosition.xyz;\\n\\n#if defined(USE_LIGHTS) && defined(SHADOWMAP)\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t  vec4 worldPosition;\\n\\t  // see THREE.WebGLProgram.unrollLoops\\n\\t  #pragma unroll_loop_start\\n\\t  for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n      vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * vec4(vWorldPosition, 1.0);\\n      vDirectionalShadowNormal[ i ] = (directionalShadowMatrix[ i ] * (modelMatrix * vec4(objectNormal, 0.0))).xyz;\\n\\t  }\\n\\t  #pragma unroll_loop_end\\n\\t#endif\\n#endif\\n\\n#ifdef ATTR_COLOR\\n  vColor = color.xyz;\\n#endif\\n\\n#ifdef ATTR_COLOR2\\n  vColor2 = color2;\\n  #ifndef CYLINDER_SPRITE\\n    vUv = uv;\\n  #endif\\n#endif\\n\\n#ifdef DASHED_LINE\\n  vLineDistance = lineDistance;\\n#endif\\n}\\n\";","export default \"#if defined (NORMALS_TO_G_BUFFER)\\n  #define fragColor gl_FragData[0]\\n#else\\n  #define fragColor gl_FragColor\\n#endif\\n\\n#ifdef ATTR_ALPHA_COLOR\\n  varying float alphaCol;\\n#endif\\n\\n#ifdef COLOR_FROM_POS\\n  uniform mat4 world2colorMatrix;\\n#endif\\n\\n#if defined(USE_LIGHTS) && defined(SHADOWMAP)\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n    uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ]; //only for sprites\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec3 vDirectionalShadowNormal[ NUM_DIR_LIGHTS ];\\n    vec4 vDirLightWorldCoord[ NUM_DIR_LIGHTS ];\\n    vec3 vDirLightWorldNormal[ NUM_DIR_LIGHTS ];\\n\\n    #ifdef SHADOWMAP_PCF_RAND\\n      // We use 4 instead uniform variable or define because this value is used in for(... i < value; ...) with\\n      // unroll_loop and unroll_loop has pattern:\\n      // /#pragma unroll_loop[\\\\s]+?for \\\\( int i \\\\= (\\\\d+)\\\\; i < (\\\\d+)\\\\; i \\\\+\\\\+ \\\\) \\\\{([\\\\s\\\\S]+?)(?=\\\\})\\\\}/g\\n      uniform vec2 samplesKernel[4]; // 4 is length of _samplesKernel which is defined in UberMaterial.js\\n      uniform sampler2D noiseTex;\\n      uniform vec2 noiseTexelSize;\\n      uniform vec2 srcTexelSize;\\n      uniform mat4 projectionMatrix;\\n    #endif\\n\\t#endif\\n#endif\\n\\n#ifdef ATTR_COLOR\\n  varying vec3 vColor;\\n#endif\\n\\n#ifdef ATTR_COLOR2\\n  varying vec3 vColor2;\\n  #ifndef CYLINDER_SPRITE\\n    varying vec2 vUv;\\n  #endif\\n#endif\\n\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform vec3 fixedColor;\\nuniform float opacity;\\nuniform float zClipValue;\\nuniform float clipPlaneValue;\\n\\n#ifdef NORMALS_TO_G_BUFFER\\n  varying vec3 viewNormal;\\n#endif\\n\\n#define PI 3.14159265359\\n#define RECIPROCAL_PI 0.31830988618\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n\\n#ifdef USE_FOG\\n  uniform vec3 fogColor;\\n  uniform float fogAlpha;\\n  uniform float fogNear;\\n  uniform float fogFar;\\n#endif\\n\\nvarying vec3 vWorldPosition; // world position of the pixel (invalid when INSTANCED_SPRITE is defined)\\nvarying vec3 vViewPosition;\\n\\n#if !defined (SPHERE_SPRITE) && !defined (CYLINDER_SPRITE)\\n  varying vec3 vNormal;\\n#endif\\n\\n/////////////////////////////////////////// ZSprites ////////////////////////////////////////////////\\n#if defined (SPHERE_SPRITE) || defined (CYLINDER_SPRITE)\\n  uniform float nearPlaneValue;\\n#endif\\n\\n#ifdef SPHERE_SPRITE\\n  varying vec4 spritePosEye;\\n#endif\\n\\n#if defined(SPHERE_SPRITE) || defined(CYLINDER_SPRITE)\\n  uniform float zOffset;\\n\\n  #if !defined(USE_LIGHTS) || !defined(SHADOWMAP) || !defined(SHADOWMAP_PCF_RAND) || !(NUM_DIR_LIGHTS > 0)\\n    uniform mat4 projectionMatrix;\\n  #endif\\n\\n  float calcDepthForSprites(vec4 pixelPosEye, float zOffset, mat4 projMatrix) {\\n    vec4 pixelPosScreen = projMatrix * pixelPosEye;\\n    return 0.5 * (pixelPosScreen.z / pixelPosScreen.w + 1.0) + zOffset;\\n  }\\n#endif\\n\\n#ifdef SPHERE_SPRITE\\n  varying vec4 instOffset;\\n  uniform mat4 modelMatrix;\\n  uniform mat4 modelViewMatrix;\\n  uniform mat4 invModelViewMatrix;\\n  uniform mat3 normalMatrix;\\n\\n\\n  bool intersect_ray_sphere(in vec3 origin, in vec3 ray, out vec3 point, out float frontFaced) {\\n\\n    // intersect XZ-projected ray with circle\\n    float a = dot(ray, ray);\\n    float b = dot(ray, origin);\\n    float c = dot(origin, origin) - 1.0;\\n    float det = b * b - a * c;\\n    if (det < 0.0) return false;\\n    float t1 = (-b - sqrt(det)) / a;\\n    float t2 = (-b + sqrt(det)) / a;\\n\\n    // calculate both intersection points\\n    vec3 p1 = origin + ray * t1;\\n    vec3 p2 = origin + ray * t2;\\n\\n    // choose nearest point inside frustum\\n    #ifdef ORTHOGRAPHIC_CAMERA\\n      // orthografic camera is used for dirLight sources. So in it for all spheres the point with smaller 't' is visible\\n      // t1 is always smaller than t2 (from calculations)\\n      point = p1;\\n      frontFaced = 1.0;\\n      return true;\\n    #else\\n      // for perspective camera first intersection can be in front of near plane. If not intersection is p1 else - p2\\n      // t* = 0.0 corresponds to point of intersection near plane by the ray from camera to curPixel\\n      if (t1 >= 0.0) {\\n        point = p1;\\n        frontFaced = 1.0;\\n        return true;\\n      }\\n      if (t2 >= 0.0) {\\n        point = p2;\\n        frontFaced = -1.0;\\n        return true;\\n      }\\n    #endif\\n\\n    return false;\\n  }\\n\\n  bool get_sphere_point(in vec3 pixelPosEye, out vec3 point, out float frontFaced) {\\n    vec3 origin, ray;\\n\\n    #ifdef ORTHOGRAPHIC_CAMERA\\n      // transform vector from sprite center to curPixel into sphere local coords\\n      origin = pixelPosEye.xyz - spritePosEye.xyz;\\n      origin = (invModelViewMatrix * vec4(origin, 0.0)).xyz / instOffset.w;\\n\\n      // transform camera orientation vector into sphere local coords\\n      ray = (invModelViewMatrix * vec4(0.0, 0.0, -1.0, 0.0)).xyz;\\n    #else\\n      // find point of intersection near plane by the ray from camera to curPixel\\n      vec4 v = vec4(-(nearPlaneValue / pixelPosEye.z) * pixelPosEye, 1.0);\\n\\n      // transform intersection point into sphere local coords\\n      v = invModelViewMatrix * v;\\n      origin = (v.xyz - instOffset.xyz) / instOffset.w;\\n\\n      // transform vector from camera pos to curPixel into sphere local coords\\n      ray = (invModelViewMatrix * vec4(pixelPosEye, 0.0)).xyz;\\n    #endif\\n    ray = normalize(ray);\\n\\n    return intersect_ray_sphere(origin, ray, point, frontFaced);\\n  }\\n#endif\\n\\n#ifdef CYLINDER_SPRITE\\n  varying vec4 matVec1;\\n  varying vec4 matVec2;\\n  varying vec4 matVec3;\\n  varying vec4 invmatVec1;\\n  varying vec4 invmatVec2;\\n  varying vec4 invmatVec3;\\n\\n  uniform mat4 modelMatrix;\\n  uniform mat4 modelViewMatrix;\\n  uniform mat4 invModelViewMatrix;\\n  uniform mat3 normalMatrix;\\n\\n  varying vec4 spritePosEye;\\n\\n  bool intersect_ray_cylinder(in vec3 origin, in vec3 ray, out vec3 point, out float frontFaced) {\\n\\n    // intersect XZ-projected ray with circle\\n    float a = dot(ray.xz, ray.xz);\\n    float b = dot(ray.xz, origin.xz);\\n    float c = dot(origin.xz, origin.xz) - 1.0;\\n    float det = b * b - a * c;\\n    if (det < 0.0) return false;\\n    float t1 = (-b - sqrt(det)) / a;\\n    float t2 = (-b + sqrt(det)) / a;\\n\\n    // calculate both intersection points\\n    vec3 p1 = origin + ray * t1;\\n    vec3 p2 = origin + ray * t2;\\n\\n    float halfHeight = 0.5;\\n\\n    // choose nearest point\\n    #ifdef ORTHOGRAPHIC_CAMERA\\n      // orthografic camera is used for dirLight sources. So in it for all cylinders the point with smaller 't' is visible\\n      // if it is not outside of cylinnder (t1 is always smaller than t2).\\n      if (p1.y >= -halfHeight && p1.y <= halfHeight) {\\n        point = p1;\\n        frontFaced = 1.0;\\n        return true;\\n      }\\n      if (p2.y >= -halfHeight && p2.y <= halfHeight) {\\n        point = p2;\\n        frontFaced = -1.0;\\n        return true;\\n      }\\n    #else\\n      // for perspective camera first intersection can be in front of near plane. If not intersection is p1 else - p2\\n      // t* = 0.0 corresponds to point of intersection near plane by the ray from camera to curPixel\\n      if (t1 >= 0.0 && p1.y >= -halfHeight && p1.y <= halfHeight) {\\n        point = p1;\\n        frontFaced = 1.0;\\n        return true;\\n      }\\n      if (t2 >= 0.0 && p2.y >= -halfHeight && p2.y <= halfHeight) {\\n        point = p2;\\n        frontFaced = -1.0;\\n        return true;\\n      }\\n    #endif\\n\\n    return false;\\n  }\\n\\n  bool get_cylinder_point(in vec3 pixelPosEye, out vec3 point, out float frontFaced) {\\n    vec3 origin, ray;\\n    vec4 v;\\n\\n    #ifdef ORTHOGRAPHIC_CAMERA\\n      // transform vector from sprite center to curPixel into cylinder local coords\\n      v = invModelViewMatrix * vec4(pixelPosEye.xyz - spritePosEye.xyz, 0.0);\\n      origin = vec3(dot(v, invmatVec1), dot(v, invmatVec2), dot(v, invmatVec3));\\n\\n      // transform camera orientation vector into cylinder local coords\\n      v = invModelViewMatrix * vec4(0.0, 0.0, -1.0, 0.0);\\n      ray = vec3(dot(v, invmatVec1), dot(v, invmatVec2), dot(v, invmatVec3));\\n    #else\\n      // find point of intersection near plane by the ray from camera to curPixel\\n      v = vec4(-(nearPlaneValue / pixelPosEye.z) * pixelPosEye, 1.0);\\n\\n      // transform intersection point into cylinder local coords\\n      v = invModelViewMatrix * v;\\n      origin = vec3(dot(v, invmatVec1), dot(v, invmatVec2), dot(v, invmatVec3));\\n\\n      // transform vector from camera pos to curPixel into cylinder local coords\\n      v = invModelViewMatrix * vec4(pixelPosEye, 0.0);\\n      ray = vec3(dot(v, invmatVec1), dot(v, invmatVec2), dot(v, invmatVec3));\\n    #endif\\n    ray = normalize(ray);\\n\\n    return intersect_ray_cylinder(origin, ray, point, frontFaced);\\n  }\\n#endif\\n\\n///////////////////////////////////// Pack and unpack ///////////////////////////////////////////////\\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\\n\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\n\\n\\nconst float ShiftRight8 = 1. / 256.;\\n\\nvec4 packDepthToRGBA( const in float v ) {\\n  vec4 r = vec4( fract( v * PackFactors ), v );\\n  r.yzw -= r.xyz * ShiftRight8; // tidy overflow\\n  return r * PackUpscale;\\n}\\n\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n  return dot( v, UnpackFactors );\\n}\\n\\n////////////////////////////////////////// All Lighting /////////////////////////////////////////////////\\n#ifdef TOON_SHADING\\n  #define LOW_TOON_BORDER 0.0\\n  #define MEDIUM_TOON_BORDER 0.7\\n  #define HIGH_TOON_BORDER 1.0\\n\\n  #define MEDIUM_TOON_RANGE 0.5\\n  #define HIGH_TOON_RANGE 0.95\\n#endif\\n#if defined(USE_LIGHTS) && NUM_DIR_LIGHTS > 0\\n  struct ReflectedLight {\\n    vec3 directDiffuse;\\n    vec3 directSpecular;\\n    vec3 indirectDiffuse;\\n  };\\n\\n  struct BlinnPhongMaterial {\\n    vec3  diffuseColor;\\n    vec3  specularColor;\\n    float specularShininess;\\n  };\\n\\n  struct GeometricContext {\\n    vec3 normal;\\n    vec3 viewDir;\\n  };\\n\\n  struct DirectionalLight {\\n    vec3 direction;\\n    vec3 color;\\n  };\\n  uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\n  struct DirectionalLightShadow {\\n     vec2 shadowMapSize;\\n     float shadowBias;\\n     float shadowRadius;\\n   };\\n  uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHTS ];\\n\\n  uniform vec3 ambientLightColor;\\n\\n  /////////////////////////////////////////// Shadowmap ////////////////////////////////////////////////\\n\\n  #if defined(SHADOWMAP)\\n  \\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n  \\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n  \\t}\\n\\n    float getShadow( sampler2D shadowMap, DirectionalLightShadow dirLight, vec4 shadowCoord, vec3 vViewPosition, vec3 vNormal ) {\\n   \\t  float shadow = 0.0;\\n\\n      // When shadows for sprites will appear use here for them normals as it done for G-buffer\\n      shadowCoord.xyz += dirLight.shadowBias * vNormal;\\n      shadowCoord.xyz /= shadowCoord.w;\\n\\n      bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n      bool inFrustum = all( inFrustumVec );\\n      bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n      bool frustumTest = all( frustumTestVec );\\n\\n      if ( frustumTest ) {\\n        #ifdef SHADOWMAP_BASIC\\n      \\t  shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n      \\t#endif\\n\\n      \\t#ifdef SHADOWMAP_PCF_SHARP\\n      \\t  vec2 texelSize = vec2( 1.0 ) / dirLight.shadowMapSize;\\n\\n            float dx0 = - texelSize.x * dirLight.shadowRadius;\\n            float dy0 = - texelSize.y * dirLight.shadowRadius;\\n            float dx1 = + texelSize.x * dirLight.shadowRadius;\\n            float dy1 = + texelSize.y * dirLight.shadowRadius;\\n\\n            shadow = (\\n            \\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n            \\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n            \\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n            \\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n            \\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n            \\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n            \\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n            \\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n            \\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n            ) * ( 1.0 / 9.0 );\\n        #endif\\n\\n        #ifdef SHADOWMAP_PCF_RAND\\n          vec2 texelSize = vec2( 1.0 ) / dirLight.shadowMapSize;\\n\\n          vec4 vUv = ((projectionMatrix * vec4(vViewPosition, 1.0)) + 1.0) / 2.0;\\n          vec2 vUvNoise = vUv.xy / srcTexelSize * noiseTexelSize;\\n\\n          vec2 noiseVec = normalize(texture2D(noiseTex, vUvNoise).rg);\\n          mat2 mNoise = mat2(noiseVec.x, noiseVec.y, -noiseVec.y, noiseVec.x);\\n\\n          vec2 offset;\\n          #pragma unroll_loop_start\\n          for ( int i = 0; i < 4; i ++ ) { // 4 is length of _samplesKernel which is defined in UberMaterial.js\\n            offset = mNoise * ( normalize( samplesKernel[ i ]) * texelSize * dirLight.shadowRadius );\\n            shadow +=  texture2DCompare( shadowMap, shadowCoord.xy + offset, shadowCoord.z );\\n          }\\n          #pragma unroll_loop_end\\n          shadow /= float( 4 ); // 4 is length of _samplesKernel which is defined in UberMaterial.js\\n        #endif\\n      }\\n      return shadow;//(shadow != 1.0) ? 0.5 : 1.0;//vec4(shadow, shadow, shadow, 1.0);\\n   }\\n  #endif\\n\\n  /////////////////////////////////////////// Lighting /////////////////////////////////////////////////\\n\\n  vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n    return RECIPROCAL_PI * diffuseColor;\\n  } // validated\\n\\n  vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n    // Original approximation by Christophe Schlick '94\\n    //;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n    // Optimized variant (presented by Epic at SIGGRAPH '13)\\n    float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n    return ( 1.0 - specularColor ) * fresnel + specularColor;\\n  } // validated\\n\\n  float G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\\n    // geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\\n    return 0.25;\\n  }\\n\\n  float D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n    return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n  }\\n\\n  vec3 BRDF_Specular_BlinnPhong( const in DirectionalLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n    vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n    float dotNH = saturate(dot( geometry.normal, halfDir ));\\n    float dotLH = saturate(dot( incidentLight.direction, halfDir ));\\n\\n    vec3 F = F_Schlick( specularColor, dotLH );\\n    float G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n    float D = D_BlinnPhong( shininess, dotNH );\\n\\n    return F * ( G * D );\\n  } // validated\\n\\n  void RE_Direct_BlinnPhong( const in DirectionalLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight, float penumbra ) {\\n\\n    float dotNL = saturate( dot( geometry.normal, directLight.direction ));\\n    #ifdef TOON_SHADING\\n      if(dotNL < MEDIUM_TOON_RANGE){\\n        dotNL = LOW_TOON_BORDER;\\n      }\\n      else if(dotNL < HIGH_TOON_RANGE){\\n        dotNL = MEDIUM_TOON_BORDER;\\n      }\\n      else{\\n        dotNL = HIGH_TOON_BORDER;\\n      }\\n    #endif\\n\\n    vec3 irradiance = dotNL * directLight.color * PI;\\n    reflectedLight.directDiffuse += penumbra * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n    reflectedLight.directSpecular += penumbra * irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess );\\n  }\\n\\n  void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n    reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n  }\\n\\n  vec3 calcLighting(const in GeometricContext geometry, const in BlinnPhongMaterial material, vec3 vViewPosition) {\\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ));\\n    vec3 irradiance = ambientLightColor * PI;\\n\\n    float shadowMask = 1.0;\\n    // see THREE.WebGLProgram.unrollLoops\\n  \\t#pragma unroll_loop_start\\n  \\t  for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n  \\t    #ifdef SHADOWMAP\\n  \\t      shadowMask = getShadow( directionalShadowMap[ i ], directionalLightShadows[ i ], vDirLightWorldCoord[ i ], vViewPosition, vDirLightWorldNormal[ i ] );\\n        #endif\\n\\n  \\t\\t  if ( shadowMask > 0.0 ) RE_Direct_BlinnPhong( directionalLights[ i ], geometry, material, reflectedLight, shadowMask );\\n  \\t\\t}\\n  \\t\\t#pragma unroll_loop_end\\n\\n    RE_IndirectDiffuse_BlinnPhong(irradiance, material, reflectedLight);\\n\\n    return saturate(reflectedLight.indirectDiffuse + reflectedLight.directDiffuse + reflectedLight.directSpecular);\\n  }\\n#endif\\n\\n/////////////////////////////////////////// Dashed Line ///////////////////////////////////////////////\\n#ifdef DASHED_LINE\\n  uniform float dashedLineSize;\\n  uniform float dashedLinePeriod;\\n  varying float vLineDistance;\\n#endif\\n\\n/////////////////////////////////////////// Main ///////////////////////////////////////////////\\nvoid main() {\\n\\n#ifdef CLIP_PLANE\\n  if (vViewPosition.z < clipPlaneValue) discard;\\n#endif\\n\\n#ifdef ZCLIP\\n  if (vViewPosition.z < zClipValue) discard;\\n#endif\\n\\n#if defined(USE_LIGHTS) && defined(SHADOWMAP)\\n  #if NUM_DIR_LIGHTS > 0\\n    // see THREE.WebGLProgram.unrollLoops\\n    #pragma unroll_loop_start\\n    for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n      vDirLightWorldCoord[ i ] = vDirectionalShadowCoord[ i ];\\n      vDirLightWorldNormal[ i ] = vDirectionalShadowNormal[ i ];\\n    }\\n    #pragma unroll_loop_end\\n  #endif\\n#endif\\n\\n  vec4 pixelPosWorld = vec4(vWorldPosition, 1.0);\\n  vec4 pixelPosEye;\\n\\n#ifdef SPHERE_SPRITE\\n\\n  vec3 viewNormalSprites;\\n  float frontFaced = 1.0;\\n  vec3 normal;\\n\\n/* quick-and-dirty method\\n  normal.xy = ' + INSTANCED_SPRITE_OVERSCALE + ' * (2.0 * vUv - 1.0);\\n  float r2 = dot(normal.xy, normal.xy);\\n  if (r2 > 1.0) discard;\\n  float normalZ = sqrt(1.0 - r2);\\n  normal.z = normalZ;\\n  normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n  pixelPosEye = vec4(spritePosEye.xyz, 1.0);\\n  pixelPosEye.z += spritePosEye.w * normalZ;\\n*/\\n\\n  // ray-trace sphere surface\\n  {\\n    vec3 p;\\n    if (!get_sphere_point(-vViewPosition, p, frontFaced)) discard;\\n    vec4 v = vec4(instOffset.xyz + p * instOffset.w, 1.0);\\n    pixelPosWorld = modelMatrix * v;\\n    pixelPosEye = modelViewMatrix * v;\\n    normal = normalize(normalMatrix * p);\\n    #ifdef NORMALS_TO_G_BUFFER\\n      viewNormalSprites = normalize(mat3(modelViewMatrix)*p);\\n    #endif\\n\\n    #if defined(USE_LIGHTS) && defined(SHADOWMAP)\\n      #if NUM_DIR_LIGHTS > 0\\n        // see THREE.WebGLProgram.unrollLoops\\n        #pragma unroll_loop_start\\n          for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n            vDirLightWorldCoord[ i ] = directionalShadowMatrix[ i ] * pixelPosWorld;\\n            vDirLightWorldNormal[ i ] = (directionalShadowMatrix[ i ] * (modelMatrix * vec4(p, 0.0))).xyz;\\n          }\\n        #pragma unroll_loop_end\\n      #endif\\n    #endif\\n  }\\n#endif\\n\\n#ifdef CYLINDER_SPRITE\\n  vec3 normal;\\n  vec3 viewNormalSprites;\\n  float frontFaced = 1.0;\\n  float cylinderY = 0.0;\\n\\n  // ray-trace cylinder surface\\n  {\\n    vec3 p;\\n    if (!get_cylinder_point(-vViewPosition, p, frontFaced)) discard;\\n\\n    cylinderY = 0.5 * (p.y + 1.0);\\n\\n    vec4 v = vec4(p, 1.0);\\n    v = vec4(dot(v, matVec1), dot(v, matVec2), dot(v, matVec3), 1.0);\\n    pixelPosWorld = modelMatrix * v;\\n    pixelPosEye = modelViewMatrix * v;\\n\\n    vec3 localNormal = normalize(vec3(p.x, 0.0, p.z));\\n    normal = vec3(\\n      dot(localNormal, matVec1.xyz),\\n      dot(localNormal, matVec2.xyz),\\n      dot(localNormal, matVec3.xyz));\\n    #ifdef NORMALS_TO_G_BUFFER\\n      viewNormalSprites = normalize(mat3(modelViewMatrix)*normal);\\n    #endif\\n\\n    #if defined(USE_LIGHTS) && defined(SHADOWMAP)\\n      #if NUM_DIR_LIGHTS > 0\\n        // see THREE.WebGLProgram.unrollLoops\\n        #pragma unroll_loop_start\\n          for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n            vDirLightWorldCoord[ i ] = directionalShadowMatrix[ i ] * pixelPosWorld;\\n            vDirLightWorldNormal[ i ] = (directionalShadowMatrix[ i ] * (modelMatrix * vec4(normal, 0.0))).xyz;\\n          }\\n        #pragma unroll_loop_end\\n      #endif\\n    #endif\\n\\n    normal = normalize(normalMatrix * normal);\\n  }\\n#endif\\n\\n  #ifdef ATTR_COLOR\\n    vec3 vertexColor = vColor;\\n  #else\\n    vec3 vertexColor = vec3(1.0, 1.0, 1.0);\\n  #endif\\n\\n  #ifdef ATTR_COLOR2\\n    #ifdef CYLINDER_SPRITE\\n      float colorCoef = cylinderY; // cylinder parameter is calculated from ray-tracing\\n    #else\\n      float colorCoef = vUv.y; // cylinder parameter is interpolated as tex coord\\n    #endif\\n      // choose either color or color2\\n    vertexColor = mix(vColor2, vColor, step(0.5, colorCoef));\\n  #endif\\n\\n  // negative red component is a special condition\\n  if (vertexColor.x < 0.0) discard;\\n\\n  #ifdef DASHED_LINE\\n    if ( mod( vLineDistance, dashedLinePeriod ) > dashedLineSize ) discard;\\n  #endif\\n\\n  // transparency prepass writes only z, so we don't need to calc the color\\n  #ifdef PREPASS_TRANSP\\n    fragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n    #if defined(SPHERE_SPRITE) || defined(CYLINDER_SPRITE)\\n      gl_FragDepthEXT = calcDepthForSprites(pixelPosEye, zOffset, projectionMatrix);\\n    #endif\\n    return;\\n  #endif\\n\\n    float totalOpacity = opacity;\\n\\n  #ifdef ATTR_ALPHA_COLOR\\n    totalOpacity *= alphaCol;\\n  #endif\\n\\n  // discard fully transparent pixels\\n  if (totalOpacity == 0.0) discard;\\n\\n  #ifdef FAKE_OPACITY\\n    // discard pixels in checker pattern\\n    vec2 dm_coord = floor(gl_FragCoord.xy);\\n    dm_coord = fract(dm_coord * 0.5);\\n    if (totalOpacity < 1.0 && (dm_coord.x < 0.5 ^^ dm_coord.y < 0.5)) discard;\\n    vec4 diffuseColor = vec4(diffuse, 1.0);\\n  #else\\n    vec4 diffuseColor = vec4(diffuse, totalOpacity);\\n  #endif\\n\\n  float flipNormal;\\n  #if !defined (SPHERE_SPRITE) && !defined (CYLINDER_SPRITE)\\n    flipNormal = 1.0;\\n    #ifdef DOUBLE_SIDED\\n      flipNormal = float( gl_FrontFacing );\\n    #endif\\n    vec3 normal = normalize( vNormal ) * flipNormal;\\n  #endif\\n\\n    diffuseColor.rgb *= vertexColor;\\n\\n  #if defined(SPHERE_SPRITE) || defined(CYLINDER_SPRITE)\\n    gl_FragDepthEXT = calcDepthForSprites(pixelPosEye, zOffset, projectionMatrix);\\n  #endif\\n\\n  #ifdef NORMALS_TO_G_BUFFER\\n    #if defined (SPHERE_SPRITE) || defined (CYLINDER_SPRITE)\\n      vec3 viewNormaInColor = viewNormalSprites;\\n    #else\\n      vec3 viewNormaInColor = viewNormal;\\n      float frontFaced = float( gl_FrontFacing );\\n    #endif\\n    // [-1, 1] -> [0, 1]\\n    viewNormaInColor = 0.5 * viewNormaInColor + 0.5;\\n    gl_FragData[1] = vec4(viewNormaInColor, frontFaced);\\n  #endif\\n\\n  #if defined(USE_LIGHTS) && NUM_DIR_LIGHTS > 0\\n    vec3 viewDir;\\n    #if defined(SPHERE_SPRITE) || defined(CYLINDER_SPRITE)\\n      viewDir = -pixelPosEye.xyz;\\n    #else\\n      viewDir = vViewPosition;\\n    #endif\\n    GeometricContext geometry = GeometricContext(normal, normalize( viewDir ));\\n    BlinnPhongMaterial material = BlinnPhongMaterial(diffuseColor.rgb, specular, shininess);\\n    vec3 outgoingLight = calcLighting(geometry, material, viewDir);\\n  #else\\n    vec3 outgoingLight = diffuseColor.rgb;\\n  #endif\\n\\n  #ifdef COLOR_FROM_DEPTH\\n    float depth = 0.0;\\n    #if defined(SPHERE_SPRITE) || defined(CYLINDER_SPRITE)\\n      gl_FragDepthEXT = calcDepthForSprites(pixelPosEye, zOffset, projectionMatrix);\\n      depth = gl_FragDepthEXT;\\n    #else\\n      depth = gl_FragCoord.z;\\n    #endif\\n    fragColor = packDepthToRGBA(depth);\\n    return;\\n  #endif\\n\\n  #ifdef COLOR_FROM_POS\\n    fragColor = world2colorMatrix * pixelPosWorld;\\n  #else\\n    #ifdef OVERRIDE_COLOR\\n      fragColor = vec4(fixedColor, diffuseColor.a);\\n    #else\\n      fragColor = vec4(outgoingLight, diffuseColor.a);//vec4(vNormal, 1.0);\\n    #endif\\n\\n    #ifdef USE_FOG\\n      float viewDistance;\\n      #if defined(SPHERE_SPRITE) || defined(CYLINDER_SPRITE)\\n        viewDistance = abs(pixelPosEye.z);\\n      #else\\n        viewDistance = vViewPosition.z;\\n      #endif\\n      float fogFactor = smoothstep( fogNear, fogFar, viewDistance) * fogAlpha;\\n      #ifdef FOG_TRANSPARENT\\n        fragColor.a = fragColor.a * (1.0 - fogFactor);\\n      #else\\n        fragColor.rgb = mix( fragColor.rgb, fogColor, fogFactor );\\n      #endif\\n    #endif\\n\\n  #endif\\n}\\n\";","import UberMaterial from '../shaders/UberMaterial';\n\nexport default function (SuperClass) {\n  class NewObjectType extends SuperClass {\n    constructor(...rest) {\n      super(...rest);\n      this.onBeforeRender = NewObjectType.prototype.onBeforeRender;\n    }\n\n    onBeforeRender(renderer, scene, camera, geometry, material, group) {\n      this._onBeforeRender(renderer, scene, camera, geometry, material, group);\n      this._update();\n    }\n\n    _onBeforeRender() {\n    }\n\n    _update() {\n      const { material } = this;\n      if (!material) {\n        return;\n      }\n\n      if (material instanceof UberMaterial) {\n        material.updateUniforms();\n      }\n    }\n  }\n\n  return NewObjectType;\n}\n","import * as THREE from 'three';\nimport UberObject from './UberObject';\n\nconst Mesh = UberObject(THREE.Mesh);\n\nclass ZSpriteMesh extends Mesh {\n  constructor(...rest) {\n    super(...rest);\n    this.castShadow = true;\n    this.receiveShadow = true;\n  }\n\n  _onBeforeRender(renderer, scene, camera, _geometry, _material, _group) {\n    Mesh.prototype._onBeforeRender.call(this, renderer, scene, camera);\n    const { material } = this;\n    if (!material) {\n      return;\n    }\n\n    if (material.uniforms.invModelViewMatrix) {\n      // NOTE: update of modelViewMatrix inside threejs is done after onBeforeRender call,\n      // so we have to do it manually in that place\n      this.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, this.matrixWorld);\n      // get inverse matrix\n      material.uniforms.invModelViewMatrix.value.copy(this.modelViewMatrix).invert();\n      material.uniforms.nearPlaneValue.value = camera.near;\n      material.uniformsNeedUpdate = true;\n    }\n  }\n}\n\nexport default ZSpriteMesh;\n","import * as THREE from 'three';\nimport UberObject from './UberObject';\n\nconst Mesh = UberObject(THREE.Mesh);\n\nclass ZClippedMesh extends Mesh {\n  constructor(geometry, material) {\n    super(geometry, material);\n    this.castShadow = true;\n    this.receiveShadow = true;\n  }\n\n  static _mvLength = new THREE.Vector3();\n\n  static _center = new THREE.Vector3();\n\n  static _modelView = new THREE.Matrix4();\n\n  _onBeforeRender(renderer, scene, camera) {\n    Mesh.prototype._onBeforeRender.call(this, renderer, scene, camera);\n\n    const geo = this.geometry;\n    const { material } = this;\n    if (!geo.zClip || !material.uberOptions) {\n      return;\n    }\n\n    const zClipCoef = 0.5;\n\n    const modelView = ZClippedMesh._modelView;\n    const mvLength = ZClippedMesh._mvLength;\n    const center = ZClippedMesh._center;\n\n    modelView.multiplyMatrices(this.matrixWorld, camera.matrixWorldInverse);\n    const s = mvLength.setFromMatrixColumn(modelView, 0).length();\n    center.copy(geo.boundingSphere.center);\n\n    this.localToWorld(center);\n    material.uberOptions.zClipValue = camera.position.z - center.z\n      - s * (zClipCoef * geo.boundingSphere.radius);\n  }\n}\n\nexport default ZClippedMesh;\n","import _ from 'lodash';\nimport * as THREE from 'three';\nimport CSS2DObject from '../CSS2DObject';\nimport utils from '../../utils';\n\nclass TextMesh extends THREE.Group {\n  constructor(geometry, _material) {\n    super();\n    this.geometry = geometry;\n\n    const self = this;\n    self.initialized = false;\n    this.geometry.addEventListener('update', () => {\n      self.update();\n    });\n  }\n\n  init() {\n    const { children } = this;\n    for (let i = children.length - 1; i >= 0; --i) {\n      this.remove(children[i]);\n    }\n\n    const { items, userData } = this.geometry;\n    for (let i = 0, n = items.length; i < n; ++i) {\n      const srcItem = items[i];\n      if (!srcItem) {\n        continue;\n      }\n      const item = utils.shallowCloneNode(srcItem);\n      const label = new CSS2DObject(item);\n      label.userData = _.clone(userData);\n      const el = label.getElement();\n      el.style.visibility = 'visible';\n      label.source = srcItem;\n      this.add(label);\n    }\n    this.initialized = true;\n  }\n\n  update() {\n    const geo = this.geometry;\n    if (!geo.needsUpdate) {\n      return;\n    }\n    const { children } = this;\n    if (!this.initialized) {\n      this.init();\n    }\n\n    for (let i = 0, n = children.length; i < n; ++i) {\n      const child = children[i];\n      const item = child.source;\n      child.position.copy(item.worldPos);\n      child.userData.color = item.opts.color;\n      child.userData.background = item.opts.background;\n    }\n  }\n}\n\nexport default TextMesh;\n","import * as THREE from 'three';\nimport UberObject from './UberObject';\n\nconst Mesh = UberObject(THREE.Mesh);\n\nclass SimpleMesh extends Mesh {\n  constructor(geometry, material) {\n    super(geometry, material);\n    this.castShadow = true;\n    this.receiveShadow = true;\n  }\n}\n\nexport default SimpleMesh;\n","import * as THREE from 'three';\nimport UberObject from './UberObject';\n\nconst Mesh = UberObject(THREE.Mesh);\nconst _viewport = new THREE.Vector2();\n\nclass ThickLineMesh extends Mesh {\n  _onBeforeRender(renderer, scene, camera, _geometry, _material, _group) {\n    const { material } = this;\n    if (!material.uberOptions) {\n      return;\n    }\n\n    material.uberOptions.projMatrixInv.copy(camera.projectionMatrix).invert();\n    renderer.getSize(_viewport);\n    material.uberOptions.viewport.set(_viewport.width, _viewport.height);\n  }\n}\n\nexport default ThickLineMesh;\n","import * as THREE from 'three';\nimport UberObject from './UberObject';\n\nconst Mesh = UberObject(THREE.Mesh);\n\nclass InstancedMesh extends Mesh {\n  constructor(...rest) {\n    super(...rest);\n    this.castShadow = true;\n    this.receiveShadow = true;\n  }\n}\n\nexport default InstancedMesh;\n","import * as THREE from 'three';\nimport UberObject from './UberObject';\nimport ZSpriteMesh from './ZSpriteMesh';\nimport ZClippedMesh from './ZClippedMesh';\nimport TextMesh from './TextMesh';\nimport SimpleMesh from './SimpleMesh';\nimport ThickLineMesh from './ThickLineMesh';\nimport InstancedMesh from './InstancedMesh';\n\nexport default {\n  ZClipped: ZClippedMesh,\n  ZSprite: ZSpriteMesh,\n  Text: TextMesh,\n  Line: UberObject(THREE.Line),\n  LineSegments: UberObject(THREE.LineSegments),\n  Mesh: SimpleMesh,\n  ThickLineMesh,\n  Instanced: InstancedMesh,\n};\n","import geometries from '../geometries/geometries';\nimport meshes from './meshes';\nimport ThickLinesGeometry from '../geometries/ThickLinesGeometry';\n\nfunction setMatParams(params, uniforms) {\n  return function (material) {\n    material.setValues(params);\n    material.setUberOptions(uniforms);\n  };\n}\n\nfunction _createInstancedCylinders(useZSprites, openEnded) {\n  return {\n    Geometry(a, b) {\n      return new geometries.Instanced2CCylindersGeometry(a, b, useZSprites, openEnded);\n    },\n    Object: useZSprites ? meshes.ZSprite : meshes.Instanced,\n    initMaterial: setMatParams({\n      instancedMatrix: true,\n      attrColor: true,\n      attrColor2: true,\n      attrAlphaColor: true,\n      cylinderSprite: useZSprites,\n    }),\n  };\n}\n\nfunction _createLineSegmentsGeoTriplet(geo, renderParams) {\n  const thickLines = geo.prototype instanceof ThickLinesGeometry;\n  const lineWidth = renderParams.lineWidth || 0;\n  return {\n    Geometry: geo,\n    Object: thickLines ? meshes.ThickLineMesh : meshes.LineSegments,\n    initMaterial: setMatParams({\n      lights: false,\n      attrColor: true,\n      attrAlphaColor: true,\n      thickLine: thickLines,\n    }, {\n      lineWidth,\n    }),\n  };\n}\n\nfunction _createSimpleGeoTriplet(geoClass) {\n  return {\n    Geometry: geoClass,\n    Object: meshes.Mesh,\n    initMaterial: setMatParams({\n      attrColor: true,\n      attrAlphaColor: true,\n    }),\n  };\n}\n\nfunction _createIsoSurfaceGeoTriplet(geoClass, caps, settings, renderParams) {\n  const surfaceOpts = {\n    wireframe: !!renderParams.wireframe,\n    fakeOpacity: settings.now.isoSurfaceFakeOpacity,\n    zClip: renderParams.zClip,\n  };\n  return {\n    Geometry: geoClass,\n    Object: meshes.ZClipped,\n    initMaterial: setMatParams({\n      attrColor: true,\n      attrAlphaColor: false,\n      wireframe: surfaceOpts.wireframe,\n      fakeOpacity: surfaceOpts.fakeOpacity,\n      zClip: surfaceOpts.zClip,\n    }),\n  };\n}\n\nclass MeshCreator {\n  static createSpheres(caps, settings) {\n    const useZSprites = settings.now.zSprites;\n    return {\n      Geometry(a, b) {\n        return new geometries.InstancedSpheresGeometry(a, b, useZSprites);\n      },\n      Object: useZSprites ? meshes.ZSprite : meshes.Instanced,\n      initMaterial: setMatParams({\n        instancedPos: true,\n        attrColor: true,\n        attrAlphaColor: true,\n        sphereSprite: useZSprites,\n      }),\n    };\n  }\n\n  static create2CClosedCylinders(_caps, _settings) {\n    return _createInstancedCylinders(false, false);\n  }\n\n  static create2CCylinders(caps, settings) {\n    return _createInstancedCylinders(settings.now.zSprites, true);\n  }\n\n  static create2CLines(_caps, _settings, renderParams) {\n    return _createLineSegmentsGeoTriplet(geometries.TwoColorLinesGeometry, renderParams);\n  }\n\n  static createCrosses(_caps, _settings, renderParams) {\n    return _createLineSegmentsGeoTriplet(geometries.CrossGeometry, renderParams);\n  }\n\n  static createExtrudedChains(_caps, _settings) {\n    return _createSimpleGeoTriplet(geometries.ExtrudedObjectsGeometry);\n  }\n\n  static createChunkedLines(_caps, _settings, renderParams) {\n    return _createLineSegmentsGeoTriplet(geometries.ChunkedLinesGeometry, renderParams);\n  }\n\n  static createQuickSurface(caps, settings, renderParams) {\n    return _createIsoSurfaceGeoTriplet(geometries.QuickSurfGeometry, caps, settings, renderParams);\n  }\n\n  static createContactSurface(caps, settings, renderParams) {\n    return _createIsoSurfaceGeoTriplet(geometries.ContactSurfaceGeometry, caps, settings, renderParams);\n  }\n\n  static createSASSES(caps, settings, renderParams) {\n    return _createIsoSurfaceGeoTriplet(geometries.SSIsosurfaceGeometry, caps, settings, renderParams);\n  }\n\n  static createLabels(_caps, _settings) {\n    return {\n      Geometry: geometries.LabelsGeometry,\n      Object: meshes.Text,\n      initMaterial() {\n      },\n    };\n  }\n}\n\nexport default MeshCreator;\n","import * as THREE from 'three';\nimport gfxutils from '../gfxutils';\n\nclass TransformGroup extends THREE.Object3D {\n  static _inverseMatrix = new THREE.Matrix4();\n\n  static _ray = new THREE.Ray();\n\n  constructor(geometry, geoParams, material, transforms) {\n    super();\n    this._geometry = geometry;\n    this._geoParams = geoParams;\n    const mat = material.createInstance();\n    geoParams.initMaterial(mat);\n    this._material = mat;\n    this._transforms = transforms.length > 0 ? transforms : [new THREE.Matrix4()];\n    const meshes = this._createMeshes(geometry);\n    for (let i = 0, n = meshes.length; i < n; ++i) {\n      this.add(meshes[i]);\n    }\n  }\n\n  raycast(raycaster, intersects) {\n    const ray = TransformGroup._ray;\n    const inverseMatrix = TransformGroup._inverseMatrix;\n    const { children } = this;\n    ray.copy(raycaster.ray);\n    for (let i = 0, n = children.length; i < n; ++i) {\n      const child = children[i];\n\n      if (!gfxutils.belongToSelectLayers(child)) {\n        continue;\n      }\n\n      child.updateMatrixWorld();\n      const mtx = child.matrixWorld;\n      inverseMatrix.copy(mtx).invert();\n      raycaster.ray.copy(ray).applyMatrix4(inverseMatrix);\n      const childIntersects = [];\n      this._geometry.raycast(raycaster, childIntersects);\n\n      for (let j = 0, ciCount = childIntersects.length; j < ciCount; ++j) {\n        const inters = childIntersects[j];\n        if (inters.point) {\n          inters.point.applyMatrix4(mtx);\n          inters.distance = ray.origin.distanceTo(inters.point);\n        }\n        inters.object = child;\n        intersects[intersects.length] = inters;\n      }\n    }\n    raycaster.ray.copy(ray);\n  }\n\n  getSubset(chunkIndices) {\n    const geos = this._geometry.getSubset(chunkIndices);\n    const subset = [];\n    let subIdx = 0;\n\n    for (let i = 0, n = geos.length; i < n; ++i) {\n      const meshes = this._createMeshes(geos[i]);\n      for (let j = 0, meshCnt = meshes.length; j < meshCnt; ++j) {\n        subset[subIdx++] = meshes[j];\n      }\n    }\n\n    return subset;\n  }\n\n  _createMeshes(geometry) {\n    const transforms = this._transforms;\n    const Mesh = this._geoParams.Object;\n    const material = this._material;\n    const meshes = [];\n    for (let i = 0, n = transforms.length; i < n; ++i) {\n      const mesh = new Mesh(geometry, material);\n      mesh.applyMatrix4(transforms[i]);\n      meshes[i] = mesh;\n    }\n\n    return meshes;\n  }\n}\n\nexport default TransformGroup;\n","import RCGroup from '../../RCGroup';\nimport TransformGroup from '../../meshes/TransformGroup';\n\nfunction wrapper(Name, args) {\n  const params = [Name].concat(args);\n  return Name.bind(...params);\n}\n\nclass ChemGroup extends RCGroup {\n  constructor(geoParams, selection, colorer, mode, transforms, polyComplexity, material) {\n    super();\n    if (this.constructor === ChemGroup) {\n      throw new Error('Can not instantiate abstract class!');\n    }\n    this._selection = selection;\n    this._mode = mode;\n    this._colorer = colorer;\n    this._chunksIdc = selection.chunks;\n    this._polyComplexity = polyComplexity;\n    this._geo = new (wrapper(geoParams.Geometry, this._makeGeoArgs()))();\n    this._mesh = new TransformGroup(this._geo, geoParams, material, transforms);\n    this.add(this._mesh);\n    this._build();\n  }\n\n  _makeGeoArgs() {\n    throw new Error('ChemGroup subclass must override _makeGeoArgs() method');\n  }\n\n  /**\n   * Builds subset geometry by ATOMS index list\n   *\n   * @param {Number} mask - Representation mask\n   * @param {Boolean} innerOnly - if true returns inner bonds only - without halves\n   * @returns {Array} Subset geometry\n   */\n  getSubset(mask, innerOnly) {\n    innerOnly = innerOnly !== undefined ? innerOnly : false;\n    const chunksList = this._calcChunksList(mask, innerOnly);\n    if (chunksList.length === 0) {\n      return [];\n    }\n    return this._mesh.getSubset(chunksList);\n  }\n\n  _changeSubsetOpacity(mask, value, innerOnly) {\n    const chunksList = this._calcChunksList(mask, innerOnly);\n    if (chunksList.length === 0) {\n      return;\n    }\n    this._geo.setOpacity(chunksList, value);\n  }\n\n  enableSubset(mask, innerOnly) {\n    innerOnly = innerOnly !== undefined ? innerOnly : true;\n    this._changeSubsetOpacity(mask, 1.0, innerOnly);\n  }\n\n  disableSubset(mask, innerOnly) {\n    innerOnly = innerOnly !== undefined ? innerOnly : true;\n    this._changeSubsetOpacity(mask, 0.0, innerOnly);\n  }\n}\n\nexport default ChemGroup;\n","import ChemGroup from './ChemGroup';\n\nclass AtomsGroup extends ChemGroup {\n  raycast(raycaster, intersects) {\n    const { atoms } = this._selection;\n    const inters = [];\n    this._mesh.raycast(raycaster, inters);\n    const atomsIdc = this._chunksIdc;\n    // process inters array - arr object references\n    for (let i = 0, n = inters.length; i < n; ++i) {\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\n        continue;\n      }\n      const atomIdx = atomsIdc[inters[i].chunkIdx];\n      if (atomIdx < atoms.length) {\n        inters[i].atom = atoms[atomIdx];\n        intersects.push(inters[i]);\n      }\n    }\n  }\n\n  _calcChunksList(mask) {\n    const chunksList = [];\n    const { atoms } = this._selection;\n    const atomsIdc = this._chunksIdc;\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\n      const atom = atoms[atomsIdc[i]];\n      if ((atom.mask & mask) !== 0) {\n        chunksList.push(i);\n      }\n    }\n    return chunksList;\n  }\n}\n\nexport default AtomsGroup;\n","import AtomsGroup from './AtomsGroup';\n\nclass AtomsSphereGroup extends AtomsGroup {\n  _makeGeoArgs() {\n    return [this._selection.chunks.length, this._polyComplexity];\n  }\n\n  _build() {\n    const atomsIdc = this._selection.chunks;\n    const { atoms, parent } = this._selection;\n    const mode = this._mode;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\n      const atom = atoms[atomsIdc[i]];\n      geo.setItem(i, atom.position, mode.calcAtomRadius(atom));\n      geo.setColor(i, colorer.getAtomColor(atom, parent));\n    }\n    geo.finalize();\n  }\n\n  updateToFrame(frameData) {\n    // This method looks like a copy paste. However, it\n    // was decided to postpone animation refactoring until GFX is fixed.\n    const atomsIdc = this._selection.chunks;\n    const { atoms } = this._selection;\n    const mode = this._mode;\n    const colorer = this._colorer;\n    const updateColor = frameData.needsColorUpdate(colorer);\n    const geo = this._geo;\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\n      const atom = atoms[atomsIdc[i]];\n      geo.setItem(i, frameData.getAtomPos(atomsIdc[i]), mode.calcAtomRadius(atom));\n      if (updateColor) {\n        geo.setColor(i, frameData.getAtomColor(colorer, atom));\n      }\n    }\n    geo.finalize();\n  }\n}\n\nexport default AtomsSphereGroup;\n","import AtomsSphereGroup from './AtomsSphereGroup';\n\nclass AtomsSurfaceGroup extends AtomsSphereGroup {\n  _makeGeoArgs() {\n    const selectedAtoms = [];\n    const { atoms, chunks } = this._selection;\n    const n = chunks.length;\n    for (let i = 0; i < n; ++i) {\n      selectedAtoms[i] = atoms[chunks[i]];\n    }\n    const opts = this._mode.getSurfaceOpts();\n    opts.atoms = selectedAtoms;\n    return [n, opts];\n  }\n}\nexport default AtomsSurfaceGroup;\n","/* This is a stub class keep it until SAS/SES is refactored */\n\nimport AtomsSphereGroup from './AtomsSphereGroup';\n\nclass AtomsSASSESGroupStub extends AtomsSphereGroup {\n  _makeGeoArgs() {\n    const selectedAtoms = [];\n    const { atoms, chunks } = this._selection;\n    const n = chunks.length;\n    for (let i = 0; i < n; ++i) {\n      selectedAtoms[i] = atoms[chunks[i]];\n    }\n    const opts = this._mode.getSurfaceOpts();\n    opts.atoms = selectedAtoms;\n    opts.selection = this._selection;\n    opts.colorMode = this._colorer;\n    return [n, opts];\n  }\n}\n\nexport default AtomsSASSESGroupStub;\n","import AtomsGroup from './AtomsGroup';\nimport utils from '../../../utils';\n\nfunction adjustColor(color) {\n  let r = (color >> 16) & 255;\n  let g = (color >> 8) & 255;\n  let b = color & 255;\n\n  if (0.2126 * r + 0.7152 * g + 0.0722 * b > 127) {\n    r = r * 3 / 10;\n    g = g * 3 / 10;\n    b = b * 3 / 10;\n  } else {\n    r = 255 - ((255 - r) * 3 / 10);\n    g = 255 - ((255 - g) * 3 / 10);\n    b = 255 - ((255 - b) * 3 / 10);\n  }\n\n  return (r << 16) | (g << 8) | b;\n}\n\nfunction inverseColor(color) {\n  const r = (color >> 16) & 255;\n  const g = (color >> 8) & 255;\n  const b = color & 255;\n\n  return ((255 - r) << 16) | ((255 - g) << 8) | (255 - b);\n}\n\nfunction getAtomText(atom) {\n  if (atom.name.getNode() !== null) {\n    return atom.name.getNode();\n  }\n\n  return atom.getVisualName();\n}\n\nconst colorMappings = {\n  none(c) {\n    return c;\n  },\n  adjust: adjustColor,\n  inverse: inverseColor,\n};\n\nfunction propagateColor(color, rule) {\n  let result;\n  if (colorMappings.hasOwnProperty(rule)) {\n    result = utils.hexColor(colorMappings[rule](color));\n  } else {\n    const val = parseInt(rule, 16);\n    if (!Number.isNaN(val) && rule.toLowerCase().startsWith('0x')) {\n      result = utils.hexColor(val);\n    } else {\n      result = '#000000';\n    }\n  }\n  return result;\n}\n\nconst templateMappings = {\n  serial(a) {\n    return a.serial;\n  },\n  name(a) {\n    return a.getVisualName();\n  },\n  elem(a) {\n    return a.element.name;\n  },\n  residue(a) {\n    return a.residue.getType().getName();\n  },\n  sequence(a) {\n    return a.residue.getSequence();\n  },\n  chain(a) {\n    return a.residue.getChain().getName();\n  },\n  hetatm(a) {\n    return a.isHet();\n  },\n  water(a) {\n    return a.residue.getType().getName() === 'HOH' || a.residue.getType().getName() === 'WAT';\n  },\n};\n\nconst parseTemplate = function (atom, str) {\n  return str.replace(/\\{\\{(\\s*\\w+\\s*)\\}\\}/g, (m) => {\n    let key = m.replace(/\\s+/g, '');\n    key = key.substring(2, key.length - 2).toLowerCase();\n\n    if (templateMappings.hasOwnProperty(key)) {\n      return templateMappings[key](atom);\n    }\n    return 'null';\n  });\n};\n\nclass AtomsTextGroup extends AtomsGroup {\n  _makeGeoArgs() {\n    const opts = this._mode.getLabelOpts();\n    return [this._selection.chunks.length, opts];\n  }\n\n  _build() {\n    const opts = this._mode.getLabelOpts();\n    const atomsIdc = this._selection.chunks;\n    const { atoms, parent } = this._selection;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\n      const atom = atoms[atomsIdc[i]];\n      const text = opts.template ? parseTemplate(atom, opts.template) : getAtomText(atom);\n      if (!text) {\n        continue;\n      }\n      const color = colorer.getAtomColor(atom, parent);\n      const fgColor = parseInt(propagateColor(color, opts.fg).substring(1), 16);\n      const bgColor = opts.showBg ? parseInt(propagateColor(color, opts.bg).substring(1), 16) : 'transparent';\n      geo.setItem(i, atom.position, text);\n      geo.setColor(i, fgColor, bgColor);\n    }\n    geo.finalize();\n  }\n\n  updateToFrame(frameData) {\n    // This method looks like a copy paste. However, it\n    // was decided to postpone animation refactoring until GFX is fixed.\n    const opts = this._mode.getLabelOpts();\n    const atomsIdc = this._selection.chunks;\n    const { atoms } = this._selection;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    const updateColor = frameData.needsColorUpdate(colorer);\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\n      const atom = atoms[atomsIdc[i]];\n      const text = opts.template ? parseTemplate(atom, opts.template) : getAtomText(atom);\n      if (!text) {\n        continue;\n      }\n      const color = frameData.getAtomColor(colorer, atom);\n      const fgColor = parseInt(propagateColor(color, opts.fg).substring(1), 16);\n      const bgColor = opts.showBg ? parseInt(propagateColor(color, opts.bg).substring(1), 16) : 'transparent';\n      geo.setItem(i, frameData.getAtomPos(atomsIdc[i]), text);\n      if (updateColor) {\n        geo.setColor(i, fgColor, bgColor);\n      }\n    }\n    geo.finalize();\n  }\n}\n\nexport default AtomsTextGroup;\n","import * as THREE from 'three';\nimport AtomsGroup from './AtomsGroup';\n\nfunction _slerp(omega, v1, v2, t) {\n  const oSin = Math.sin(omega);\n  return v1.clone().multiplyScalar(Math.sin((1 - t) * omega) / oSin).addScaledVector(v2, Math.sin(t * omega) / oSin);\n}\n\nclass AromaticGroup extends AtomsGroup {\n  _buildInner(radOffset, addChunk) {\n    const chunksToIdx = this._selection.chunks;\n\n    const prevVector = new THREE.Vector3();\n    const currVector = new THREE.Vector3();\n    const segmentsHeight = this._segmentsHeight;\n    const leprStep = 1.0 / segmentsHeight;\n    const colorer = this._colorer;\n\n    const { cycles, parent } = this._selection;\n    let chunkIdx = 0;\n    let currAtomIdx = chunksToIdx[chunkIdx];\n\n    for (let cIdx = 0, cCount = cycles.length; cIdx < cCount; ++cIdx) {\n      const cycle = cycles[cIdx];\n      const cycAtoms = cycle.atoms;\n      const chunkPoints = [];\n      const tmpDir = [];\n      const { center } = cycle;\n      const cycleRad = cycle.radius - radOffset;\n      const n = cycAtoms.length;\n      let i = 0;\n      const prevPos = cycAtoms[n - 1].position;\n      let currPos = cycAtoms[i].position;\n      prevVector.subVectors(prevPos, center);\n      currVector.subVectors(currPos, center);\n      const upDir = currVector.clone().cross(prevVector).normalize();\n\n      for (; i < n; ++i) {\n        const omega = prevVector.angleTo(currVector);\n        tmpDir[i] = _slerp(omega, prevVector, currVector, 0.5).normalize();\n        currPos = cycAtoms[(i + 1) % n].position;\n        prevVector.copy(currVector);\n        currVector.subVectors(currPos, center);\n      }\n\n      for (i = 0; i < n; ++i) {\n        if (cycAtoms[i].index !== currAtomIdx) {\n          continue;\n        }\n        const start = tmpDir[i];\n        const end = tmpDir[(i + 1) % n];\n        const color = colorer.getAtomColor(cycAtoms[i], parent);\n        const currAngle = start.angleTo(end);\n\n        for (let j = 0; j <= segmentsHeight; ++j) {\n          chunkPoints[j] = _slerp(currAngle, start, end, j * leprStep).multiplyScalar(cycleRad).add(center);\n        }\n\n        addChunk(chunkIdx++, color, chunkPoints, center, upDir);\n        currAtomIdx = chunksToIdx[chunkIdx];\n      }\n    }\n  }\n}\n\nexport default AromaticGroup;\n","import * as THREE from 'three';\nimport gfxutils from '../../gfxutils';\nimport AromaticGroup from './AromaticGroup';\n\nfunction _createShape(rad, parts) {\n  const pts = [];\n  for (let i = 0; i < parts; ++i) {\n    const a = -2 * i / parts * Math.PI;\n    pts.push(new THREE.Vector3(Math.cos(a) * rad, Math.sin(a) * rad, 0));\n  }\n  return pts;\n}\nconst { calcChunkMatrix } = gfxutils;\n\nclass AromaticTorusGroup extends AromaticGroup {\n  _build() {\n    const segmentsHeight = this._segmentsHeight;\n    const torusRad = this._mode.getAromRadius();\n    const radiusV = new THREE.Vector2(torusRad, torusRad);\n    const radOffset = this._mode.calcStickRadius() + 2 * torusRad;\n    const lookAtVector = new THREE.Vector3();\n    const mtc = [];\n    const geo = this._geo;\n    this._buildInner(radOffset, (chunkIdx, color, points, center, upDir) => {\n      for (let j = 0; j <= segmentsHeight; ++j) {\n        const currPoint = points[j];\n        const currDir = currPoint.clone().sub(center).cross(upDir);\n        lookAtVector.addVectors(currPoint, currDir);\n        mtc[j] = calcChunkMatrix(currPoint, lookAtVector, upDir, radiusV);\n      }\n      geo.setItem(chunkIdx, mtc);\n      geo.setColor(chunkIdx, color);\n    });\n    geo.finalize();\n  }\n\n  _makeGeoArgs() {\n    this._segmentsHeight = this._polyComplexity;\n    return [_createShape(1.0, this._polyComplexity), this._segmentsHeight + 1, this._selection.chunks.length];\n  }\n}\n\nexport default AromaticTorusGroup;\n","import AromaticGroup from './AromaticGroup';\n\nclass AromaticLinesGroup extends AromaticGroup {\n  _build() {\n    const geo = this._geo;\n    const radOffset = this._mode.getAromaticOffset();\n    this._buildInner(radOffset, (chunkIdx, color, points) => {\n      let prevPt = points[0];// do not replace with start\n      for (let j = 1; j <= this._segmentsHeight; ++j) {\n        const currPoint = points[j];\n        geo.setSegment(chunkIdx, j - 1, prevPt, currPoint);\n        prevPt = currPoint;\n      }\n      geo.setColor(chunkIdx, color);\n    });\n    geo.finalize();\n  }\n\n  _makeGeoArgs() {\n    this._segmentsHeight = this._mode.getAromaticArcChunks();\n    return [this._selection.chunks.length, this._segmentsHeight, true];\n  }\n}\n\nexport default AromaticLinesGroup;\n","import ChemGroup from './ChemGroup';\n\nclass ResiduesGroup extends ChemGroup {\n  raycast(raycaster, intersects) {\n    const { residues } = this._selection;\n    const inters = [];\n    this._mesh.raycast(raycaster, inters);\n    const chunksIdc = this._chunksIdc;\n    // process inters array - arr object references\n    for (let i = 0, n = inters.length; i < n; ++i) {\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\n        continue;\n      }\n      const resIdx = chunksIdc[inters[i].chunkIdx];\n      if (resIdx < residues.length) {\n        inters[i].residue = residues[resIdx];\n        intersects.push(inters[i]);\n      }\n    }\n  }\n\n  _calcChunksList(mask) {\n    const chunksList = [];\n    const { residues } = this._selection;\n    const resIdc = this._chunksIdc;\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\n      const res = residues[resIdc[i]];\n      if ((res._mask & mask) !== 0) {\n        chunksList.push(i);\n      }\n    }\n    return chunksList;\n  }\n}\n\nexport default ResiduesGroup;\n","import ResiduesGroup from './ResiduesGroup';\n\nclass NucleicItemGroup extends ResiduesGroup {\n  raycast(raycaster, intersects) {\n    const { residues } = this._selection;\n    const inters = [];\n    this._mesh.raycast(raycaster, inters);\n    const chunksIdc = this._chunksIdc;\n    // process inters array - arr object references\n    for (let i = 0, n = inters.length; i < n; ++i) {\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\n        continue;\n      }\n      const resIdx = chunksIdc[Math.floor(inters[i].chunkIdx / 2)];\n      if (resIdx < residues.length) {\n        inters[i].residue = residues[resIdx];\n        intersects.push(inters[i]);\n      }\n    }\n  }\n\n  _build() {\n    const { residues, parent } = this._selection;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    const stickRad = this._mode.calcStickRadius();\n    let chunkIdx = 0;\n\n    const resIdc = this._selection.chunks;\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\n      const res = residues[resIdc[i]];\n      const color = colorer.getResidueColor(res, parent);\n      this._processItem(chunkIdx++, res._cylinders[0], res._cylinders[1], stickRad, color);\n    }\n    geo.finalize();\n  }\n\n  _calcChunksList(mask) {\n    const chunksList = [];\n    let chunkIdx = 0;\n    const { residues } = this._selection;\n    const resIdc = this._chunksIdc;\n\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\n      const res = residues[resIdc[i]];\n      if ((res._mask & mask) !== 0) {\n        chunksList[chunkIdx++] = 2 * i;\n        chunksList[chunkIdx++] = 2 * i + 1;\n      }\n    }\n    return chunksList;\n  }\n\n  updateToFrame(frameData) {\n    // This method looks like a copy paste. However, it\n    // was decided to postpone animation refactoring until GFX is fixed.\n    const residues = frameData.getResidues();\n    const { parent } = this._selection;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    const stickRad = this._mode.calcStickRadius();\n    let chunkIdx = 0;\n\n    const resIdc = this._selection.chunks;\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\n      const res = residues[resIdc[i]];\n      const color = colorer.getResidueColor(res, parent);\n      this._processItem(chunkIdx++, res._cylinders[0], res._cylinders[1], stickRad, color);\n    }\n    geo.finishUpdate();\n  }\n}\n\nexport default NucleicItemGroup;\n","import NucleicItemGroup from './NucleicItemGroup';\n\nclass NucleicCylindersGroup extends NucleicItemGroup {\n  _makeGeoArgs() {\n    return [this._selection.chunks.length, this._polyComplexity];\n  }\n\n  _processItem(chunkIdx, cyl1, cyl2, stickRad, color) {\n    const geo = this._geo;\n    geo.setItem(chunkIdx, cyl1, cyl2, stickRad);\n    geo.setColor(chunkIdx, color, color);\n  }\n}\n\nexport default NucleicCylindersGroup;\n","import NucleicItemGroup from './NucleicItemGroup';\n\nclass NucleicSpheresGroup extends NucleicItemGroup {\n  _makeGeoArgs() {\n    return [this._selection.chunks.length * 2, this._polyComplexity];\n  }\n\n  _processItem(chunkIdx, cyl1, cyl2, stickRad, color) {\n    const geo = this._geo;\n    let idx = chunkIdx * 2;\n    geo.setItem(idx, cyl1, stickRad);\n    geo.setColor(idx, color);\n    idx++;\n    geo.setItem(idx, cyl2, stickRad);\n    geo.setColor(idx, color);\n  }\n}\n\nexport default NucleicSpheresGroup;\n","import * as THREE from 'three';\nimport { Smooth } from '../../../../vendor/js/Smooth';\nimport gfxutils from '../../gfxutils';\nimport chem from '../../../chem';\n\nconst { ResidueType } = chem;\n\nconst calcMatrix = gfxutils.calcChunkMatrix;\n\nfunction _buildStructureInterpolator(points, tension) {\n  const path = Smooth(points, {\n    method: Smooth.METHOD_CUBIC,\n    clip: Smooth.CLIP_CLAMP,\n    cubicTension: tension,\n    scaleTo: 1,\n  });\n\n  return function (t, argTrans) {\n    let transformT = argTrans;\n    if (transformT === null) {\n      // map our range to the [second .. last but one]\n      transformT = function (tt) {\n        return (tt * ((points.length - 1) - 2) + 1) / (points.length - 1);\n      };\n    }\n    const newt = transformT(t);\n    const ans = path(newt);\n    return new THREE.Vector3(ans[0], ans[1], ans[2]);\n  };\n}\n\nfunction _addPoints(centerPoints, topPoints, idx, residue) {\n  if (!residue._isValid) {\n    centerPoints[idx] = centerPoints[idx - 1];\n    topPoints[idx] = topPoints[idx - 1];\n    return;\n  }\n  const cp = residue._controlPoint;\n  centerPoints[idx] = [cp.x, cp.y, cp.z];\n  const tp = cp.clone().add(residue._wingVector);\n  topPoints[idx] = [tp.x, tp.y, tp.z];\n}\n\nfunction _addPointsForLoneResidue(centerPoints, topPoints, idx, residue) {\n  const nucleic = (residue._type.flags & ResidueType.Flags.NUCLEIC) !== 0;\n  const nameFrom = nucleic ? 'C5\\'' : 'N';\n  const nameTo = nucleic ? 'C3\\'' : 'C';\n\n  let posFrom;\n  let posTo;\n  residue.forEachAtom((atom) => {\n    const name = atom.getVisualName();\n    if (!posFrom && name === nameFrom) {\n      posFrom = atom.position;\n    } else if (!posTo && name === nameTo) {\n      posTo = atom.position;\n    }\n  });\n\n  // provide a fallback for unknown residues\n  if (!(posFrom && posTo)) {\n    posFrom = residue._firstAtom.position;\n    posTo = residue._lastAtom.position;\n  }\n\n  if (posFrom && posTo) {\n    const shift = posTo.clone().sub(posFrom);\n\n    const wing = residue._wingVector;\n    const cp = residue._controlPoint;\n    const tp = cp.clone().add(wing);\n\n    const cpPrev = cp.clone().sub(shift);\n    const tpPrev = cpPrev.clone().add(wing);\n    centerPoints[idx] = [cpPrev.x, cpPrev.y, cpPrev.z];\n    topPoints[idx] = [tpPrev.x, tpPrev.y, tpPrev.z];\n    ++idx;\n    centerPoints[idx] = [cpPrev.x, cpPrev.y, cpPrev.z];\n    topPoints[idx] = [tpPrev.x, tpPrev.y, tpPrev.z];\n    ++idx;\n\n    centerPoints[idx] = [cp.x, cp.y, cp.z];\n    topPoints[idx] = [tp.x, tp.y, tp.z];\n    ++idx;\n\n    const cpNext = cp.clone().add(shift);\n    const tpNext = cpNext.clone().add(wing);\n    centerPoints[idx] = [cpNext.x, cpNext.y, cpNext.z];\n    topPoints[idx] = [tpNext.x, tpNext.y, tpNext.z];\n    ++idx;\n    centerPoints[idx] = [cpNext.x, cpNext.y, cpNext.z];\n    topPoints[idx] = [tpNext.x, tpNext.y, tpNext.z];\n  }\n}\n\nfunction _calcPoints(residues, firstIdx, lastIdx, boundaries) {\n  const left = boundaries.start;\n  const right = boundaries.end;\n  function _prevIdx(idx) {\n    return idx > left && residues[idx - 1]._isValid ? idx - 1 : idx;\n  }\n  function _nextIdx(idx) {\n    return idx < right && residues[idx + 1]._isValid ? idx + 1 : idx;\n  }\n\n  const topPoints = [];\n  const centerPoints = [];\n  let arrIdx = 0;\n  function _extrapolate2(currIdx, otherIdx) {\n    const cp = residues[currIdx]._controlPoint.clone().lerp(residues[otherIdx]._controlPoint, -0.25);\n    const tp = cp.clone().add(residues[currIdx]._wingVector);\n    centerPoints[arrIdx] = [cp.x, cp.y, cp.z];\n    topPoints[arrIdx++] = [tp.x, tp.y, tp.z];\n    centerPoints[arrIdx] = [cp.x, cp.y, cp.z];\n    topPoints[arrIdx++] = [tp.x, tp.y, tp.z];\n  }\n\n  // a single disconnected residue\n  const prevIdx = _prevIdx(firstIdx);\n  const nextIdx = _nextIdx(lastIdx);\n  if (prevIdx === nextIdx) {\n    _addPointsForLoneResidue(centerPoints, topPoints, arrIdx, residues[firstIdx]);\n    return { centerPoints, topPoints };\n  }\n\n  // Two points (prev-prev and next-next) are added to support edge conditions for cubic splines, they are ignored\n  // Another two (prev and next) were added to support the outside of the sub chain\n\n  // prev and prev-prev\n  if (firstIdx === prevIdx) {\n    // do the extrapolation\n    _extrapolate2(firstIdx, _nextIdx(firstIdx));\n  } else {\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[_prevIdx(prevIdx)]);\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[prevIdx]);\n  }\n\n  // main loop\n  for (let idx = firstIdx; idx <= lastIdx; ++idx) {\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[idx]);\n  }\n\n  // next and next-next\n  if (nextIdx === _nextIdx(nextIdx)) {\n    // do the extrapolation\n    _extrapolate2(lastIdx, _prevIdx(lastIdx));\n  } else {\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[nextIdx]);\n    _addPoints(centerPoints, topPoints, arrIdx, residues[_nextIdx(nextIdx)]);\n  }\n  return { centerPoints, topPoints };\n}\n\nclass CartoonHelper {\n  constructor(residues, startIdx, endIdx, segmentsCount, tension, boundaries) {\n    const pointsArrays = _calcPoints(residues, startIdx, endIdx, boundaries);\n    this._topInterp = _buildStructureInterpolator(pointsArrays.topPoints, tension);\n    this._centerInterp = _buildStructureInterpolator(pointsArrays.centerPoints, tension);\n\n    this._shift = 0.5 / (endIdx - startIdx + 2);\n    this._valueStep = (1.0 - 2 * this._shift) / (2 * (endIdx - startIdx + 1) * (segmentsCount - 1));\n    this._segmentsCount = segmentsCount;\n  }\n\n  prepareMatrices(idx, firstRad, secondRad) {\n    const mtcCount = this._segmentsCount;\n    const outMtc = new Array(mtcCount);\n    const currRad = new THREE.Vector2(0, 0);\n\n    const topInterp = this._topInterp;\n    const cenInterp = this._centerInterp;\n\n    let currentValue = this._shift + this._valueStep * (mtcCount - 1) * idx;\n\n    for (let mtxIdx = 0; mtxIdx < mtcCount; ++mtxIdx) {\n      const lerpVal = Math.min(1.0, mtxIdx / (mtcCount - 1));\n      currRad.lerpVectors(firstRad, secondRad, lerpVal);\n\n      const currTop = topInterp(currentValue, null);\n      const currCenter = cenInterp(currentValue, null);\n      currentValue += this._valueStep;\n      const nextCenter = cenInterp(currentValue, null);\n\n      outMtc[mtxIdx] = calcMatrix(currCenter.clone(), nextCenter.clone(), currTop.clone().sub(currCenter), currRad);\n    }\n\n    return outMtc;\n  }\n}\n\nexport default CartoonHelper;\n","import * as THREE from 'three';\nimport ResiduesGroup from './ResiduesGroup';\nimport CartoonHelper from './CartoonHelper';\n\nfunction _createShape(rad, parts) {\n  const pts = [];\n\n  for (let i = 0; i < parts; ++i) {\n    // starts from pi/2 because it's important that points are lied on the angles of arrows (visual issues if not)\n    const a = Math.PI / 2.0 - 2 * Math.PI * i / parts;\n\n    pts.push(new THREE.Vector3(Math.cos(a) * rad, Math.sin(a) * rad, 0));\n  }\n  return pts;\n}\n\nfunction _loopThrough(subDiv, residues, segmentsHeight, tension, mode, callback) {\n  for (let subDivI = 0, subDivN = subDiv.length; subDivI < subDivN; ++subDivI) {\n    const subs = subDiv[subDivI].arr;\n    const { boundaries } = subDiv[subDivI];\n    for (let i = 0, n = subs.length; i < n; ++i) {\n      const idc = [subs[i].start, subs[i].end];\n      const matrixHelper = new CartoonHelper(residues, idc[0], idc[1], segmentsHeight, tension, boundaries);\n      let prevLast = null;\n      const startIdx = subs[i].start * 2;\n      const endIdx = subs[i].end * 2 + 1;\n      let prevSecondRad = mode.getResidueRadius(residues[0], 0);\n      for (let idx = startIdx; idx <= endIdx; ++idx) {\n        const resIdx = (idx / 2 | 0);\n        const currRes = residues[resIdx];\n        const firstRad = mode.getResidueRadius(currRes, idx % 2);\n        const secondRad = mode.getResidueRadius(currRes, 1 + (idx % 2));\n\n        const mtc = matrixHelper.prepareMatrices(idx - idc[0] * 2, firstRad, secondRad);\n        mtc.unshift(prevLast === null ? mtc[0] : prevLast);\n\n        // Slope - radius is changed along this residue part\n        const hasSlope = (firstRad.x !== secondRad.x) || (firstRad.y !== secondRad.y);\n        // Cut - end radius of previous part not equal to start radius of this part. First section of this part lies in the orthogonal plane\n        const hasCut = (firstRad.x !== prevSecondRad.x) || (firstRad.y !== prevSecondRad.y);\n\n        callback(currRes, mtc, hasSlope, hasCut);\n\n        prevLast = mtc[segmentsHeight];\n        prevSecondRad = secondRad;\n      }\n    }\n  }\n}\n\nclass ResiduesSubseqGroup extends ResiduesGroup {\n  _makeGeoArgs() {\n    const cmpMultiplier = this._mode.getHeightSegmentsRatio();\n    this._segmentsHeight = this._polyComplexity * cmpMultiplier | 0;\n    return [_createShape(1.0, this._polyComplexity), this._segmentsHeight + 1, this._selection.chunks.length * 2];\n  }\n\n  _build() {\n    const { residues, parent } = this._selection;\n    const mode = this._mode;\n    const colorer = this._colorer;\n    const tension = mode.getTension();\n    const geo = this._geo;\n    let chunkIdx = 0;\n    const chunkIdc = [];\n    _loopThrough(this._selection.subdivs, residues, this._segmentsHeight, tension, mode, (currRes, mtc, hasSlope = false, hasCut = false) => {\n      const color = colorer.getResidueColor(currRes, parent);\n      chunkIdc[chunkIdx] = currRes._index;\n      geo.setItem(chunkIdx, mtc, hasSlope, hasCut);\n      geo.setColor(chunkIdx++, color);\n    });\n    this._chunksIdc = chunkIdc;\n    geo.finalize();\n  }\n\n  updateToFrame(frameData) {\n    // This method looks like a copy paste. However, it\n    // was decided to postpone animation refactoring until GFX is fixed.\n    const { parent } = this._selection;\n    const mode = this._mode;\n    const colorer = this._colorer;\n    const tension = mode.getTension();\n    const geo = this._geo;\n    const frameRes = frameData.getResidues();\n    let chunkIdx = 0;\n    const updateColor = frameData.needsColorUpdate(colorer);\n    _loopThrough(this._selection.subdivs, frameRes, this._segmentsHeight, tension, mode, (currRes, mtc) => {\n      geo.setItem(chunkIdx, mtc);\n      if (updateColor) {\n        geo.setColor(chunkIdx, colorer.getResidueColor(currRes, parent));\n      }\n      chunkIdx++;\n    });\n    geo.finalize();\n  }\n}\n\nexport default ResiduesSubseqGroup;\n","import ChemGroup from './ChemGroup';\n\nclass ResiduesTraceGroup extends ChemGroup {\n  _makeGeoArgs() {\n    const subDiv = this._selection.subdivs;\n    let chunksCount = 0;\n    for (let subDivI = 0, subDivN = subDiv.length; subDivI < subDivN; ++subDivI) {\n      const subs = subDiv[subDivI].arr;\n      for (let i = 0, n = subs.length; i < n; ++i) {\n        chunksCount += subs[i].end - subs[i].start;\n      }\n    }\n    return [chunksCount, this._polyComplexity];\n  }\n\n  _build() {\n    const { residues, parent } = this._selection;\n    const mode = this._mode;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    let chunkIdx = 0;\n    const chunkIdc = [];\n    const subDiv = this._selection.subdivs;\n    const stickRad = mode.calcStickRadius();\n\n    for (let subDivI = 0, subDivN = subDiv.length; subDivI < subDivN; ++subDivI) {\n      const subs = subDiv[subDivI].arr;\n      for (let i = 0, n = subs.length; i < n; ++i) {\n        const startIdx = subs[i].start;\n        const endIdx = subs[i].end;\n        let prevRes = residues[startIdx];\n        for (let idx = startIdx + 1; idx <= endIdx; ++idx) {\n          const currRes = residues[idx];\n          chunkIdc[chunkIdx] = { first: prevRes._index, second: currRes._index };\n          geo.setItem(chunkIdx, prevRes._controlPoint, currRes._controlPoint, stickRad);\n          geo.setColor(chunkIdx, colorer.getResidueColor(prevRes, parent), colorer.getResidueColor(currRes, parent));\n          chunkIdx++;\n          prevRes = currRes;\n        }\n      }\n    }\n\n    this._chunksIdc = chunkIdc;\n    geo.finalize();\n  }\n\n  updateToFrame(frameData) {\n    // This method looks like a copy paste. However, it\n    // was decided to postpone animation refactoring until GFX is fixed.\n\n    const residues = frameData.getResidues();\n    const { parent } = this._selection;\n    const mode = this._mode;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    let chunkIdx = 0;\n    const subDiv = this._selection.subdivs;\n    const stickRad = mode.calcStickRadius();\n    const updateColor = frameData.needsColorUpdate(colorer);\n\n    for (let subDivI = 0, subDivN = subDiv.length; subDivI < subDivN; ++subDivI) {\n      const subs = subDiv[subDivI].arr;\n      for (let i = 0, n = subs.length; i < n; ++i) {\n        const startIdx = subs[i].start;\n        const endIdx = subs[i].end;\n        let prevRes = residues[startIdx];\n        for (let idx = startIdx + 1; idx <= endIdx; ++idx) {\n          const currRes = residues[idx];\n          geo.setItem(chunkIdx, prevRes._controlPoint, currRes._controlPoint, stickRad);\n          if (updateColor) {\n            geo.setColor(chunkIdx, colorer.getResidueColor(prevRes, parent), colorer.getResidueColor(currRes, parent));\n          }\n          chunkIdx++;\n          prevRes = currRes;\n        }\n      }\n    }\n\n    geo.finalize();\n  }\n\n  raycast(raycaster, intersects) {\n    const inters = [];\n    const { residues } = this._selection;\n    this._mesh.raycast(raycaster, inters);\n    const chunksToIdx = this._chunksIdc;\n    // process inters array - arr object references\n    for (let i = 0, n = inters.length; i < n; ++i) {\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\n        continue;\n      }\n      const { chunkIdx } = inters[i];\n      const chunk = chunksToIdx[Math.floor(chunkIdx / 2)];\n      const resIdx = chunkIdx % 2 === 0 ? chunk.first : chunk.second;\n      if (resIdx < residues.length) {\n        inters[i].residue = residues[resIdx];\n        intersects.push(inters[i]);\n      }\n    }\n  }\n\n  _calcChunksList(mask) {\n    const chunksList = [];\n    const chunksToIdx = this._chunksIdc;\n    const { residues } = this._selection;\n    for (let i = 0, n = chunksToIdx.length; i < n; ++i) {\n      const chunk = chunksToIdx[i];\n      if (residues[chunk.first]._mask & mask) {\n        chunksList.push(i * 2);\n      }\n      if (residues[chunk.second]._mask & mask) {\n        chunksList.push(i * 2 + 1);\n      }\n    }\n    return chunksList;\n  }\n}\n\nexport default ResiduesTraceGroup;\n","import ChemGroup from './ChemGroup';\nimport Bond from '../../../chem/Bond';\n\nfunction getCylinderCount(bondOrder) {\n  return bondOrder < 2 ? 1 : bondOrder;\n}\n\nclass BondsGroup extends ChemGroup {\n  _makeGeoArgs() {\n    const drawMultiple = this._mode.drawMultiorderBonds();\n    const showAromatic = this._mode.showAromaticLoops();\n    const bondsIdc = this._selection.chunks;\n    const { bonds } = this._selection;\n    let bondsCount = 0;\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\n      bondsCount += this.getBondOrder(bonds[bondsIdc[i]], drawMultiple, showAromatic);\n    }\n    return [bondsCount, this._polyComplexity];\n  }\n\n  getBondOrder(bond, drawMultiple, showAromatic) {\n    let bondOrder = 1;\n    if (drawMultiple && (!showAromatic || bond._type !== Bond.BondType.AROMATIC)) {\n      bondOrder = getCylinderCount(bond._order);\n    }\n    return bondOrder;\n  }\n\n  raycast(raycaster, intersects) {\n    const { bonds } = this._selection;\n    const inters = [];\n    this._mesh.raycast(raycaster, inters);\n    const bondsIdc = this._chunksIdc;\n    // process inters array - arr object references\n    for (let i = 0, n = inters.length; i < n; ++i) {\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\n        continue;\n      }\n      const { chunkIdx } = inters[i];\n      const bondIdx = bondsIdc[Math.floor(chunkIdx / 2)];\n      if (bondIdx < bonds.length) {\n        const bond = bonds[bondIdx];\n        inters[i].atom = chunkIdx % 2 === 0 ? bond._left : bond._right;\n        intersects.push(inters[i]);\n      }\n    }\n  }\n\n  _calcChunksList(mask, innerOnly) {\n    const chunksList = [];\n    const { bonds } = this._selection;\n    const chunksToIdx = this._chunksIdc;\n    for (let i = 0, n = chunksToIdx.length; i < n; ++i) {\n      const bond = bonds[chunksToIdx[i]];\n      if ((bond._left.mask & mask) && (!innerOnly || (bond._right.mask & mask))) {\n        chunksList.push(2 * i);\n      }\n      if ((bond._right.mask & mask) && (!innerOnly || (bond._left.mask & mask))) {\n        chunksList.push(2 * i + 1);\n      }\n    }\n    return chunksList;\n  }\n}\n\nexport default BondsGroup;\n","import * as THREE from 'three';\nimport BondsGroup from './BondsGroup';\n\nconst STEP_SIZE = 0.15;\n\nclass BondsLinesGroup extends BondsGroup {\n  _build() {\n    const bondsIdc = this._selection.chunks;\n    const { bonds, parent } = this._selection;\n    const mode = this._mode;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    const drawMultiple = mode.drawMultiorderBonds();\n    const showAromatic = mode.showAromaticLoops();\n\n    const bondDir = new THREE.Vector3();\n\n    const leftPos = new THREE.Vector3();\n    const rightPos = new THREE.Vector3();\n    let currBondIdx = 0;\n    const chunksToIdx = [];\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\n      const bond = bonds[bondsIdc[i]];\n      const atom1 = bond._left;\n      const atom2 = bond._right;\n      const a1Pos = atom1.position;\n      const a2Pos = atom2.position;\n      const a1Hangs = atom1.bonds.length === 1;\n      const a2Hangs = atom2.bonds.length === 1;\n      bondDir.subVectors(a2Pos, a1Pos);\n      const len = bondDir.length();\n      const normDir = bond.calcNormalDir();\n\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic);\n\n      for (let j = 0; j < order; ++j) {\n        leftPos.copy(a1Pos);\n        rightPos.copy(a2Pos);\n        let scale = (order % 2 === 0\n          ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\n          : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)));\n        chunksToIdx[currBondIdx] = bond._index;\n        if (order === 2 && (!a1Hangs && !a2Hangs)) {\n          scale -= 0.5;\n          scale *= -1;\n        }\n\n        if (!a1Hangs && !a2Hangs && order > 1 && scale !== 0) {\n          leftPos.lerpVectors(a1Pos, a2Pos, STEP_SIZE / (len));\n          rightPos.lerpVectors(a1Pos, a2Pos, 1.0 - STEP_SIZE / (len));\n        }\n\n        scale *= STEP_SIZE;\n\n        leftPos.addScaledVector(normDir, scale);\n        rightPos.addScaledVector(normDir, scale);\n        geo.setItem(currBondIdx, leftPos, rightPos);\n        geo.setColor(currBondIdx++, colorer.getAtomColor(atom1, parent), colorer.getAtomColor(atom2, parent));\n      }\n    }\n    geo.finalize();\n    this._chunksIdc = chunksToIdx;\n  }\n\n  updateToFrame(frameData) {\n    // This method looks like a copy paste. However, it\n    // was decided to postpone animation refactoring until GFX is fixed.\n    const bondsIdc = this._selection.chunks;\n    const { bonds } = this._selection;\n    const mode = this._mode;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    const drawMultiple = mode.drawMultiorderBonds();\n    const showAromatic = mode.showAromaticLoops();\n\n    const bondDir = new THREE.Vector3();\n\n    const leftPos = new THREE.Vector3();\n    const rightPos = new THREE.Vector3();\n    let currBondIdx = 0;\n    const updateColor = frameData.needsColorUpdate(colorer);\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\n      const bond = bonds[bondsIdc[i]];\n      const atom1 = bond._left;\n      const atom2 = bond._right;\n      const a1Pos = frameData.getAtomPos(atom1.index).clone();\n      const a2Pos = frameData.getAtomPos(atom2.index);\n      const a1Hangs = atom1.bonds.length === 1;\n      const a2Hangs = atom2.bonds.length === 1;\n      bondDir.subVectors(a2Pos, a1Pos);\n      const len = bondDir.length();\n      const normDir = bond.calcNormalDir();\n\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic);\n\n      for (let j = 0; j < order; ++j) {\n        leftPos.copy(a1Pos);\n        rightPos.copy(a2Pos);\n        let scale = (order % 2 === 0\n          ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\n          : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)));\n        if (order === 2 && (!a1Hangs && !a2Hangs)) {\n          scale -= 0.5;\n          scale *= -1;\n        }\n\n        if (!a1Hangs && !a2Hangs && order > 1 && scale !== 0) {\n          leftPos.lerpVectors(a1Pos, a2Pos, STEP_SIZE / (len));\n          rightPos.lerpVectors(a1Pos, a2Pos, 1.0 - STEP_SIZE / (len));\n        }\n\n        scale *= STEP_SIZE;\n\n        leftPos.addScaledVector(normDir, scale);\n        rightPos.addScaledVector(normDir, scale);\n        geo.setItem(currBondIdx, leftPos, rightPos);\n        if (updateColor) {\n          geo.setColor(currBondIdx, frameData.getAtomColor(colorer, atom1), frameData.getAtomColor(colorer, atom2));\n        }\n        currBondIdx++;\n      }\n    }\n    geo.finalize();\n  }\n}\n\nexport default BondsLinesGroup;\n","import AtomsSphereGroup from './AtomsSphereGroup';\nimport AtomsSurfaceGroup from './AtomsSurfaceGroup';\nimport AtomsSASSESGroupStub from './AtomsSASSESGroupStub';\nimport AtomsTextGroup from './AtomsTextGroup';\nimport AromaticTorusGroup from './AromaticTorusGroup';\nimport AromaticLinesGroup from './AromaticLinesGroup';\nimport NucleicCylindersGroup from './NucleicCylindersGroup';\nimport NucleicSpheresGroup from './NucleicSpheresGroup';\nimport ResiduesSubseqGroup from './ResiduesSubseqGroup';\nimport ResiduesTraceGroup from './ResiduesTraceGroup';\nimport BondsCylinderGroup from './BondsCylinderGroup';\nimport BondsLinesGroup from './BondsLinesGroup';\n\nexport default {\n  AtomsSphereGroup,\n  AtomsSurfaceGroup,\n  AtomsSASSESGroupStub,\n  AtomsTextGroup,\n  AromaticTorusGroup,\n  AromaticLinesGroup,\n  NucleicCylindersGroup,\n  NucleicSpheresGroup,\n  ResiduesSubseqGroup,\n  ResiduesTraceGroup,\n  BondsCylinderGroup,\n  BondsLinesGroup,\n};\n","import * as THREE from 'three';\nimport BondsGroup from './BondsGroup';\n\nclass BondsCylinderGroup extends BondsGroup {\n  _build() {\n    const bondsIdc = this._selection.chunks;\n    const { bonds, parent } = this._selection;\n    const mode = this._mode;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    const drawMultiple = mode.drawMultiorderBonds();\n    const showAromatic = mode.showAromaticLoops();\n\n    const stickRad = mode.calcStickRadius();\n    const emptyOffset = mode.calcSpaceFraction();\n    let normDir;\n    const leftPos = new THREE.Vector3();\n    const rightPos = new THREE.Vector3();\n    let currBondIdx = 0;\n    const chunksToIdx = [];\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\n      const bond = bonds[bondsIdc[i]];\n      const atom1 = bond._left;\n      const atom2 = bond._right;\n      const a1Pos = atom1.position;\n      const a2Pos = atom2.position;\n      normDir = bond.calcNormalDir();\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic);\n      const minRad = Math.min(mode.calcAtomRadius(atom1), mode.calcAtomRadius(atom2));\n      const dist = 2 * minRad / order;\n      const currStickRad = drawMultiple ? Math.min(stickRad, dist * 0.5 * (1.0 - emptyOffset)) : stickRad;\n\n      for (let j = 0; j < order; ++j) {\n        const scale = dist * (order % 2 === 0\n          ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\n          : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)));\n        chunksToIdx[currBondIdx] = bond._index;\n        leftPos.copy(a1Pos);\n        leftPos.addScaledVector(normDir, scale);\n        rightPos.copy(a2Pos);\n        rightPos.addScaledVector(normDir, scale);\n        geo.setItem(currBondIdx, leftPos, rightPos, currStickRad);\n        geo.setColor(currBondIdx++, colorer.getAtomColor(atom1, parent), colorer.getAtomColor(atom2, parent));\n      }\n    }\n\n    geo.finalize();\n    this._chunksIdc = chunksToIdx;\n  }\n\n  updateToFrame(frameData) {\n    const bondsIdc = this._selection.chunks;\n    const { bonds } = this._selection;\n    const mode = this._mode;\n    const colorer = this._colorer;\n    const geo = this._geo;\n    const drawMultiple = mode.drawMultiorderBonds();\n    const showAromatic = mode.showAromaticLoops();\n\n    const stickRad = mode.calcStickRadius();\n    const emptyOffset = mode.calcSpaceFraction();\n    let normDir;\n    const leftPos = new THREE.Vector3();\n    const rightPos = new THREE.Vector3();\n    let currBondIdx = 0;\n    const updateColor = frameData.needsColorUpdate(colorer);\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\n      const bond = bonds[bondsIdc[i]];\n      const atom1 = bond._left;\n      const atom2 = bond._right;\n      const a1Pos = frameData.getAtomPos(atom1.index).clone();\n      const a2Pos = frameData.getAtomPos(atom2.index);\n      normDir = bond.calcNormalDir();\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic);\n      const minRad = Math.min(mode.calcAtomRadius(atom1), mode.calcAtomRadius(atom2));\n      const dist = 2 * minRad / order;\n      const currStickRad = drawMultiple ? Math.min(stickRad, dist * 0.5 * (1.0 - emptyOffset)) : stickRad;\n\n      for (let j = 0; j < order; ++j) {\n        const scale = dist * (order % 2 === 0\n          ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\n          : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)));\n        leftPos.copy(a1Pos);\n        leftPos.addScaledVector(normDir, scale);\n        rightPos.copy(a2Pos);\n        rightPos.addScaledVector(normDir, scale);\n        geo.setItem(currBondIdx, leftPos, rightPos, currStickRad);\n        if (updateColor) {\n          geo.setColor(currBondIdx, frameData.getAtomColor(colorer, atom1), frameData.getAtomColor(colorer, atom2));\n        }\n        currBondIdx++;\n      }\n    }\n    geo.finalize();\n  }\n}\n\nexport default BondsCylinderGroup;\n","import RCGroup from '../../RCGroup';\n\nclass AtomsProcessor extends RCGroup {\n  constructor(AtomsGroup, geoParams, complex, colorer, mode, polyComplexity, mask, material) {\n    super();\n    const self = this;\n    this._complex = complex;\n    this._mode = mode;\n    const atoms = complex.getAtoms();\n    const transforms = complex.getTransforms();\n\n    complex.forEachComponent((component) => {\n      const atomsIdc = [];\n      let atomCount = 0;\n      component.forEachAtom((atom) => {\n        if (!self._checkAtom(atom, mask)) {\n          return;\n        }\n        atomsIdc[atomCount++] = atom.index;\n      });\n      if (atomCount === 0) {\n        return;\n      }\n      const atomsGroup = new AtomsGroup(geoParams, {\n        atoms,\n        chunks: atomsIdc,\n        parent: complex,\n      }, colorer, mode, transforms, polyComplexity, material);\n      atomsGroup._component = component;\n      self.add(atomsGroup);\n    });\n  }\n\n  _checkAtom(atom, mask) {\n    return atom.mask & mask;\n  }\n\n  getSubset(mask, innerOnly) {\n    const totalSubset = [];\n    const { children } = this;\n    let meshIdx = 0;\n    for (let i = 0, n = children.length; i < n; ++i) {\n      if (children[i].getSubset) {\n        const chSubset = children[i].getSubset(mask, innerOnly);\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\n          const subsetEl = chSubset[j];\n          subsetEl._component = children[i]._component;\n          totalSubset[meshIdx++] = subsetEl;\n        }\n      }\n    }\n    return totalSubset;\n  }\n}\n\nexport default AtomsProcessor;\n","import AtomsProcessor from './AtomsProcessor';\n\nclass OrphanAtomsProcessor extends AtomsProcessor {\n  _checkAtom(atom, mask) {\n    if (!(atom.mask & mask)) {\n      return false;\n    }\n\n    const { bonds } = atom;\n    for (let i = 0, n = bonds.length; i < n; ++i) {\n      if ((bonds[i]._left.mask & mask) && (bonds[i]._right.mask & mask)) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport default OrphanAtomsProcessor;\n","import RCGroup from '../../RCGroup';\n\nclass ResiduesProcessor extends RCGroup {\n  constructor(ResidueGroup, geoParams, complex, colorer, mode, polyComplexity, mask, material) {\n    super();\n    const self = this;\n    this._complex = complex;\n    const residues = complex.getResidues();\n    const transforms = complex.getTransforms();\n\n    complex.forEachComponent((component) => {\n      let chunksCount = 0;\n      const resIdc = [];\n      component.forEachResidue((residue) => {\n        if (self._checkResidue(residue, mask)) {\n          resIdc[chunksCount++] = residue._index;\n        }\n      });\n\n      if (chunksCount === 0) {\n        return;\n      }\n      const residuesGroup = new ResidueGroup(geoParams, {\n        residues,\n        chunks: resIdc,\n        parent: complex,\n      }, colorer, mode, transforms, polyComplexity, material);\n      residuesGroup._component = component;\n      self.add(residuesGroup);\n    });\n  }\n\n  checkResidue(residue, mask) {\n    return residue._mask & mask;\n  }\n\n  getSubset(mask, innerOnly) {\n    const totalSubset = [];\n    const { children } = this;\n    let meshIdx = 0;\n    for (let i = 0, n = children.length; i < n; ++i) {\n      if (children[i].getSubset) {\n        const chSubset = children[i].getSubset(mask, innerOnly);\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\n          const subsetEl = chSubset[j];\n          subsetEl._component = children[i]._component;\n          totalSubset[meshIdx++] = subsetEl;\n        }\n      }\n    }\n    return totalSubset;\n  }\n}\n\nexport default ResiduesProcessor;\n","import AtomsProcessor from './AtomsProcessor';\nimport OrphanAtomsProcessor from './OrphanAtomsProcessor';\nimport ResiduesProcessor from './ResiduesProcessor';\nimport NucleicProcessor from './NucleicProcessor';\nimport SubseqsProcessor from './SubseqsProcessor';\nimport BondsProcessor from './BondsProcessor';\nimport AromaticProcessor from './AromaticProcessor';\n\nexport default {\n  Atoms: AtomsProcessor,\n  OrphanAtoms: OrphanAtomsProcessor,\n  Residues: ResiduesProcessor,\n  Nucleic: NucleicProcessor,\n  Subseqs: SubseqsProcessor,\n  Bonds: BondsProcessor,\n  Aromatic: AromaticProcessor,\n};\n","import ResidueProcessor from './ResiduesProcessor';\n\nclass NucleicProcessor extends ResidueProcessor {\n  _checkResidue(residue, mask) {\n    return mask & residue._mask && residue._cylinders !== null;\n  }\n}\nexport default NucleicProcessor;\n","import RCGroup from '../../RCGroup';\n\nclass SubseqsProcessor extends RCGroup {\n  constructor(ResidueGroup, geoParams, complex, colorer, mode, polyComplexity, mask, material) {\n    super();\n    const self = this;\n    this._complex = complex;\n    const residues = complex.getResidues();\n    const transforms = complex.getTransforms();\n\n    complex.forEachComponent((component) => {\n      const subDivs = component.getMaskedSubdivSequences(mask);\n\n      let chunksCount = 0;\n      const resIdc = [];\n      for (let subDivI = 0, subDivN = subDivs.length; subDivI < subDivN; ++subDivI) {\n        const subs = subDivs[subDivI].arr;\n        for (let i = 0, n = subs.length; i < n; ++i) {\n          for (let j = subs[i].start, jEnd = subs[i].end; j <= jEnd; ++j) {\n            resIdc[chunksCount++] = residues[j]._index;\n          }\n        }\n      }\n\n      if (chunksCount === 0) {\n        return;\n      }\n      const residuesGroup = new ResidueGroup(geoParams, {\n        residues,\n        chunks: resIdc,\n        subdivs: subDivs,\n        parent: complex,\n      }, colorer, mode, transforms, polyComplexity, material);\n      residuesGroup._component = component;\n      self.add(residuesGroup);\n    });\n  }\n\n  getSubset(mask, innerOnly) {\n    const totalSubset = [];\n    const { children } = this;\n    let meshIdx = 0;\n    for (let i = 0, n = children.length; i < n; ++i) {\n      if (children[i].getSubset) {\n        const chSubset = children[i].getSubset(mask, innerOnly);\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\n          const subsetEl = chSubset[j];\n          subsetEl._component = children[i]._component;\n          totalSubset[meshIdx++] = subsetEl;\n        }\n      }\n    }\n    return totalSubset;\n  }\n}\n\nexport default SubseqsProcessor;\n","import RCGroup from '../../RCGroup';\n\nclass BondsProcessor extends RCGroup {\n  constructor(BondsGroup, geoParams, complex, colorer, mode, polyComplexity, mask, material) {\n    super();\n    const self = this;\n    this._complex = complex;\n    const bonds = complex.getBonds();\n    const transforms = complex.getTransforms();\n\n    complex.forEachComponent((component) => {\n      const bondsIdc = [];\n      let bondsCount = 0;\n      component.forEachBond((bond) => {\n        const atom1 = bond._left;\n        const atom2 = bond._right;\n        if (!(atom1.mask & mask) || !(atom2.mask & mask)) {\n          return;\n        }\n        bondsIdc[bondsCount++] = bond._index;\n      });\n      if (bondsCount === 0) {\n        return;\n      }\n      const bondsGroup = new BondsGroup(geoParams, {\n        bonds,\n        chunks: bondsIdc,\n        parent: complex,\n      }, colorer, mode, transforms, polyComplexity, material);\n      bondsGroup._component = component;\n      self.add(bondsGroup);\n    });\n  }\n\n  getSubset(mask, innerOnly) {\n    const totalSubset = [];\n    const { children } = this;\n    let meshIdx = 0;\n    for (let i = 0, n = children.length; i < n; ++i) {\n      if (children[i].getSubset) {\n        const chSubset = children[i].getSubset(mask, innerOnly);\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\n          const subsetEl = chSubset[j];\n          subsetEl._component = children[i]._component;\n          totalSubset[meshIdx++] = subsetEl;\n        }\n      }\n    }\n    return totalSubset;\n  }\n}\n\nexport default BondsProcessor;\n","import RCGroup from '../../RCGroup';\n\nclass AromaticProcessor extends RCGroup {\n  constructor(AromaticGroup, geoParams, complex, colorer, mode, polyComplexity, mask, material) {\n    super();\n    const self = this;\n    this._complex = complex;\n    const atoms = complex.getAtoms();\n    const transforms = complex.getTransforms();\n    if (!mode.showAromaticLoops()) {\n      return;\n    }\n\n    complex.forEachComponent((component) => {\n      const atomsIdc = [];\n      let chunksCount = 0;\n      const cycles = [];\n      let cycleIdx = 0;\n      component.forEachCycle((cycle) => {\n        const cycAtoms = cycle.atoms;\n        let perCycle = 0;\n        for (let i = 0, n = cycAtoms.length; i < n; ++i) {\n          if ((cycAtoms[i].mask & mask) !== 0) {\n            ++perCycle;\n            atomsIdc[chunksCount++] = cycAtoms[i].index;\n          }\n        }\n        if (perCycle > 0) {\n          cycles[cycleIdx++] = cycle;\n        }\n      });\n\n      const atomsGroup = new AromaticGroup(geoParams, {\n        cycles,\n        atoms,\n        chunks: atomsIdc,\n        parent: complex,\n      }, colorer, mode, transforms, polyComplexity, material);\n      atomsGroup._component = component;\n      self.add(atomsGroup);\n    });\n  }\n\n  getSubset(mask, innerOnly) {\n    const totalSubset = [];\n    const { children } = this;\n    let meshIdx = 0;\n    for (let i = 0, n = children.length; i < n; ++i) {\n      if (children[i].getSubset) {\n        const chSubset = children[i].getSubset(mask, innerOnly);\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\n          const subsetEl = chSubset[j];\n          subsetEl._component = children[i]._component;\n          totalSubset[meshIdx++] = subsetEl;\n        }\n      }\n    }\n    return totalSubset;\n  }\n}\n\nexport default AromaticProcessor;\n","import MeshCreator from '../../meshes/MeshCreator';\nimport groups from './groups';\nimport processors from '../processors/processors';\n\nfunction _bakeGroup(triplet, Processor, Group) {\n  return function (complex, colorer, mode, polyComplexity, mask, material) {\n    return new Processor(Group, triplet, complex, colorer, mode, polyComplexity, mask, material);\n  };\n}\n\nclass GroupsFactory {\n  static AtomsSpheres(caps, settings) {\n    const gfxTriplet = MeshCreator.createSpheres(caps, settings);\n\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSphereGroup);\n  }\n\n  static OrphanedAtomsCrosses(caps, settings, renderParams) {\n    const gfxTriplet = MeshCreator.createCrosses(caps, settings, renderParams);\n\n    return _bakeGroup(gfxTriplet, processors.OrphanAtoms, groups.AtomsSphereGroup);\n  }\n\n  static BondsCylinders(caps, settings) {\n    const gfxTriplet = MeshCreator.create2CCylinders(caps, settings);\n\n    return _bakeGroup(gfxTriplet, processors.Bonds, groups.BondsCylinderGroup);\n  }\n\n  static BondsLines(caps, settings, renderParams) {\n    const gfxTriplet = MeshCreator.create2CLines(caps, settings, renderParams);\n\n    return _bakeGroup(gfxTriplet, processors.Bonds, groups.BondsLinesGroup);\n  }\n\n  static CartoonChains(caps, settings) {\n    const gfxTriplet = MeshCreator.createExtrudedChains(caps, settings);\n\n    return _bakeGroup(gfxTriplet, processors.Subseqs, groups.ResiduesSubseqGroup);\n  }\n\n  static TraceChains(caps, settings) {\n    const gfxTriplet = MeshCreator.create2CClosedCylinders(caps, settings);\n\n    return _bakeGroup(gfxTriplet, processors.Subseqs, groups.ResiduesTraceGroup);\n  }\n\n  static NucleicSpheres(caps, settings) {\n    const gfxTriplet = MeshCreator.createSpheres(caps, settings);\n\n    return _bakeGroup(gfxTriplet, processors.Nucleic, groups.NucleicSpheresGroup);\n  }\n\n  static NucleicCylinders(caps, settings) {\n    const gfxTriplet = MeshCreator.create2CCylinders(caps, settings);\n\n    return _bakeGroup(gfxTriplet, processors.Nucleic, groups.NucleicCylindersGroup);\n  }\n\n  static ALoopsTorus(caps, settings) {\n    const gfxTriplet = MeshCreator.createExtrudedChains(caps, settings);\n\n    return _bakeGroup(gfxTriplet, processors.Aromatic, groups.AromaticTorusGroup);\n  }\n\n  static ALoopsLines(caps, settings, renderParams) {\n    const gfxTriplet = MeshCreator.createChunkedLines(caps, settings, renderParams);\n\n    return _bakeGroup(gfxTriplet, processors.Aromatic, groups.AromaticLinesGroup);\n  }\n\n  static QuickSurfGeo(caps, settings, renderParams) {\n    const gfxTriplet = MeshCreator.createQuickSurface(caps, settings, renderParams);\n\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSurfaceGroup);\n  }\n\n  static ContactSurfaceGeo(caps, settings, renderParams) {\n    const gfxTriplet = MeshCreator.createContactSurface(caps, settings, renderParams);\n\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSurfaceGroup);\n  }\n\n  static SASSESSurfaceGeo(caps, settings, renderParams) {\n    const gfxTriplet = MeshCreator.createSASSES(caps, settings, renderParams);\n\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSASSESGroupStub);\n  }\n\n  static TextLabelsGeo(caps, settings) {\n    const gfxTriplet = MeshCreator.createLabels(caps, settings);\n\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsTextGroup);\n  }\n}\n\nexport default GroupsFactory;\n","import _ from 'lodash';\nimport makeContextDependent from '../../utils/makeContextDependent';\nimport utils from '../../utils';\nimport gfxutils from '../gfxutils';\nimport factory from './groups/GroupsFactory';\n\n/**\n * Create new mode.\n *\n * @param {object=} opts - Options to override defaults with.\n *\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\n *   changes to the `opts` object. However, changes in defaults **will** affect the mode after its creation.\n *\n * @exports Mode\n * @this Mode\n * @abstract\n * @constructor\n * @classdesc Basic class for all available modes used for building and displaying molecule geometry.\n */\nclass Mode {\n  constructor(opts) {\n    if (this.constructor === Mode) {\n      throw new Error('Can not instantiate abstract class!');\n    }\n    /**\n     * Mode options inherited (prototyped) from defaults.\n     * @type {object}\n     */\n    this.opts = _.merge(utils.deriveDeep(this.settings.now.modes[this.id], true), opts);\n  }\n\n  /**\n   * Get mode identification, probably with options.\n   * @returns {string|Array} Mode identifier string ({@link Mode#id}) or two-element array containing both mode\n   *   identifier and options ({@link Mode#opts}).\n   * Options are returned if they were changed during or after the mode creation.\n   */\n  identify() {\n    const diff = utils.objectsDiff(this.opts, this.settings.now.modes[this.id]);\n    if (!_.isEmpty(diff)) {\n      return [this.id, diff];\n    }\n    return this.id;\n  }\n\n  buildGeometry(complex, colorer, mask, material) {\n    const polyComplexity = this.opts.polyComplexity ? this.opts.polyComplexity[this.settings.now.resolution] : 0;\n    const groupList = this.depGroups;\n    const groupCount = groupList.length;\n    const group = new gfxutils.RCGroup();\n    const self = this;\n    for (let i = 0; i < groupCount; ++i) {\n      let currGroup = groupList[i];\n      let renderParams = {};\n      if (_.isArray(currGroup)) {\n        renderParams = currGroup[1].call(this);\n        [currGroup] = currGroup;\n      }\n      const Group = factory[currGroup](null, this.settings, renderParams);\n      const newGroup = new Group(complex, colorer, self, polyComplexity, mask, material);\n      if (newGroup.children.length > 0) {\n        group.add(newGroup);\n      }\n    }\n    return group;\n  }\n}\n\nmakeContextDependent(Mode.prototype);\n\n/**\n* Mode identifier.\n* @type {string}\n*/\nMode.prototype.id = '__';\n\n/**\n * Mode geo groups.\n * @type {Array}\n */\nMode.prototype.depGroups = [];\n\nexport default Mode;\n","import Mode from './Mode';\n\nfunction getRenderParams() {\n  return {\n    lineWidth: this.opts.lineWidth,\n  };\n}\n\nclass LinesMode extends Mode {\n  static id = 'LN';\n\n  constructor(opts) {\n    super(opts);\n    this.depGroups = this.depGroups.slice(0); // clone depGroups to prevent prototype edits\n    const groups = this.depGroups;\n    for (let i = 0, n = groups.length; i < n; ++i) {\n      groups[i] = [groups[i], getRenderParams];\n    }\n  }\n\n  drawMultiorderBonds() {\n    return this.opts.multibond;\n  }\n\n  calcAtomRadius() {\n    return this.opts.atom;\n  }\n\n  getAromaticOffset() {\n    return this.opts.offsarom;\n  }\n\n  getAromaticArcChunks() {\n    return this.opts.chunkarom;\n  }\n\n  showAromaticLoops() {\n    return this.opts.showarom;\n  }\n}\n\nLinesMode.prototype.id = 'LN';\nLinesMode.prototype.name = 'Lines';\nLinesMode.prototype.shortName = 'Lines';\nLinesMode.prototype.depGroups = [\n  'ALoopsLines',\n  'BondsLines',\n  'OrphanedAtomsCrosses',\n];\n\nexport default LinesMode;\n","/* eslint-disable no-magic-numbers */\nimport Mode from './Mode';\n\nclass LicoriceMode extends Mode {\n  static id = 'LC';\n\n  calcAtomRadius(_atom) {\n    return this.opts.bond;\n  }\n\n  calcStickRadius() {\n    return this.opts.bond;\n  }\n\n  calcSpaceFraction() {\n    return this.opts.space;\n  }\n\n  getAromRadius() {\n    return this.opts.aromrad;\n  }\n\n  showAromaticLoops() {\n    return this.opts.showarom;\n  }\n\n  drawMultiorderBonds() {\n    return this.opts.multibond;\n  }\n}\n\nLicoriceMode.prototype.id = 'LC';\nLicoriceMode.prototype.name = 'Licorice';\nLicoriceMode.prototype.shortName = 'Licorice';\nLicoriceMode.prototype.depGroups = [\n  'AtomsSpheres',\n  'BondsCylinders',\n  'ALoopsTorus',\n];\n\nexport default LicoriceMode;\n","/* eslint-disable no-magic-numbers */\nimport Mode from './Mode';\n\nclass BallsAndSticksMode extends Mode {\n  static id = 'BS';\n\n  calcAtomRadius(atom) {\n    return atom.element.radius * this.opts.atom;\n  }\n\n  calcStickRadius() {\n    return this.opts.bond;\n  }\n\n  getAromRadius() {\n    return this.opts.aromrad;\n  }\n\n  showAromaticLoops() {\n    return this.opts.showarom;\n  }\n\n  calcSpaceFraction() {\n    return this.opts.space;\n  }\n\n  drawMultiorderBonds() {\n    return this.opts.multibond;\n  }\n}\n\nBallsAndSticksMode.prototype.id = 'BS';\nBallsAndSticksMode.prototype.name = 'Balls and Sticks';\nBallsAndSticksMode.prototype.shortName = 'Balls';\nBallsAndSticksMode.prototype.depGroups = [\n  'AtomsSpheres',\n  'BondsCylinders',\n  'ALoopsTorus',\n];\n\nexport default BallsAndSticksMode;\n","import Mode from './Mode';\n\nclass VanDerWaalsMode extends Mode {\n  static id = 'VW';\n\n  calcAtomRadius(atom) {\n    return atom.element.radius;\n  }\n}\n\nVanDerWaalsMode.prototype.id = 'VW';\nVanDerWaalsMode.prototype.name = 'Van der Waals';\nVanDerWaalsMode.prototype.shortName = 'VDW';\nVanDerWaalsMode.prototype.depGroups = ['AtomsSpheres'];\n\nexport default VanDerWaalsMode;\n","import Mode from './Mode';\n\nclass TraceMode extends Mode {\n  static id = 'TR';\n\n  calcStickRadius() {\n    return this.opts.radius;\n  }\n}\n\nTraceMode.prototype.id = 'TR';\nTraceMode.prototype.name = 'Trace';\nTraceMode.prototype.shortName = 'Trace';\nTraceMode.prototype.depGroups = ['TraceChains'];\n\nexport default TraceMode;\n","import * as THREE from 'three';\nimport Mode from './Mode';\n\nclass TubeMode extends Mode {\n  static id = 'TU';\n\n  getResidueRadius(_residue) {\n    return this.TUBE_RADIUS;\n  }\n\n  getHeightSegmentsRatio() {\n    return this.opts.heightSegmentsRatio;\n  }\n\n  getTension() {\n    return this.opts.tension;\n  }\n\n  buildGeometry(complex, colorer, mask, material) {\n    const rad = this.opts.radius;\n    this.TUBE_RADIUS = new THREE.Vector2(rad, rad);\n\n    return Mode.prototype.buildGeometry.call(this, complex, colorer, mask, material);\n  }\n}\n\nTubeMode.prototype.id = 'TU';\nTubeMode.prototype.name = 'Tube';\nTubeMode.prototype.shortName = 'Tube';\nTubeMode.prototype.depGroups = ['CartoonChains'];\n\nexport default TubeMode;\n","import * as THREE from 'three';\nimport Mode from './Mode';\n\nclass CartoonMode extends Mode {\n  static id = 'CA';\n\n  constructor(opts) {\n    super(opts);\n    // cache for secondary structure options\n    this.secCache = {};\n  }\n\n  getResidueStartRadius(residue) {\n    const second = residue.getSecondary();\n    if (!second || !second.generic) {\n      return this.TUBE_RADIUS;\n    }\n    const secOpts = this.secCache[second.generic];\n    if (!secOpts) {\n      return this.TUBE_RADIUS;\n    }\n    if (second.term === residue) {\n      return secOpts.start;\n    }\n    return secOpts.center;\n  }\n\n  getResidueEndRadius(residue) {\n    const second = residue.getSecondary();\n    if (second === null || !second.generic) {\n      return this.TUBE_RADIUS;\n    }\n    const secOpts = this.secCache[second.generic];\n    if (!secOpts) {\n      return this.TUBE_RADIUS;\n    }\n    if (second.term === residue) {\n      return this.ARROW_END;\n    }\n    return secOpts.center;\n  }\n\n  getResidueRadius(residue, val) {\n    const startRad = this.getResidueStartRadius(residue);\n    if (val === 0) {\n      return startRad;\n    }\n\n    const endRad = this.getResidueEndRadius(residue);\n    if (val === 2) {\n      return endRad;\n    }\n\n    return startRad.clone().lerp(endRad, val / 2.0);\n  }\n\n  calcStickRadius(_res) {\n    return this.opts.radius;\n  }\n\n  getHeightSegmentsRatio() {\n    return this.opts.heightSegmentsRatio;\n  }\n\n  getTension() {\n    return this.opts.tension;\n  }\n\n  buildGeometry(complex, colorer, mask, material) {\n    const tubeRad = this.opts.radius;\n    const secHeight = this.opts.depth;\n\n    this.TUBE_RADIUS = new THREE.Vector2(tubeRad, tubeRad);\n    this.ARROW_END = new THREE.Vector2(secHeight, tubeRad);\n    const secCache = {};\n    const secData = this.opts.ss;\n    /* eslint-disable guard-for-in */\n    for (const prop in secData) {\n      secCache[prop] = {\n        center: new THREE.Vector2(secHeight, secData[prop].width),\n        start: new THREE.Vector2(secHeight, secData[prop].arrow),\n      };\n    }\n    this.secCache = secCache;\n    /* eslint-enable guard-for-in */\n\n    return Mode.prototype.buildGeometry.call(this, complex, colorer, mask, material);\n  }\n}\n\nCartoonMode.prototype.id = 'CA';\nCartoonMode.prototype.name = 'Cartoon';\nCartoonMode.prototype.shortName = 'Cartoon';\nCartoonMode.prototype.depGroups = [\n  'CartoonChains',\n  'NucleicSpheres',\n  'NucleicCylinders',\n];\n\nexport default CartoonMode;\n","import chem from '../../chem';\nimport Mode from './Mode';\n\nconst { selectors } = chem;\n\nfunction getRenderParams() {\n  return {\n    wireframe: this.opts.wireframe,\n    zClip: this.opts.zClip,\n  };\n}\n\nclass SurfaceMode extends Mode {\n  constructor(opts) {\n    super(opts);\n    this.depGroups = this.depGroups.slice(0); // clone depGroups to prevent prototype edits\n    const surfaces = this.surfaceNames;\n    const groups = this.depGroups;\n    for (let i = 0, n = surfaces.length; i < n; ++i) {\n      groups[groups.length] = [surfaces[i], getRenderParams];\n    }\n  }\n\n  calcAtomRadius(atom) {\n    return atom.element.radius;\n  }\n\n  getVisibilitySelector() {\n    let visibilitySelector = null;\n    if (this.opts.subset !== '') {\n      const res = selectors.parse(this.opts.subset);\n      if (!res.error) {\n        visibilitySelector = res.selector;\n      }\n    }\n    return visibilitySelector;\n  }\n}\n\nSurfaceMode.prototype.isSurface = true;\nSurfaceMode.prototype.surfaceNames = [];\n\nexport default SurfaceMode;\n","import SurfaceMode from './SurfaceMode';\n\nclass QuickSurfaceMode extends SurfaceMode {\n  static id = 'QS';\n\n  getSurfaceOpts() {\n    return {\n      useBeads: false,\n      isoValue: this.opts.isoValue,\n      gaussLim: this.opts.gaussLim[this.settings.now.resolution],\n      radScale: this.opts.scale,\n      gridSpacing: this.opts.gridSpacing[this.settings.now.resolution],\n      zClip: this.opts.zClip,\n      visibilitySelector: this.getVisibilitySelector(),\n    };\n  }\n}\n\nQuickSurfaceMode.prototype.id = 'QS';\nQuickSurfaceMode.prototype.name = 'Quick Surface';\nQuickSurfaceMode.prototype.shortName = 'Quick Surf';\nQuickSurfaceMode.prototype.surfaceNames = ['QuickSurfGeo'];\n\nexport default QuickSurfaceMode;\n","import SurfaceMode from './SurfaceMode';\n\nclass IsoSurfaceMode extends SurfaceMode {\n  constructor(excludeProbe, opts) {\n    super(opts);\n    this._excludeProbe = excludeProbe;\n  }\n\n  calcAtomRadius(atom) {\n    return atom.element.radius;\n  }\n\n  getSurfaceOpts() {\n    return {\n      gridSpacing: this.opts.polyComplexity[this.settings.now.resolution],\n      radScale: this._radScale,\n      zClip: this.opts.zClip,\n      visibilitySelector: this.getVisibilitySelector(),\n      probeRadius: this.opts.probeRadius,\n      excludeProbe: this._excludeProbe,\n    };\n  }\n}\n\nIsoSurfaceMode.prototype.id = 'SU';\nIsoSurfaceMode.prototype.name = 'Surface';\nIsoSurfaceMode.prototype.shortName = 'Surface';\nIsoSurfaceMode.prototype.surfaceNames = ['SASSESSurfaceGeo'];\n\nIsoSurfaceMode.prototype._radScale = 1;\nIsoSurfaceMode.prototype._excludeProbe = false;\n\nexport default IsoSurfaceMode;\n","import IsoSurfaceMode from './IsoSurfaceMode';\n\nclass IsoSurfaceSASMode extends IsoSurfaceMode {\n  static id = 'SA';\n\n  constructor(opts) {\n    super(false, opts);\n  }\n}\n\nIsoSurfaceSASMode.prototype.id = 'SA';\nIsoSurfaceSASMode.prototype.name = 'Solvent Accessible Surface';\nIsoSurfaceSASMode.prototype.shortName = 'SAS';\n\nexport default IsoSurfaceSASMode;\n","import IsoSurfaceMode from './IsoSurfaceMode';\n\nclass IsoSurfaceSESMode extends IsoSurfaceMode {\n  static id = 'SE';\n\n  constructor(opts) {\n    super(true, opts);\n  }\n}\n\nIsoSurfaceSESMode.prototype.id = 'SE';\nIsoSurfaceSESMode.prototype.name = 'Solvent Excluded Surface';\nIsoSurfaceSESMode.prototype.shortName = 'SES';\n\nexport default IsoSurfaceSESMode;\n","import SurfaceMode from './SurfaceMode';\n\nclass ContactSurfaceMode extends SurfaceMode {\n  static id = 'CS';\n\n  getSurfaceOpts() {\n    return {\n      probeRadius: this.opts.probeRadius,\n      radScale: this.opts.polyComplexity[this.settings.now.resolution],\n      scaleFactor: this.opts.polyComplexity[this.settings.now.resolution],\n      gridSpacing: 1.0 / this.opts.polyComplexity[this.settings.now.resolution],\n      isoValue: this.opts.isoValue,\n      probePositions: this.opts.probePositions,\n      zClip: this.opts.zClip,\n      visibilitySelector: this.getVisibilitySelector(),\n    };\n  }\n}\n\nContactSurfaceMode.prototype.id = 'CS';\nContactSurfaceMode.prototype.name = 'Contact Surface';\nContactSurfaceMode.prototype.shortName = 'Contact Surf';\nContactSurfaceMode.prototype.isSurface = true;\nContactSurfaceMode.prototype.surfaceNames = ['ContactSurfaceGeo'];\n\nexport default ContactSurfaceMode;\n","import _ from 'lodash';\nimport Mode from './Mode';\n\nclass TextMode extends Mode {\n  static id = 'TX';\n\n  getTemplateOptions() {\n    return this.opts.template;\n  }\n\n  getLabelOpts() {\n    return _.merge(this.opts, {\n      colors: true,\n      adjustColor: true,\n      transparent: true,\n    });\n  }\n}\n\nTextMode.prototype.id = 'TX';\nTextMode.prototype.name = 'Text mode';\nTextMode.prototype.shortName = 'Text';\nTextMode.prototype.depGroups = ['TextLabelsGeo'];\n\nexport default TextMode;\n","import EntityList from '../utils/EntityList';\n\nimport LinesMode from './modes/LinesMode';\nimport LicoriceMode from './modes/LicoriceMode';\nimport BallsAndSticksMode from './modes/BallsAndSticksMode';\nimport VanDerWaalsMode from './modes/VanDerWaalsMode';\nimport TraceMode from './modes/TraceMode';\nimport TubeMode from './modes/TubeMode';\nimport CartoonMode from './modes/CartoonMode';\nimport QuickSurfaceMode from './modes/QuickSurfaceMode';\nimport IsoSurfaceSASMode from './modes/IsoSurfaceSASMode';\nimport IsoSurfaceSESMode from './modes/IsoSurfaceSESMode';\nimport ContactSurfaceMode from './modes/ContactSurfaceMode';\nimport TextMode from './modes/TextMode';\n\nconst modes = new EntityList([\n  LinesMode,\n  LicoriceMode,\n  BallsAndSticksMode,\n  VanDerWaalsMode,\n  TraceMode,\n  TubeMode,\n  CartoonMode,\n  QuickSurfaceMode,\n  IsoSurfaceSASMode,\n  IsoSurfaceSESMode,\n  ContactSurfaceMode,\n  TextMode,\n]);\n\nexport default modes;\n","import _ from 'lodash';\n\nfunction clamp(x, a, b) {\n  return x <= b ? x < 0 ? 0 : x : b;\n}\n\nfunction lerpColor(c1, c2, alpha) {\n  const beta = 1 - alpha;\n  const r1 = (c1 >> 16) & 0xff;\n  const g1 = (c1 >> 8) & 0xff;\n  const b1 = c1 & 0xff;\n  const r2 = (c2 >> 16) & 0xff;\n  const g2 = (c2 >> 8) & 0xff;\n  const b2 = c2 & 0xff;\n  const r = beta * r1 + alpha * r2;\n  const g = beta * g1 + alpha * g2;\n  const b = beta * b1 + alpha * b2;\n  return (r << 16) | (g << 8) | b;\n}\n\nclass Palette {\n  constructor(name, id) {\n    this.name = name || 'Custom';\n    this.id = id || 'CP';\n  }\n\n  getElementColor(name, asIs = false) {\n    const color = this.elementColors[name];\n    return color === undefined && !asIs ? this.defaultElementColor : color;\n  }\n\n  getResidueColor(name, asIs = false) {\n    const color = this.residueColors[name];\n    return color === undefined && !asIs ? this.defaultResidueColor : color;\n  }\n\n  getChainColor(name) {\n    let chain = name.charCodeAt(0);\n    chain = ((chain < 0 ? 0 : chain >= 256 ? chain - 256 : chain) & 0x1F)\n      % this.chainColors.length;\n    return this.chainColors[chain];\n  }\n\n  getSecondaryColor(type, asIs = false) {\n    const color = this.secondaryColors[type];\n    return color === undefined && !asIs ? this.defaultSecondaryColor : color;\n  }\n\n  getSequentialColor(index) {\n    const { colors } = this;\n    const len = colors.length;\n    return index < 0 ? colors[(index % len) + len] : colors[index % len];\n  }\n\n  getGradientColor(value, gradientName) {\n    const gradient = this.gradients[gradientName];\n    if (!gradient) {\n      return this.defaultNamedColor;\n    }\n    const count = gradient.length;\n    const index = value * (count - 1);\n    let left = Math.floor(index);\n    const right = clamp(left + 1, 0, count - 1);\n    left = clamp(left, 0, count - 1);\n    return lerpColor(gradient[left], gradient[right], index - left);\n  }\n\n  getNamedColor(name, asIs = false) {\n    const color = this.namedColors[name];\n    return color === undefined && !asIs ? this.defaultNamedColor : color;\n  }\n}\n\n_.assign(Palette.prototype, {\n  colors: [0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0x808080],\n\n  minRangeColor: 0x000000,\n  midRangeColor: 0x7F7F7F,\n  maxRangeColor: 0xFFFFFF,\n\n  defaultElementColor: 0xFFFFFF,\n  elementColors: {},\n\n  defaultResidueColor: 0xFFFFFF,\n  residueColors: {},\n\n  chainColors: [0xFFFFFF],\n\n  defaultSecondaryColor: 0xFFFFFF,\n  secondaryColors: {},\n\n  defaultGradientColor: 0x000000,\n\n  defaultNamedColor: 0xFFFFFF,\n  namedColorsArray: [\n    /* eslint-disable no-multi-spaces */\n    ['indianred',               0xcd5c5c],\n    ['lightcoral',              0xf08080],\n    ['salmon',                  0xfa8072],\n    ['darksalmon',              0xe9967a],\n    ['lightsalmon',             0xffa07a],\n    ['crimson',                 0xdc143c],\n    ['red',                     0xff0000],\n    ['firebrick',               0xb22222],\n    ['darkred',                 0x8b0000],\n    ['pink',                    0xffc0cb],\n    ['lightpink',               0xffb6c1],\n    ['hotpink',                 0xff69b4],\n    ['deeppink',                0xff1493],\n    ['mediumvioletred',         0xc71585],\n    ['palevioletred',           0xdb7093],\n    ['coral',                   0xff7f50],\n    ['tomato',                  0xff6347],\n    ['orangered',               0xff4500],\n    ['darkorange',              0xff8c00],\n    ['orange',                  0xffa500],\n    ['gold',                    0xffd700],\n    ['yellow',                  0xffff00],\n    ['lightyellow',             0xffffe0],\n    ['lemonchiffon',            0xfffacd],\n    ['lightgoldenrodyellow',    0xfafad2],\n    ['papayawhip',              0xffefd5],\n    ['moccasin',                0xffe4b5],\n    ['peachpuff',               0xffdab9],\n    ['palegoldenrod',           0xeee8aa],\n    ['khaki',                   0xf0e68c],\n    ['darkkhaki',               0xbdb76b],\n    ['lavender',                0xe6e6fa],\n    ['thistle',                 0xd8bfd8],\n    ['plum',                    0xdda0dd],\n    ['violet',                  0xee82ee],\n    ['orchid',                  0xda70d6],\n    ['fuchsia',                 0xff00ff],\n    ['magenta',                 0xff00ff],\n    ['mediumorchid',            0xba55d3],\n    ['mediumpurple',            0x9370db],\n    ['rebeccapurple',           0x663399],\n    ['blueviolet',              0x8a2be2],\n    ['darkviolet',              0x9400d3],\n    ['darkorchid',              0x9932cc],\n    ['darkmagenta',             0x8b008b],\n    ['purple',                  0x800080],\n    ['indigo',                  0x4b0082],\n    ['slateblue',               0x6a5acd],\n    ['mediumslateblue',         0x7b68ee],\n    ['darkslateblue',           0x483d8b],\n    ['greenyellow',             0xadff2f],\n    ['chartreuse',              0x7fff00],\n    ['lawngreen',               0x7cfc00],\n    ['lime',                    0x00ff00],\n    ['limegreen',               0x32cd32],\n    ['palegreen',               0x98fb98],\n    ['lightgreen',              0x90ee90],\n    ['mediumspringgreen',       0x00fa9a],\n    ['springgreen',             0x00ff7f],\n    ['mediumseagreen',          0x3cb371],\n    ['seagreen',                0x2e8b57],\n    ['forestgreen',             0x228b22],\n    ['green',                   0x008000],\n    ['darkgreen',               0x006400],\n    ['yellowgreen',             0x9acd32],\n    ['olivedrab',               0x6b8e23],\n    ['olive',                   0x808000],\n    ['darkolivegreen',          0x556b2f],\n    ['mediumaquamarine',        0x66cdaa],\n    ['darkseagreen',            0x8fbc8f],\n    ['lightseagreen',           0x20b2aa],\n    ['darkcyan',                0x008b8b],\n    ['teal',                    0x008080],\n    ['aqua',                    0x00ffff],\n    ['cyan',                    0x00ffff],\n    ['lightcyan',               0xe0ffff],\n    ['paleturquoise',           0xafeeee],\n    ['aquamarine',              0x7fffd4],\n    ['turquoise',               0x40e0d0],\n    ['mediumturquoise',         0x48d1cc],\n    ['darkturquoise',           0x00ced1],\n    ['cadetblue',               0x5f9ea0],\n    ['steelblue',               0x4682b4],\n    ['lightsteelblue',          0xb0c4de],\n    ['powderblue',              0xb0e0e6],\n    ['lightblue',               0xadd8e6],\n    ['skyblue',                 0x87ceeb],\n    ['lightskyblue',            0x87cefa],\n    ['deepskyblue',             0x00bfff],\n    ['dodgerblue',              0x1e90ff],\n    ['cornflowerblue',          0x6495ed],\n    ['royalblue',               0x4169e1],\n    ['blue',                    0x0000ff],\n    ['mediumblue',              0x0000cd],\n    ['darkblue',                0x00008b],\n    ['navy',                    0x000080],\n    ['midnightblue',            0x191970],\n    ['cornsilk',                0xfff8dc],\n    ['blanchedalmond',          0xffebcd],\n    ['bisque',                  0xffe4c4],\n    ['navajowhite',             0xffdead],\n    ['wheat',                   0xf5deb3],\n    ['burlywood',               0xdeb887],\n    ['tan',                     0xd2b48c],\n    ['rosybrown',               0xbc8f8f],\n    ['sandybrown',              0xf4a460],\n    ['goldenrod',               0xdaa520],\n    ['darkgoldenrod',           0xb8860b],\n    ['peru',                    0xcd853f],\n    ['chocolate',               0xd2691e],\n    ['saddlebrown',             0x8b4513],\n    ['sienna',                  0xa0522d],\n    ['brown',                   0xa52a2a],\n    ['maroon',                  0x800000],\n    ['white',                   0xffffff],\n    ['snow',                    0xfffafa],\n    ['honeydew',                0xf0fff0],\n    ['mintcream',               0xf5fffa],\n    ['azure',                   0xf0ffff],\n    ['aliceblue',               0xf0f8ff],\n    ['ghostwhite',              0xf8f8ff],\n    ['whitesmoke',              0xf5f5f5],\n    ['seashell',                0xfff5ee],\n    ['beige',                   0xf5f5dc],\n    ['oldlace',                 0xfdf5e6],\n    ['floralwhite',             0xfffaf0],\n    ['ivory',                   0xfffff0],\n    ['antiquewhite',            0xfaebd7],\n    ['linen',                   0xfaf0e6],\n    ['lavenderblush',           0xfff0f5],\n    ['mistyrose',               0xffe4e1],\n    ['gainsboro',               0xdcdcdc],\n    ['lightgray',               0xd3d3d3],\n    ['silver',                  0xc0c0c0],\n    ['darkgray',                0xa9a9a9],\n    ['gray',                    0x808080],\n    ['dimgray',                 0x696969],\n    ['lightslategray',          0x778899],\n    ['slategray',               0x708090],\n    ['darkslategray',           0x2f4f4f],\n    ['black',                   0x000000],\n    /* eslint-enable no-multi-spaces */\n  ],\n\n  namedColors: {},\n  /* eslint-enable no-magic-numbers */\n\n  gradients: {\n    rainbow: [\n      0x0000ff, // blue\n      0x00ffff, // cyan\n      0x00ff00, // green\n      0xffff00, // yellow\n      0xff0000, // red\n    ],\n    temp: [\n      0x0000ff, // blue\n      0x007fff, // light-blue\n      0xffffff, // white\n      0xff7f00, // orange\n      0xff0000, // red\n    ],\n    hot: [\n      0xffffff, // white\n      0xff7f00, // orange\n      0xff0000, // red\n    ],\n    cold: [\n      0xffffff, // white\n      0x007fff, // light-blue\n      0x0000ff, // blue\n    ],\n    'blue-red': [\n      0x0000ff, // blue\n      0xffffff, // white\n      0xff0000, // red\n    ],\n    reds: [\n      0xffffff, // white\n      0xff0000, // red\n    ],\n    blues: [\n      0xffffff, // white\n      0x0000ff, // blue\n    ],\n  },\n});\n\nconst { namedColorsArray, namedColors } = Palette.prototype;\n\nfor (let i = 0, { length } = namedColorsArray; i < length; ++i) {\n  const [name, value] = namedColorsArray[i];\n  namedColors[name] = value;\n}\n\nexport default Palette;\n","import Palette from './Palette';\n\nconst palette = new Palette('CPK', 'CP');\n\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\npalette.elementColors = {\n  /* eslint-disable no-magic-numbers */\n  H: 0xFFFFFF,\n  C: 0x202020,\n  N: 0x2060FF,\n  O: 0xEE2010,\n  F: 0x00FF00,\n  P: 0x8020FF,\n  S: 0xFFFF00,\n  CL: 0x00BB00,\n  FE: 0xD0D0D0,\n  CO: 0xD0D0D0,\n  NI: 0xD0D0D0,\n  CU: 0xD0D0D0,\n  BR: 0x008800,\n  I: 0x005500,\n  /* eslint-enable no-magic-numbers */\n};\n\nexport default palette;\n","import Palette from './Palette';\nimport StructuralElement from '../../chem/StructuralElement';\n\nconst palette = new Palette('Jmol', 'JM');\n\npalette.colors = [\n  /* eslint-disable no-magic-numbers */\n  0x0000FF, // blue\n  0x0055FF, //\n  0x00ABFF, //\n  0x00FFFF, // cyan\n  0x00FFAB, //\n  0x00FF55, //\n  0x00FF00, // green\n  0x55FF00, //\n  0xABFF00, //\n  0xFFFF00, // yellow\n  0xFFAB00, //\n  0xFF5500, //\n  0xFF0000, // red\n  0xFF0055, //\n  0xFF00AB, //\n  0xFF00FF, // magenta\n  0xAB00FF, //\n  0x5500FF, //\n  /* eslint-enable no-magic-numbers */\n];\n\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\npalette.elementColors = {\n  /* eslint-disable no-magic-numbers */\n  H: 0xFFFFFF,\n  D: 0xFFFFC0,\n  T: 0xFFFFA0,\n  HE: 0xD9FFFF,\n  LI: 0xCC80FF,\n  BE: 0xC2FF00,\n  B: 0xFFB5B5,\n  C: 0x909090,\n  N: 0x3050F8,\n  O: 0xFF0D0D,\n  F: 0x90E050,\n  NE: 0xB3E3F5,\n  NA: 0xAB5CF2,\n  MG: 0x8AFF00,\n  AL: 0xBFA6A6,\n  SI: 0xF0C8A0,\n  P: 0xFF8000,\n  S: 0xFFFF30,\n  CL: 0x1FF01F,\n  AR: 0x80D1E3,\n  K: 0x8F40D4,\n  CA: 0x3DFF00,\n  SC: 0xE6E6E6,\n  TI: 0xBFC2C7,\n  V: 0xA6A6AB,\n  CR: 0x8A99C7,\n  MN: 0x9C7AC7,\n  FE: 0xE06633,\n  CO: 0xF090A0,\n  NI: 0x50D050,\n  CU: 0xC88033,\n  ZN: 0x7D80B0,\n  GA: 0xC28F8F,\n  GE: 0x668F8F,\n  AS: 0xBD80E3,\n  SE: 0xFFA100,\n  BR: 0xA62929,\n  KR: 0x5CB8D1,\n  RB: 0x702EB0,\n  SR: 0x00FF00,\n  Y: 0x94FFFF,\n  ZR: 0x94E0E0,\n  NB: 0x73C2C9,\n  MO: 0x54B5B5,\n  TC: 0x3B9E9E,\n  RU: 0x248F8F,\n  RH: 0x0A7D8C,\n  PD: 0x006985,\n  AG: 0xC0C0C0,\n  CD: 0xFFD98F,\n  IN: 0xA67573,\n  SN: 0x668080,\n  SB: 0x9E63B5,\n  TE: 0xD47A00,\n  I: 0x940094,\n  XE: 0x429EB0,\n  CS: 0x57178F,\n  BA: 0x00C900,\n  LA: 0x70D4FF,\n  CE: 0xFFFFC7,\n  PR: 0xD9FFC7,\n  ND: 0xC7FFC7,\n  PM: 0xA3FFC7,\n  SM: 0x8FFFC7,\n  EU: 0x61FFC7,\n  GD: 0x45FFC7,\n  TB: 0x30FFC7,\n  DY: 0x1FFFC7,\n  HO: 0x00FF9C,\n  ER: 0x00E675,\n  TM: 0x00D452,\n  YB: 0x00BF38,\n  LU: 0x00AB24,\n  HF: 0x4DC2FF,\n  TA: 0x4DA6FF,\n  W: 0x2194D6,\n  RE: 0x267DAB,\n  OS: 0x266696,\n  IR: 0x175487,\n  PT: 0xD0D0E0,\n  AU: 0xFFD123,\n  HG: 0xB8B8D0,\n  TL: 0xA6544D,\n  PB: 0x575961,\n  BI: 0x9E4FB5,\n  PO: 0xAB5C00,\n  AT: 0x754F45,\n  RN: 0x428296,\n  FR: 0x420066,\n  RA: 0x007D00,\n  AC: 0x70ABFA,\n  TH: 0x00BAFF,\n  PA: 0x00A1FF,\n  U: 0x008FFF,\n  NP: 0x0080FF,\n  PU: 0x006BFF,\n  AM: 0x545CF2,\n  CM: 0x785CE3,\n  BK: 0x8A4FE3,\n  CF: 0xA136D4,\n  ES: 0xB31FD4,\n  FM: 0xB31FBA,\n  MD: 0xB30DA6,\n  NO: 0xBD0D87,\n  LR: 0xC70066,\n  RF: 0xCC0059,\n  DB: 0xD1004F,\n  SG: 0xD90045,\n  BH: 0xE00038,\n  HS: 0xE6002E,\n  MT: 0xEB0026,\n  /* eslint-enable no-magic-numbers */\n};\n\npalette.defaultResidueColor = 0xBEA06E;\n\n// DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\npalette.residueColors = {\n  /* eslint-disable no-magic-numbers */\n  ALA: 0xC8C8C8,\n  ARG: 0x145AFF,\n  ASN: 0x00DCDC,\n  ASP: 0xE60A0A,\n  CYS: 0xE6E600,\n  GLN: 0x00DCDC,\n  GLU: 0xE60A0A,\n  GLY: 0xEBEBEB,\n  HIS: 0x8282D2,\n  ILE: 0x0F820F,\n  LEU: 0x0F820F,\n  LYS: 0x145AFF,\n  MET: 0xE6E600,\n  PHE: 0x3232AA,\n  PRO: 0xDC9682,\n  SER: 0xFA9600,\n  THR: 0xFA9600,\n  TRP: 0xB45AB4,\n  TYR: 0x3232AA,\n  VAL: 0x0F820F,\n  A: 0xA0A0FF,\n  C: 0xFF8C4B,\n  G: 0xFF7070,\n  I: 0x80FFFF,\n  T: 0xA0FFA0,\n  U: 0xFF8080,\n  DA: 0xA0A0FF,\n  DC: 0xFF8C4B,\n  DG: 0xFF7070,\n  DI: 0x80FFFF,\n  DT: 0xA0FFA0,\n  DU: 0xFF8080,\n  '+A': 0xA0A0FF,\n  '+C': 0xFF8C4B,\n  '+G': 0xFF7070,\n  '+I': 0x80FFFF,\n  '+T': 0xA0FFA0,\n  '+U': 0xFF8080,\n  /* eslint-enable no-magic-numbers */\n};\n\npalette.chainColors = [\n  // ' '->0 'A'->1, 'B'->2\n  0xFFffffff, // ' ' & '0' white\n  //\n  0xFFC0D0FF, // skyblue\n  0xFFB0FFB0, // pastel green\n  0xFFFFC0C8, // pink\n  0xFFFFFF80, // pastel yellow\n  0xFFFFC0FF, // pastel magenta\n  0xFFB0F0F0, // pastel cyan\n  0xFFFFD070, // pastel gold\n  0xFFF08080, // lightcoral\n\n  0xFFF5DEB3, // wheat\n  0xFF00BFFF, // deepskyblue\n  0xFFCD5C5C, // indianred\n  0xFF66CDAA, // mediumaquamarine\n  0xFF9ACD32, // yellowgreen\n  0xFFEE82EE, // violet\n  0xFF00CED1, // darkturquoise\n  0xFF00FF7F, // springgreen\n  0xFF3CB371, // mediumseagreen\n\n  0xFF00008B, // darkblue\n  0xFFBDB76B, // darkkhaki\n  0xFF006400, // darkgreen\n  0xFF800000, // maroon\n  0xFF808000, // olive\n  0xFF800080, // purple\n  0xFF008080, // teal\n  0xFFB8860B, // darkgoldenrod\n  0xFFB22222, // firebrick\n];\n\nconst StructuralElementType = StructuralElement.Type;\n\npalette.secondaryColors = {\n  [StructuralElementType.HELIX_ALPHA]: 0xFF0080,\n  [StructuralElementType.HELIX_PI]: 0x600080,\n  [StructuralElementType.HELIX_310]: 0xA00080,\n  [StructuralElementType.STRAND]: 0xFFC800,\n  [StructuralElementType.TURN]: 0x6080FF,\n  dna: 0xAE00FE,\n  rna: 0xFD0162,\n};\n\nexport default palette;\n","import Palette from './Palette';\nimport StructuralElement from '../../chem/StructuralElement';\n\nconst palette = new Palette('VMD', 'VM');\n\npalette.colors = [\n  /* eslint-disable no-magic-numbers */\n  0x0000FF, // blue\n  0xFF0000, // red\n  0x606060, // gray\n  0xFF8000, // orange\n  0xFFFF00, // yellow\n  0x808033, // tan\n  0x999999, // silver\n  0x00FF00, // green\n  0xFFFFFF, // white\n  0xFF9999, // pink\n  0x40C0C0, // cyan\n  0xA600A6, // purple\n  0x80E666, // lime\n  0xE666B3, // mauve\n  0x804D00, // ochre\n  0x8080C0, // ice blue\n  /* eslint-enable no-magic-numbers */\n];\n\npalette.defaultElementColor = 0x804D00;\n\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\npalette.elementColors = {\n  /* eslint-disable no-magic-numbers */\n  H: 0xFFFFFF,\n  C: 0x40BFBF,\n  N: 0x0000FF,\n  O: 0xFF0000,\n  P: 0x808033,\n  S: 0xFFFF00,\n  /* eslint-enable no-magic-numbers */\n};\n\npalette.defaultResidueColor = 0x40C0C0;\n\n// DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\npalette.residueColors = {\n  /* eslint-disable no-magic-numbers */\n  ALA: 0x0000FF,\n  ARG: 0xFFFFFF,\n  ASN: 0x808033,\n  ASP: 0xFF0000,\n  CYS: 0xFFFF00,\n  GLN: 0xFF8000,\n  GLU: 0xFF9999,\n  GLY: 0xFFFFFF,\n  HIS: 0x40C0C0,\n  ILE: 0x00FF00,\n  LEU: 0xFF9999,\n  LYS: 0x40C0C0,\n  MET: 0xFFFF00,\n  PHE: 0xA600A6,\n  PRO: 0x804C00,\n  SER: 0xFFFF00,\n  THR: 0xE666B3,\n  TRP: 0x999999,\n  TYR: 0x00FF00,\n  VAL: 0x808033,\n  A: 0x0000FF,\n  C: 0xFF8000,\n  G: 0xFFFF00,\n  T: 0xA600A6,\n  U: 0x00FF00,\n  DA: 0x0000FF,\n  DC: 0xFF8000,\n  DG: 0xFFFF00,\n  DT: 0xA600A6,\n  DU: 0x00FF00,\n  '+A': 0x0000FF,\n  '+C': 0xFF8000,\n  '+G': 0xFFFF00,\n  '+T': 0xA600A6,\n  '+U': 0x00FF00,\n  WAT: 0x40C0C0,\n  H2O: 0x40C0C0,\n  HOH: 0x40C0C0,\n  /* eslint-enable no-magic-numbers */\n};\n\npalette.chainColors = [0xFFFFFF].concat(palette.colors);\n\nconst StructuralElementType = StructuralElement.Type;\n\npalette.secondaryColors = {\n  [StructuralElementType.HELIX_ALPHA]: 0xA600A6,\n  [StructuralElementType.HELIX_310]: 0x0000FF,\n  [StructuralElementType.HELIX_PI]: 0xFF0000,\n  [StructuralElementType.STRAND]: 0xFFFF00,\n  [StructuralElementType.BRIDGE]: 0x808033,\n  [StructuralElementType.TURN]: 0x40C0C0,\n};\n\nexport default palette;\n","import EntityList from '../utils/EntityList';\n\nimport cpkPalette from './palettes/cpkPalette';\nimport jmolPalette from './palettes/jmolPalette';\nimport vmdPalette from './palettes/vmdPalette';\n\nconst palettes = new EntityList([\n  cpkPalette,\n  jmolPalette,\n  vmdPalette,\n]);\n\nexport default palettes;\n","import _ from 'lodash';\nimport settings from '../../settings';\nimport utils from '../../utils';\nimport palettes from '../palettes';\n\n/**\n * Create new colorer.\n *\n * @param {object=} opts - Options to override defaults with.\n *\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\n *   changes to the `opts` object. However, changes in defaults **will** affect the colorer after its creation.\n *\n * @exports Colorer\n * @this Colorer\n * @abstract\n * @constructor\n * @classdesc Basic class for all available coloring algorithms used for building and displaying molecule geometry.\n */\nclass Colorer {\n  constructor(opts) {\n    if (this.constructor === Colorer) {\n      throw new Error('Can not instantiate abstract class!');\n    }\n    /**\n     * Colorer options inherited (prototyped) from defaults.\n     * @type {object}\n     */\n    this.opts = _.merge(utils.deriveDeep(settings.now.colorers[this.id], true), opts);\n    /**\n     * Palette in use.\n     * @type {Palette}\n     */\n    this.palette = palettes.first;\n  }\n\n  /**\n   * Get Colorer identification, probably with options.\n   * @returns {string|Array} Colorer identifier string ({@link Colorer#id}) or two-element array containing both colorer\n   *   identifier and options ({@link Colorer#opts}).\n   * Options are returned if they were changed during or after colorer creation.\n   */\n  identify() {\n    const diff = utils.objectsDiff(this.opts, settings.now.colorers[this.id]);\n    if (!_.isEmpty(diff)) {\n      return [this.id, diff];\n    }\n    return this.id;\n  }\n}\n\n/**\n * Colorer identifier.\n * @type {string}\n */\n\nColorer.prototype.id = '__';\n\nexport default Colorer;\n","import Colorer from './Colorer';\n\n/**\n * Create new colorer.\n *\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\n *\n * @see Element\n *\n * @exports ElementColorer\n * @augments Colorer\n * @constructor\n * @classdesc Coloring algorithm based on chemical element.\n */\nclass ElementColorer extends Colorer {\n  static id = 'EL';\n\n  getAtomColor(atom, _complex) {\n    const type = atom.element.name;\n    if (type === 'C' && this.opts.carbon >= 0) {\n      return this.opts.carbon;\n    }\n    return this.palette.getElementColor(type);\n  }\n\n  getResidueColor(_residue, _complex) {\n    return this.palette.defaultResidueColor;\n  }\n}\n\nElementColorer.prototype.id = 'EL';\nElementColorer.prototype.name = 'Element';\nElementColorer.prototype.shortName = 'Element';\n\nexport default ElementColorer;\n","import Colorer from './Colorer';\n\n/**\n * Coloring algorithm based on residue type.\n *\n * @see ResidueType\n *\n * @exports ResidueTypeColorer\n * @constructor\n */\nclass ResidueTypeColorer extends Colorer {\n  static id = 'RT';\n\n  getAtomColor(atom, complex) {\n    return this.getResidueColor(atom.residue, complex);\n  }\n\n  getResidueColor(residue, _complex) {\n    return this.palette.getResidueColor(residue._type._name);\n  }\n}\n\nResidueTypeColorer.prototype.id = 'RT';\nResidueTypeColorer.prototype.name = 'Residue Type';\nResidueTypeColorer.prototype.shortName = 'Residue';\n\nexport default ResidueTypeColorer;\n","import Colorer from './Colorer';\n\nclass SequenceColorer extends Colorer {\n  static id = 'SQ';\n\n  getAtomColor(atom, complex) {\n    return this.getResidueColor(atom.residue, complex);\n  }\n\n  getResidueColor(residue, _complex) {\n    const chain = residue._chain;\n    if (chain.minSequence === Number.POSITIVE_INFINITY && chain.maxSequence === Number.NEGATIVE_INFINITY) {\n      return this.palette.defaultNamedColor;\n    }\n    const min = chain.minSequence;\n    const max = chain.maxSequence > min ? chain.maxSequence : min + 1;\n    return this.palette.getGradientColor((residue._sequence - min) / (max - min), this.opts.gradient);\n  }\n}\n\nSequenceColorer.prototype.id = 'SQ';\nSequenceColorer.prototype.name = 'Sequence';\nSequenceColorer.prototype.shortName = 'Sequence';\n\nexport default SequenceColorer;\n","import Colorer from './Colorer';\n\nclass ChainColorer extends Colorer {\n  static id = 'CH';\n\n  getAtomColor(atom, complex) {\n    return this.getResidueColor(atom.residue, complex);\n  }\n\n  getResidueColor(residue, _complex) {\n    return this.palette.getChainColor(residue.getChain()._name);\n  }\n}\n\nChainColorer.prototype.id = 'CH';\nChainColorer.prototype.name = 'Chain';\nChainColorer.prototype.shortName = 'Chain';\n\nexport default ChainColorer;\n","import Colorer from './Colorer';\nimport ResidueType from '../../chem/ResidueType';\n\nclass SecondaryStructureColorer extends Colorer {\n  static id = 'SS';\n\n  getAtomColor(atom, complex) {\n    return this.getResidueColor(atom.residue, complex);\n  }\n\n  getResidueColor(residue, _complex) {\n    if (residue._type.flags & ResidueType.Flags.DNA) {\n      return this.palette.getSecondaryColor('dna');\n    }\n    if (residue._type.flags & ResidueType.Flags.RNA) {\n      return this.palette.getSecondaryColor('rna');\n    }\n    const secondary = residue.getSecondary();\n    if (secondary) {\n      let color = this.palette.getSecondaryColor(secondary.type, true);\n      if (color === undefined) {\n        color = this.palette.getSecondaryColor(secondary.generic);\n      }\n      return color;\n    }\n    return this.palette.defaultSecondaryColor;\n  }\n}\n\nSecondaryStructureColorer.prototype.id = 'SS';\nSecondaryStructureColorer.prototype.name = 'Secondary Structure';\nSecondaryStructureColorer.prototype.shortName = 'Structure';\n\nexport default SecondaryStructureColorer;\n","import Colorer from './Colorer';\n\nclass UniformColorer extends Colorer {\n  static id = 'UN';\n\n  getAtomColor(_atom, _complex) {\n    return this.opts.color;\n  }\n\n  getResidueColor(_residue, _complex) {\n    return this.opts.color;\n  }\n}\n\nUniformColorer.prototype.id = 'UN';\nUniformColorer.prototype.name = 'Uniform';\nUniformColorer.prototype.shortName = 'Uniform';\n\nexport default UniformColorer;\n","import Colorer from './Colorer';\nimport selectors from '../../chem/selectors';\n\n/**\n * Create new colorer.\n *\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\n *\n * @exports ConditionalColorer\n * @augments Colorer\n * @constructor\n * @classdesc Bicolor coloring algorithm based on a selector string used as a condition.\n */\nclass ConditionalColorer extends Colorer {\n  static id = 'CO';\n\n  constructor(opts) {\n    super(opts);\n    const parsed = selectors.parse(this.opts.subset);\n    this._subsetCached = parsed.error ? selectors.none() : parsed.selector;\n  }\n\n  getAtomColor(atom, _complex) {\n    return this._subsetCached.includesAtom(atom) ? this.opts.color : this.opts.baseColor;\n  }\n\n  getResidueColor(residue, _complex) {\n    const subset = this._subsetCached;\n    const atoms = residue._atoms;\n    for (let i = 0, n = atoms.length; i < n; ++i) {\n      if (!subset.includesAtom(atoms[i])) {\n        return this.opts.baseColor;\n      }\n    }\n    return this.opts.color;\n  }\n}\n\nConditionalColorer.prototype.id = 'CO';\nConditionalColorer.prototype.name = 'Conditional';\nConditionalColorer.prototype.shortName = 'Conditional';\n\nexport default ConditionalColorer;\n","import Colorer from './Colorer';\n\nclass ConformationColorer extends Colorer {\n  static id = 'CF';\n\n  getAtomColor(atom, _complex) {\n    return this.palette.getChainColor(String.fromCharCode(atom.location));\n  }\n\n  getResidueColor(_residue, _complex) {\n    return this.palette.defaultResidueColor;\n  }\n}\n\nConformationColorer.prototype.id = 'CF';\nConformationColorer.prototype.name = 'Conformation';\nConformationColorer.prototype.shortName = 'Conformation';\n\nexport default ConformationColorer;\n","import Colorer from './Colorer';\n\n/**\n * Create new colorer.\n *\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\n *\n * @see Temperature\n *\n * @exports TemperatureColorer\n * @augments Colorer\n * @constructor\n * @classdesc Coloring algorithm based on temperature of chemical element.\n */\nclass TemperatureColorer extends Colorer {\n  static id = 'TM';\n\n  getAtomColor(atom, _complex) {\n    const { opts } = this;\n    let factor = 1;\n    if (atom.temperature && opts) {\n      if (opts.min === opts.max) {\n        factor = atom.temperature > opts.max ? 1 : 0;\n      } else {\n        factor = (atom.temperature - opts.min) / (opts.max - opts.min);\n      }\n      return this.palette.getGradientColor(factor, opts.gradient);\n    }\n    return this.palette.defaultGradientColor;\n  }\n\n  getResidueColor(residue, _complex) {\n    const { opts } = this;\n    if (!opts) {\n      return this.palette.defaultGradientColor;\n    }\n    if (residue.temperature) {\n      let factor = 0;\n      if (opts.min === opts.max) {\n        factor = residue.temperature > opts.max ? 1 : 0;\n      } else {\n        factor = (residue.temperature - opts.min) / (opts.max - opts.min);\n      }\n      return this.palette.getGradientColor(factor, opts.gradient);\n    }\n    return this.palette.defaultGradientColor;\n  }\n}\n\nTemperatureColorer.prototype.id = 'TM'; // [T]e[M]perature\nTemperatureColorer.prototype.name = 'Temperature';\nTemperatureColorer.prototype.shortName = 'Temperature';\n\nexport default TemperatureColorer;\n","import Colorer from './Colorer';\n\n/**\n * Create new colorer.\n *\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\n *\n * @see Occupancy\n *\n * @exports OccupancyColorer\n * @augments Occupancy\n * @constructor\n * @classdesc Coloring algorithm based on occupancy of chemical element.\n */\nclass OccupancyColorer extends Colorer {\n  static id = 'OC';\n\n  _getColorByOccupancy(occupancy, opts) {\n    if (occupancy !== undefined) {\n      const factor = 1 - occupancy;\n      return this.palette.getGradientColor(factor, opts.gradient);\n    }\n    return this.palette.defaultGradientColor;\n  }\n\n  getAtomColor(atom, _complex) {\n    const { opts } = this;\n    return this._getColorByOccupancy(atom.occupancy, opts);\n  }\n\n  getResidueColor(residue, _complex) {\n    const { opts } = this;\n    return this._getColorByOccupancy(residue.occupancy, opts);\n  }\n}\n\nOccupancyColorer.prototype.id = 'OC'; // [OC]cupancy\nOccupancyColorer.prototype.name = 'Occupancy';\nOccupancyColorer.prototype.shortName = 'Occupancy';\n\nexport default OccupancyColorer;\n","import Colorer from './Colorer';\n\nclass HydrophobicityColorer extends Colorer {\n  static id = 'HY';\n\n  getAtomColor(atom, complex) {\n    return this.getResidueColor(atom.residue, complex);\n  }\n\n  getResidueColor(residue, _complex) {\n    let color = this.palette.defaultResidueColor;\n    if (residue._type.hydrophobicity !== undefined) {\n      // Kyte Doolitle hydro [-4.5,4.5]->[0.1]\n      const min = -4.5;\n      const max = 4.5;\n      color = this.palette.getGradientColor((residue._type.hydrophobicity - min) / (max - min), this.opts.gradient);\n    }\n    return color;\n  }\n}\n\nHydrophobicityColorer.prototype.id = 'HY';\nHydrophobicityColorer.prototype.name = 'Hydrophobicity';\nHydrophobicityColorer.prototype.shortName = 'Hydrophobicity';\n\nexport default HydrophobicityColorer;\n","import Colorer from './Colorer';\n\nclass MoleculeColorer extends Colorer {\n  static id = 'MO';\n\n  getAtomColor(atom, complex) {\n    return this.getResidueColor(atom.residue, complex);\n  }\n\n  getResidueColor(residue, _complex) {\n    const molecule = residue._molecule;\n    const count = _complex.getMoleculeCount();\n    if (count > 1) {\n      return this.palette.getGradientColor((molecule.index - 1) / (count - 1), this.opts.gradient);\n    }\n    return this.palette.getGradientColor(0, this.opts.gradient);\n  }\n}\n\nMoleculeColorer.prototype.id = 'MO';\nMoleculeColorer.prototype.name = 'Molecule';\nMoleculeColorer.prototype.shortName = 'Molecule';\n\nexport default MoleculeColorer;\n","import Colorer from './Colorer';\nimport Atom from '../../chem/Atom';\n\nfunction scaleColor(c, factor) {\n  const r1 = (c >> 16) & 0xff;\n  const g1 = (c >> 8) & 0xff;\n  const b1 = c & 0xff;\n  const r = factor * r1;\n  const g = factor * g1;\n  const b = factor * b1;\n  return (r << 16) | (g << 8) | b;\n}\n\n/**\n * Create new colorer.\n *\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\n *\n * @exports CarbonColorer\n * @augments Colorer\n * @constructor\n * @classdesc Bicolor coloring algorithm based on selection carbon atoms.\n */\nclass CarbonColorer extends Colorer {\n  static id = 'CB';\n\n  getAtomColor(atom, _complex) {\n    const colorCarbon = this.opts.color;\n    const colorNotCarbon = scaleColor(colorCarbon, this.opts.factor);\n    return (atom.flags & Atom.Flags.CARBON) ? colorCarbon : colorNotCarbon;\n  }\n\n  getResidueColor(_residue, _complex) {\n    return this.opts.color;\n  }\n}\n\nCarbonColorer.prototype.id = 'CB';\nCarbonColorer.prototype.name = 'Carbon';\nCarbonColorer.prototype.shortName = 'Carbon';\n\nexport default CarbonColorer;\n","import EntityList from '../utils/EntityList';\n\nimport ElementColorer from './colorers/ElementColorer';\nimport ResidueTypeColorer from './colorers/ResidueTypeColorer';\nimport SequenceColorer from './colorers/SequenceColorer';\nimport ChainColorer from './colorers/ChainColorer';\nimport SecondaryStructureColorer from './colorers/SecondaryStructureColorer';\nimport UniformColorer from './colorers/UniformColorer';\nimport ConditionalColorer from './colorers/ConditionalColorer';\nimport ConformationColorer from './colorers/ConformationColorer';\nimport TemperatureColorer from './colorers/TemperatureColorer';\nimport OccupancyColorer from './colorers/OccupancyColorer';\nimport HydrophobicityColorer from './colorers/HydrophobicityColorer';\nimport MoleculeColorer from './colorers/MoleculeColorer';\nimport CarbonColorer from './colorers/CarbonColorer';\n\nconst colorers = new EntityList([\n  ElementColorer,\n  ResidueTypeColorer,\n  SequenceColorer,\n  ChainColorer,\n  SecondaryStructureColorer,\n  UniformColorer,\n  ConditionalColorer,\n  ConformationColorer,\n  TemperatureColorer,\n  OccupancyColorer,\n  HydrophobicityColorer,\n  MoleculeColorer,\n  CarbonColorer,\n]);\n\nexport default colorers;\n","import * as THREE from 'three';\nimport EntityList from '../utils/EntityList';\n\nfunction neutralColor(intensity) {\n  return new THREE.Color(intensity, intensity, intensity);\n}\n\nconst materialList = [\n  {\n    id: 'DF',\n    name: 'Diffuse',\n    shortName: 'Diffuse',\n    uberOptions: {\n      diffuse: neutralColor(1.0),\n      specular: neutralColor(0.0),\n      shininess: 1,\n      opacity: 1.0,\n    },\n    values: {\n      lights: true,\n      fog: true,\n      depthWrite: true,\n      transparent: false,\n      toonShading: false,\n    },\n  }, {\n    id: 'SF',\n    name: 'Soft Plastic',\n    shortName: 'Soft',\n    uberOptions: {\n      diffuse: neutralColor(1.0),\n      specular: neutralColor(0.1),\n      shininess: 30,\n      opacity: 1.0,\n    },\n    values: {\n      lights: true,\n      fog: true,\n      depthWrite: true,\n      transparent: false,\n      toonShading: false,\n    },\n  }, {\n    id: 'PL',\n    name: 'Glossy Plastic',\n    shortName: 'Glossy',\n    uberOptions: {\n      diffuse: neutralColor(0.56),\n      specular: neutralColor(0.28),\n      shininess: 100,\n      opacity: 1.0,\n    },\n    values: {\n      lights: true,\n      fog: true,\n      depthWrite: true,\n      transparent: false,\n      toonShading: false,\n    },\n  }, {\n    id: 'ME',\n    name: 'Metal',\n    shortName: 'Metal',\n    uberOptions: {\n      diffuse: neutralColor(0.56),\n      specular: neutralColor(0.55),\n      shininess: 30,\n      opacity: 1.0,\n    },\n    values: {\n      lights: true,\n      fog: true,\n      depthWrite: true,\n      transparent: false,\n      toonShading: false,\n    },\n  }, {\n    id: 'TR',\n    name: 'Transparent',\n    shortName: 'Transparent',\n    uberOptions: {\n      diffuse: neutralColor(1.0),\n      specular: neutralColor(0.0),\n      shininess: 1,\n      opacity: 0.5,\n    },\n    values: {\n      lights: true,\n      fog: true,\n      depthWrite: true,\n      transparent: true,\n      toonShading: false,\n    },\n  }, {\n    id: 'GL',\n    name: 'Glass',\n    shortName: 'Glass',\n    uberOptions: {\n      diffuse: neutralColor(0.50),\n      specular: neutralColor(0.65),\n      shininess: 100,\n      opacity: 0.5,\n    },\n    values: {\n      lights: true,\n      fog: true,\n      depthWrite: true,\n      transparent: true,\n      toonShading: false,\n    },\n  }, {\n    id: 'BA',\n    name: 'Backdrop',\n    shortName: 'Backdrop',\n    uberOptions: {\n      diffuse: neutralColor(1.0),\n      specular: neutralColor(0.0),\n      shininess: 1,\n      opacity: 1.0,\n    },\n    values: {\n      lights: false,\n      fog: false,\n      depthWrite: false,\n      transparent: false,\n      toonShading: false,\n    },\n  }, {\n    id: 'TN',\n    name: 'Toon',\n    shortName: 'Toon',\n    uberOptions: {\n      diffuse: neutralColor(1.0),\n      specular: neutralColor(0.0),\n      shininess: 1,\n      opacity: 1.0,\n    },\n    values: {\n      lights: true,\n      fog: true,\n      depthWrite: true,\n      transparent: false,\n      toonShading: true,\n    },\n  }, {\n    id: 'FL',\n    name: 'Flat',\n    shortName: 'Flat',\n    uberOptions: {\n      diffuse: neutralColor(1.0),\n      specular: neutralColor(0.0),\n      shininess: 0,\n      opacity: 1.0,\n    },\n    values: {\n      lights: false,\n      fog: true,\n      depthWrite: true,\n      transparent: false,\n    },\n  },\n];\n\nconst materials = new EntityList(materialList);\n\nexport default materials;\n","/**\n * Utils functions which is worked with meshes\n *\n * functions for doing something with all/specified meshes\n * functions for traversihg tree and create auxiliary meshes for transparency/shadowmaps...\n * functions for calculating data connected with meshes\n */\nimport * as THREE from 'three';\nimport UberMaterial from './shaders/UberMaterial';\nimport gfxutils from './gfxutils';\n\nfunction _gatherObjects(root, meshTypes) {\n  const meshes = [];\n  root.traverse((object) => {\n    for (let i = 0; i < meshTypes.length; i++) {\n      if (object instanceof meshTypes[i]) {\n        meshes[meshes.length] = object;\n        break;\n      }\n    }\n  });\n  return meshes;\n}\n\n// new mesh with the same geometry and specified material values and layer\nfunction createDerivativeMesh(mesh, values, layer) {\n  const material = mesh.material.createInstance();\n  material.setValues(values);\n\n  const newMesh = new mesh.constructor(mesh.geometry, material);\n  newMesh.material.needsUpdate = true;\n  newMesh.applyMatrix4(mesh.matrix);\n  newMesh.layers.set(layer);\n  return newMesh;\n}\n\nfunction traverseMeshes(root, meshTypes, func) {\n  const meshes = _gatherObjects(root, meshTypes);\n\n  for (let i = 0, n = meshes.length; i < n; ++i) {\n    const mesh = meshes[i];\n    if (!mesh.parent) {\n      continue;\n    }\n    func(mesh);\n  }\n}\n\nfunction applyTransformsToMeshes(root, mtc) {\n  const mtcCount = mtc.length;\n  if (mtcCount < 1) {\n    return;\n  }\n\n  const meshTypes = [THREE.Mesh, THREE.LineSegments, THREE.Line];\n  traverseMeshes(root, meshTypes, (mesh) => {\n    mesh.applyMatrix4(mtc[0]);\n    for (let j = 1; j < mtcCount; ++j) {\n      const newMesh = new mesh.constructor(mesh.geometry, mesh.material);\n      mesh.parent.add(newMesh);\n      newMesh.applyMatrix4(mtc[j]);\n    }\n  });\n}\n\nconst processTransparentMaterial = (function () {\n  const matValues = {\n    prepassTransparancy: true,\n    fakeOpacity: false,\n    transparent: false,\n    colorFromDepth: false,\n    lights: false,\n    shadowmap: false,\n    fog: false,\n  };\n\n  return function (root, material) {\n    if (!(material instanceof UberMaterial)) {\n      return;\n    }\n\n    traverseMeshes(root, [THREE.Mesh, THREE.LineSegments], (mesh) => {\n      mesh.material.setValues({ prepassTransparancy: false, fakeOpacity: false });\n      mesh.material.needsUpdate = true;\n      mesh.layers.set(gfxutils.LAYERS.TRANSPARENT);\n\n      const prepassTranspMesh = createDerivativeMesh(mesh, matValues, gfxutils.LAYERS.PREPASS_TRANSPARENT);\n      mesh.parent.add(prepassTranspMesh);\n    });\n  };\n}());\n\nconst processColFromPosMaterial = (function () {\n  const matValues = {\n    colorFromPos: true,\n    transparent: false,\n    colorFromDepth: false,\n    lights: false,\n    shadowmap: false,\n    fog: false,\n    overrideColor: false,\n    fogTransparent: false,\n    attrColor: false,\n    attrColor2: false,\n    attrAlphaColor: false,\n    fakeOpacity: false,\n  };\n\n  return function (root, material) {\n    if (!(material instanceof UberMaterial)) {\n      return;\n    }\n\n    traverseMeshes(root, [THREE.Mesh, THREE.LineSegments], (mesh) => {\n      const colFromPosMesh = createDerivativeMesh(mesh, matValues, gfxutils.LAYERS.COLOR_FROM_POSITION);\n      mesh.parent.add(colFromPosMesh);\n    });\n  };\n}());\n\nconst createShadowmapMaterial = (function () {\n  const matValues = {\n    colorFromDepth: true,\n    orthoCam: true,\n    lights: false,\n    shadowmap: false,\n    fog: false,\n  };\n\n  return function (root, material) {\n    if (!(material instanceof UberMaterial)) {\n      return;\n    }\n    traverseMeshes(root, [THREE.Mesh, THREE.LineSegments], (mesh) => {\n      if (!mesh.receiveShadow && mesh.material.shadowmap) { // remove shadow from non-receivers\n        mesh.material.setValues({ shadowmap: false });\n      }\n      if (!mesh.material.lights) { // skip creating shadowmap meshes for materials without lighting\n        return;\n      }\n      if (!mesh.castShadow) { // skip creating shadowmap meshes for non-casters\n        return;\n      }\n      if (!gfxutils.belongToSelectLayers(mesh)) { // skip creating shadowmap meshes for selection layer\n        return;\n      }\n\n      const shadowmapMesh = createDerivativeMesh(mesh, matValues, gfxutils.LAYERS.SHADOWMAP);\n      shadowmapMesh.isShadowmapMesh = true;\n      mesh.parent.add(shadowmapMesh);\n    });\n  };\n}());\n\nfunction removeShadowmapMaterial(root, material) {\n  if (!(material instanceof UberMaterial)) {\n    return;\n  }\n\n  traverseMeshes(root, [THREE.Mesh, THREE.LineSegments], (mesh) => {\n    if (mesh.isShadowmapMesh) {\n      mesh.parent.remove(mesh);\n    }\n  });\n}\n\nfunction forEachMeshInGroup(group, process) {\n  function processObj(object) {\n    if (object instanceof THREE.Mesh) {\n      process(object);\n    }\n    for (let i = 0, l = object.children.length; i < l; i++) {\n      processObj(object.children[i]);\n    }\n  }\n  processObj(group);\n}\n\nfunction _countMeshTriangles(mesh) {\n  const geom = mesh.geometry;\n  if (geom instanceof THREE.InstancedBufferGeometry) {\n    const attribs = geom.attributes;\n    for (const property in attribs) {\n      if (attribs.hasOwnProperty(property) && attribs[property] instanceof THREE.InstancedBufferAttribute) {\n        const currAttr = attribs[property];\n        const indexSize = geom.index ? geom.index.array.length / 3 : 0;\n        return indexSize * currAttr.array.length / currAttr.itemSize;\n      }\n    }\n    return 0;\n  }\n  if (geom instanceof THREE.BufferGeometry) {\n    return geom.index ? geom.index.array.length / 3 : 0;\n  }\n  return geom.faces ? geom.faces.length : 0;\n}\n\nfunction countTriangles(group) {\n  let totalCount = 0;\n  forEachMeshInGroup(group, (mesh) => {\n    totalCount += _countMeshTriangles(mesh);\n  });\n  return totalCount;\n}\n\nexport default {\n  applyTransformsToMeshes,\n  processTransparentMaterial,\n  processColFromPosMaterial,\n  createShadowmapMaterial,\n  removeShadowmapMaterial,\n  forEachMeshInGroup,\n  countTriangles,\n};\n","import _ from 'lodash';\nimport * as THREE from 'three';\nimport UberMaterial from './shaders/UberMaterial';\nimport gfxutils from './gfxutils';\nimport meshutils from './meshutils';\nimport settings from '../settings';\nimport materials from './materials';\nimport chem from '../chem';\n\nconst { selectors } = chem;\n\nclass Representation {\n  constructor(index, mode, colorer, selector) {\n    const startMaterialValues = {\n      clipPlane: settings.now.draft.clipPlane,\n      fogTransparent: settings.now.bg.transparent,\n      shadowmap: settings.now.shadow.on,\n      shadowmapType: settings.now.shadow.type,\n    };\n    this.index = index;\n    this.mode = mode;\n    this.colorer = colorer;\n    this.selector = selector;\n    this.selectorString = '';\n    this.count = 0;\n    this.material = new UberMaterial();\n    this.material.setValues(startMaterialValues);\n    this.material.setUberOptions({ fogAlpha: settings.now.fogAlpha });\n    this.materialPreset = materials.first;\n    this.needsRebuild = true;\n    this.visible = true;\n\n    // apply mode params & preset\n    this.setMode(mode);\n  }\n\n  markAtoms(complex) {\n    this.count = complex.markAtoms(this.selector, 1 << this.index);\n    this.needsRebuild = true;\n    return this.count;\n  }\n\n  unmarkAtoms(complex) {\n    complex.clearAtomBits(1 << this.index);\n    this.count = 0;\n  }\n\n  setMode(mode) {\n    this.mode = mode;\n  }\n\n  setMaterialPreset(preset) {\n    this.materialPreset = preset;\n    this.material.setUberOptions(preset.uberOptions);\n    this.material.setValues(preset.values);\n  }\n\n  reset() {\n    this.geo = null;\n    this.selectionGeo = null;\n  }\n\n  buildGeometry(complex) {\n    this.reset();\n    this.needsRebuild = false;\n\n    if (settings.now.ao) {\n      this.material.setValues({ normalsToGBuffer: settings.now.ao });\n    }\n\n    this.geo = this.mode.buildGeometry(complex, this.colorer, 1 << this.index, this.material);\n\n    if (this.material.uberOptions.opacity < 0.99 && settings.now.transparency === 'prepass') {\n      meshutils.processTransparentMaterial(this.geo, this.material);\n    }\n    this.geo.visible = this.visible;\n\n    gfxutils.processObjRenderOrder(this.geo, this.materialPreset.id);\n    meshutils.processColFromPosMaterial(this.geo, this.material);\n\n    if (settings.now.shadow.on) {\n      meshutils.createShadowmapMaterial(this.geo, this.material);\n    }\n\n    return this.geo;\n  }\n\n  buildSelectionGeometry(mask) {\n    let sg = null;\n\n    if (this.geo && ('getSubset' in this.geo)) {\n      const meshes = this.geo.getSubset(mask);\n      if (meshes && meshes.length > 0) {\n        sg = new THREE.Group();\n        sg.matrixAutoUpdate = false;\n        sg.matrix = this.geo.matrix;\n\n        for (let j = 0; j < meshes.length; j++) {\n          const m = meshes[j];\n          sg.add(m);\n        }\n      }\n    }\n\n    if (sg) {\n      sg.visible = this.visible;\n    }\n\n    this.selectionGeo = sg;\n    return this.selectionGeo;\n  }\n\n  /**\n   * Create object that represents difference between current and another rep\n   * anotherRep could be undefined. In this case everything is reported.\n   */\n  compare(repSettings) {\n    const diff = {};\n\n    const selStr = String(this.selector);\n    if (!repSettings || selStr.valueOf() !== String(repSettings.selector).valueOf()) {\n      diff.selector = selStr;\n    }\n\n    const modeDiff = this.mode.identify();\n    if (!repSettings || Array.isArray(modeDiff) || modeDiff !== repSettings.mode) {\n      diff.mode = modeDiff;\n    }\n\n    const colorerDiff = this.colorer.identify();\n    if (!repSettings || Array.isArray(colorerDiff) || colorerDiff !== repSettings.colorer) {\n      diff.colorer = colorerDiff;\n    }\n\n    if (!repSettings || this.materialPreset.id !== repSettings.material) {\n      diff.material = this.materialPreset.id;\n    }\n\n    return diff;\n  }\n\n  /**\n   * Change representation. Write fields what was changed into new object, return it.\n   */\n  change(repSettings, complex, mode, color) {\n    const diff = {};\n\n    // modify selector\n    if (repSettings.selector) {\n      const newSelectorObject = selectors.parse(repSettings.selector).selector;\n      const newSelector = String(newSelectorObject);\n      if (this.selectorString !== newSelector) {\n        diff.selector = newSelector;\n        this.selectorString = newSelector;\n        this.selector = newSelectorObject;\n        this.markAtoms(complex);\n      }\n    }\n\n    // modify mode\n    if (repSettings.mode) {\n      const newMode = repSettings.mode;\n      if (!_.isEqual(this.mode.identify(), newMode)) {\n        diff.mode = newMode;\n        this.setMode(mode);\n      }\n    }\n\n    // modify colorer\n    if (repSettings.colorer) {\n      const newColorer = repSettings.colorer;\n      if (!_.isEqual(this.colorer.identify(), newColorer)) {\n        diff.colorer = newColorer;\n        this.colorer = color;\n      }\n    }\n\n    // modify material\n    if (repSettings.material) {\n      const newMaterial = repSettings.material;\n      if (!_.isEqual(this.materialPreset.id, newMaterial)) {\n        diff.material = newMaterial;\n        this.setMaterialPreset(materials.get(repSettings.material));\n      }\n    }\n\n    return diff;\n  }\n\n  show(visible) {\n    this.visible = visible;\n    if (this.geo) {\n      this.geo.visible = visible;\n    }\n    if (this.selectionGeo) {\n      this.selectionGeo.visible = visible;\n    }\n  }\n}\n\nexport default Representation;\n","import * as THREE from 'three';\nimport logger from './utils/logger';\nimport gfxutils from './gfx/gfxutils';\nimport './gfx/modes';\n\nfunction _traverseComponentGroups(root, component, callback) {\n  const { children } = root;\n  if (!children) {\n    return;\n  }\n\n  for (let i = 0, n = children.length; i < n; ++i) {\n    const child = children[i];\n    if (child._component === component) {\n      callback(child);\n    }\n    if (child instanceof gfxutils.RCGroup) {\n      _traverseComponentGroups(child, component, callback);\n    }\n  }\n}\n\nfunction ComplexEditor() {\n}\n\nclass ComplexComponentEditor extends ComplexEditor {\n  constructor(complexVisual) {\n    super();\n    this._complexVisual = complexVisual;\n    this._inProgress = false;\n  }\n\n  begin() {\n    const complex = this._complexVisual.getComplex();\n\n    // init component matrices\n    this._componentTransforms = [];\n    for (let i = 0; i < complex._components.length; ++i) {\n      const component = complex._components[i];\n      this._componentTransforms[component._index] = new THREE.Object3D();\n    }\n\n    this._inProgress = true;\n\n    return true;\n  }\n\n  apply() {\n    if (!this._inProgress) {\n      return;\n    }\n\n    const complex = this._complexVisual.getComplex();\n\n    for (let i = 0; i < complex._components.length; ++i) {\n      this._bakeComponentTransform(complex._components[i]);\n    }\n\n    complex.onAtomPositionChanged();\n\n    this._resetComponentTransform();\n\n    this._complexVisual.finalizeEdit();\n  }\n\n  discard() {\n    if (!this._inProgress) {\n      return;\n    }\n\n    this._resetComponentTransform();\n\n    this._complexVisual.finalizeEdit();\n  }\n\n  getAltObj() {\n    const res = {\n      objects: [],\n      pivot: new THREE.Vector3(0, 0, 0),\n    };\n\n    const visual = this._complexVisual;\n    const component = visual.getSelectedComponent();\n\n    if (component === null) {\n      return res;\n    }\n\n    const selection = this._complexVisual.getSelectionGeo();\n    const selectionMask = 1 << visual.getSelectionBit();\n    let i;\n    let j;\n    let reprNode;\n    let geo;\n\n    // find all geo nodes for this component\n    _traverseComponentGroups(visual, component, (child) => {\n      res.objects.push(child);\n    });\n\n    // find all selection nodes for this component\n    for (i = 0; i < selection.children.length; ++i) {\n      reprNode = selection.children[i];\n      for (j = 0; j < reprNode.children.length; ++j) {\n        geo = reprNode.children[j];\n        if (geo.hasOwnProperty('_component') && geo._component === component) {\n          res.objects.push(geo);\n        }\n      }\n    }\n\n    // add dummy object that stores component transformation\n    res.objects.push(this._componentTransforms[component._index]);\n\n    const bbmin = new THREE.Vector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    const bbmax = new THREE.Vector3(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n\n    component.forEachResidue((residue) => {\n      const atoms = residue._atoms;\n      for (j = 0; j < atoms.length; ++j) {\n        if (atoms[j].mask & selectionMask) {\n          bbmin.min(atoms[j].position);\n          bbmax.max(atoms[j].position);\n        }\n      }\n    });\n\n    res.pivot.lerpVectors(bbmin, bbmax, 0.5);\n    return res;\n  }\n\n  _bakeComponentTransform(component) {\n    const t = this._componentTransforms[component._index];\n    if (t && (!(t.position.x === 0 && t.position.y === 0 && t.position.z === 0)\n      || !(t.quaternion.x === 0 && t.quaternion.y === 0 && t.quaternion.z === 0 && t.quaternion.w === 1))) {\n      t.updateMatrix();\n\n      component.forEachResidue((residue) => {\n        const atoms = residue._atoms;\n        for (let j = 0; j < atoms.length; ++j) {\n          atoms[j].position.applyMatrix4(t.matrix);\n        }\n      });\n    }\n  }\n\n  _resetComponentTransform() {\n    const visual = this._complexVisual;\n    const selection = this._complexVisual.getSelectionGeo();\n    let i;\n    let j;\n    let reprNode;\n    let geo;\n\n    for (i = 0; i < this._componentTransforms.length; ++i) {\n      geo = this._componentTransforms[i];\n      geo.position.set(0, 0, 0);\n      geo.quaternion.set(0, 0, 0, 1);\n    }\n\n    // reset all geo nodes\n    for (i = 0; i < visual.children.length; ++i) {\n      reprNode = visual.children[i];\n      for (j = 0; j < reprNode.children.length; ++j) {\n        geo = reprNode.children[j];\n        if (geo.hasOwnProperty('_component')) {\n          geo.position.set(0, 0, 0);\n          geo.quaternion.set(0, 0, 0, 1);\n        }\n      }\n    }\n\n    // reset all selection nodes\n    for (i = 0; i < selection.children.length; ++i) {\n      reprNode = selection.children[i];\n      for (j = 0; j < reprNode.children.length; ++j) {\n        geo = reprNode.children[j];\n        if (geo.hasOwnProperty('_component')) {\n          geo.position.set(0, 0, 0);\n          geo.quaternion.set(0, 0, 0, 1);\n        }\n      }\n    }\n  }\n}\n\nclass ComplexFragmentEditor extends ComplexEditor {\n  constructor(complexVisual) {\n    super();\n    this._complexVisual = complexVisual;\n    this._inProgress = false;\n  }\n\n  begin() {\n    const visual = this._complexVisual;\n    const selection = this._complexVisual.getSelectionGeo();\n\n    const atoms = this._getSelectionBorderAtoms();\n    if (atoms.length < 1 || atoms.length > 2) {\n      logger.error('Can only edit fragments with one or two bound atoms.');\n      return false;\n    }\n\n    this._fragmentBoundAtoms = atoms;\n\n    const selectionMask = 1 << visual.getSelectionBit();\n\n    // hide selected fragment in main model\n    visual.disableSubset(selectionMask, true);\n\n    // hide selection geo in main model\n    for (let k = 0; k < selection.children.length; ++k) {\n      selection.children[k].visible = false;\n    }\n\n    // create visible fragment representation to rotate\n    const pivotPos = atoms[0].position.clone();\n\n    if (atoms.length === 2) {\n      pivotPos.lerp(atoms[1].position, 0.5);\n    }\n\n    this._fragmentGeo = new THREE.Group();\n    visual.add(this._fragmentGeo);\n    this._fragmentGeo.position.copy(pivotPos);\n\n    this._fragmentSelectionGeo = new THREE.Group();\n    selection.add(this._fragmentSelectionGeo);\n    this._fragmentSelectionGeo.position.copy(pivotPos);\n\n    const offset = pivotPos.clone();\n    offset.negate();\n\n    for (let i = 0; i < visual.children.length; ++i) {\n      const g = visual.children[i];\n      if (!('getSubset' in g)) {\n        continue;\n      }\n\n      const vg = new THREE.Group();\n      this._fragmentGeo.add(vg);\n\n      const sg = new THREE.Group();\n      this._fragmentSelectionGeo.add(sg);\n\n      const meshes = g.getSubset(selectionMask, true);\n      for (let j = 0; j < meshes.length; j++) {\n        const m = meshes[j];\n        vg.add(m);\n        m.position.copy(offset);\n      }\n\n      const smeshes = g.getSubset(selectionMask, true);\n      for (let h = 0; h < smeshes.length; h++) {\n        const sm = smeshes[h];\n        sg.add(sm);\n        sm.position.copy(offset);\n      }\n    }\n\n    gfxutils.applySelectionMaterial(this._fragmentSelectionGeo);\n\n    this._inProgress = true;\n    return true;\n  }\n\n  apply() {\n    if (!this._inProgress) {\n      return;\n    }\n\n    const visual = this._complexVisual;\n    const selectionBit = visual.getSelectionBit();\n\n    const p = this._fragmentGeo.position;\n    const m = this._fragmentGeo.matrix.clone();\n    m.multiply(new THREE.Matrix4().makeTranslation(-p.x, -p.y, -p.z));\n\n    this._bakeAtomTransform(m, 1 << selectionBit);\n\n    // show selected fragment in main model\n    visual.enableSubset(1 << selectionBit, true);\n\n    visual.getComplex().onAtomPositionChanged();\n\n    visual.finalizeEdit();\n  }\n\n  discard() {\n    if (!this._inProgress) {\n      return;\n    }\n\n    const visual = this._complexVisual;\n    const selection = this._complexVisual.getSelectionGeo();\n\n    this._fragmentGeo.parent.remove(this._fragmentGeo);\n\n    // show selected fragment in main model\n    visual.enableSubset(1 << visual.getSelectionBit(), true);\n\n    // show selection geo in main model (+ remove fragment selection geo)\n    for (let i = 0; i < selection.children.length; ++i) {\n      const node = selection.children[i];\n      if (node.visible) {\n        selection.remove(node);\n      } else {\n        node.visible = true;\n      }\n    }\n\n    visual.finalizeEdit();\n  }\n\n  isFreeRotationAllowed() {\n    return (this._fragmentBoundAtoms.length < 2);\n  }\n\n  getAltObj() {\n    const res = {\n      objects: [],\n      pivot: new THREE.Vector3(0, 0, 0),\n    };\n\n    res.objects.push(this._fragmentGeo, this._fragmentSelectionGeo);\n\n    const boundAtoms = this._fragmentBoundAtoms;\n    if (boundAtoms.length === 1) {\n      if (boundAtoms[0].bonds.length === 1) {\n        // single external bond allows rotation about bond axis\n        const bond = boundAtoms[0].bonds[0];\n        res.axis = new THREE.Vector3().subVectors(bond._right.position, bond._left.position);\n        res.axis.normalize();\n        res.axis.transformDirection(this._complexVisual.matrixWorld);\n      }\n    } else if (boundAtoms.length === 2) {\n      // two bound atoms allow rotation only about axis running through their centers\n      res.axis = new THREE.Vector3().subVectors(boundAtoms[1].position, boundAtoms[0].position);\n      res.axis.normalize();\n      res.axis.transformDirection(this._complexVisual.matrixWorld);\n    }\n\n    return res;\n  }\n\n  _getSelectionBorderAtoms() {\n    const complex = this._complexVisual.getComplex();\n\n    const selectionMask = 1 << this._complexVisual.getSelectionBit();\n    const atomHash = {};\n\n    complex.forEachBond((bond) => {\n      if (bond._left.mask & selectionMask) {\n        if ((bond._right.mask & selectionMask) === 0) {\n          atomHash[bond._left.index] = 1;\n        }\n      } else if (bond._right.mask & selectionMask) {\n        atomHash[bond._right.index] = 1;\n      }\n    });\n\n    const atoms = [];\n    const keys = Object.keys(atomHash);\n    for (let i = 0, n = keys.length; i < n; ++i) {\n      const idx = keys[i];\n      atoms.push(complex._atoms[idx]);\n    }\n\n    return atoms;\n  }\n\n  _bakeAtomTransform(matrix, mask) {\n    this._complexVisual.getComplex().forEachAtom((atom) => {\n      if (atom.mask & mask) {\n        atom.position.applyMatrix4(matrix);\n      }\n    });\n  }\n}\n\nexport default {\n  ComponentEditor: ComplexComponentEditor,\n  FragmentEditor: ComplexFragmentEditor,\n};\n","import _ from 'lodash';\nimport * as THREE from 'three';\nimport utils from './utils';\nimport logger from './utils/logger';\nimport chem from './chem';\nimport settings from './settings';\nimport gfxutils from './gfx/gfxutils';\nimport modes from './gfx/modes';\nimport colorers from './gfx/colorers';\nimport palettes from './gfx/palettes';\nimport materials from './gfx/materials';\nimport Representation from './gfx/Representation';\nimport Visual from './Visual';\nimport ComplexVisualEdit from './ComplexVisualEdit';\nimport meshutils from './gfx/meshutils';\n\nconst { selectors } = chem;\n\nfunction lookupAndCreate(entityList, specs) {\n  if (!Array.isArray(specs)) {\n    specs = [specs];\n  }\n  const [id, opts] = specs;\n  const Entity = entityList.get(id) || entityList.first;\n  return new Entity(opts);\n}\n\nclass ComplexVisual extends Visual {\n  constructor(name, dataSource) {\n    super(name, dataSource);\n    this._complex = dataSource;\n\n    /** @type {Representation[]} */\n    this._reprList = [];\n    /** @type {?Representation} */\n    this._repr = null;\n    this._reprListChanged = true;\n\n    this._selectionBit = 0;\n    this._reprUsedBits = 0;\n    this._selectionCount = 0;\n\n    this._selectionGeometry = new THREE.Group();\n  }\n\n  getBoundaries() {\n    return this._complex.getBoundaries();\n  }\n\n  release() {\n    if (this._selectionGeometry.parent) {\n      this._selectionGeometry.remove(this._selectionGeometry);\n    }\n    Visual.prototype.release.call(this);\n  }\n\n  getComplex() {\n    return this._complex;\n  }\n\n  getSelectionCount() {\n    return this._selectionCount;\n  }\n\n  getSelectionGeo() {\n    return this._selectionGeometry;\n  }\n\n  getSelectionBit() {\n    return this._selectionBit;\n  }\n\n  getEditor() {\n    return this._editor;\n  }\n\n  resetReps(reps) {\n    // Create all necessary representations\n    if (this._complex) {\n      this._complex.clearAtomBits(~0);\n    }\n    this._reprListChanged = true;\n    this._reprUsedBits = 0;\n    this._reprList.length = reps.length;\n    for (let i = 0, n = reps.length; i < n; ++i) {\n      const rep = reps[i];\n\n      let selector;\n      let selectorString;\n      if (typeof rep.selector === 'string') {\n        selectorString = rep.selector;\n        ({ selector } = selectors.parse(selectorString));\n      } else if (typeof rep.selector === 'undefined') {\n        selectorString = settings.now.presets.default[0].selector;\n        ({ selector } = selectors.parse(selectorString));\n      } else {\n        ({ selector } = rep);\n        selectorString = selector.toString();\n      }\n      const mode = lookupAndCreate(modes, rep.mode);\n      const colorer = lookupAndCreate(colorers, rep.colorer);\n      const material = materials.get(rep.material) || materials.first;\n\n      this._reprList[i] = new Representation(i, mode, colorer, selector);\n      this._reprList[i].setMaterialPreset(material);\n      this._reprList[i].selectorString = selectorString;\n\n      if (this._complex) {\n        this._complex.markAtoms(selector, 1 << i);\n      }\n\n      this._reprUsedBits |= 1 << i;\n    }\n    this._repr = reps.length > 0 ? this._reprList[0] : null;\n\n    this._selectionBit = reps.length;\n    this._reprUsedBits |= 1 << this._selectionBit; // selection uses one bit\n    this._selectionCount = 0;\n\n    if (this._complex) {\n      this._complex.update();\n    }\n  }\n\n  /**\n   * Get number of representations created so far.\n   * @returns {number} Number of reps.\n   */\n  repCount() {\n    return this._reprList.length;\n  }\n\n  /**\n   * Get or set the current representation index.\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\n   * @returns {number} The current index.\n   */\n  repCurrent(index) {\n    if (index >= 0 && index < this._reprList.length) {\n      this._repr = this._reprList[index];\n    } else {\n      index = this._reprList.indexOf(this._repr);\n    }\n    return index;\n  }\n\n  /**\n   * Get or set representation by index.\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\n   * @param {object=} rep - Optional representation description.\n   * @param {string=} rep.selector - Selector string.\n   * @param {string=} rep.mode - Mode id.\n   * @param {string=} rep.colorer - Colorer id.\n   * @param {string=} rep.material - Material id.\n   * @returns {Object} {desc, index, status} field desc contains rep description, index - index of correspondent rep,\n   * status - one of three strings: 'created', 'changed', ''. 'created' means new rep was created during this function,\n   * 'changed' - rep was changed during this function. '' - something else.\n   */\n  rep(index, rep) {\n    // if index is missing then it is the current\n    if (!rep && (index === undefined || index instanceof Object)) {\n      rep = index;\n      index = this.repCurrent();\n    }\n\n    // fail if out of bounds\n    if (index < 0 || index > this._reprList.length) {\n      logger.error(`Rep ${index} does not exist!`);\n      return null;\n    }\n\n    // a special case of adding just after the end\n    if (index === this._reprList.length) {\n      const res = this.repAdd(rep);\n      logger.warn(`Rep ${index} does not exist! New representation was created.`);\n      return { desc: res.desc, index, status: 'created' };\n    }\n\n    // gather description\n    const target = this._reprList[index];\n    const desc = {\n      selector: target.selectorString,\n      mode: target.mode.identify(),\n      colorer: target.colorer.identify(),\n      material: target.materialPreset.id,\n    };\n\n    // modification is requested\n    if (rep) {\n      // modify\n      const diff = target.change(rep, this._complex,\n        lookupAndCreate(modes, rep.mode),\n        lookupAndCreate(colorers, rep.colorer));\n\n      // something was changed\n      if (!_.isEmpty(diff)) {\n        target.needsRebuild = true;\n        for (const key in diff) {\n          if (diff.hasOwnProperty(key)) {\n            desc[key] = diff[key];\n            logger.debug(`rep[${index}].${key} changed to ${diff[key]}`);\n          }\n        }\n\n        // safety trick: lower resolution for surface modes\n        if (diff.mode && target.mode.isSurface\n          && (settings.now.resolution === 'ultra' || settings.now.resolution === 'high')) {\n          logger.report('Surface resolution was changed to \"medium\" to avoid hang-ups.');\n          settings.set('resolution', 'medium');\n        }\n        return { desc, index, status: 'changed' };\n      }\n    }\n    return { desc, index, status: '' };\n  }\n\n  /**\n   * Get representation (not just description) by index.\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\n   * @returns {?object} Representation.\n   */\n  repGet(index) {\n    // if index is missing then it is the current\n    if (index === undefined || index instanceof Object) {\n      index = this.repCurrent();\n    }\n\n    // fail if out of bounds\n    if (index < 0 || index >= this._reprList.length) {\n      return null;\n    }\n\n    return this._reprList[index];\n  }\n\n  _getFreeReprIdx() {\n    let bits = this._reprUsedBits;\n    for (let i = 0; i <= ComplexVisual.NUM_REPRESENTATION_BITS; ++i, bits >>= 1) {\n      if ((bits & 1) === 0) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Add new representation.\n   * @param {object=} rep - Representation description.\n   * @returns {Object} {desc, index} field desc contains added rep description, index - index of this rep.\n   */\n  repAdd(rep) {\n    if (this._reprList.length >= ComplexVisual.NUM_REPRESENTATION_BITS) {\n      return null;\n    }\n\n    const newSelectionBit = this._getFreeReprIdx();\n    if (newSelectionBit < 0) {\n      return null; // no more slots for representations\n    }\n\n    const originalSelection = this.buildSelectorFromMask(1 << this._selectionBit);\n\n    // Fill in default values\n    const def = settings.now.presets.default[0];\n    const desc = _.merge({\n      selector: def.selector,\n      mode: def.mode,\n      colorer: def.colorer,\n      material: def.material,\n    }, rep);\n\n    const selector = (typeof desc.selector === 'string') ? selectors.parse(desc.selector).selector : desc.selector;\n    const target = new Representation(\n      this._selectionBit,\n      lookupAndCreate(modes, desc.mode),\n      lookupAndCreate(colorers, desc.colorer),\n      selector,\n    );\n    target.selectorString = selector.toString();\n    target.setMaterialPreset(materials.get(desc.material));\n    target.markAtoms(this._complex);\n    this._reprList.push(target);\n\n    // change selection bit\n    this._selectionBit = newSelectionBit;\n    this._reprUsedBits |= 1 << this._selectionBit;\n\n    // restore selection using new selection bit\n    this._complex.markAtoms(originalSelection, 1 << this._selectionBit);\n\n    return { desc, index: this._reprList.length - 1 };\n  }\n\n  /**\n   * Remove representation.\n   * @param {number=} index - Zero-based representation index.\n   */\n  repRemove(index) {\n    if (index === undefined) {\n      index = this.repCurrent();\n    }\n\n    // catch out of bounds case\n    let count = this._reprList.length;\n    if (index < 0 || index >= count || count <= 1) { // do not allow to remove the single rep\n      return;\n    }\n\n    const target = this._reprList[index];\n    target.unmarkAtoms(this._complex);\n    this._reprUsedBits &= ~(1 << target.index);\n\n    this._reprList.splice(index, 1);\n\n    // update current rep\n    if (target === this._repr) {\n      --count;\n      index = index < count ? index : count - 1;\n      this._repr = this._reprList[index];\n    }\n    this._reprListChanged = true;\n  }\n\n  /**\n   * Hide representation.\n   * @param {number} index - Zero-based representation index.\n   * @param {boolean=} hide - Specify false to make rep visible, true to hide (by default).\n   */\n  repHide(index, hide) {\n    if (hide === undefined) {\n      hide = true;\n    }\n\n    // fail if out of bounds\n    if (index < 0 || index >= this._reprList.length) {\n      return;\n    }\n\n    const target = this._reprList[index];\n    target.show(!hide);\n  }\n\n  /**\n   * Select atoms with selector\n   * @param {Selector} selector - selector\n   * @param {boolean=} append - true to append selection atoms to current selection, false to rewrite selection\n   */\n  select(selector, append) {\n    if (append) {\n      this._selectionCount += this._complex.markAtomsAdditionally(selector, 1 << this._selectionBit);\n    } else {\n      this._selectionCount = this._complex.markAtoms(selector, 1 << this._selectionBit);\n    }\n    this._complex.updateStructuresMask();\n    this.rebuildSelectionGeometry();\n  }\n\n  resetSelectionMask() {\n    if (this._selectionCount !== 0) {\n      this._selectionCount = 0;\n      if (this._complex) {\n        this._complex.clearAtomBits(1 << this._selectionBit);\n      }\n    }\n  }\n\n  updateSelectionMask(pickedObj) {\n    const self = this;\n    const { atom } = pickedObj;\n    let { residue, chain, molecule } = pickedObj;\n    const setMask = 1 << this._selectionBit;\n    const clearMask = ~setMask;\n\n    if (atom) {\n      residue = atom.residue;\n      chain = residue._chain;\n      molecule = residue._molecule;\n\n      if (atom.mask & setMask) {\n        atom.mask &= clearMask;\n        residue._mask &= clearMask;\n        chain._mask &= clearMask;\n        if (molecule) {\n          molecule.mask &= clearMask;\n        }\n        this._selectionCount--;\n      } else {\n        atom.mask |= setMask;\n        this._selectionCount++;\n\n        // select residue if all atoms in it are selected\n        residue.collectMask();\n        // select chain and molecule if all residues in it are selected\n        chain.collectMask();\n        if (molecule) {\n          molecule.collectMask();\n        }\n      }\n    } else if (residue) {\n      chain = residue._chain;\n      molecule = residue._molecule;\n\n      if (residue._mask & setMask) {\n        residue._mask &= clearMask;\n        chain._mask &= clearMask;\n        residue.forEachAtom((a) => {\n          if (a.mask & setMask) {\n            a.mask &= clearMask;\n            self._selectionCount--;\n          }\n        });\n      } else {\n        residue._mask |= setMask;\n        residue.forEachAtom((a) => {\n          if (!(a.mask & setMask)) {\n            a.mask |= setMask;\n            self._selectionCount++;\n          }\n        });\n\n        // select chain and molecule if all residues in it are selected\n        chain.collectMask();\n        if (molecule) {\n          molecule.collectMask();\n        }\n      }\n    } else if (chain || molecule) {\n      const obj = chain || molecule;\n      if (obj._mask & setMask) {\n        obj._mask &= clearMask;\n        obj.forEachResidue((r) => {\n          if (r._mask & setMask) {\n            r._mask &= clearMask;\n            r.forEachAtom((a) => {\n              if (a.mask & setMask) {\n                a.mask &= clearMask;\n                self._selectionCount--;\n              }\n            });\n            r._mask &= clearMask;\n          }\n        });\n      } else {\n        obj._mask |= setMask;\n        obj.forEachResidue((r) => {\n          if (!(r._mask & setMask)) {\n            r._mask |= setMask;\n            r.forEachAtom((a) => {\n              if (!(a.mask & setMask)) {\n                a.mask |= setMask;\n                self._selectionCount++;\n              }\n            });\n            const otherObj = chain ? r.getMolecule() : r.getChain();\n            if (otherObj) {\n              otherObj.collectMask();\n            }\n          }\n        });\n      }\n    } else {\n      this.resetSelectionMask();\n    }\n  }\n\n  expandSelection() {\n    const self = this;\n    const selectionMask = 1 << this._selectionBit;\n    const tmpMask = 1 << 31;\n\n    // mark atoms to add\n    this._complex.forEachBond((bond) => {\n      if (bond._left.mask & selectionMask) {\n        if ((bond._right.mask & selectionMask) === 0) {\n          bond._right.mask |= tmpMask;\n        }\n      } else if (bond._right.mask & selectionMask) {\n        bond._left.mask |= tmpMask;\n      }\n    });\n\n    // select marked atoms\n    const deselectionMask = ~tmpMask;\n    this._complex.forEachAtom((atom) => {\n      if (atom.mask & tmpMask) {\n        atom.mask = (atom.mask & deselectionMask) | selectionMask;\n        ++self._selectionCount;\n      }\n    });\n\n    this._complex.updateStructuresMask();\n  }\n\n  shrinkSelection() {\n    const self = this;\n    const selectionMask = 1 << this._selectionBit;\n    const tmpMask = 1 << 31;\n\n    // mark atoms neighbouring to unselected ones\n    this._complex.forEachBond((bond) => {\n      if (bond._left.mask & selectionMask) {\n        if ((bond._right.mask & selectionMask) === 0) {\n          bond._left.mask |= tmpMask;\n        }\n      } else if (bond._right.mask & selectionMask) {\n        bond._right.mask |= tmpMask;\n      }\n    });\n\n    // mark hanging atoms\n    this._complex.forEachAtom((atom) => {\n      if ((atom.mask & selectionMask) && (atom.bonds.length === 1)) {\n        atom.mask |= tmpMask;\n      }\n    });\n\n    // deselect marked atoms\n    const deselectionMask = ~(selectionMask | tmpMask);\n    this._complex.forEachAtom((atom) => {\n      if (atom.mask & tmpMask) {\n        atom.mask &= deselectionMask;\n        --self._selectionCount;\n      }\n    });\n\n    this._complex.updateStructuresMask();\n  }\n\n  getSelectedComponent() {\n    const selectionMask = 1 << this._selectionBit;\n\n    let component = null;\n    let multiple = false;\n\n    // find which component is selected (exclusively)\n    this._complex.forEachAtom((atom) => {\n      if (atom.mask & selectionMask) {\n        if (component === null) {\n          component = atom.residue._component;\n        } else if (component !== atom.residue._component) {\n          multiple = true;\n        }\n      }\n    });\n\n    return multiple ? null : component;\n  }\n\n  getSelectionCenter(center, includesAtom, selRule) {\n    center.set(0.0, 0.0, 0.0);\n    let count = 0;\n\n    this._complex.forEachAtom((atom) => {\n      if (includesAtom(atom, selRule)) {\n        center.add(atom.position);\n        count++;\n      }\n    });\n    if (count === 0) {\n      return false;\n    }\n    center.divideScalar(count);\n    center.applyMatrix4(this.matrix);\n    return true;\n  }\n\n  needsRebuild() {\n    if (this._reprListChanged) {\n      return true;\n    }\n    const reprList = this._reprList;\n    for (let i = 0, n = reprList.length; i < n; ++i) {\n      const repr = reprList[i];\n      if (repr.needsRebuild) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Rebuild molecule geometry asynchronously.\n   */\n  rebuild() {\n    const self = this;\n\n    // Destroy current geometry\n    gfxutils.clearTree(this);\n\n    return new Promise(((resolve) => {\n      // Nothing to do?\n      const complex = self._complex;\n      if (!complex) {\n        resolve();\n        return;\n      }\n\n      let errorOccured = false;\n      setTimeout(() => {\n        console.time('build');\n        const reprList = self._reprList;\n        const palette = palettes.get(settings.now.palette) || palettes.first;\n        let hasGeometry = false;\n        for (let i = 0, n = reprList.length; i < n; ++i) {\n          const repr = reprList[i];\n          repr.colorer.palette = palette;\n\n          if (repr.needsRebuild) {\n            repr.reset();\n\n            try {\n              repr.buildGeometry(complex);\n            } catch (e) {\n              if (e instanceof utils.OutOfMemoryError) {\n                repr.needsRebuild = false;\n                repr.reset();\n                logger.error(`Not enough memory to build geometry for representation ${repr.index + 1}`);\n                errorOccured = true;\n              } else {\n                throw e;\n              }\n            }\n\n            if (DEBUG && !errorOccured) {\n              logger.debug(`Triangles count: ${meshutils.countTriangles(repr.geo)}`);\n            }\n          }\n\n          hasGeometry = errorOccured || hasGeometry || gfxutils.groupHasGeometryToRender(repr.geo);\n\n          if (repr.geo) {\n            self.add(repr.geo);\n          }\n        }\n\n        self._reprListChanged = false;\n\n        console.timeEnd('build');\n        resolve();\n      }, 10);\n    }));\n  }\n\n  setNeedsRebuild() {\n    // invalidate all representations\n    const reprList = this._reprList;\n    for (let i = 0, n = reprList.length; i < n; ++i) {\n      reprList[i].needsRebuild = true;\n    }\n  }\n\n  rebuildSelectionGeometry() {\n    const mask = 1 << this._selectionBit;\n\n    gfxutils.clearTree(this._selectionGeometry);\n\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\n      const repr = this._reprList[i];\n      const sg = repr.buildSelectionGeometry(mask);\n      if (!sg) {\n        continue;\n      }\n\n      this._selectionGeometry.add(sg);\n      for (let j = 0; j < sg.children.length; j++) {\n        const m = sg.children[j];\n\n        // copy component transform (that's not applied yet)\n        // TODO make this code obsolete, accessing editor is bad\n        if (this._editor && this._editor._componentTransforms) {\n          const t = this._editor._componentTransforms[m._component._index];\n          if (t) {\n            m.position.copy(t.position);\n            m.quaternion.copy(t.quaternion);\n          }\n        }\n      }\n\n      gfxutils.applySelectionMaterial(sg);\n    }\n  }\n\n  _buildSelectorFromSortedLists(atoms, residues, chains) {\n    const complex = this._complex;\n\n    function optimizeList(list) {\n      const result = [];\n      let k = 0;\n      let first = NaN;\n      let last = NaN;\n      for (let i = 0, n = list.length; i < n; ++i) {\n        const value = list[i];\n        if (value === last + 1) {\n          last = value;\n        } else {\n          if (!Number.isNaN(first)) {\n            result[k++] = new selectors.Range(first, last);\n          }\n          first = last = value;\n        }\n      }\n      if (!Number.isNaN(first)) {\n        result[k] = new selectors.Range(first, last);\n      }\n      return result;\n    }\n\n    let expression = null;\n    if (chains.length === complex._chains.length) {\n      expression = selectors.all();\n    } else {\n      let selector;\n      if (chains.length > 0) {\n        selector = selectors.chain(chains);\n        expression = expression ? selectors.or(expression, selector) : selector;// NOSONAR\n      }\n      if (Object.keys(residues).length > 0) {\n        for (const ch in residues) {\n          if (residues.hasOwnProperty(ch)) {\n            selector = selectors.and(\n              selectors.chain(ch),\n              selectors.residx(optimizeList(residues[ch])),\n            );\n            expression = expression ? selectors.or(expression, selector) : selector;\n          }\n        }\n      }\n      if (atoms.length > 0) {\n        selector = selectors.serial(optimizeList(atoms));\n        expression = expression ? selectors.or(expression, selector) : selector;\n      }\n\n      if (!expression) {\n        expression = selectors.none();\n      }\n    }\n\n    return expression;\n  }\n\n  buildSelectorFromMask(mask) {\n    const complex = this._complex;\n    const chains = [];\n    const residues = {};\n    const atoms = [];\n\n    complex.forEachChain((chain) => {\n      if (chain._mask & mask) {\n        chains.push(chain._name);\n      }\n    });\n\n    complex.forEachResidue((residue) => {\n      if (residue._mask & mask && !(residue._chain._mask & mask)) {\n        const c = residue._chain._name;\n        if (!(c in residues)) {\n          residues[c] = [residue._index];\n        } else {\n          residues[c].push(residue._index);\n        }\n      }\n    });\n\n    complex.forEachAtom((atom) => {\n      if (atom.mask & mask && !(atom.residue._mask & mask)) {\n        atoms.push(atom.serial);\n      }\n    });\n\n    return this._buildSelectorFromSortedLists(atoms, residues, chains);\n  }\n\n  forSelectedResidues(process) {\n    const selectionMask = 1 << this._selectionBit;\n    this._complex.forEachResidue((residue) => {\n      if (residue._mask & selectionMask) {\n        process(residue);\n      }\n    });\n  }\n\n  beginComponentEdit() {\n    if (this._editor) {\n      return null;\n    }\n\n    const editor = new ComplexVisualEdit.ComponentEditor(this);\n    if (!editor.begin()) {\n      return null;\n    }\n\n    this._editor = editor;\n    return editor;\n  }\n\n  beginFragmentEdit() {\n    if (this._editor) {\n      return null;\n    }\n\n    const editor = new ComplexVisualEdit.FragmentEditor(this);\n    if (!editor.begin()) {\n      return null;\n    }\n\n    this._editor = editor;\n    return editor;\n  }\n\n  // should only be called by editors\n  finalizeEdit() {\n    this._editor = null;\n  }\n\n  setMaterialValues(values, needTraverse = false, process = undefined) {\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\n      const rep = this._reprList[i];\n      rep.material.setValues(values);\n      if (needTraverse) {\n        rep.geo.traverse((object) => {\n          if (object instanceof THREE.Mesh) {\n            object.material.setValues(values);\n\n            if (process !== undefined) {\n              process(object);\n            }\n\n            object.material.needsUpdate = true;\n          }\n        });\n      }\n    }\n  }\n\n  setUberOptions(values) {\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\n      const rep = this._reprList[i];\n      rep.material.setUberOptions(values);\n    }\n  }\n\n  /**\n   * Build selector that contains all atoms within given distance from group of atoms\n   * @param {Selector} selector - selector describing source group of atoms\n   * @param {number} radius - distance\n   * @returns {Selector} selector describing result group of atoms\n   */\n  within(selector, radius) {\n    const vw = this._complex.getVoxelWorld();\n    if (vw === null) {\n      return false;\n    }\n\n    // mark atoms of the group as selected\n    const selectionMask = 1 << this._selectionBit;\n    this._complex.markAtoms(selector, selectionMask);\n\n    // mark all atoms within distance as selected\n    if (vw) {\n      vw.forEachAtomWithinDistFromMasked(this._complex, selectionMask, Number(radius), (atom) => {\n        atom.mask |= selectionMask;\n      });\n    }\n\n    // update selection count\n    this._selectionCount = this._complex.countAtomsByMask(selectionMask);\n\n    // update secondary structure mask\n    this._complex.updateStructuresMask();\n\n    return this.buildSelectorFromMask(selectionMask);\n  }\n}\n// 32 bits = 30 bits for reps + 1 for selection + 1 for selection expansion\nComplexVisual.NUM_REPRESENTATION_BITS = 30;\n\nexport default ComplexVisual;\n","/* eslint-disable no-magic-numbers */\n/* eslint-disable guard-for-in */\nimport * as THREE from 'three';\nimport vertexVolumeFaces from './VolumeFaces.vert';\nimport fragmentVolumeFaces from './VolumeFaces.frag';\nimport vertexVolume from './Volume.vert';\nimport fragmentVolume from './Volume.frag';\nimport vertexFarPlane from './VolumeFarPlane.vert';\nimport fragmentFarPlane from './VolumeFarPlane.frag';\nimport settings from '../../settings';\n\nconst volumeUniforms = THREE.UniformsUtils.merge([\n  {\n    volumeDim: { type: 'v3', value: new THREE.Vector3(512, 512, 512) },\n    tileTex: { type: 't', value: null },\n    tileTexSize: { type: 'v2', value: new THREE.Vector2(512, 512) },\n    tileStride: { type: 'v2', value: new THREE.Vector2(512, 512) },\n\n    boxAngles: { type: 'v3', value: new THREE.Vector3(1, 1, 1) },\n    delta: { type: 'v3', value: new THREE.Vector3(0, 0, 0) },\n\n    _isoLevel0: { type: 'v2', value: new THREE.Vector3(0.5, 0.75, 1.0) },\n    _flipV: { type: 'f', value: 0.0 },\n    _BFLeft: { type: 't', value: null },\n    _BFRight: { type: 't', value: null },\n    _FFLeft: { type: 't', value: null },\n    _FFRight: { type: 't', value: null },\n    _WFFLeft: { type: 't', value: null },\n    _WFFRight: { type: 't', value: null },\n  },\n]);\n\nfunction overrideUniforms(params, defUniforms) {\n  const uniforms = THREE.UniformsUtils.clone(defUniforms);\n  for (const p in params) {\n    if (uniforms.hasOwnProperty(p)) {\n      uniforms[p].value = params[p];\n    }\n  }\n  return uniforms;\n}\n\nfunction facesPosMaterialParams(params, sideType) {\n  return {\n    uniforms: overrideUniforms(params, {}),\n    vertexShader: vertexVolumeFaces,\n    fragmentShader: fragmentVolumeFaces,\n    transparent: false,\n    depthTest: false,\n    depthWrite: false,\n    side: sideType,\n  };\n}\n\nclass BackFacePosMaterial extends THREE.ShaderMaterial {\n  constructor(params) {\n    const backFaceParams = facesPosMaterialParams(params, THREE.BackSide);\n    super(backFaceParams);\n  }\n}\n\nclass ShaderParams {\n  constructor(params, uniforms, vertexShader, fragmentShader) {\n    this.uniforms = overrideUniforms(params, uniforms);\n    this.vertexShader = vertexShader;\n    this.fragmentShader = fragmentShader;\n    this.transparent = false;\n    this.depthTest = false;\n    this.depthWrite = false;\n    this.side = THREE.FrontSide;\n  }\n}\n\nclass BackFacePosMaterialFarPlane extends THREE.ShaderMaterial {\n  constructor(params) {\n    const matUniforms = THREE.UniformsUtils.merge([\n      {\n        aspectRatio: { type: 'f', value: 0.0 },\n        farZ: { type: 'f', value: 0.0 },\n        tanHalfFOV: { type: 'f', value: 0.0 },\n        matWorld2Volume: { type: '4fv', value: new THREE.Matrix4() },\n      },\n    ]);\n\n    const shaderParams = new ShaderParams(params, matUniforms, vertexFarPlane, fragmentFarPlane);\n    super(shaderParams);\n  }\n}\n\nclass FrontFacePosMaterial extends THREE.ShaderMaterial {\n  constructor(params) {\n    const frontFaceParams = facesPosMaterialParams(params, THREE.FrontSide);\n    super(frontFaceParams);\n  }\n}\n\nclass VolumeMaterial extends THREE.ShaderMaterial {\n  constructor(params) {\n    const shaderParams = new ShaderParams(params, volumeUniforms, vertexVolume, fragmentVolume);\n    shaderParams.transparent = true;\n    shaderParams.depthTest = true;\n\n    super(shaderParams);\n    this.updateDefines();\n  }\n\n  updateDefines() {\n    this.defines = {\n      ISO_MODE: settings.now.modes.VD.isoMode,\n      STEPS_COUNT: settings.now.modes.VD.polyComplexity[settings.now.resolution] * 100,\n    };\n    this.needsUpdate = true;\n  }\n}\n\nexport default {\n  BackFacePosMaterial,\n  BackFacePosMaterialFarPlane,\n  FrontFacePosMaterial,\n  VolumeMaterial,\n};\n","export default \"varying vec3 pos;\\n\\nvoid main() {\\n  // we're assuming local position is in [-0.5, 0.5]\\n  // we need to offset it to be represented in RGB\\n  pos = position.xyz + 0.5;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\";","export default \"varying vec3 pos;\\n\\nvoid main() {\\n  gl_FragColor = vec4(pos, 0.5);\\n}\";","export default \"varying vec4 volPos;\\nuniform float aspectRatio;\\nuniform float farZ;\\nuniform float tanHalfFOV;\\nuniform mat4  matWorld2Volume;\\n\\nvoid main() {\\n  // rescale plane to fill in the whole far plane area seen from camera\\n  vec3 pos = position.xyz;\\n  pos.x = pos.x * tanHalfFOV * farZ * aspectRatio;\\n  pos.y = pos.y * tanHalfFOV * farZ;\\n  // common transformation\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\\n  // calc pos in volume CS\\n  volPos = matWorld2Volume * modelMatrix * vec4(pos, 1.0);\\n  // we're assuming local position is in [-0.5, 0.5]\\n  // we need to offset it to be represented in RGB\\n  volPos = volPos + 0.5;\\n  volPos.w = 0.5;\\n}\\n\";","export default \"varying vec4 volPos;\\n\\nvoid main() {\\n  gl_FragColor = volPos;\\n}\";","export default \"varying vec4 screenSpacePos;\\n\\nvoid main() {\\n  screenSpacePos = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n  gl_Position = screenSpacePos;\\n}\";","export default \"uniform mat4 projectionMatrix;\\n\\n// 3D volume texture\\nuniform vec3 volumeDim;    // volume dimensions, pixels\\nuniform sampler2D tileTex; // tiled texture containing all Z-slices of a 3D data\\nuniform vec2 tileTexSize;  // size of tiled texture, pixels\\nuniform vec2 tileStride;   // UV stride between slices in tile tex, pixels\\n\\nuniform vec3 boxAngles;//value of angles({x: alpha, y:beta, z:gamma}) types 1 - if angle is obtuse, 0 - if acute\\nuniform vec3 delta; //Projection box delta's from non-orthogonal origin axes; {x: XY, y : XZ, z: YZ}\\n\\nuniform vec3 _isoLevel0;\\nuniform float _flipV;\\nuniform sampler2D _BFLeft;\\nuniform sampler2D _BFRight;\\nuniform sampler2D _FFLeft;\\nuniform sampler2D _FFRight;\\nuniform sampler2D _WFFLeft;\\nuniform sampler2D _WFFRight;\\n\\nvarying vec4 screenSpacePos;\\n\\n#define NO_COLOR vec4(0., 0., 0., 0.)\\n\\nvec4 sample3DTexture(vec3 texCoord) {\\n  // a pair of Z slices is determined by nearest slice border\\n  float zSliceBorder = floor(texCoord.z * volumeDim.z + 0.5);\\n  float zSliceNumber1 = max(zSliceBorder - 1.0, 0.0);\\n  float zSliceNumber2 = min(zSliceBorder, volumeDim.z - 1.0);\\n\\n  float rowTiles = floor(tileTexSize.x / tileStride.x);\\n\\n  // calculate coords in tile texture for both slices\\n  vec2 tileOffset = vec2(mod(zSliceNumber1, rowTiles), floor(zSliceNumber1 / rowTiles));\\n  vec2 texCoordSlice1 = (texCoord.xy * volumeDim.xy + tileOffset * tileStride) / tileTexSize.xy;\\n  tileOffset = vec2(mod(zSliceNumber2, rowTiles), floor(zSliceNumber2 / rowTiles));\\n  vec2 texCoordSlice2 = (texCoord.xy * volumeDim.xy + tileOffset * tileStride) / tileTexSize.xy;\\n\\n  // bilinear filtering\\n  vec4 colorSlice1 = texture2D(tileTex, texCoordSlice1);\\n  vec4 colorSlice2 = texture2D(tileTex, texCoordSlice2);\\n  float weightSlice2 = texCoord.z * volumeDim.z - (zSliceNumber1 + 0.5);\\n  return mix(colorSlice1, colorSlice2, weightSlice2);\\n}\\n\\nvec4 sample3DTextureInclined(vec3 boxCoord) { // delta:{ x: XY, y : XZ, z: YZ }\\n  vec3 textCoord = boxCoord;\\n  vec2 currDelta = mix(boxCoord.zz, vec2(1., 1.) - boxCoord.zz, boxAngles.yx) * delta.yz;\\n\\n  textCoord.y = (boxCoord.y  - currDelta.y) / (1. - delta.z);\\n  if (textCoord.y < 0.0 || textCoord.y > 1.0)\\n    return NO_COLOR;\\n\\n  currDelta.x += mix(textCoord.y, 1.0 - textCoord.y, boxAngles.z) * delta.x;\\n\\n  textCoord.x = (boxCoord.x - currDelta.x) / (1. - delta.x - delta.y);\\n  if (textCoord.x < 0.0 || textCoord.x > 1.0)\\n    return NO_COLOR;\\n\\n  return sample3DTexture(textCoord);\\n}\\n\\nfloat CalcColor(vec3 iter, vec3 dir) {\\n  float d = 1. / 128.;\\n  vec3 dx = vec3(d, 0.0, 0.0);\\n  vec3 dy = vec3(0.0, d, 0.0);\\n  vec3 dz = vec3(0.0, 0.0, d);\\n\\n  // #Opt: coordInc.x:(iter + dx).x > 1. ? 0.: sample3DTextureInclined(iter + dx).x,\\n  vec3 coordInc = mix(\\n    vec3(\\n      sample3DTextureInclined(iter + dx).x,\\n      sample3DTextureInclined(iter + dy).x,\\n      sample3DTextureInclined(iter + dz).x\\n    ),\\n    vec3(0. ,0. , 0.),\\n    vec3(floor((iter + dx).x), floor((iter + dy).y), floor((iter + dz).z))\\n  );\\n\\n  // #Opt: coordDec.x:(iter - dx).x < 0. ? 0.: sample3DTextureInclined(iter - dx).x,\\n  vec3 coordDec = mix(\\n    vec3(0. ,0. , 0.),\\n    vec3(\\n      sample3DTextureInclined(iter - dx).x,\\n      sample3DTextureInclined(iter - dy).x,\\n      sample3DTextureInclined(iter - dz).x\\n    ),\\n    vec3(ceil((iter - dx).x), ceil((iter - dy).y), ceil((iter - dz).z))\\n  );\\n\\n  vec3 N = normalize(coordInc - coordDec);\\n  float dif = max(0.0, dot(N, dir));\\n  return dif;\\n}\\n\\nvec3 AccuracyIso(vec3 left, vec3 right, float volLeft, float threshold) {\\n  for (int i = 0; i < 5; i++) {\\n    vec3 iterator = 0.5 * (left + right);\\n    float vol = sample3DTextureInclined(iterator).r;\\n    if ((volLeft - threshold) * (vol - threshold) < 0.)\\n      right = iterator;\\n    else\\n      left = iterator;\\n  }\\n  return 0.5 * (left + right);\\n}\\n\\nvec3 CorrectIso(vec3 left, vec3 right, float tr) {\\n  for (int j = 0; j < 5; j++) {\\n    vec3 iterator = 0.5 * (left + right);\\n    float vol = sample3DTextureInclined(iterator).r;\\n    if (vol < tr)\\n      right = iterator;\\n    else\\n      left = iterator;\\n  }\\n  return 0.5 * (left + right);\\n}\\n\\nvec4 GetIso1(vec3 start, vec3 back, float molDist, vec3 dir, float tr, int count) {\\n  float vol, stepSize = (float(count) + 2.) / float(STEPS_COUNT);\\n  vec3 step = stepSize * dir, iterator = start, left, right;\\n  vec4 acc = NO_COLOR;\\n\\n  for (int i = 0; i < STEPS_COUNT; i++) {\\n    iterator = iterator + step;\\n    vol = sample3DTextureInclined(iterator).r;\\n    if (length(iterator - back) <= stepSize || (vol > tr))\\n      break;\\n  }\\n\\n  if (vol > tr)\\n    acc = vec4(CorrectIso(iterator, iterator - step, tr).xyz, 1.);\\n\\n  return acc;\\n}\\n\\nfloat easeOut(float x0, float x1, float x) {\\n  float t = clamp((x - x0) / (x1 - x0), 0.0, 1.0);\\n  return 1.0 - (1.0 - t) * (1.0 - t);\\n}\\n\\nfloat easeIn(float x0, float x1, float x) {\\n  float t = clamp((x - x0) / (x1 - x0), 0.0, 1.0);\\n  return t * t;\\n}\\n\\nvec3 GetColSimple(float vol) {\\n  float t = easeOut(_isoLevel0.x, _isoLevel0.y, vol);\\n  float s = easeIn(_isoLevel0.y, _isoLevel0.z, vol);\\n  return vec3(0.5, 0.6, 0.7) * (1.0 - t) + 2.0 * vec3(s, 0, 0);\\n}\\n\\nvec4 VolRender(vec3 start, vec3 back, float molDist, vec3 dir) {\\n  vec4 acc = NO_COLOR, iso;\\n  vec3 iterator = start, sumColor = vec3(0., 0., 0.);\\n  float stepSize, alpha, sumAlpha = 0.0, vol, curStepSize, molD;\\n  vec3 step, col, colOld, right;\\n  float tr0 = _isoLevel0.x;\\n  float dif, r, kd, finish;\\n  int count = 0, stopMol = 0;\\n\\n  for (int k = 0; k < 3; k++) {\\n    stepSize = (float(k) + 2.) / float(STEPS_COUNT);\\n    kd = 140. * tr0 * stepSize;\\n    r = 1. - kd;\\n    step = stepSize * dir;\\n    iso = GetIso1(iterator, back, molDist, dir, tr0, k);\\n    if (iso.a < 0.1 || length(iso.xyz - start) > molDist)\\n      break;\\n    iterator = iso.xyz;\\n    dif = 1.;// CalcColor(iterator, dir);\\n    colOld = GetColSimple(tr0);\\n    curStepSize = stepSize;\\n    for (int i = 0; i < STEPS_COUNT; i++) {\\n      iterator = iterator + step;\\n      molD = length(iterator - start);\\n      vol = sample3DTextureInclined(iterator).r;\\n      finish = distance(iterator, back) - stepSize;\\n      if (finish < 0.0 || vol < tr0 || (sumAlpha > 0.97) || molD > molDist)\\n        break;\\n      alpha = (1. - r);\\n      col = GetColSimple(vol);\\n      vol = sample3DTextureInclined(iterator - 0.5 * step).r;\\n      vec3 colMid = GetColSimple(vol);\\n      sumColor += (1. - sumAlpha) * (colOld + 4.* colMid + col) * alpha / 6.;\\n      sumAlpha += (1. - sumAlpha) * alpha;// *(1. - 1.0*dif*dif);\\n      colOld = col;\\n    } // for i\\n\\n    if (finish < 0.0 || sumAlpha > 0.97)\\n      break;\\n\\n    if (molD > molDist) {\\n      curStepSize = stepSize - (molD - molDist);\\n      right = iterator - (molD - molDist) * dir;\\n      vol = sample3DTextureInclined(right).r;\\n    } else {\\n      vec3 left = iterator - step;\\n      right = CorrectIso(left, iterator, tr0);\\n      curStepSize = distance(left, right);\\n      vol = tr0;\\n    }\\n\\n    alpha = (1. - r) * curStepSize / stepSize;\\n    dif = 1.;// CalcColor(right, dir);\\n    col = GetColSimple(vol);\\n    vol = sample3DTextureInclined(iterator - 0.5 * curStepSize / stepSize * step).r;\\n    vec3 colMid = GetColSimple(vol);\\n    sumColor += (1. - sumAlpha) * (colOld + 4. * colMid + col) * alpha / 6.;\\n    sumAlpha += (1. - sumAlpha) * alpha;// *(1. - 1.0*dif*dif);\\n\\n    if (molD > molDist)\\n      break;\\n  } // for k\\n  acc.rgb = 1. * sumColor / sumAlpha;\\n  acc.a = sumAlpha;\\n  return acc;\\n}\\n\\nvec4 VolRender1(vec3 start, vec3 back, float molDist, vec3 dir) {\\n  float stepSize = 1.0 / float(STEPS_COUNT);\\n  float len = length(back - start);\\n  vec3 step = stepSize * dir;\\n  vec3 iterator = start;\\n  float acc = 0.0;\\n\\n  for (int i = 0; i < STEPS_COUNT; i++) {\\n    if (float(i) * stepSize > len)\\n      break;\\n    iterator = iterator + step;\\n    if (sample3DTextureInclined(iterator).r > _isoLevel0.x)\\n      acc += 10. * sample3DTextureInclined(iterator).r / float(STEPS_COUNT);\\n  }\\n\\n  return vec4(1.,1.,1., acc);\\n}\\n\\nvec4 IsoRender(vec3 start, vec3 back, float molDist, vec3 dir) {\\n  vec4 tst = GetIso1(start, back, 2., dir, _isoLevel0.x, 0);\\n  vec4 col = NO_COLOR;\\n\\n  if (length(tst.xyz - start) < molDist && tst.a > 0.1) {\\n    float dif =  CalcColor(tst.xyz, dir);\\n    dif = 0.9 * dif * dif;\\n    col = vec4(dif, dif, dif, 1);\\n  }\\n  return col;\\n}\\n\\nvec4 VolRender2(vec3 start, vec3 back, float molDist, vec3 dir) {\\n  return sample3DTexture(start);\\n}\\n\\nvoid main() {\\n  vec3 tc = screenSpacePos.xyz / screenSpacePos.w * 0.5 + 0.5;\\n\\n  if (_flipV > 0.0) {\\n    tc.y = 1.0 - tc.y;\\n  }\\n\\n  vec3 start;\\n  vec3 back;\\n  vec3 molBack;\\n  if (projectionMatrix[0][2] < 0.0) {\\n    start = texture2D(_FFLeft, tc.xy).xyz;\\n    back = texture2D(_BFLeft, tc.xy).xyz;\\n    molBack = texture2D(_WFFLeft, tc.xy).xyz;\\n  } else {\\n    start = texture2D(_FFRight, tc.xy).xyz;\\n    back = texture2D(_BFRight, tc.xy).xyz;\\n    molBack = texture2D(_WFFRight, tc.xy).xyz;\\n  }\\n\\n  vec3 dir = normalize(back - start);\\n\\n  float molDist = 2.0;\\n  if (length(molBack) > 0.001) {\\n    molDist = distance(start, molBack);\\n  }\\n\\n  #ifdef ISO_MODE\\n    gl_FragColor = IsoRender(start, back, molDist, dir);\\n  #else\\n    gl_FragColor = VolRender(start, back, molDist, dir);\\n  #endif\\n}\\n\";","import * as THREE from 'three';\nimport VolumeMaterial from './shaders/VolumeMaterial';\nimport settings from '../settings';\n\nclass VolumeMesh extends THREE.Mesh {\n  volumeInfo = {}; // data for noise filter\n\n  constructor() {\n    const geo = new THREE.BufferGeometry();\n    super(geo);\n    this.clipPlane = new THREE.Plane();\n    const size = new THREE.Vector3(0.5, 0.5, 0.5);\n    this.size = size;\n\n    this.cullFlag = [\n      true, true, true, true,\n      true, true, true, true,\n      false, false, false, false, false, false,\n    ];\n\n    this.faces = [\n      { indices: [], norm: new THREE.Vector3(0, 0, -1) },\n      { indices: [], norm: new THREE.Vector3(0, 0, 1) },\n      { indices: [], norm: new THREE.Vector3(0, -1, 0) },\n      { indices: [], norm: new THREE.Vector3(0, 1, 0) },\n      { indices: [], norm: new THREE.Vector3(-1, 0, 0) },\n      { indices: [], norm: new THREE.Vector3(1, 0, 0) },\n      { indices: [], norm: new THREE.Vector3(0, 0, 0) },\n    ];\n\n    this.vertices = [\n      new THREE.Vector3(-size.x, -size.y, -size.z),\n      new THREE.Vector3(-size.x, size.y, -size.z),\n      new THREE.Vector3(size.x, -size.y, -size.z),\n      new THREE.Vector3(size.x, size.y, -size.z),\n      new THREE.Vector3(-size.x, -size.y, size.z),\n      new THREE.Vector3(-size.x, size.y, size.z),\n      new THREE.Vector3(size.x, -size.y, size.z),\n      new THREE.Vector3(size.x, size.y, size.z),\n      new THREE.Vector3(0.0, 0.0, 0.0), // Placeholder for section\n      new THREE.Vector3(0.0, 0.0, 0.0),\n      new THREE.Vector3(0.0, 0.0, 0.0),\n      new THREE.Vector3(0.0, 0.0, 0.0),\n      new THREE.Vector3(0.0, 0.0, 0.0),\n      new THREE.Vector3(0.0, 0.0, 0.0),\n    ];\n\n    geo.setAttribute('position', new THREE.BufferAttribute(new Float32Array(this.vertices.length * 3), 3));\n\n    this.name = 'VolumeMesh';\n  }\n\n  static _corners = [\n    // x, y, z, edge1, edge2, edge3\n    [-1, -1, -1, 0, 4, 8],\n    [1, -1, -1, 0, 5, 9],\n    [1, 1, -1, 1, 5, 10],\n    [-1, 1, -1, 1, 4, 11],\n    [-1, -1, 1, 2, 6, 8],\n    [1, -1, 1, 2, 7, 9],\n    [1, 1, 1, 3, 7, 10],\n    [-1, 1, 1, 3, 6, 11],\n  ];\n\n  static _edges = [\n    // corner1, corner2, center_x, center_y, center_z\n    [0, 1, 0, -1, -1],\n    [2, 3, 0, 1, -1],\n    [4, 5, 0, -1, 1],\n    [6, 7, 0, 1, 1],\n    [0, 3, -1, 0, -1],\n    [1, 2, 1, 0, -1],\n    [4, 7, -1, 0, 1],\n    [5, 6, 1, 0, 1],\n    [0, 4, -1, -1, 0],\n    [1, 5, 1, -1, 0],\n    [2, 6, -1, 1, 0],\n    [3, 7, 1, 1, 0],\n  ];\n\n  static _edgeIntersections = (function () {\n    const edgeIntersections = [];\n    for (let j = 0; j < 12; ++j) {\n      edgeIntersections.push(new THREE.Vector3());\n    }\n    return edgeIntersections;\n  }());\n\n  _updateVertices() {\n    // Algorithm:\n    // 1. Get plane parameters\n    // 2. Compute culling flags for all vertices\n    // 3. If intersection occurs => compute from 3 to 6 intersection points\n    const corners = VolumeMesh._corners;\n    const edges = VolumeMesh._edges;\n    const edgeIntersections = VolumeMesh._edgeIntersections;\n\n    let i;\n\n    const norm = this.clipPlane.normal;\n    const D = this.clipPlane.constant;\n\n    const vert = this.vertices;\n    const { size } = this;\n\n    const cornerMark = [0, 0, 0, 0, 0, 0, 0, 0];\n    const edgeMark = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n\n    const curEdge = new THREE.Vector3();\n    let curEdgeInter = null;\n\n    function CheckX() {\n      if (norm.x === 0) return 0;\n      const x = -(norm.dot(curEdge) + D) / norm.x;\n      if (-size.x <= x && x <= size.x) {\n        curEdgeInter.set(x, curEdge.y, curEdge.z);\n        if (x === size.x) return 2;\n        if (x === -size.x) return -2;\n        return 1;\n      }\n      return 0;\n    }\n\n    function CheckY() {\n      if (norm.y === 0) return 0;\n      const y = -(norm.dot(curEdge) + D) / norm.y;\n      if (-size.y <= y && y <= size.y) {\n        curEdgeInter.set(curEdge.x, y, curEdge.z);\n        if (y === size.y) return 2;\n        if (y === -size.y) return -2;\n        return 1;\n      }\n      return 0;\n    }\n\n    function CheckZ() {\n      if (norm.z === 0) return 0;\n      const z = -(norm.dot(curEdge) + D) / norm.z;\n      if (-size.z <= z && z <= size.z) {\n        curEdgeInter.set(curEdge.x, curEdge.y, z);\n        if (z === size.z) return 2;\n        if (z === -size.z) return -2;\n        return 1;\n      }\n      return 0;\n    }\n\n    // for each edge\n    for (let curEdgeIdx = 0; curEdgeIdx < 12; ++curEdgeIdx) {\n      const curEdgeSource = edges[curEdgeIdx];\n      curEdgeInter = edgeIntersections[curEdgeIdx];\n\n      curEdge.set(curEdgeSource[2], curEdgeSource[3], curEdgeSource[4]);\n      curEdge.multiply(size);\n\n      // calculate intersection point\n      let flag = 0;\n      if (curEdgeSource[2] === 0) flag = CheckX();\n      if (curEdgeSource[3] === 0) flag = CheckY();\n      if (curEdgeSource[4] === 0) flag = CheckZ();\n\n      // mark corresponding corner (if plane cuts through one)\n      if (flag === -2) {\n        cornerMark[curEdgeSource[0]] = 1;\n      } else if (flag === 2) {\n        cornerMark[curEdgeSource[1]] = 1;\n      } else if (flag === 0) {\n        // edge is not intersected by the plane (doesn't produce a vertex)\n        edgeMark[curEdgeIdx] = 0;\n      }\n    }\n\n    const face = {\n      indices: [],\n      norm: norm.clone().negate(),\n    };\n\n    let nextVertex = 8;\n\n    // for each marked corner\n    for (i = 0; i < 8; ++i) {\n      if (cornerMark[i] === 1) {\n        // add corner as vertex to the face\n        vert[nextVertex].set(corners[i][0], corners[i][1], corners[i][2]).multiply(size);\n        face.indices.push(nextVertex++);\n        // skip adjacent edges\n        edgeMark[corners[i][3]] = 0;\n        edgeMark[corners[i][4]] = 0;\n        edgeMark[corners[i][5]] = 0;\n      }\n    }\n\n    // for each edge that has internal intersection\n    for (i = 0; i < 12; ++i) {\n      if (edgeMark[i] === 1) {\n        // add intersection point as vertex to the face\n        vert[nextVertex].copy(edgeIntersections[i]);\n        face.indices.push(nextVertex++);\n      }\n    }\n\n    this.faces[6] = face;\n\n    const diff = new THREE.Vector3();\n    const coplanarPoint = new THREE.Vector3();\n    this.clipPlane.coplanarPoint(coplanarPoint);\n    for (i = 0; i < vert.length; ++i) {\n      this.cullFlag[i] = false;\n      if (i < 8) {\n        // corners should be culled by clipping plane\n        diff.subVectors(vert[i], coplanarPoint);\n        this.cullFlag[i] = (norm.dot(diff) >= 0.0);\n      } else if (i < 8 + face.indices.length) {\n        // cross section vertices don't get culled\n        this.cullFlag[i] = true;\n      }\n    }\n\n    // write data to vertex buffer\n    const positions = this.geometry.getAttribute('position');\n    let idx = 0;\n    for (i = 0; i < vert.length; ++i) {\n      positions.array[idx++] = vert[i].x;\n      positions.array[idx++] = vert[i].y;\n      positions.array[idx++] = vert[i].z;\n    }\n    positions.needsUpdate = true;\n  }\n\n  _collectVertices(face, filter) {\n    let i;\n    const vert = this.vertices;\n    face.indices = [];\n    for (i = 0; i < vert.length; ++i) {\n      if (this.cullFlag[i] && filter(vert[i])) {\n        face.indices.push(i);\n      }\n    }\n  }\n\n  _sortIndices(face, right) {\n    let i;\n    let j;\n    const vert = this.vertices;\n    const angle = [];\n\n    const dir = new THREE.Vector3();\n    for (i = 1; i < face.indices.length; ++i) {\n      dir.subVectors(vert[face.indices[i]], vert[face.indices[0]]);\n      dir.normalize();\n      dir.cross(right);\n      dir.negate();\n      angle[i] = face.norm.dot(dir);\n    }\n\n    // Exchange sort\n    for (i = 1; i < face.indices.length - 1; ++i) {\n      for (j = i + 1; j < face.indices.length; ++j) {\n        if (angle[j] < angle[i]) {\n          // swap\n          let t = angle[i];\n          angle[i] = angle[j];\n          angle[j] = t;\n\n          t = face.indices[i];\n          face.indices[i] = face.indices[j];\n          face.indices[j] = t;\n        }\n      }\n    }\n  }\n\n  _updateIndices() {\n    // Algorithm:\n    // 1. Get plane vertices (from 3 to 6 vertices)\n    // 2. Get \"right\" vector in plane\n    // 3. Sort vertices using Graham-like method\n    // 4. Create indices\n\n    let i;\n    let faceIdx;\n    let face;\n    const vert = this.vertices;\n    const { size } = this;\n\n    this._collectVertices(this.faces[0], (vertex) => vertex.z === -size.z);\n    this._collectVertices(this.faces[1], (vertex) => vertex.z === size.z);\n    this._collectVertices(this.faces[2], (vertex) => vertex.y === -size.y);\n    this._collectVertices(this.faces[3], (vertex) => vertex.y === size.y);\n    this._collectVertices(this.faces[4], (vertex) => vertex.x === -size.x);\n    this._collectVertices(this.faces[5], (vertex) => vertex.x === size.x);\n\n    const vCenter = new THREE.Vector3();\n    const vRight = new THREE.Vector3();\n    const vDir = new THREE.Vector3();\n\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\n      face = this.faces[faceIdx];\n\n      if (face.indices.length === 0) continue;\n\n      vCenter.set(0, 0, 0);\n      for (i = 0; i < face.indices.length; ++i) {\n        vCenter.add(vert[face.indices[i]]);\n      }\n      vCenter.multiplyScalar(1.0 / face.indices.length);\n      vRight.subVectors(vert[face.indices[0]], vCenter);\n      vRight.normalize();\n\n      const rightProj = [];\n      for (i = 0; i < face.indices.length; ++i) {\n        vDir.subVectors(vert[face.indices[i]], vCenter);\n        rightProj[i] = vDir.dot(vRight);\n      }\n      for (i = 1; i < face.indices.length; ++i) {\n        if (rightProj[i] < rightProj[0]) {\n          // swap\n          let t = rightProj[0];\n          rightProj[0] = rightProj[i];\n          rightProj[i] = t;\n\n          [t] = face.indices;\n          face.indices[0] = face.indices[i];\n          face.indices[i] = t;\n        }\n      }\n\n      this._sortIndices(face, vRight);\n    }\n\n    let numIndices = 0;\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\n      face = this.faces[faceIdx];\n      if (face.indices.length >= 3) {\n        numIndices += 3 * (face.indices.length - 2);\n      }\n    }\n    let offset = 0;\n    const indices = new Uint16Array(numIndices);\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\n      face = this.faces[faceIdx];\n      for (i = 0; i < face.indices.length - 2; ++i) {\n        indices[offset] = face.indices[0]; // eslint-disable-line prefer-destructuring\n        indices[offset + 1] = face.indices[i + 1];\n        indices[offset + 2] = face.indices[i + 2];\n        offset += 3;\n      }\n    }\n\n    this.geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n  }\n\n  setDataSource(dataSource) {\n    const vm = new VolumeMaterial.VolumeMaterial();\n    const dim = dataSource.getDimensions();\n    const stride = dataSource.getTiledTextureStride();\n    const texture = dataSource.buildTiledTexture();\n    const bbox = dataSource.getBox();\n    vm.uniforms.volumeDim.value.set(dim[0], dim[1], dim[2]);\n    vm.uniforms.tileTex.value = texture;\n    vm.uniforms.tileTexSize.value.set(texture.image.width, texture.image.height);\n    vm.uniforms.tileStride.value.set(stride[0], stride[1]);\n    Object.assign(this.volumeInfo, dataSource.getVolumeInfo());\n\n    const volInfo = this.volumeInfo;\n    vm.uniforms.delta.value.copy(volInfo.delta);\n    vm.uniforms.boxAngles.value.set(volInfo.obtuseAngle[0], volInfo.obtuseAngle[1], volInfo.obtuseAngle[2]);\n\n    this.material = vm;\n\n    bbox.getSize(this.scale);\n    bbox.getCenter(this.position);\n  }\n\n  _updateIsoLevel() {\n    const { kSigma, kSigmaMed, kSigmaMax } = settings.now.modes.VD;\n    const volInfo = this.volumeInfo;\n    const mean = volInfo.dmean - volInfo.dmin;\n    const span = volInfo.dmax - volInfo.dmin;\n    const level = (k) => (mean + k * volInfo.sd) / span;\n    this.material.uniforms._isoLevel0.value.set(level(kSigma), level(kSigmaMed), level(kSigmaMax));\n  }\n\n  static _nearClipPlaneOffset = 0.2;\n\n  static _pos = new THREE.Vector3();\n\n  static _norm = new THREE.Vector3();\n\n  static _norm4D = new THREE.Vector4();\n\n  static _matrixWorldToLocal = new THREE.Matrix4();\n\n  static _clipPlane = new THREE.Plane();\n\n  rebuild(camera) {\n    const nearClipPlaneOffset = VolumeMesh._nearClipPlaneOffset;\n    const pos = VolumeMesh._pos;\n    const norm = VolumeMesh._norm;\n    const norm4D = VolumeMesh._norm4D;\n    const matrixWorldToLocal = VolumeMesh._matrixWorldToLocal;\n    const clipPlane = VolumeMesh._clipPlane;\n\n    this._updateIsoLevel();\n\n    // get clip plane in local space\n    camera.getWorldDirection(norm);\n    camera.getWorldPosition(pos);\n    pos.addScaledVector(norm, camera.near + nearClipPlaneOffset);\n\n    // transform pos to local CS\n    matrixWorldToLocal.copy(this.matrixWorld).invert();\n    pos.applyMatrix4(matrixWorldToLocal);\n\n    // transform norm to local CS\n    norm4D.set(norm.x, norm.y, norm.z, 0.0); // NOTE: use homogeneous norm for proper transformation\n    norm4D.applyMatrix4(matrixWorldToLocal);\n    norm.copy(norm4D);\n    norm.normalize();\n\n    clipPlane.setFromNormalAndCoplanarPoint(norm, pos);\n\n    if (!this.clipPlane.equals(clipPlane)) {\n      this.clipPlane = clipPlane.clone();\n      this._updateVertices();\n      this._updateIndices();\n    }\n  }\n}\n\nexport default VolumeMesh;\n","import * as THREE from 'three';\nimport gfxutils from './gfxutils';\n\nfunction _flattenArray(input) {\n  const n = input.length;\n  const output = new Float32Array(n * 3);\n  for (let i = 0; i < n; ++i) {\n    const j = 3 * i;\n    const v = input[i];\n    output[j] = v.x;\n    output[j + 1] = v.y;\n    output[j + 2] = v.z;\n  }\n  return output;\n}\n\nclass VolumeBounds {\n  static _projectionTable = { // corresponds between (origin axes and angles between them) and between saving vector coordinates\n    XY: ['x', 2],\n    XZ: ['y', 1],\n    YZ: ['z', 0],\n  };\n\n  constructor(bBox, volInfo) {\n    const { delta } = volInfo; // {x: XY, y : XZ, z: YZ}\n    const { obtuseAngle } = volInfo; // 1 - obtuse, 0 - acute\n\n    const bSize = new THREE.Vector3();\n    bBox.getSize(bSize);\n    bSize.multiplyScalar(0.5);\n\n    const offsetVert = this._getBaseVertices(delta, obtuseAngle);\n\n    const geometry = new THREE.BufferGeometry();\n    const vertices = [];\n\n    for (let i = 0; i < 4; i++) {\n      vertices.push(offsetVert[i].clone().multiply(bSize));\n      vertices.push(offsetVert[(i + 1) % 4].clone().multiply(bSize));\n    }\n    const translation = new THREE.Vector3(2 * bSize.x * (1 - delta.x - delta.y), 0, 0);\n    for (let i = 0; i < 8; i++) {\n      vertices.push(vertices[i].clone().add(translation));\n    }\n    for (let i = 0; i < 4; i++) {\n      vertices.push(vertices[i * 2].clone());\n      vertices.push(vertices[i * 2 + 8].clone());\n    }\n    const center = new THREE.Vector3();\n    bBox.getCenter(center);\n    vertices.forEach((vertex) => vertex.add(center)); // pivot shift\n\n    const flatVertices = _flattenArray(vertices);\n    geometry.setAttribute('position', new THREE.BufferAttribute(flatVertices, 3));\n\n    this._lines = new THREE.LineSegments(geometry, new THREE.LineBasicMaterial({ color: 0xFFFFFF }));\n    this._lines.layers.set(gfxutils.LAYERS.VOLUME);\n  }\n\n  // Set one edge (4 points) of frame, from which with parallel transfer  the rest of the frame points can be obtained\n  _getBaseVertices(delta, obtuseAngle) {\n    const projTable = VolumeBounds._projectionTable;\n\n    const proj = ((index, inv) => { // tricky function to take account of projections: their position(related to box) and sign\n      const currDelta = delta[projTable[index][0]];\n      const angleValue = -0.5 * (inv - 1) + inv * obtuseAngle[projTable[index][1]];// inv = 1: alpha; inv = -1: 1 - alpha\n      return angleValue * currDelta;\n    });\n\n    const offsetVert = [\n      new THREE.Vector3(-1 + 2 * (proj('XZ', 1) + proj('XY', 1)), -1 + 2 * proj('YZ', 1), -1),\n      new THREE.Vector3(-1 + 2 * (proj('XZ', -1) + proj('XY', 1)), -1 + 2 * proj('YZ', -1), 1),\n      new THREE.Vector3(-1 + 2 * (proj('XZ', -1) + proj('XY', -1)), 1 - 2 * proj('YZ', 1), 1),\n      new THREE.Vector3(-1 + 2 * (proj('XZ', 1) + proj('XY', -1)), 1 - 2 * proj('YZ', -1), -1),\n    ];\n\n    return offsetVert;\n  }\n\n  getMesh() {\n    return this._lines;\n  }\n}\n\nexport default VolumeBounds;\n","import * as THREE from 'three';\nimport VolumeMaterial from './shaders/VolumeMaterial';\nimport meshes from './meshes/meshes';\nimport gfxutils from './gfxutils';\n\n// Thes geometric far plane is required for correct filling in the BFTexture in case, when far plane cuts the volume\n// cube. In cut place of cube there is no correct data in BFTexture and volume rendering integral is calculated\n// with errors.\n// Far plane cuts the cube in case of large volume scale (zoom), because farplane doesn't change\nclass VolumeFarPlane {\n  // create plane with unit corners coords (for future rescale in vshader according to camera properties)\n  constructor(volume, width, height) {\n    const planeGeo = this._initPlaneGeo(width, height);\n\n    const mat = new VolumeMaterial.BackFacePosMaterialFarPlane();\n    this._plane = new meshes.Mesh(planeGeo, mat);\n    this._plane.frustumCulled = false;\n    this._plane.doubleSided = true;\n    const matWorldToVolume = new THREE.Matrix4();\n\n    this._plane._onBeforeRender = function (_renderer, _scene, camera, _geometry, _material, _group) {\n      const { material } = this;\n      if (!volume || !material) {\n        return;\n      }\n\n      // count point in world at farplane place\n      const planeCamPos = new THREE.Vector4(0, 0, -(camera.far - 0.1), 1);\n      planeCamPos.applyMatrix4(camera.matrixWorld);\n\n      // recalc matrices to make plane be placed as farplane in the World relative to camera\n      this.matrix.identity();\n      this.matrix.makeTranslation(planeCamPos.x, planeCamPos.y, planeCamPos.z);\n      this.matrixWorld.copy(this.matrix);\n      this.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, this.matrixWorld);\n      this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n\n      // build worldToVolume matrix to transform plane into volumeCS (volumeCS coords are written to BackFaceTexture)\n      const volumeMatrix = volume.matrixWorld;\n      matWorldToVolume.copy(volumeMatrix).invert();\n\n      // update material props\n      material.uniforms.aspectRatio.value = camera.aspect;\n      material.uniforms.farZ.value = camera.far;\n      material.uniforms.tanHalfFOV.value = Math.tan(THREE.MathUtils.DEG2RAD * 0.5 * camera.fov);\n      material.uniforms.matWorld2Volume.value = matWorldToVolume;\n    };\n\n    // set it to special layer to draw only into BFTexture\n    this._plane.layers.set(gfxutils.LAYERS.VOLUME_BFPLANE);\n  }\n\n  _initPlaneGeo(width, height) {\n    const planeGeo = new THREE.BufferGeometry();\n\n    width = width || 1;\n    height = height || 1;\n\n    const vertices = new Float32Array([\n      -0.5 * width, 0.5 * height, 0,\n      0.5 * width, 0.5 * height, 0,\n      -0.5 * width, -0.5 * height, 0,\n      0.5 * width, -0.5 * height, 0,\n    ]);\n\n    planeGeo.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    planeGeo.setIndex([0, 2, 1, 2, 3, 1]);\n\n    return planeGeo;\n  }\n\n  getMesh() {\n    return this._plane;\n  }\n}\n\nexport default VolumeFarPlane;\n","import * as THREE from 'three';\nimport VolumeMesh from './gfx/VolumeMesh';\nimport VolumeBounds from './gfx/VolumeBounds';\nimport VolumeFarPlane from './gfx/VolumeFarPlane';\nimport Visual from './Visual';\nimport settings from './settings';\n\nclass VolumeVisual extends Visual {\n  constructor(name, dataSource) {\n    super(name, dataSource);\n    this._mesh = new VolumeMesh();\n    this._mesh.setDataSource(dataSource);\n    this.add(this._mesh);\n\n    this._frame = new VolumeBounds(this.getBoundaries().boundingBox, this._mesh.volumeInfo);\n    this.add(this._frame.getMesh());\n    this.showFrame(settings.now.modes.VD.frame);\n\n    this._farPlane = new VolumeFarPlane(this._mesh, 2, 2);\n    this.add(this._farPlane.getMesh());\n  }\n\n  getBoundaries() {\n    const box = this._dataSource.getBox();\n    const sphere = new THREE.Sphere();\n    box.getBoundingSphere(sphere);\n\n    return {\n      boundingBox: box,\n      boundingSphere: sphere,\n    };\n  }\n\n  getMesh() {\n    return this._mesh;\n  }\n\n  showFrame(needShow) {\n    this._frame.getMesh().material.visible = needShow;\n  }\n}\n\nexport default VolumeVisual;\n","import EntityList from '../../utils/EntityList';\n\n/**\n * A list of available loaders.\n * @extends EntityList\n */\nclass LoaderList extends EntityList {\n  /**\n   * Create a list of loaders.\n   * The loaders are indexed by supported source types (`.types` property of a Loader\n   * subclass).\n   * The loaders can be retrieved later by matching against specs (see {@link LoaderList#find}).\n   *\n   * @param {!Array<function(new:Loader)>=} someLoaders A list of {@link Loader} subclasses to\n   *   automatically register at creation time.\n   * @see LoaderList#register\n   */\n  constructor(someLoaders = []) {\n    super(someLoaders, ['types']);\n  }\n\n  /**\n   * Find a suitable loader for a source type.\n   *\n   * @param {Object} specs Loader specifications.\n   * @param {string=} specs.type Supported source type.\n   * @param {*=} specs.source Source to load from.\n   */\n  find(specs) {\n    let list = [];\n    if (specs.type) {\n      list = this._dict.types[specs.type.toLowerCase()] || [];\n    } else if (specs.source) {\n      return this._list.filter((SomeLoader) => SomeLoader.canProbablyLoad && SomeLoader.canProbablyLoad(specs.source));\n    }\n    return [...list];\n  }\n}\n\nexport default LoaderList;\n","import EventDispatcher from '../../utils/EventDispatcher';\nimport makeContextDependent from '../../utils/makeContextDependent';\n\nexport default class Loader extends EventDispatcher {\n  constructor(source, options) {\n    super();\n    this._source = source;\n    this._options = options || {};\n    this._abort = false;\n    this._agent = null;\n  }\n\n  load() {\n    return Promise.reject(new Error('Loading from this source is not implemented'));\n  }\n\n  abort() {\n    this._abort = true;\n    if (this._agent) {\n      this._agent.abort();\n    }\n  }\n\n  static extractName(_source) {\n    return undefined;\n  }\n}\n\nmakeContextDependent(Loader.prototype);\n","import Loader from './Loader';\n\nexport default class FileLoader extends Loader {\n  constructor(source, options) {\n    super(source, options);\n\n    options = this._options;\n    this._binary = options.binary === true;\n  }\n\n  load() {\n    return new Promise((resolve, reject) => {\n      if (this._abort) {\n        throw new Error('Loading aborted');\n      }\n\n      const blob = this._source;\n      const reader = this._agent = new FileReader();\n\n      reader.addEventListener('load', () => {\n        resolve(reader.result);\n      });\n      reader.addEventListener('error', () => {\n        reject(reader.error);\n      });\n      reader.addEventListener('abort', () => {\n        reject(new Error('Loading aborted'));\n      });\n      reader.addEventListener('progress', (event) => {\n        this.dispatchEvent(event);\n      });\n\n      if (this._binary) {\n        reader.readAsArrayBuffer(blob);\n      } else {\n        reader.readAsText(blob);\n      }\n    });\n  }\n\n  static canProbablyLoad(source) {\n    return (File && source instanceof File) || (Blob && source instanceof Blob);\n  }\n\n  static extractName(source) {\n    return source && source.name;\n  }\n}\n\nFileLoader.types = ['file', 'blob'];\n","import _ from 'lodash';\nimport Loader from './Loader';\n\n// we don't need to detect all kinds of URLs, just the evident ones\nconst urlStartRegexp = /^(https?|ftp):\\/\\//i;\n\nexport default class XHRLoader extends Loader {\n  constructor(source, options) {\n    super(source, options);\n\n    options = this._options;\n    this._binary = (options.binary === true);\n  }\n\n  load() {\n    return new Promise((resolve, reject) => {\n      if (this._abort) {\n        throw new Error('Loading aborted');\n      }\n\n      const url = this._source;\n      const request = this._agent = new XMLHttpRequest();\n\n      request.addEventListener('load', () => {\n        if (request.status === 200) {\n          resolve(request.response);\n        } else {\n          reject(new Error(`HTTP ${request.status} while fetching ${url}`));\n        }\n      });\n      request.addEventListener('error', () => {\n        reject(new Error('HTTP request failed'));\n      });\n      request.addEventListener('abort', () => {\n        reject(new Error('Loading aborted'));\n      });\n      request.addEventListener('progress', (event) => {\n        this.dispatchEvent(event);\n      });\n\n      request.open('GET', url);\n      if (this._binary) {\n        request.responseType = 'arraybuffer';\n      } else {\n        request.responseType = 'text';\n      }\n      request.send();\n    });\n  }\n\n  static canProbablyLoad(source) {\n    return _.isString(source) && urlStartRegexp.test(source);\n  }\n\n  static extractName(source) {\n    if (source) {\n      const last = (source.indexOf('?') + 1 || source.lastIndexOf('#') + 1 || source.length + 1) - 1;\n      return source.slice(source.lastIndexOf('/', last) + 1, last);\n    }\n    return undefined;\n  }\n}\n\nXHRLoader.types = ['url'];\n","import Loader from './Loader';\n\nexport default class ImmediateLoader extends Loader {\n  load() {\n    return new Promise((resolve) => {\n      if (this._abort) {\n        throw new Error('Loading aborted');\n      }\n      resolve(this._source);\n    });\n  }\n\n  static canProbablyLoad(_source) {\n    return false;\n  }\n}\n\nImmediateLoader.types = ['immediate'];\n","import LoaderList from './loaders/LoaderList';\n\nimport FileLoader from './loaders/FileLoader';\nimport XHRLoader from './loaders/XHRLoader';\nimport ImmediateLoader from './loaders/ImmediateLoader';\n\nexport default new LoaderList([\n  // note: order might be important\n  FileLoader,\n  XHRLoader,\n  ImmediateLoader,\n]);\n","import EntityList from '../../utils/EntityList';\n\n/**\n * A list of available parsers.\n * @extends EntityList\n */\nclass ParserList extends EntityList {\n  /**\n   * Create a list of parsers.\n   * The parsers are indexed by supported data formats and file extensions (`.formats` and\n   * `.extensions` properties of a Parser subclass).\n   * The parsers can be retrieved later by matching against specs (see {@link ParsrerList#find}).\n   *\n   * @param {!Array<function(new:Parser)>=} someParsers A list of {@link Parser} subclasses to\n   *   automatically register at creation time.\n   * @see ParserList#register\n   */\n  constructor(someParsers = []) {\n    super(someParsers, ['formats', 'extensions']);\n  }\n\n  /**\n   * Find a suitable parser for data.\n   *\n   * @param {Object} specs Parser specifications.\n   * @param {string=} specs.format Supported data format.\n   * @param {string=} specs.ext Supported filename extension.\n   * @param {*=} specs.data Data to parse.\n   */\n  find(specs) {\n    let list = [];\n    if (specs.format) {\n      list = this._dict.formats[specs.format.toLowerCase()] || [];\n    } else if (specs.ext) {\n      list = this._dict.extensions[specs.ext.toLowerCase()] || [];\n    }\n    // autodetect only if no format is forced\n    if (list.length === 0 && !specs.format && specs.data) {\n      return this._list.filter((SomeParser) => SomeParser.canProbablyParse && SomeParser.canProbablyParse(specs.data));\n    }\n    return [...list];\n  }\n}\n\nexport default ParserList;\n","import makeContextDependent from '../../utils/makeContextDependent';\n\nexport default class Parser {\n  constructor(data, options) {\n    this._data = data;\n    this._options = options || {};\n    this._abort = false;\n  }\n\n  parseSync() {\n    throw new Error('Parsing this type of data is not implemented');\n  }\n\n  parse() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        try {\n          if (this._abort) {\n            return reject(new Error('Parsing aborted'));\n          }\n          return resolve(this.parseSync());\n        } catch (error) {\n          return reject(error);\n        }\n      });\n    });\n  }\n\n  // only for volume Parsers\n  getModel() {\n    this.model._parseHeader(this._data);\n    return this.model;\n  }\n\n  abort() {\n    this._abort = true;\n  }\n}\n\nmakeContextDependent(Parser.prototype);\n","import * as THREE from 'three';\n\n/**\n * Parser helper for PDB tag \"REMARK 290\".\n *\n * @exports Remark290\n * @constructor\n */\nclass Remark290 {\n  constructor() {\n    /** @type {THREE.Matrix4[]} */\n    this.matrices = [];\n\n    /** @type {?THREE.Matrix4} */\n    this._matrix = null;\n    /** @type {number} */\n    this._matrixIndex = -1;\n  }\n\n  /**\n   * Parse a single line of a stream.\n   * @param {PDBStream} stream - stream to parse\n   */\n\n  parse(stream) {\n    /** @type {?THREE.Matrix4} */\n    let matrix = this._matrix;\n\n    if (stream.readString(12, 18) === '  SMTRY') {\n      const matrixRow = stream.readCharCode(19) - 49; // convert '1', '2', or '3' -> 0, 1, or 2\n      const matrixData = stream.readString(20, 80).trim().split(/\\s+/);\n      const matrixIndex = parseInt(matrixData[0], 10);\n      if (this._matrix === null || matrixIndex !== this._matrixIndex) {\n        // TODO: assert(matrixIndex === this.matrices.length + 1);\n        this._matrixIndex = matrixIndex;\n        this._matrix = matrix = new THREE.Matrix4();\n        this.matrices[this.matrices.length] = matrix;\n      }\n\n      const { elements } = matrix;\n      elements[matrixRow] = parseFloat(matrixData[1]);\n      elements[matrixRow + 4] = parseFloat(matrixData[2]);\n      elements[matrixRow + 8] = parseFloat(matrixData[3]);\n      elements[matrixRow + 12] = parseFloat(matrixData[4]);\n    }\n  }\n}\n\nRemark290.prototype.id = 290;\n\nexport default Remark290;\n","import * as THREE from 'three';\nimport chem from '../../../chem';\n\nconst { Assembly } = chem;\n\n/**\n * Parser helper for PDB tag \"REMARK 350\".\n *\n * @exports Remark350\n * @constructor\n */\nclass Remark350 {\n  constructor(complex) {\n    /** @type {Complex} */\n    this._complex = complex;\n    /** @type {Assembly[]} */\n    this.assemblies = [];\n\n    /** @type {?Assembly} */\n    this._assembly = null;\n    /** @type {?THREE.Matrix4} */\n    this._matrix = null;\n    /** @type {number} */\n    this._matrixIndex = -1;\n  }\n\n  /**\n   * Parse a single line of a stream.\n   * @param {PDBStream} stream - stream to parse\n   */\n\n  parse(stream) {\n    /** @type {?Assembly} */\n    let assembly = this._assembly;\n    /** @type {?THREE.Matrix4} */\n    let matrix = this._matrix;\n\n    if (assembly && stream.readString(12, 18) === '  BIOMT') {\n      const matrixRow = stream.readCharCode(19) - 49; // convert '1', '2', or '3' -> 0, 1, or 2\n      const matrixData = stream.readString(20, 80).trim().split(/\\s+/);\n      const matrixIndex = parseInt(matrixData[0], 10);\n      if (this._matrix === null || matrixIndex !== this._matrixIndex) {\n        // TODO: assert(matrixIndex === assembly.matrices.length + 1);\n        this._matrixIndex = matrixIndex;\n        this._matrix = matrix = new THREE.Matrix4();\n        assembly.addMatrix(matrix);\n      }\n\n      const { elements } = matrix;\n      elements[matrixRow] = parseFloat(matrixData[1]);\n      elements[matrixRow + 4] = parseFloat(matrixData[2]);\n      elements[matrixRow + 8] = parseFloat(matrixData[3]);\n      elements[matrixRow + 12] = parseFloat(matrixData[4]);\n    } else if (assembly && stream.readString(35, 41) === 'CHAINS:') {\n      const entries = stream.readString(42, 80).split(',');\n      for (let i = 0, n = entries.length; i < n; ++i) {\n        const chain = entries[i].trim();\n        if (chain.length > 0) {\n          assembly.addChain(chain);\n        }\n      }\n    } else if (stream.readString(12, 23) === 'BIOMOLECULE:') {\n      // assert molIndex === this.assemblies.length + 1\n      this._matrix = null;\n      this._matrixIndex = -1;\n      this._assembly = assembly = new Assembly(this._complex);\n      this.assemblies.push(assembly);\n    }\n  }\n}\n\nRemark350.prototype.id = 350;\n\nexport default Remark350;\n","/** Helper class for stream-like reading input files. */\nclass PDBStream {\n  /**\n   * Create a stream\n   * @param {String} data Input data\n   */\n  constructor(data) {\n    /** @type String */\n    this._data = data; // Input file\n    /** @type Number */\n    this._start = 0; // Starting position of line\n    /** @type Number */\n    this._nextCR = -1; // Position of next CR (0x0D)\n    /** @type Number */\n    this._nextLF = -1; // Position of next LF (0x0A)\n    /** @type Number */\n    this._next = -1; // End position of line\n    /** @type Number */\n    this._end = data.length; // End of data\n\n    this.next();\n  }\n\n  /**\n   * Reading next line.\n   * @returns {String} Next line in data (ending with LF or CR)\n   */\n  readLine() {\n    return this._data.slice(this._start, this._next);\n  }\n\n  /**\n   * Reading character from position.\n   * @param {Number} pos - Position in current line.\n   * @returns {String} Character from position\n   */\n  readChar(pos) {\n    pos = this._start + pos - 1;\n    return pos < this._next ? this._data[pos] : ' ';\n  }\n\n  /**\n   * Reading character code from position.\n   * @param {Number} pos - Position in current line.\n   * @returns {Number} Character code from position\n   */\n  readCharCode(pos) {\n    pos = this._start + pos - 1;\n    return pos < this._next ? this._data.charCodeAt(pos) : 32;\n  }\n\n  /**\n   * Reading string from begin to end points.\n   * For a reason unknown, numbering assumed not to start from 0, but from 1.\n   * @param {Number} begin - Begin point in current line.\n   * @param {Number} end - End point in current line.\n   * @returns {String} String from begin to end\n   */\n  readString(begin, end) {\n    const from = this._start + begin - 1;\n    const to = this._start + end;\n    return this._data.slice(from, to < this._next ? to : this._next);\n  }\n\n  /**\n   * Reading integer from begin to end points.\n   * @param {Number} begin - Begin point in current line.\n   * @param {Number} end - End point in current line.\n   * @returns {Number} Integer from begin to end\n   */\n  readInt(begin, end) {\n    return parseInt(this.readString(begin, end), 10);\n  }\n\n  /**\n   * Reading float from begin to end points.\n   * @param {Number} begin - Begin point in current line.\n   * @param {Number} end - End point in current line.\n   * @returns {Number} Float from begin to end\n   */\n  readFloat(begin, end) {\n    return parseFloat(this.readString(begin, end));\n  }\n\n  /**\n   * Checking for end of data.\n   * @returns {boolean} True if data is ended, false otherwise\n   */\n  end() {\n    return this._start >= this._end;\n  }\n\n  /**\n   * Procedure to re-arrange current pointers in data.\n   */\n  next() {\n    const start = this._next + 1;\n    this._start = start < this._end ? start : this._end;\n\n    // support CR, LF, CR+LF line endings\n    // do not support LF+CR, CR+CR+LF, and other strange combinations\n\n    if (this._start > this._nextCR) {\n      this._nextCR = (this._data.indexOf('\\r', this._start) + 1 || this._end + 1) - 1;\n    }\n    if (this._start > this._nextLF) {\n      this._nextLF = (this._data.indexOf('\\n', this._start) + 1 || this._end + 1) - 1;\n    }\n    this._next = this._nextCR + 1 < this._nextLF ? this._nextCR : this._nextLF;\n  }\n}\n\nexport default PDBStream;\n","import * as THREE from 'three';\nimport _ from 'lodash';\nimport Parser from './Parser';\nimport chem from '../../chem';\nimport Remark290 from './pdb/Remark290';\nimport Remark350 from './pdb/Remark350';\nimport PDBStream from './PDBStream';\n\nconst {\n  Complex,\n  Element,\n  Helix,\n  Sheet,\n  Strand,\n  Bond,\n  Molecule,\n} = chem;\n\nconst TAG_LENGTH = 6;\n\nfunction nameToElement(name) {\n  // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\n  //\n  // http://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html#note1\n  //\n  // Atom names start with element symbols right-justified in columns 13-14\n  // as permitted by the length of the name. For example, the symbol FE for\n  // iron appears in columns 13-14, whereas the symbol C for carbon appears\n  // in column 14 (see Misaligned Atom Names). If an atom name has four\n  // characters, however, it must start in column 13 even if the element\n  // symbol is a single character (for example, see Hydrogen Atoms).\n\n  const veryLong = name.trim().length === 4;\n  return name.slice(0, veryLong ? 1 : 2).trim();\n}\n\n// the most frequently used beginnings; although HEADER is mandatory, it is often missing in handmade files\nconst pdbStartRegexp = /^(HEADER\\s|COMPND\\s|REMARK\\s|ATOM {2}|HETATM|MODEL )/i;\n\nconst remarkParsers = {\n  // NOTE: please forget the idea to build the method name in runtime, it can be obfuscated.\n  290: Remark290,\n  350: Remark350,\n};\n\nclass PDBParser extends Parser {\n  constructor(data, options) {\n    super(data, options);\n\n    this._complex = null;\n    this._chain = null;\n    this._residue = null;\n    this._sheet = null;\n    this._serialAtomMap = null;\n    this._modelId = 1;\n    this._compaundFound = false;\n    this._biomoleculeFound = false;\n    this._allowedChainsIDs = null;\n    this._lastMolId = -1;\n\n    this._remarks = {};\n    this._remark = null;\n\n    this._molecules = [];\n    this._molecule = null;\n    this._compndCurrToken = '';\n\n    this._options.fileType = 'pdb';\n  }\n\n  static canProbablyParse(data) {\n    return _.isString(data) && pdbStartRegexp.test(data);\n  }\n\n  _finalize() {\n    this._fixBondsArray();\n    this._fixChains();\n\n    // keep crystallographic symmetry transformations\n    const remark290 = this._remarks[290];\n    this._complex.symmetry = _.isUndefined(remark290) ? [] : remark290.matrices;\n\n    // add loaded biological assemblies\n    const remark350 = this._remarks[350];\n    this._complex.units = this._complex.units.concat(_.isUndefined(remark350) ? [] : remark350.assemblies);\n\n    // add loaded macromolecules\n    this._finalizeMolecules();\n\n    // create secondary structure etc.\n    this._complex.finalize({\n      needAutoBonding: true,\n      detectAromaticLoops: this.settings.now.aromatic,\n      enableEditing: this.settings.now.editing,\n      serialAtomMap: this._serialAtomMap,\n    });\n  }\n\n  _finalizeMolecules() {\n    // get chains from complex\n    const chainDict = {};\n    let i;\n    const chains = this._complex._chains;\n    for (i = 0; i < chains.length; ++i) {\n      const chainObj = chains[i];\n      const chainName = chainObj._name;\n      chainDict[chainName] = chainObj;\n    }\n\n    // aggregate residues from chains\n    for (i = 0; i < this._molecules.length; i++) {\n      const m = this._molecules[i];\n      let residues = [];\n      for (let j = 0; j < m._chains.length; j++) {\n        const name = m._chains[j];\n        const chain = chainDict[name];\n        residues = residues.concat(chain._residues.slice());\n      }\n      const molecule = new Molecule(this._complex, m._name, i + 1);\n      molecule.residues = residues;\n      this._complex._molecules[i] = molecule;\n    }\n  }\n\n  _fixChains() {\n    const idChainMap = {};\n    const complex = this._complex;\n\n    // prepare\n    for (let i = 0; i < complex._chains.length; i++) {\n      const chain = complex._chains[i];\n      idChainMap[chain._name.charCodeAt(0)] = chain;\n    }\n  }\n\n  // FIXME: This function is redundant, CONECT records always follow ATOM and HETATM. Build the map online.\n  _fixBondsArray() {\n    const serialAtomMap = this._serialAtomMap = {};\n    const complex = this._complex;\n\n    const atoms = complex._atoms;\n    for (let i = 0, ni = atoms.length; i < ni; ++i) {\n      const atom = atoms[i];\n      serialAtomMap[atom.serial] = atom;\n    }\n\n    const bonds = complex._bonds;\n    const { logger } = this;\n    for (let j = 0, nj = bonds.length; j < nj; ++j) {\n      const bond = bonds[j];\n      if (bond._right < bond._left) {\n        logger.debug('_fixBondsArray: Logic error.');\n      }\n      bond._left = serialAtomMap[bond._left] || null;\n      bond._right = serialAtomMap[bond._right] || null;\n    }\n  }\n\n  _parseATOM(stream) {\n    if (this._modelId !== 1) {\n      return;\n    }\n\n    /* eslint-disable no-magic-numbers */\n    const het = stream.readCharCode(1) === 0x48;\n\n    // field names according to wwPDB Format\n    // NOTE: Chimera allows (nonstandard) use of columns 6-11 for the integer atom serial number in ATOM records.\n    const serial = het ? stream.readInt(7, 11) : stream.readInt(6, 11);\n    let name = stream.readString(13, 16);\n    const altLoc = stream.readChar(17);\n    const resName = stream.readString(18, 20).trim();\n    const chainID = stream.readChar(22);\n    const resSeq = stream.readInt(23, 26);\n    const iCode = stream.readChar(27);\n    const x = stream.readFloat(31, 38);\n    const y = stream.readFloat(39, 46);\n    const z = stream.readFloat(47, 54);\n    const occupancy = stream.readFloat(55, 60);\n    const tempFactor = stream.readFloat(61, 66);\n    const element = stream.readString(77, 78).trim() || nameToElement(name);\n    const charge = stream.readInt(79, 80) || 0;\n    /* eslint-enable no-magic-numbers */\n    // skip waters (there may be lots of them)\n    if (this.settings.now.nowater) {\n      if (resName === 'HOH' || resName === 'WAT') {\n        return;\n      }\n    }\n\n    // PDB uses positional system for atom names. It helps derive element type from the name\n    // but names may include extra spaces. From this point on we don't need those spaces anymore.\n    name = name.trim();\n\n    const type = Element.getByName(element);\n    const role = Element.Role[name]; // FIXME: Maybe should use type as additional index (\" CA \" vs. \"CA  \")\n\n    // NOTE: Residues of a particular chain are not required to be listed next to each other.\n    // https://github.com/biasmv/pv/commit/7319b898b7473ba380c26699e3b028b2b1a7e1a1\n    let chain = this._chain;\n    if (!chain || chain.getName() !== chainID) {\n      this._chain = chain = this._complex.getChain(chainID) || this._complex.addChain(chainID);\n      this._residue = null;\n    }\n\n    let residue = this._residue;\n    if (!residue || residue.getSequence() !== resSeq || residue.getICode() !== iCode) {\n      this._residue = residue = chain.addResidue(resName, resSeq, iCode);\n    }\n\n    const xyz = new THREE.Vector3(x, y, z);\n    residue.addAtom(name, type, xyz, role, het, serial, altLoc, occupancy, tempFactor, charge);\n  }\n\n  _parseENDMDL() {\n    this._modelId += 1;\n  }\n\n  _parseCONECT(stream) {\n    /* eslint-disable no-magic-numbers */\n    const serial0 = stream.readInt(7, 11);\n    const serial1 = stream.readInt(12, 16);\n    const serial2 = stream.readInt(17, 21);\n    const serial3 = stream.readInt(22, 26);\n    const serial4 = stream.readInt(27, 31);\n    /* eslint-enable no-magic-numbers */\n\n    const complex = this._complex;\n\n    // Keep bonds ordered by atom serial\n    if (serial1 && serial1 > serial0) {\n      complex.addBond(serial0, serial1, 0, Bond.BondType.UNKNOWN, true);\n    }\n    if (serial2 && serial2 > serial0) {\n      complex.addBond(serial0, serial2, 0, Bond.BondType.UNKNOWN, true);\n    }\n    if (serial3 && serial3 > serial0) {\n      complex.addBond(serial0, serial3, 0, Bond.BondType.UNKNOWN, true);\n    }\n    if (serial4 && serial4 > serial0) {\n      complex.addBond(serial0, serial4, 0, Bond.BondType.UNKNOWN, true);\n    }\n  }\n\n  _parseCOMPND(stream) {\n    /* eslint-disable no-magic-numbers */\n    const str = stream.readString(11, 80);\n    const tokenIdx = str.indexOf(':');\n    this._compndCurrToken = tokenIdx > 0 ? str.substring(0, tokenIdx).trim() : this._compndCurrToken;\n    /* eslint-enable no-magic-numbers */\n\n    // start reading new molecule\n    if (this._compndCurrToken === 'MOL_ID') {\n      this._molecule = { _index: '', _chains: [] };\n      this._molecule._index = parseInt(str.substring(tokenIdx + 1, str.indexOf(';')), 10);\n      this._molecules.push(this._molecule);\n      // parse molecule name\n    } else if (this._compndCurrToken === 'MOLECULE' && this._molecule != null) {\n      this._molecule._name = str.substring(tokenIdx + 1, str.indexOf(';')).trim();\n      // parse molecule chains\n    } else if (this._compndCurrToken === 'CHAIN' && this._molecule != null) {\n      let chainStr = str.substring(tokenIdx + 1, 80).trim();\n      const lastChar = chainStr[chainStr.length - 1];\n      if (lastChar === ';' || lastChar === ',') {\n        chainStr = chainStr.slice(0, -1);\n      }\n      chainStr = chainStr.replace(/\\s+/g, '');\n      const chains = chainStr.split(',');\n      this._molecule._chains = this._molecule._chains.concat(chains);\n    }\n  }\n\n  _parseREMARK(stream) {\n    /* eslint-disable no-magic-numbers */\n    const remarkNum = stream.readInt(8, 10);\n    /* eslint-enable no-magic-numbers */\n\n    // create remark parser if needed\n    let remark = this._remarks[remarkNum];\n    if (_.isUndefined(remark)) {\n      const RemarkParser = remarkParsers[remarkNum];\n      if (_.isFunction(RemarkParser)) {\n        this._remarks[remarkNum] = remark = new RemarkParser(this._complex);\n      }\n    }\n\n    // delegate parsing\n    if (!_.isUndefined(remark)) {\n      remark.parse(stream);\n    }\n  }\n\n  _parseHELIX(stream) {\n    /* eslint-disable no-magic-numbers */\n    const fields = [20, 22, 32, 34];\n    /* eslint-enable no-magic-numbers */\n    this._parseSTRUCTURE(stream, fields, (obj) => {\n      this._complex.addHelix(obj);\n      this._complex.structures.push(obj);\n    });\n  }\n\n  _parseSHEET(stream) {\n    /* eslint-disable no-magic-numbers */\n    const fields = [22, 23, 33, 34];\n    /* eslint-enable no-magic-numbers */\n    this._parseSTRUCTURE(stream, fields, (obj) => {\n      this._complex.addSheet(obj);\n    });\n  }\n\n  _parseSTRUCTURE(stream, pars, adder) {\n    const startId = 0;\n    const startIndex = 1;\n    const endId = 2;\n    const endIndex = 3;\n\n    // identify fields: debugging and stuff\n    /* eslint-disable no-magic-numbers */\n    const codeOfS = 0x53;\n    const serialNumber = stream.readInt(8, 10);\n    const structureName = stream.readString(12, 14).trim(); // FIXME: LString(3) forbids trim()\n    const comment = stream.readString(41, 70).trim();\n    const helLength = stream.readInt(72, 76);\n    const helixClass = stream.readInt(39, 40);\n    const shWidth = stream.readInt(15, 16);\n    const shCur = stream.readInt(42, 45);\n    const shPrev = stream.readInt(57, 60);\n    /* eslint-enable no-magic-numbers */\n    // file fields\n    const startChainID = stream.readString(pars[startId], pars[endId] + 1).charCodeAt(0);\n    const endChainID = stream.readString(pars[endId], pars[endId] + 1).charCodeAt(0);\n    const startSequenceNumber = stream.readInt(pars[startIndex], pars[startIndex] + 3);\n    let iCodeStr = stream.readString(pars[startIndex] + 4, pars[startIndex] + 4);\n    let startICode = 0;\n\n    if (iCodeStr.length > 0) {\n      startICode = iCodeStr.charCodeAt(0);\n    }\n    const endSequenceNumber = stream.readInt(pars[endIndex], pars[endIndex] + 3);\n    iCodeStr = stream.readString(pars[endIndex] + 4, pars[endIndex] + 4);\n    let endICode = 0;\n    if (iCodeStr.length > 0) {\n      endICode = iCodeStr.charCodeAt(0);\n    }\n\n    let obj;\n    let cs = this._sheet;\n    if (stream.readCharCode(1) === codeOfS) {\n      if (cs !== null && cs.getName() !== structureName) {\n        cs = null;\n        this._sheet = null;\n      }\n      if (cs === null) {\n        this._sheet = obj = new Sheet(structureName, shWidth);\n        adder(obj);\n      } else {\n        obj = cs;\n      }\n      const strand = new Strand(\n        obj,\n        this._complex.getUnifiedSerial(startChainID, startSequenceNumber, startICode),\n        this._complex.getUnifiedSerial(endChainID, endSequenceNumber, endICode),\n        helixClass, shCur, shPrev,\n      );\n      obj.addStrand(strand);\n      this._complex.structures.push(strand);\n    } else {\n      obj = new Helix(\n        helixClass,\n        this._complex.getUnifiedSerial(startChainID, startSequenceNumber, startICode),\n        this._complex.getUnifiedSerial(endChainID, endSequenceNumber, endICode),\n        serialNumber, structureName, comment, helLength,\n      );\n      adder(obj);\n    }\n  }\n\n  _parseHEADER(stream) {\n    const { metadata } = this._complex;\n    metadata.classification = stream.readString(11, 50).trim();\n    metadata.date = stream.readString(51, 59).trim();\n\n    const id = stream.readString(63, 66).trim();\n    metadata.id = id;\n    if (id) {\n      this._complex.name = id;\n    }\n    metadata.format = 'pdb';\n  }\n\n  _parseTITLE(stream) {\n    const { metadata } = this._complex;\n    metadata.title = metadata.title || [];\n\n    const line = stream.readInt(9, 10) || 1;\n    metadata.title[line - 1] = stream.readString(11, 80).trim();\n  }\n\n  static tagParsers = {\n    HEADER: PDBParser.prototype._parseHEADER,\n    'TITLE ': PDBParser.prototype._parseTITLE,\n    'ATOM  ': PDBParser.prototype._parseATOM,\n    HETATM: PDBParser.prototype._parseATOM,\n    ENDMDL: PDBParser.prototype._parseENDMDL,\n    CONECT: PDBParser.prototype._parseCONECT,\n    COMPND: PDBParser.prototype._parseCOMPND,\n    REMARK: PDBParser.prototype._parseREMARK,\n    // 'SOURCE': PDBParser.prototype._parseSOURCE,\n    'HELIX ': PDBParser.prototype._parseHELIX,\n    'SHEET ': PDBParser.prototype._parseSHEET,\n\n    // nonstandard extension to allow range 100,000 - 999,999\n    'ATOM 1': PDBParser.prototype._parseATOM,\n    'ATOM 2': PDBParser.prototype._parseATOM,\n    'ATOM 3': PDBParser.prototype._parseATOM,\n    'ATOM 4': PDBParser.prototype._parseATOM,\n    'ATOM 5': PDBParser.prototype._parseATOM,\n    'ATOM 6': PDBParser.prototype._parseATOM,\n    'ATOM 7': PDBParser.prototype._parseATOM,\n    'ATOM 8': PDBParser.prototype._parseATOM,\n    'ATOM 9': PDBParser.prototype._parseATOM,\n  };\n\n  parseSync() {\n    const stream = new PDBStream(this._data);\n    const result = this._complex = new Complex();\n\n    // parse PDB line by line\n    while (!stream.end()) {\n      const tag = stream.readString(1, TAG_LENGTH);\n      const func = PDBParser.tagParsers[tag];\n      if (_.isFunction(func)) {\n        func.call(this, stream);\n      }\n      stream.next();\n    }\n\n    // Resolve indices and serials to objects\n    this._finalize();\n\n    // cleanup\n    this._serialAtomMap = null;\n    this._sheet = null;\n    this._residue = null;\n    this._chain = null;\n    this._complex = null;\n\n    if (result.getAtomCount() === 0) {\n      throw new Error('The data does not contain valid atoms');\n    }\n\n    return result;\n  }\n}\n\nPDBParser.formats = ['pdb'];\nPDBParser.extensions = ['.pdb', '.ent'];\n\nexport default PDBParser;\n","import _ from 'lodash';\nimport * as THREE from 'three';\nimport Parser from './Parser';\nimport chem from '../../chem';\n\nconst {\n  Complex,\n  Element,\n  SGroup,\n  Bond,\n} = chem;\n\nconst cOrderCharCodes = {\n  A: 0,\n  S: 1,\n  D: 2,\n  T: 3,\n};\n\nconst cmlStartRegexp = /\\s*<\\?xml\\b[^?>]*\\?>\\s*<(?:cml|molecule)\\b/i;\n\nclass CMLParser extends Parser {\n  constructor(data, options) {\n    super(data, options);\n    this._complex = null;\n    this._residue = null;\n    this._serialAtomMap = null;\n    this._modelId = 1;\n    this._lastMolId = -1;\n    this._readOnlyOneMolecule = false;\n    this._options.fileType = 'cml';\n  }\n\n  static canProbablyParse(data) {\n    return _.isString(data) && cmlStartRegexp.test(data);\n  }\n\n  _rebuidBondIndexes(atoms, bonds) {\n    const count = atoms.length;\n    for (let i = 0; i < count; i++) {\n      const atomId = atoms[i].id;\n\n      const countBonds = bonds.length;\n      for (let j = 0; j < countBonds; j++) {\n        const idxs = bonds[j].atomRefs2.split(' ');\n        if (idxs[0] === atomId) {\n          bonds[j].start = i;\n        }\n\n        if (idxs[1] === atomId) {\n          bonds[j].end = i;\n        }\n      }\n    }\n  }\n\n  _createSGroup(molecule, moleculeArr) {\n    const newGroup = new SGroup(\n      molecule.id, molecule.fieldData,\n      new THREE.Vector3(parseFloat(molecule.x), parseFloat(molecule.y), 0), molecule.atomRefs, molecule,\n    );\n    if (molecule.placement === 'Relative') {\n      newGroup._center = new THREE.Vector3(0, 0, 0);\n    }\n    if (molecule.fieldName === 'MDLBG_FRAGMENT_CHARGE') {\n      newGroup._charge = parseInt(molecule.fieldData, 10) || 0;\n    }\n    if (molecule.fieldName === 'MDLBG_FRAGMENT_COEFFICIENT') {\n      newGroup._repeat = parseInt(molecule.fieldData, 10) || 1;\n    }\n    moleculeArr.push(newGroup);\n  }\n\n  _extractSGroup(molecule, moleculeArr) {\n    if (!Array.isArray(moleculeArr)) {\n      moleculeArr = [];\n    }\n\n    if (molecule) {\n      if (Array.isArray(molecule)) {\n        const count = molecule.length;\n        for (let i = 0; i < count; i++) {\n          if (molecule[i].molecule) {\n            moleculeArr = moleculeArr.concat(this._extractSGroup(molecule[i].molecule));\n          }\n          this._createSGroup(molecule[i], moleculeArr);\n        }\n      } else {\n        if (molecule.molecule) {\n          if (molecule.molecule) {\n            moleculeArr = moleculeArr.concat(this._extractSGroup(molecule.molecule));\n          }\n        }\n        this._createSGroup(molecule, moleculeArr);\n      }\n    }\n\n    return moleculeArr;\n  }\n\n  _extractSGroups(molecule, atoms) {\n    const moleculeArr = this._extractSGroup(molecule);\n\n    const count = atoms.length;\n    let i;\n    let j;\n\n    for (i = 0; i < count; i++) {\n      const atomId = atoms[i].id;\n      for (j = 0; j < moleculeArr.length; j++) {\n        const firstAtomRef = moleculeArr[j]._atoms.split(' ')[0];\n        if (firstAtomRef === atomId) {\n          if (!atoms[i].sgroupRef) {\n            atoms[i].sgroupRef = [];\n          }\n          atoms[i].sgroupRef.push(moleculeArr[j]);\n        }\n      }\n    }\n    // build sGroups centers\n    let atomMap = {}; // sgrpmap cache\n    let mapEntry = null;\n    const nLimon = 100000000;\n    const bLow = new THREE.Vector3(nLimon, nLimon, nLimon);\n    const bHight = new THREE.Vector3(-nLimon, -nLimon, -nLimon);\n\n    function cycleFuncInner(e) {\n      mapEntry = atomMap[e];\n      if (mapEntry) {\n        moleculeArr[j]._atoms.push(mapEntry.a);\n      }\n    }\n\n    function cycleFunc(e) {\n      mapEntry = atomMap[e];\n      if (mapEntry) {\n        bLow.set(Math.min(bLow.x, mapEntry.x), Math.min(bLow.y, mapEntry.y), Math.min(bLow.z, mapEntry.z));\n        bHight.set(Math.max(bHight.x, mapEntry.x), Math.max(bHight.y, mapEntry.y), Math.max(bHight.z, mapEntry.z));\n        cycleFuncInner(e);\n      }\n    }\n\n    for (i = 0; i < atoms.length; i++) {\n      atomMap[atoms[i].id] = {};\n      atomMap[atoms[i].id].x = atoms[i].x2;\n      if (atoms[i].x3) {\n        atomMap[atoms[i].id].x = atoms[i].x3;\n      }\n      atomMap[atoms[i].id].x = parseFloat(atomMap[atoms[i].id].x);\n      atomMap[atoms[i].id].y = atoms[i].y2;\n      if (atoms[i].y3) {\n        atomMap[atoms[i].id].y = atoms[i].y3;\n      }\n      atomMap[atoms[i].id].y = parseFloat(atomMap[atoms[i].id].y);\n      atomMap[atoms[i].id].z = '0.0';\n      if (atoms[i].z3) {\n        atomMap[atoms[i].id].z = atoms[i].z3;\n      }\n      atomMap[atoms[i].id].z = parseFloat(atomMap[atoms[i].id].z);\n      atomMap[atoms[i].id].a = atoms[i];\n    }\n\n    let atomsRef;\n    for (j = 0; j < moleculeArr.length; j++) {\n      if (moleculeArr[j]._center !== null) {\n        bLow.set(nLimon, nLimon, nLimon);\n        bHight.set(-nLimon, -nLimon, -nLimon);\n        atomsRef = moleculeArr[j]._atoms.split(' ');\n        moleculeArr[j]._atoms = [];\n        atomsRef.forEach(cycleFunc);\n\n        moleculeArr[j]._center.addVectors(bLow, bHight);\n        moleculeArr[j]._center.multiplyScalar(0.5);\n      } else {\n        atomsRef = moleculeArr[j]._atoms.split(' ');\n        moleculeArr[j]._atoms = [];\n        atomsRef.forEach(cycleFuncInner);\n      }\n    }\n    atomMap = null;\n  }\n\n  _traverseData(dom) {\n    function isArray(o) {\n      return Object.prototype.toString.apply(o) === '[object Array]';\n    }\n\n    function parseNode(xmlNode, result) {\n      if (xmlNode.nodeName === '#text' && xmlNode.nodeValue.trim() === '') {\n        return;\n      }\n\n      const jsonNode = {};\n      jsonNode.xmlNode = xmlNode;\n      const existing = result[xmlNode.nodeName];\n      if (existing) {\n        if (!isArray(existing)) {\n          result[xmlNode.nodeName] = [existing, jsonNode];\n        } else {\n          result[xmlNode.nodeName].push(jsonNode);\n        }\n      } else {\n        result[xmlNode.nodeName] = jsonNode;\n      }\n\n      let length;\n      let i;\n      if (xmlNode.attributes) {\n        ({ length } = xmlNode.attributes);\n        for (i = 0; i < length; i++) {\n          const attribute = xmlNode.attributes[i];\n          jsonNode[attribute.nodeName] = attribute.nodeValue;\n        }\n      }\n\n      ({ length } = xmlNode.childNodes);\n      for (i = 0; i < length; i++) {\n        parseNode(xmlNode.childNodes[i], jsonNode);\n      }\n    }\n\n    const result = {};\n    if (dom.childNodes.length) {\n      parseNode(dom.childNodes[0], result);\n    }\n\n    return result;\n  }\n\n  _findSuitableMolecule(data, molSet) {\n    for (const key in data) {\n      if (key === 'xmlNode') {\n        continue;\n      } else if (key === 'molecule') {\n        if (data.molecule) {\n          if (data.molecule.atomArray && data.molecule.atomArray.atom) {\n            molSet.push(data);\n          }\n          if (Array.isArray(data.molecule)) {\n            for (let i = 0; i < data.molecule.length; i++) {\n              if (data.molecule[i].atomArray && data.molecule[i].atomArray.atom) {\n                molSet.push({ molecule: data.molecule[i] });\n              }\n            }\n          }\n        }\n      } else if (data[key] && data[key] !== null && typeof (data[key]) === 'object') {\n        this._findSuitableMolecule(data[key], molSet);\n      }\n    }\n  }\n\n  _selectComponents(text) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(text, 'application/xml');\n    const traversedData = this._traverseData(doc);\n    let rawData;\n    const self = this;\n\n    function prepareComponentCompound(data) {\n      let atoms = [];\n      if (data.molecule && data.molecule.atomArray && data.molecule.atomArray.atom) {\n        if (!Array.isArray(data.molecule.atomArray.atom)) {\n          atoms.push(data.molecule.atomArray.atom);\n        } else {\n          atoms = data.molecule.atomArray.atom;\n        }\n      } else if (!data.molecule) {\n        const ret = {};\n        ret.atomLabels = null;\n        ret.labelsCount = 1;\n        return ret;\n      }\n\n      if (data.molecule.molecule) {\n        self._extractSGroups(data.molecule.molecule, atoms);\n      }\n\n      let atom;\n      let count = atoms.length;\n      for (let i = 0; i < count; i++) {\n        atom = atoms[i];\n        atom.edges = [];\n      }\n\n      let localBond = [];\n      if (data.molecule.bondArray && data.molecule.bondArray.bond) {\n        if (!Array.isArray(data.molecule.bondArray.bond)) {\n          localBond.push(data.molecule.bondArray.bond);\n        } else {\n          localBond = data.molecule.bondArray.bond;\n        }\n      }\n      let bond;\n      count = localBond.length;\n      self._rebuidBondIndexes(atoms, localBond);\n\n      function addCurrBond(index) {\n        bond = localBond[index];\n        atom = atoms[bond.start];\n        if (!atom) {\n          return false;\n        }\n        atom.edges.push(bond.end);\n        atom = atoms[bond.end];\n        if (!atom) {\n          return false;\n        }\n        atom.edges.push(bond.start);\n        return true;\n      }\n\n      for (let i = 0; i < count; i++) {\n        if (!addCurrBond(i)) {\n          // ignore invalid bond\n          continue;\n        }\n        const orderAttr = bond.xmlNode.getAttribute('order');\n        const tc = parseInt(orderAttr, 10);\n        // the default bond order is unknown\n        localBond[i].order = 0;\n        localBond[i].type = Bond.BondType.UNKNOWN;\n        if (tc > 1) {\n          localBond[i].order = tc;\n        } else {\n          // another option - bond order is a string\n          const order = cOrderCharCodes[orderAttr];\n          if (order !== undefined) {\n            localBond[i].order = order;\n            if (orderAttr === 'A') {\n              localBond[i].type = Bond.BondType.AROMATIC;\n            }\n          }\n        }\n      }\n\n      count = atoms.length;\n      for (let i = 0; i < count; i++) {\n        atom = atoms[i];\n        atom.edges.sort();\n      }\n\n      const labels = self._breadWidthSearch(atoms, 0); // for now\n\n      const retStruct = {};\n      retStruct.atoms = atoms;\n      retStruct.bonds = localBond;\n      retStruct.labels = labels.atomLabels;\n      retStruct.count = Math.min(1, labels.labelsCount); // for now\n      retStruct.curr = -1;\n      retStruct.originalCML = doc;\n\n      return retStruct;\n    }\n\n    if (traversedData.cml) {\n      rawData = traversedData.cml;\n    } else {\n      rawData = traversedData;\n    }\n    const retData = [];\n    const filteredData = [];\n    this._findSuitableMolecule(rawData, filteredData);\n    if (this._readOnlyOneMolecule && filteredData.length > 1) {\n      filteredData.splice(1, filteredData.length - 1);\n    }\n    filteredData.forEach((d) => {\n      const rd = prepareComponentCompound(d);\n      if (rd.atoms.length > 0) {\n        retData.push(rd);\n      }\n    });\n    return retData;\n  }\n\n  _packLabel(compId, molId) {\n    const shift = 16;\n    return (molId << shift) + compId;\n  }\n\n  _unpackLabel(l) {\n    const shift = 16;\n    const mask = (1 << shift) - 1;\n    return { molId: l >>> shift, compId: l & mask };\n  }\n\n  _breadWidthSearch(atoms, molID) {\n    const atomLabels = new Array(atoms.length);\n\n    let id;\n    for (id = 0; id < atomLabels.length; id++) {\n      atomLabels[id] = this._packLabel(0, molID);\n    }\n\n    const breadthQueue = [];\n    let componentID = 0;\n    let labeledAtoms = atoms.length;\n\n    while (labeledAtoms > 0) {\n      componentID++;\n\n      let startID = -1;\n      for (id = 0; id < atomLabels.length; id++) {\n        if (this._unpackLabel(atomLabels[id]).compId === 0) {\n          startID = id;\n          break;\n        }\n      }\n\n      if (startID < 0) {\n        break;\n      }\n\n      // Bread first search\n      breadthQueue.push(atoms[startID]);\n      atomLabels[startID] = this._packLabel(componentID, molID);\n      labeledAtoms--;\n\n      while (breadthQueue.length > 0) {\n        const curr = breadthQueue.shift();\n        if (!curr) {\n          continue;\n        }\n\n        for (let i = 0; i < curr.edges.length; i++) {\n          if (atomLabels[curr.edges[i]] !== componentID) {\n            breadthQueue.push(atoms[curr.edges[i]]);\n            atomLabels[curr.edges[i]] = componentID;\n            labeledAtoms--;\n          }\n        }\n      }\n    }\n    const ret = {};\n    ret.atomLabels = atomLabels;\n    ret.labelsCount = componentID;\n    return ret;\n  }\n\n  _parseBond(eAtom, mainAtom, order, type) {\n    if (eAtom >= 0) {\n      const h = [Math.min(eAtom, mainAtom), Math.max(eAtom, mainAtom)];\n      this._complex.addBond(h[0], h[1], order, type, true);\n    }\n  }\n\n  _fixBondsArray() {\n    const serialAtomMap = this._serialAtomMap = {};\n    const complex = this._complex;\n\n    const atoms = complex._atoms;\n    for (let i = 0, ni = atoms.length; i < ni; ++i) {\n      const atom = atoms[i];\n      serialAtomMap[atom.serial] = atom;\n    }\n\n    const bonds = complex._bonds;\n    const { logger } = this;\n    for (let j = 0, nj = bonds.length; j < nj; ++j) {\n      const bond = bonds[j];\n      if (bond._right < bond._left) {\n        logger.debug('_fixBondsArray: Logic error.');\n      }\n      bond._left = serialAtomMap[bond._left] || null;\n      bond._right = serialAtomMap[bond._right] || null;\n    }\n  }\n\n  _parseSet(varData) {\n    const complex = this._complex = new Complex();\n    const data = varData;\n    const currentLabel = data.curr;\n    const { atoms, labels } = data;\n    let atom = null;\n    let i;\n    let j;\n    const count = atoms.length;\n\n    function addFunc(a) {\n      a.xmlNodeRef = atom;\n      if (atom.x2) {\n        atom.x3 = atom.x2;\n        delete atom.x2;\n      }\n      if (atom.y2) {\n        atom.y3 = atom.y2;\n        delete atom.y2;\n      }\n      if (!(atom.z3)) {\n        atom.z3 = '0.0';\n      }\n      atom.complexAtom = a;\n    }\n\n    let chains = {};\n    // parse atoms in label order\n    const reorder = [];\n    for (i = 0; i < count; i++) {\n      reorder.push(i);\n    }\n    reorder.sort((a, b) => labels[a] - labels[b]);\n    for (i = 0; i < count; i++) {\n      const atomCharge = 0;\n      const lLabel = labels[reorder[i]];\n      if (this._unpackLabel(lLabel).molId === this._unpackLabel(currentLabel).molId) {\n        atom = atoms[reorder[i]];\n        const atomFullNameStruct = atom.elementType;\n\n        if (atom.sgroupRef) {\n          const countRef = atom.sgroupRef.length;\n          for (let k = 0; k < countRef; ++k) {\n            complex._sgroups.push(atom.sgroupRef[k]);\n          }\n        }\n\n        if (atom.x3 || atom.x2) {\n          const currAtomComp = this._unpackLabel(lLabel).compId;\n          // use ' ' by default instead of synthetic creation of chain names\n          const chainID = ' '; //= String.fromCharCode('A'.charCodeAt(0) + currAtomComp);\n          const resSeq = currAtomComp;\n          const iCode = ' ';\n          let strLabel = currAtomComp.toString();\n          if (strLabel.length === 1) {\n            strLabel = `0${strLabel}`;\n          }\n          const resName = `N${strLabel}`;\n          let chain = chains[chainID];\n          if (!chain || chain.getName() !== chainID) {\n            chains[chainID] = chain = this._complex.getChain(chainID) || this._complex.addChain(chainID);\n            this._residue = null;\n          }\n\n          let residue = this._residue;\n          if (!residue || residue.getSequence() !== resSeq || residue.getICode() !== iCode) {\n            this._residue = residue = chain.addResidue(resName, resSeq, iCode);\n          }\n\n          // _x, _y, _z, mname, mindex, atomNameFull, atomName, chainID, serial, isHet, atlLocInd, atomNameToTypeF\n          let xyz = null;\n          if (atom.x3) {\n            xyz = new THREE.Vector3(parseFloat(atom.x3), parseFloat(atom.y3), parseFloat(atom.z3));\n          } else if (atom.x2) {\n            xyz = new THREE.Vector3(parseFloat(atom.x2), parseFloat(atom.y2), 0);\n          }\n          let element = Element.ByName[atom.elementType.toUpperCase()];\n          if (!element) {\n            element = (JSON.parse(JSON.stringify(Element.ByName[\n              Object.keys(Element.ByName)[Object.keys(Element.ByName).length - 1]])));\n            element.number += 1;\n            element.name = atom.elementType.toUpperCase();\n            element.fullName = 'Unknown';\n            Element.ByName[atom.elementType.toUpperCase()] = element;\n          }\n          const atomSerial = parseInt(atom.id.replace(/[^0-9]/, ''), 10);\n          const added = residue.addAtom(\n            atomFullNameStruct, element, xyz, Element.Role.SG,\n            true, atomSerial, ' ', 1.0, 0.0, atomCharge,\n          );\n          if (atom.hydrogenCount) {\n            added.hydrogenCount = parseInt(atom.hydrogenCount, 10);\n          }\n          if (atom.mrvValence) {\n            added.valence = parseInt(atom.mrvValence, 10);\n          }\n          addFunc(added);\n        }\n      }\n    }\n    chains = null;// NOSONAR\n    for (i = 0; i < data.bonds.length; i++) {\n      const cb = data.bonds[i];\n      if (this._unpackLabel(labels[cb.start]).molId === this._unpackLabel(currentLabel).molId\n          && this._unpackLabel(labels[cb.end]).molId === this._unpackLabel(currentLabel).molId) {\n        atom = atoms[cb.start];\n        if (!atom || !(atoms[cb.end])) {\n          continue; // skip invalid\n        }\n        this._parseBond(\n          parseInt(atom.id.replace(/[^0-9]/, ''), 10),\n          parseInt(atoms[cb.end].id.replace(/[^0-9]/, ''), 10), cb.order, cb.type,\n        );\n      }\n    }\n\n    for (i = 0; i < this._complex.getSGroupCount(); i++) {\n      const sGrp = this._complex.getSGroups()[i];\n      for (j = 0; j < sGrp._atoms.length; j++) {\n        sGrp._atoms[j] = sGrp._atoms[j].complexAtom;\n      }\n    }\n    for (i = 0; i < count; i++) {\n      if (this._unpackLabel(labels[i]).molId === this._unpackLabel(currentLabel).molId) {\n        atom = atoms[i];\n        atom.complexAtom = null;\n        delete atom.complexAtom;\n      }\n    }\n    this._complex.originalCML = data.originalCML;\n    this._fixBondsArray();\n    complex.finalize({\n      needAutoBonding: false,\n      detectAromaticLoops: this.settings.now.aromatic,\n      enableEditing: this.settings.now.editing,\n      serialAtomMap: this._serialAtomMap,\n    });\n    this._serialAtomMap = null;\n    this._complex = null;\n    return complex;\n  }\n\n  parseSync() {\n    const complexes = [];\n    const self = this;\n    const moleculaSet = this._selectComponents(this._data);\n    moleculaSet.forEach((molSet) => {\n      molSet.curr = 2;\n      if (molSet.count === 0) {\n        molSet.count = 1;\n      }\n      for (let i = 0; i < molSet.count; i++) {\n        molSet.curr = (i + 1);\n        complexes.push(self._parseSet(molSet, false));\n      }\n    });\n\n    let totalAtomsParsed = 0;\n    complexes.forEach((c) => {\n      totalAtomsParsed += c.getAtomCount();\n    });\n    if (totalAtomsParsed <= 0) {\n      throw new Error('The data does not contain valid atoms');\n    }\n\n    if (complexes.length > 1) {\n      const joinedComplex = new Complex();\n      joinedComplex.joinComplexes(complexes);\n      joinedComplex.originalCML = complexes[0].originalCML;\n      return joinedComplex;\n    }\n    if (complexes.length === 1) {\n      return complexes[0];\n    }\n    return new Complex();\n  }\n}\n\nCMLParser.formats = ['cml'];\nCMLParser.extensions = ['.cml'];\n\nexport default CMLParser;\n","import * as THREE from 'three';\nimport _ from 'lodash';\nimport Parser from './Parser';\nimport chem from '../../chem';\nimport MMTF from '../../../vendor/js/mmtf';\nimport StructuralElement from '../../chem/StructuralElement';\n\nconst {\n  Complex,\n  Chain,\n  Atom,\n  Element,\n  Helix,\n  Sheet,\n  Strand,\n  Bond,\n  Assembly,\n  Molecule,\n} = chem;\n\nclass ArrayComparator {\n  constructor(original) {\n    this._original = Array.from(original);\n    this._original.sort();\n\n    this._sum = 0;\n    for (let i = 0; i < this._original.length; ++i) {\n      this._sum += this._original[i];\n    }\n  }\n\n  compare(candidate) {\n    const len = candidate.length;\n    if (len !== this._original.length) {\n      return false;\n    }\n\n    let sum = 0;\n    let i;\n    for (i = 0; i < len; ++i) {\n      sum += candidate[i];\n    }\n\n    if (sum !== this._sum) {\n      return false;\n    }\n\n    const sorted = Array.from(candidate);\n    sorted.sort();\n\n    for (i = 0; i < len; ++i) {\n      if (sorted[i] !== this._original[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nArrayComparator.prototype.constructor = ArrayComparator;\n\nconst StructuralElementType = StructuralElement.Type;\n\n// see https://github.com/rcsb/mmtf-javascript/blob/master/src/mmtf-traverse.js\nconst secStructToType = [\n  StructuralElementType.HELIX_PI, // 0\n  StructuralElementType.BEND, // 1\n  StructuralElementType.HELIX_ALPHA, // 2\n  StructuralElementType.STRAND, // 3\n  StructuralElementType.HELIX_310, // 4\n  StructuralElementType.BRIDGE, // 5\n  StructuralElementType.TURN, // 6\n  StructuralElementType.COIL, // 7\n];\n\nfunction getFirstByte(buf) {\n  const bytes = new Uint8Array(buf, 0, 1);\n  return bytes[0];\n}\n\nclass MMTFParser extends Parser {\n  constructor(data, options) {\n    super(data, options);\n    this._options.fileType = 'mmtf';\n  }\n\n  static canProbablyParse(data) {\n    // check if it's binary MessagePack format containing a map (dictionary)\n    // see https://github.com/msgpack/msgpack/blob/master/spec.md\n    return _.isArrayBuffer(data) && ((getFirstByte(data) | 1) === 0xDF);\n  }\n\n  _onModel(_modelData) {\n  }\n\n  _onChain(chainData) {\n    if (chainData.modelIndex !== 0) {\n      return;\n    }\n\n    const chain = new Chain(this._complex, chainData.chainName);\n    this._complex._chains[chainData.chainIndex] = chain;\n    chain._index = chainData.chainIndex;\n  }\n\n  _onGroup(groupData) {\n    if (groupData.modelIndex !== 0) {\n      return;\n    }\n\n    if (this.settings.now.nowater) {\n      // skip water\n      if (groupData.groupName === 'HOH' || groupData.groupName === 'WAT') {\n        return;\n      }\n    }\n\n    const chain = this._complex._chains[groupData.chainIndex];\n    const icode = !groupData.insCode.charCodeAt(0) ? '' : groupData.insCode;\n    const residue = chain.addResidue(groupData.groupName, groupData.groupId, icode);\n    residue._index = groupData.groupIndex;\n\n    this._updateSecStructure(this._complex, residue, groupData);\n  }\n\n  _onAtom(atomData) {\n    if (atomData.modelIndex !== 0) {\n      return;\n    }\n\n    const altLoc = !atomData.altLoc.charCodeAt(0) ? '' : atomData.altLoc;\n    const atom = new Atom(\n      atomData.groupIndex, // we store residue index here to replace it later with actual reference\n      atomData.atomName,\n      Element.getByName(atomData.element.toUpperCase()),\n      new THREE.Vector3(atomData.xCoord, atomData.yCoord, atomData.zCoord),\n      Element.Role[atomData.atomName],\n      false, // hetero atoms will be marked later\n      atomData.atomId,\n      altLoc,\n      atomData.occupancy,\n      atomData.bFactor,\n      atomData.formalCharge,\n    );\n\n    this._complex._atoms[atomData.atomIndex] = atom;\n    atom.index = atomData.atomIndex;\n\n    this._serialAtomMap[atomData.atomId] = atom;\n  }\n\n  _onBond(bondData) {\n    const right = Math.max(bondData.atomIndex1, bondData.atomIndex2);\n    if (right >= this._complex._atoms.length) {\n      return;\n    }\n    const left = Math.min(bondData.atomIndex1, bondData.atomIndex2);\n    this._complex.addBond(\n      this._complex._atoms[left], this._complex._atoms[right],\n      bondData.bondOrder, Bond.BondType.UNKNOWN, true,\n    );\n  }\n\n  _updateSecStructure(complex, residue, groupData) {\n    const helixClasses = [3, -1, 1, -1, 5];\n\n    if (!_.isUndefined(groupData) && groupData.secStruct === this._ssType) {\n      residue._secondary = this._ssStruct;\n      if (this._ssStruct) {\n        this._ssStruct.term = residue;\n      }\n      return;\n    }\n\n    if (!_.isUndefined(groupData)) {\n      // start new secondary structure\n      const type = secStructToType[groupData.secStruct];\n      this._ssType = groupData.secStruct;\n      this._ssStart = residue;\n\n      let struct = null;\n      switch (this._ssType) {\n        case -1: // undefined\n        case 7: // coil\n          break;\n        case 0: // pi helix\n        case 2: // alpha helix\n        case 4: // 3-10 helix\n          struct = new Helix(helixClasses[this._ssType], residue, residue, 0, '', '', 0);\n          complex._helices.push(struct);\n          break;\n        case 3: { // extended\n          const sheet = new Sheet('', 0);\n          complex._sheets.push(sheet);\n          struct = new Strand(sheet, residue, residue, 0, null, null);\n          break;\n        }\n        default:\n          if (type !== undefined) {\n            struct = new StructuralElement(type, residue, residue);\n          }\n          break;\n      }\n\n      this._ssStruct = struct;\n      residue._secondary = struct;\n      if (struct) {\n        complex.structures.push(struct);\n      }\n    }\n  }\n\n  _updateMolecules(mmtfData) {\n    const entities = mmtfData.entityList;\n    if (!entities) {\n      return;\n    }\n\n    const chainsInModel0 = mmtfData.chainsPerModel[0];\n    for (let i = 0; i < entities.length; i++) {\n      const entity = entities[i];\n      const chains = entity.chainIndexList;\n      let residues = [];\n      for (let j = 0; j < chains.length; j++) {\n        const chainIndex = chains[j];\n        // skip chains in models other than the first one\n        if (chainIndex >= chainsInModel0) {\n          continue;\n        }\n        const chain = this._complex._chains[chainIndex];\n        residues = residues.concat(chain._residues.slice());\n      }\n      const molecule = new Molecule(this._complex, entity.description, i + 1);\n      molecule.residues = residues;\n      this._complex._molecules[i] = molecule;\n    }\n  }\n\n  // populate complex with chains, residues and atoms\n  _traverse(mmtfData) {\n    const self = this;\n\n    // get metadata\n    const { metadata } = this._complex;\n    metadata.id = mmtfData.structureId;\n    metadata.title = [];\n    metadata.title[0] = mmtfData.title;\n    metadata.date = mmtfData.releaseDate;\n    metadata.format = 'mmtf';\n\n    // create event callback functions\n    const eventCallbacks = {\n      onModel(modelData) {\n        self._onModel(modelData);\n      },\n      onChain(chainData) {\n        self._onChain(chainData);\n      },\n      onGroup(groupData) {\n        self._onGroup(groupData);\n      },\n      onAtom(atomData) {\n        self._onAtom(atomData);\n      },\n      onBond(bondData) {\n        self._onBond(bondData);\n      },\n    };\n\n    // temporary variables used during traversal to track secondary structures\n    this._ssType = -1;\n    this._ssStruct = null;\n    this._ssStart = null;\n\n    // traverse the structure and listen to the events\n    MMTF.traverse(mmtfData, eventCallbacks);\n\n    this._updateSecStructure(this._complex);\n    this._updateMolecules(mmtfData);\n  }\n\n  // During traversal atoms and residues don't come sequentially\n  // so a residue for certain atom can be unavailable. Thus we\n  // store residue index in atom.\n  // This function being called after traversal replaces the index\n  // with actual reference, and also populates atom lists in residues.\n  _linkAtomsToResidues() {\n    for (let i = 0; i < this._complex._atoms.length; ++i) {\n      const atom = this._complex._atoms[i];\n      const residue = this._complex._residues[atom.residue];\n      atom.residue = residue;\n      residue._atoms.push(atom);\n    }\n  }\n\n  _findSynonymousChains() {\n    const named = {};\n    for (let i = 0; i < this._complex._chains.length; ++i) {\n      const chain = this._complex._chains[i];\n      const name = chain.getName();\n      if (!named.hasOwnProperty(name)) {\n        named[name] = [];\n      }\n\n      named[name].push(chain._index);\n    }\n\n    return named;\n  }\n\n  // NOTE: This function relies on original chain indices, so it must be called before any magic happens to chains.\n  _parseAssemblyInfo(mmtfData) {\n    let i;\n    let j;\n    let k;\n    const assemblies = [];\n    const { logger } = this;\n\n    for (i = 0; i < mmtfData.bioAssemblyList.length; ++i) {\n      const baInfo = mmtfData.bioAssemblyList[i];\n      if (baInfo.transformList.length === 0) {\n        continue;\n      }\n\n      const chains = baInfo.transformList[0].chainIndexList;\n      const chainListCheck = new ArrayComparator(chains);\n\n      // build list of chain names\n      const chainNames = {};\n      for (j = 0; j < chains.length; ++j) {\n        chainNames[this._complex._chains[chains[j]].getName()] = 1;\n      }\n\n      // all chains with the same name should belong to assembly if one of them belongs\n      const allChains = [];\n      let name;\n      for (name in chainNames) {\n        if (chainNames.hasOwnProperty(name)) {\n          // just concat arrays -- there should be no duplicates\n          Array.prototype.push.apply(allChains, this._chainsByName[name]);\n        }\n      }\n      if (!chainListCheck.compare(allChains)) {\n        // assembly is missing some of the chains\n        logger.debug('MMTF: Assembly is missing some of the synonymous chains. Skipping...');\n      }\n\n      const a = new Assembly(this._complex);\n\n      // add chains to assembly\n      for (name in chainNames) {\n        if (chainNames.hasOwnProperty(name)) {\n          a.addChain(name);\n        }\n      }\n\n      // add unique matrices to assembly\n      a.addMatrix(new THREE.Matrix4().fromArray(baInfo.transformList[0].matrix).transpose());\n      for (j = 1; j < baInfo.transformList.length; ++j) {\n        const transform = baInfo.transformList[j];\n\n        if (!chainListCheck.compare(transform.chainIndexList)) {\n          // list of chains for this transform doesn't match that for other transforms\n          // this is illegal in our structure\n          logger.debug('MMTF: Chain lists differ for different transforms in one assembly. Skipping...');\n          continue;\n        }\n\n        const m = new THREE.Matrix4().fromArray(transform.matrix).transpose();\n\n        // check if matrix is already in the list\n        for (k = 0; k < a.matrices.length; ++k) {\n          if (a.matrices[k].equals(m)) {\n            break;\n          }\n        }\n\n        if (k === a.matrices.length) {\n          a.addMatrix(m);\n        }\n      }\n\n      a.finalize();\n      assemblies.push(a);\n    }\n\n    return assemblies;\n  }\n\n  // NOTE: This function relies on original chain indices, so it must be called before any magic happens to chains.\n  _markHeteroAtoms(mmtfData) {\n    const chainsInModel0 = mmtfData.chainsPerModel[0];\n    for (let i = 0; i < mmtfData.entityList.length; ++i) {\n      const entity = mmtfData.entityList[i];\n      if (entity.type !== 'polymer') {\n        for (let j = 0; j < entity.chainIndexList.length; ++j) {\n          const chainIndex = entity.chainIndexList[j];\n          // skip chains in models other than the first one\n          if (chainIndex >= chainsInModel0) {\n            continue;\n          }\n          const chain = this._complex._chains[chainIndex];\n          for (let k = 0; k < chain._residues.length; ++k) {\n            const res = chain._residues[k];\n            for (let m = 0; m < res._atoms.length; ++m) {\n              res._atoms[m].het = true;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // joins chains with the same name into single chain\n  _joinSynonymousChains() {\n    let i;\n    let j;\n\n    const primaryChainsArray = [];\n    const primaryChainsHash = {};\n\n    // join chains\n    for (i = 0; i < this._complex._chains.length; ++i) {\n      const chain = this._complex._chains[i];\n      const name = chain.getName();\n      if (!primaryChainsHash.hasOwnProperty(name)) {\n        // new name -- this is a primary chain\n        primaryChainsHash[name] = chain;\n        chain._index = primaryChainsArray.length; // update index as this array will later replace original chain list\n        primaryChainsArray.push(chain);\n        continue;\n      }\n\n      // this chain should be joined with the primary chain of the same name\n      const primary = primaryChainsHash[name];\n      for (j = 0; j < chain._residues.length; ++j) {\n        const residue = chain._residues[j];\n        primary._residues.push(residue);\n        residue._chain = primary;\n      }\n    }\n\n    // replace chains list with one containing only primary chains\n    // dropping references to all chains but primary\n    this._complex._chains = primaryChainsArray;\n  }\n\n  parseSync() {\n    const mmtfData = MMTF.decode(this._data);\n\n    this._complex = new Complex();\n    this._serialAtomMap = {}; // filled during traversal\n\n    this._traverse(mmtfData);\n    this._linkAtomsToResidues();\n    this._markHeteroAtoms(mmtfData);\n    this._chainsByName = this._findSynonymousChains();\n    Array.prototype.push.apply(this._complex.units, this._parseAssemblyInfo(mmtfData));\n    this._joinSynonymousChains();\n\n    this._complex.finalize({\n      needAutoBonding: false,\n      detectAromaticLoops: this.settings.now.aromatic,\n      enableEditing: this.settings.now.editing,\n      serialAtomMap: this._serialAtomMap,\n    });\n\n    return this._complex;\n  }\n}\n\nMMTFParser.formats = ['mmtf'];\nMMTFParser.extensions = ['.mmtf'];\nMMTFParser.binary = true;\n\nexport default MMTFParser;\n","class ParsingError extends Error {\n  constructor(message, line, column) {\n    super(`data:${line}:${column}: ${message}`);\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ParsingError);\n    }\n\n    this.name = 'ParsingError';\n    this.parseLine = line;\n    this.parseColumn = column;\n  }\n}\n\nexport default ParsingError;\n","import _ from 'lodash';\nimport ParsingError from './ParsingError';\n\n// Implemented and being tested against: https://www.iucr.org/resources/cif/spec/version1.1/cifsyntax\n\nfunction _isWhitespace(ch) {\n  return ch === 32 || ch === 10 || ch === 13 || ch === 9;\n}\n\nfunction _inlineIndexOf(ch0, str, idx) {\n  const len = str.length;\n  let ch = -1;\n  while (idx < len) {\n    ch = str.charCodeAt(idx);\n    if (ch === ch0 || ch === 10) {\n      break;\n    }\n    ++idx;\n  }\n  return ch === ch0 ? idx : -1;\n}\n\nexport default function readCIF(source) {\n  let i = 0;\n  let j = 0;\n  const n = source.length;\n  let code = NaN;\n  let newline = true;\n  let line = 1;\n  let column = 1;\n  let begin;\n  let state = 0; // 0 - start, 1 - block, 2 - item, 3 - loop, 4 - values, 5 - value\n  const result = {};\n  let block = {};\n  let keys = [];\n  let keysCount = 0;\n  let key = '';\n  let values = [];\n  let valuesCount = 0;\n  let value;\n\n  function _parseValue() {\n    let val;\n    if ((code === 46 || code === 63) && (i + 1 >= n || _isWhitespace(source.charCodeAt(i + 1)))) { // '.' or '?' .....\n      // it's a missing value\n      ++column;\n      ++i;\n      return undefined;\n    }\n    if (newline && code === 59) { // ';' ......................................................................\n      // parse multi-line string\n      j = i;\n      let lines = 0;\n      do {\n        j = _inlineIndexOf(10, source, j + 1); // '\\n'\n        if (j === -1) {\n          throw new ParsingError('Unterminated text block found', line, column);\n        }\n        ++lines;\n      } while ((j + 1 < n && source.charCodeAt(j + 1) !== code) || j + 1 >= n);\n      val = source.substring(i + 1, j).replace(/\\r/g, '');\n      i = j + 2;\n      line += lines;\n      column = 1;\n      newline = false;\n      return val;\n    }\n    if (code === 39 || code === 34) { // ''' or '\"' ...........................................................\n      // parse quoted string\n      j = i;\n      do {\n        j = _inlineIndexOf(code, source, j + 1);\n        if (j === -1) {\n          throw new ParsingError('Unterminated quoted string found', line, column);\n        }\n      } while (j + 1 < n && !_isWhitespace(source.charCodeAt(j + 1)));\n      val = source.substring(i + 1, j);\n      column += j - i + 1;\n      i = j + 1;\n      return val;\n    } // ......................................................................................................\n    // parse until the first whitespace\n    j = i;\n    while (j < n && !_isWhitespace(source.charCodeAt(j))) {\n      ++j;\n    }\n    val = source.substring(i, j);\n    column += j - i;\n    i = j;\n    // try to convert to a number\n    const num = Number(val);\n    if (!Number.isNaN(num)) {\n      return num;\n    }\n    // or leave as an unquoted string\n    return val;\n  }\n\n  function _storeKey(tag) {\n    keys[keysCount++] = tag;\n  }\n\n  function _storeValue(val) {\n    const keyIndex = valuesCount % keysCount;\n    values[keyIndex].push(val);\n    ++valuesCount;\n    return val;\n  }\n\n  while (i <= n) {\n    code = source.charCodeAt(i); // 'NaN' in place of '<eof>'\n    if (code === 13) { // '\\r' .......................................................................................\n      // just ignore\n    } else if (code === 10) { // '\\n' ................................................................................\n      // take note of new lines\n      newline = true;\n      ++line;\n      column = 1;\n    } else {\n      // process inline characters\n      if (code === 32 || code === 9) { // ' ' or '\\t' ................................................................\n        // just ignore\n      } else if (code === 35) { // '#' ...............................................................................\n        // skip the comment until before the end of the line\n        i = _inlineIndexOf(10, source, i + 1); // '\\n'\n        if (i === -1) {\n          break;\n        } else {\n          continue; // don't forget to process the new line\n        }\n      } else if (state === 0) { // start =============================================================================\n        if ((code === 68 || code === 100) && source.substr(i + 1, 4).toLowerCase() === 'ata_') { // 'data_' ..........\n          j = i + 5;\n          begin = j;\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\n            ++j;\n          }\n          column += j - i;\n          i = j;\n          if (begin < i) {\n            // add new data block\n            result[source.substring(begin, i)] = block = {};\n            state = 1; // block\n            continue; // don't forget to process the whitespace\n          } else {\n            throw new ParsingError('Data block name missing', line, column);\n          }\n        } else if (Number.isNaN(code)) { // <eof> ....................................................................\n          break;\n        } else { // ..................................................................................................\n          throw new ParsingError(`Unexpected character in state ${state}`, line, column);\n        }\n      } else if (state === 1) { // block =============================================================================\n        if ((code === 68 || code === 100) && source.substr(i + 1, 4).toLowerCase() === 'ata_') { // 'data_' ..........\n          state = 0; // start\n          continue; // parse again in a different state\n        } else if (code === 95) { // '_' .............................................................................\n          j = i + 1;\n          begin = j;\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\n            ++j;\n          }\n          column += j - i;\n          i = j;\n          if (begin < i) {\n            // start new item\n            key = source.substring(begin, i);\n            state = 2; // item\n            continue; // don't forget to process the whitespace\n          } else {\n            throw new ParsingError('Tag name missing', line, column);\n          }\n        } else if ((code === 76 || code === 108) && source.substr(i + 1, 4).toLowerCase() === 'oop_') { // 'loop_' ...\n          i += 5;\n          column += 5;\n          if (i < n && !_isWhitespace(source.charCodeAt(i))) {\n            throw new ParsingError(`Unexpected character in state ${state}`, line, column);\n          } else {\n            // start new loop\n            keys = [];\n            keysCount = 0;\n            values = [];\n            valuesCount = 0;\n            state = 3; // loop\n            continue; // don't forget to process the whitespace\n          }\n        } else if (Number.isNaN(code)) { // <eof> ....................................................................\n          break;\n        } else { // ..................................................................................................\n          throw new ParsingError(`Unexpected character in state ${state}`, line, column);\n        }\n      } else if (state === 2) { // item ==============================================================================\n        if (Number.isNaN(code)) {\n          break;\n        }\n        value = _parseValue();\n        _.set(block, key, value);\n        state = 1; // block\n        continue;\n      } else if (state === 3) { // loop ==============================================================================\n        if (code === 95) { // '_' ....................................................................................\n          j = i + 1;\n          begin = j;\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\n            ++j;\n          }\n          column += j - i;\n          i = j;\n          if (begin < i) {\n            // add new key\n            _storeKey(source.substring(begin, i));\n            continue; // don't forget to process the whitespace\n          } else {\n            throw new ParsingError('Tag name missing', line, column);\n          }\n        } else { // ..................................................................................................\n          if (keysCount > 0) {\n            for (let keyIndex = 0; keyIndex < keysCount; ++keyIndex) {\n              value = [];\n              values[keyIndex] = value;\n              _.set(block, keys[keyIndex], value);\n            }\n            state = 4;\n            continue; // parse again in a different state\n          }\n          throw new ParsingError('Data tags are missing inside a loop', line, column);\n        }\n      } else if (state === 4) { // values ============================================================================\n        if ((code === 68 || code === 100) && source.substr(i + 1, 4).toLowerCase() === 'ata_') { // 'data_' ..........\n          state = 0; // start\n        } else if (code === 95) { // '_' .............................................................................\n          state = 1; // block\n        } else if ((code === 76 || code === 108) && source.substr(i + 1, 4).toLowerCase() === 'oop_') { // 'loop_' ...\n          state = 1; // block\n        } else if (Number.isNaN(code)) { // <eof> ....................................................................\n          state = 0;\n        } else { // ..................................................................................................\n          _storeValue(_parseValue());\n        }\n        continue; // parse again in a different state\n      } else { // ====================================================================================================\n        throw new ParsingError(`Unexpected internal state ${state}`, line, column);\n      }\n\n      newline = false;\n      ++column;\n    }\n    ++i;\n  }\n\n  if (state === 2) { // item\n    throw new ParsingError(`Unexpected end of file in state ${state}`, line, column);\n  }\n\n  return result;\n}\n","import * as THREE from 'three';\nimport _ from 'lodash';\nimport Parser from './Parser';\nimport chem from '../../chem';\nimport StructuralElement from '../../chem/StructuralElement';\nimport readCIF from './readCIF';\n\nconst {\n  Complex,\n  Element,\n  Helix,\n  Sheet,\n  Strand,\n  Assembly,\n  Molecule,\n} = chem;\n\nconst cRequiredAtomFields = [\n  'auth_seq_id',\n  'Cartn_x',\n  'Cartn_y',\n  'Cartn_z',\n  'label_atom_id',\n];\n\nconst cSecondaryCoding = {\n  helx: 'helix',\n  turn: 'turn',\n  strn: 'strand',\n};\n\nfunction getTypeFromId(string) {\n  const typeId = /[A-Za-z]+/.exec(string);\n  if (!typeId) {\n    return null;\n  }\n\n  return cSecondaryCoding[typeId[0].toLowerCase()];\n}\n\n/**\n * Make valid object an array\n * @param arrayLikeObject\n * @return {array, object} array or object\n */\nfunction arrize(arrayLikeObject) {\n  if (arrayLikeObject === null || arrayLikeObject === undefined || _.isArray(arrayLikeObject)) {\n    return arrayLikeObject;\n  }\n  return [arrayLikeObject];\n}\n\nfunction nameToElement(name) {\n  // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\n  //\n  // http://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html#note1\n  //\n  // Atom names start with element symbols right-justified in columns 13-14\n  // as permitted by the length of the name. For example, the symbol FE for\n  // iron appears in columns 13-14, whereas the symbol C for carbon appears\n  // in column 14 (see Misaligned Atom Names). If an atom name has four\n  // characters, however, it must start in column 13 even if the element\n  // symbol is a single character (for example, see Hydrogen Atoms).\n\n  const veryLong = name.trim().length === 4;\n  return name.slice(0, veryLong ? 1 : 2).trim();\n}\n\nclass AtomDataError extends Error {\n  constructor(message) {\n    super();\n    this.name = 'AtomDataError';\n    this.message = message;\n  }\n}\n\nfunction _getOperations(operList) {\n  if (!operList) {\n    return null;\n  }\n  const idc = arrize(operList.id);\n  const { matrix, vector } = operList;\n  if (!idc || !matrix || !vector) {\n    return null;\n  }\n\n  const ops = [];\n  for (let i = 0, n = idc.length; i < n; ++i) {\n    const mtx = new THREE.Matrix4();\n    const { elements } = mtx;\n\n    for (let row = 0; row < 3; ++row) {\n      const matrixData = matrix[row + 1];\n      elements[row] = arrize(matrixData[1])[i];\n      elements[row + 4] = arrize(matrixData[2])[i];\n      elements[row + 8] = arrize(matrixData[3])[i];\n      elements[row + 12] = arrize(vector[row + 1])[i];\n    }\n    ops[idc[i]] = mtx;\n  }\n  return ops;\n}\n\nfunction _extractOperations(assemblyGen, opsDict) {\n  assemblyGen = _.isString(assemblyGen) ? assemblyGen : `${assemblyGen}`;\n  const l = assemblyGen.replace(/\\)\\s*\\(/g, '!').replace(/[()']/g, '');\n  const groupStr = l.split('!');\n  const gps = [];\n\n  for (let grIdx = 0, grCount = groupStr.length; grIdx < grCount; ++grIdx) {\n    const gr = groupStr[grIdx].split(',');\n    const gp = [];\n    let idx = 0;\n    for (let i = 0, n = gr.length; i < n; ++i) {\n      const s = gr[i];\n      if (s.includes('-')) {\n        const es = s.split('-');\n        let j = parseInt(es[0], 10);\n        const m = parseInt(es[1], 10);\n        for (; j <= m; ++j) {\n          gp[idx++] = opsDict[j];\n        }\n      } else {\n        gp[idx++] = opsDict[s];\n      }\n    }\n    gps.push(gp);\n  }\n\n  // traverse all groups from the end of array and make all mults\n  const matrices = [];\n  let cnt = 0;\n  function traverse(level, mtx) {\n    for (let ii = 0, nn = gps[level].length; ii < nn; ++ii) {\n      const newMtx = mtx ? mtx.clone() : new THREE.Matrix4();\n      newMtx.multiplyMatrices(gps[level][ii], newMtx);\n      if (level === 0) {\n        matrices[cnt++] = newMtx;\n      } else {\n        traverse(level - 1, newMtx);\n      }\n    }\n  }\n  traverse(gps.length - 1);\n  return matrices;\n}\n\nclass CIFParser extends Parser {\n  constructor(data, options) {\n    super(data, options);\n    this.asymDict = {};\n    this.molecules = [];\n    this._options.fileType = 'cif';\n  }\n\n  static canProbablyParse(data) {\n    return _.isString(data) && /^\\s*data_/i.test(data);\n  }\n\n  parseSync() {\n    this.logger.info('Parsing CIF file..');\n    const data = readCIF(this._data);\n    return this._toComplex(data);\n  }\n\n  /**\n   * Convert intermediate structure into our valid Complex object\n   * @param cifData intermediate CIF object\n   * @returns {Complex} complex\n   * @private\n   */\n  _toComplex(cifData) {\n    const complex = new Complex();\n    const complexData = cifData[Object.keys(cifData)[0]];\n    this._extractAtoms(complex, complexData);\n    this._extractSecondary(complex, complexData);\n    this._extractAssemblies(complex, complexData);\n    this._extractMolecules(complex, complexData);\n    this._extractMetadata(complex, complexData);\n    complex.finalize({\n      needAutoBonding: true,\n      detectAromaticLoops: this.settings.now.aromatic,\n      enableEditing: this.settings.now.editing,\n    });\n\n    return complex;\n  }\n\n  /**\n   * Extract metadata\n   * @param complex structure to fill\n   * @param complexData complex data from CIF file\n   * @private\n   */\n\n  _extractMetadata(complex, complexData) {\n    const { metadata } = complex;\n    metadata.id = complexData.entry.id;\n    metadata.classification = complexData.struct_keywords.pdbx_keywords;\n    const databaserev = complexData.database_PDB_rev;\n    metadata.date = (databaserev && databaserev.date_original) ? databaserev.date_original : '';\n    metadata.format = 'cif';\n    metadata.title = [];\n    metadata.title[0] = complexData.struct.title;\n  }\n\n  /**\n   * Extract molecules information from CIF structure (should be called strictly after _extractAtoms)\n   * @param complexData complex data from CIF file\n   * @private\n   */\n  _extractMolecules(complex, complexData) {\n    const molData = complexData.entity;\n    const names = arrize(molData.pdbx_description);\n    const count = names.length;\n    let i;\n\n    // molecules names from cif\n    for (i = 0; i < count; i++) {\n      if (this.molecules[i]) { // molecule was created during atoms processing\n        this.molecules[i].name = names[i];\n      } else { // molecule wasn't created, because there is no atom which is contained\n        this.molecules[i] = { name: names[i], residues: [] };\n      }\n    }\n\n    // reorganize molecules for complex and check chains\n    const molecules = complex.getMolecules();\n    for (i = 0; i < count; i++) {\n      const molecule = this.molecules[i];\n      molecules[i] = new Molecule(complex, molecule.name, i + 1);\n      molecules[i].residues = molecule.residues;\n    }\n  }\n\n  /**\n   * Extract atom information from CIF structure and fill complex\n   * @param {Complex} complex\n   * @param complexData complex data from CIF file\n   * @private\n   */\n  _extractAtoms(complex, complexData) {\n    const atomData = complexData.atom_site;\n    if (!atomData) {\n      throw new AtomDataError('CIF parsing error: atom_site is not specified!');\n    }\n\n    for (let f = 0, n = cRequiredAtomFields.length; f < n; ++f) {\n      if (!atomData[cRequiredAtomFields[f]]) {\n        throw new AtomDataError(`CIF parsing error: requires field ${cRequiredAtomFields[f]} not found!`);\n      }\n    }\n\n    const { asymDict } = this;\n    // required fields\n    const resIdc = arrize(atomData.auth_seq_id);\n    const x = arrize(atomData.Cartn_x);\n    const y = arrize(atomData.Cartn_y);\n    const z = arrize(atomData.Cartn_z);\n    const names = arrize(atomData.label_atom_id);\n    const count = names.length;\n    // optional fields\n    const group = arrize(atomData.group_PDB) || [];\n    const chainIdc = arrize(atomData.auth_asym_id) || [];\n    const chainLabelIdc = arrize(atomData.label_asym_id) || [];\n    const serials = arrize(atomData.id) || [];\n    const iCodes = arrize(atomData.pdbx_PDB_ins_code) || [];\n    const resNames = arrize(atomData.label_comp_id) || [];\n    const elements = arrize(atomData.type_symbol) || [];\n    const tempFactors = arrize(atomData.B_iso_or_equiv) || [];\n    const occupancies = arrize(atomData.occupancy) || [];\n    const charges = arrize(atomData.pdbx_formal_charge) || [];\n    const altLocs = arrize(atomData.label_alt_id) || [];\n    const models = arrize(atomData.pdbx_PDB_model_num) || [];\n    const molecules = arrize(atomData.label_entity_id) || [];\n\n    let chain = null;\n    let residue = null;\n    for (let i = 0; i < count; ++i) {\n      const model = models[i] || 1;\n      if (model !== 1) {\n        continue;\n      }\n      const chainID = String(chainIdc[i] || ' ');\n\n      if (!chain || chain.getName() !== chainID) {\n        chain = complex.getChain(chainID) || complex.addChain(chainID);\n      }\n      asymDict[String(chainLabelIdc[i] || ' ')] = chainID;\n      const resSeq = resIdc[i];\n      const iCode = String(iCodes[i] || ' ');\n      const resName = String(resNames[i] || '');\n      if (!residue || residue.getSequence() !== resSeq || residue.getICode() !== iCode) {\n        residue = chain.addResidue(resName, resSeq, iCode);\n\n        // store residue in appropriate molecule\n        const moleculeIdx = molecules[i] - 1;\n        let entity = this.molecules[moleculeIdx];\n        if (!entity) { // create new molecule if it hasn't been created\n          this.molecules[moleculeIdx] = { name: '', residues: [] };\n          entity = this.molecules[moleculeIdx];\n        }\n        entity.residues.push(residue);\n      }\n\n      const name = names[i];\n      const element = elements[i] || nameToElement(name);\n      const type = Element.getByName(element);\n      const role = Element.Role[name.trim()];\n      const xyz = new THREE.Vector3(x[i], y[i], z[i]);\n      const het = group[i] === 'HETATM' || false;\n      const serial = serials[i] || i;\n      const tempFactor = tempFactors[i] || 0.0;\n      const occupancy = occupancies[i] || 0.0;\n      const altLoc = String(altLocs[i] || '');\n      const charge = charges[i] || 0;\n\n      residue.addAtom(\n        name, type, xyz,\n        role, het, serial, altLoc, occupancy, tempFactor, charge,\n      );\n    }\n  }\n\n  /**\n   * Extracts secondary structure information from CIF intermediate data\n   * and adds it into complex\n   * @param {Complex} complex - complex to fill\n   * @param complexData - CIF complex data\n   * @private\n   */\n  _extractSecondary(complex, complexData) {\n    if (complexData.struct_conf) {\n      this._extractConfs(complex, complexData.struct_conf);\n    }\n    if (complexData.struct_sheet_range) {\n      this._extractSheets(complex, complexData.struct_sheet_range);\n    }\n  }\n\n  /**\n   * Extracts sheets information from CIF intermediate data\n   * and adds it into complex\n   * @param {Complex} complex\n   * @param sheetData\n   * @private\n   */\n  _extractSheets(complex, sheetData) {\n    const { asymDict } = this;\n    if (!sheetData.sheet_id || !sheetData.id || !sheetData.beg_label_seq_id || !sheetData.end_label_seq_id\n      || !sheetData.beg_label_asym_id) {\n      return;\n    }\n    // Strand(sheet, start, end, sense, cur, prev)\n    const sheets = complex._sheets;\n\n    function getSheet(name) {\n      const n = sheets.length;\n      for (let i = 0; i < n; ++i) {\n        if (sheets[i]._name === name) {\n          return sheets[i];\n        }\n      }\n      sheets[n] = new Sheet(name, 0);\n      return sheets[n];\n    }\n\n    const sheetNames = arrize(sheetData.sheet_id);\n    const strandNames = arrize(sheetData.id);\n    const starts = arrize(sheetData.beg_auth_seq_id);\n    const ends = arrize(sheetData.end_auth_seq_id);\n    const chains = arrize(sheetData.beg_label_asym_id);\n    const stICodes = arrize(sheetData.pdbx_beg_PDB_ins_code) || [];\n    const endICodes = arrize(sheetData.pdbx_end_PDB_ins_code) || [];\n\n    for (let i = 0, n = strandNames.length; i < n; ++i) {\n      const chain = complex.getChain(asymDict[chains[i]]);\n      const sheet = getSheet(sheetNames[i]);\n      const startIdx = starts[i];\n      const endIdx = ends[i];\n      const startICode = stICodes[i] || ' ';\n      const endICode = endICodes[i] || ' ';\n\n      const start = chain.findResidue(startIdx, startICode);\n      const end = chain.findResidue(endIdx, endICode);\n\n      // TODO think about last condition\n      if (!start || !end) {\n        continue;\n      }\n\n      const strand = new Strand(sheet, start[0], end[0], 0, null, null);\n      const residues = chain.getResidues();\n      for (let r = start[1]; r <= end[1]; ++r) {\n        residues[r]._secondary = strand;\n      }\n      sheet.addStrand(strand);\n      complex.structures.push(strand);\n    }\n  }\n\n  /**\n   * Extracts helix/turn/strand(?) information from CIF intermediate data\n   * and adds it into complex\n   * @param {Complex} complex\n   * @param helicesData\n   * @private\n   */\n  _extractConfs(complex, helicesData) {\n    const { asymDict } = this;\n    if (!helicesData.conf_type_id || !helicesData.beg_label_seq_id || !helicesData.end_label_seq_id\n      || !helicesData.beg_label_asym_id) {\n      return;\n    }\n\n    const types = arrize(helicesData.conf_type_id);\n    const starts = arrize(helicesData.beg_auth_seq_id);\n    const stICodes = arrize(helicesData.pdbx_beg_PDB_ins_code) || [];\n    const ends = arrize(helicesData.end_auth_seq_id);\n    const endICodes = arrize(helicesData.pdbx_end_PDB_ins_code) || [];\n    const comments = arrize(helicesData.details) || [];\n    const lengths = arrize(helicesData.pdbx_PDB_helix_length) || [];\n    const helixClasses = arrize(helicesData.pdbx_PDB_helix_class) || [];\n    const names = arrize(helicesData.id) || [];\n    const chains = arrize(helicesData.beg_label_asym_id);\n\n    for (let i = 0, n = types.length; i < n; ++i) {\n      const type = getTypeFromId(types[i]);\n      if (!type) {\n        continue;\n      }\n      const name = names[i] || types[i];\n      const chain = complex.getChain(asymDict[chains[i]]);\n\n      const startIdx = starts[i];\n      const endIdx = ends[i];\n      const startICode = stICodes[i] || ' ';\n      const endICode = endICodes[i] || ' ';\n\n      const start = chain.findResidue(startIdx, startICode);\n      const end = chain.findResidue(endIdx, endICode);\n\n      // TODO think about last condition\n      if (!start || !end) {\n        continue;\n      }\n      const comment = comments[i] || '';\n      const length = lengths[i] || 0;\n      const helixClass = helixClasses[i] || ' ';\n      let struct;\n      if (type === 'helix') {\n        const idx = complex._helices.length;\n        struct = new Helix(helixClass, start[0], end[0], idx, name, comment, length);\n        complex.addHelix(struct);\n        complex.structures.push(struct);\n      } else if (type === 'turn') {\n        struct = new StructuralElement(StructuralElement.Type.TURN, start[0], end[0]);\n        complex.structures.push(struct);\n      } else {\n        struct = null;\n      }\n      if (!struct) {\n        continue;\n      }\n      const residues = chain.getResidues();\n      for (let r = start[1]; r <= end[1]; ++r) {\n        residues[r]._secondary = struct;\n      }\n    }\n  }\n\n  /**\n   * Extract biological assemblies information from CIF structure and fill complex\n   * @param {Complex} complex\n   * @param complexData complex data from CIF file\n   * @private\n   */\n  _extractAssemblies(complex, complexData) {\n    const { asymDict } = this;\n    const asmGen = complexData.pdbx_struct_assembly_gen;\n    if (!asmGen) {\n      return;\n    }\n\n    const asmIdx = arrize(asmGen.assembly_id);\n    const asmOper = arrize(asmGen.oper_expression);\n    const asmList = arrize(asmGen.asym_id_list);\n    if (!asmIdx || !asmOper || !asmList) {\n      return;\n    }\n\n    const operList = _getOperations(complexData.pdbx_struct_oper_list);\n    if (!operList) {\n      return;\n    }\n\n    for (let i = 0, n = asmIdx.length; i < n; ++i) {\n      const asm = new Assembly(complex);\n      const assemblyOps = _extractOperations(asmOper[i], operList);\n      const entries = asmList[i].split(',');\n      for (let ii = 0, nn = entries.length; ii < nn; ++ii) {\n        const chain = entries[ii].trim();\n        if (chain.length > 0) {\n          asm.addChain(asymDict[chain]);\n        }\n      }\n      asm.matrices = assemblyOps;\n      complex.units.push(asm);\n    }\n  }\n}\n\nCIFParser.formats = ['cif', 'mmcif'];\nCIFParser.extensions = ['.cif', '.mmcif'];\n\nexport default CIFParser;\n","import * as THREE from 'three';\nimport _ from 'lodash';\nimport Volume from '../../chem/Volume';\n\nexport const valueType = {\n  singular: 0,\n  vector: 1,\n  array: 2,\n  buffer: 3,\n};\n\nclass VolumeModel {\n  _xyz2crs = [];\n\n  _origin = new THREE.Vector3(0, 0, 0);\n\n  constructor() {\n    this._header = {};\n    this._boxSize = new THREE.Vector3();\n    this._boxStart = new THREE.Vector3();\n    this._header.delta = {};\n    this._header.extent = [];\n    this._header.nstart = [];\n    this._header.grid = [];\n    this._header.crs2xyz = [];\n    this._header.cellDims = new THREE.Vector3();\n    this._header.angles = [];\n    this._header.origin = new THREE.Vector3(0, 0, 0);\n    this._header.dmin = 0;\n    this._header.dmean = 0;\n    this._header.dmax = 0;\n  }\n\n  _typedCheck() {\n    if (_.isTypedArray(this._buff)) {\n      this._buff = this._buff.buffer;\n    } else if (!_.isArrayBuffer(this._buff)) {\n      throw new TypeError('Expected ArrayBuffer or TypedArray');\n    }\n  }\n\n  _fillHeader(headerFormat, arrays) {\n    for (const key in headerFormat) {\n      if (headerFormat.hasOwnProperty(key)) {\n        switch (headerFormat[key][0]) {\n          case valueType.singular:\n            this._header[key] = arrays[headerFormat[key][1]][headerFormat[key][2]];\n            break;\n\n          case valueType.array:\n            this._parseArray(this._header[key], arrays[headerFormat[key][1]], headerFormat[key][2]);\n            break;\n\n          case valueType.vector:\n            this._parseVector(this._header[key], arrays[headerFormat[key][1]], headerFormat[key][2]);\n            break;\n\n          case valueType.buffer:\n            this._header[key] = new Uint8Array(\n              arrays[headerFormat[key][1]],\n              [headerFormat[key][2]] * 4,\n              [headerFormat[key][3]] * 4,\n            );\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n  }\n\n  _parseVector(vector, arr, pos) {\n    [vector.x, vector.y, vector.z] = [arr[pos], arr[pos + 1], arr[pos + 2]];\n  }\n\n  _parseArray(vector, arr, pos) {\n    vector[0] = arr[pos];\n    vector[1] = arr[pos + 1];\n    vector[2] = arr[pos + 2];\n  }\n\n  _parseHeader(_buffer) {}\n\n  _setAxisIndices() {}\n\n  _setOrigins() {}\n\n  _getAxis() {\n    const header = this._header;\n\n    const xScale = header.cellDims.x / header.grid[0];\n    const yScale = header.cellDims.y / header.grid[1];\n    const zScale = header.cellDims.z / header.grid[2];\n\n    const [alpha, beta, gamma] = header.angles;\n\n    const z1 = Math.cos(beta);\n    const z2 = (Math.cos(alpha) - Math.cos(beta)\n      * Math.cos(gamma)) / Math.sin(gamma);\n    const z3 = Math.sqrt(1.0 - z1 * z1 - z2 * z2);\n\n    const xaxis = new THREE.Vector3(xScale, 0, 0);\n    const yaxis = new THREE.Vector3(Math.cos(gamma) * yScale, Math.sin(gamma) * yScale, 0);\n    const zaxis = new THREE.Vector3(z1 * zScale, z2 * zScale, z3 * zScale);\n\n    return [xaxis, yaxis, zaxis];\n  }\n\n  _getXYZdim() {\n    return [this._header.extent[this._xyz2crs[0]],\n      this._header.extent[this._xyz2crs[1]],\n      this._header.extent[this._xyz2crs[2]]];\n  }\n\n  _getVolumeInfo() {\n    const volInfo = _.pick(this._header, ['dmean', 'dmin', 'dmax', 'sd', 'delta']);\n    volInfo.obtuseAngle = this._header.angles.map((angle) => Number(angle >= (Math.PI / 2)));\n    return volInfo;\n  }\n\n  _setBoxParams(xaxis, yaxis, zaxis) {\n    // if axes are not orthogonal, the origins might not match with box coordinates - need to make shift\n    let shiftX = 0;\n    let shiftY = 0;\n    const [alpha, beta, gamma] = this._header.angles;\n\n    if (gamma >= Math.PI / 2) {\n      shiftX += Math.abs(yaxis.x);\n    }\n    if (beta >= Math.PI / 2) {\n      shiftX += Math.abs(zaxis.x);\n    }\n    if (alpha >= Math.PI / 2) {\n      shiftY += Math.abs(zaxis.y);\n    }\n\n    this._boxStart = new THREE.Vector3(this._origin.x - shiftX, this._origin.y - shiftY, this._origin.z);\n    this._boxSize = new THREE.Vector3(\n      Math.abs(xaxis.x) + Math.abs(yaxis.x) + Math.abs(zaxis.x),\n      Math.abs(yaxis.y) + Math.abs(zaxis.y),\n      Math.abs(zaxis.z),\n    );\n\n    const delta = (axe, proj) => (Math.abs(axe[proj]) / this._boxSize[proj]);\n    this._header.delta.x = delta(yaxis, 'x');\n    this._header.delta.y = delta(zaxis, 'x');\n    this._header.delta.z = delta(zaxis, 'y');\n  }\n\n  _getXYZbox() {\n    return new THREE.Box3(this._boxStart.clone(), this._boxStart.clone().add(this._boxSize));\n  }\n\n  _toXYZData() {}\n\n  parse(data) {\n    this._parseHeader(data);\n    this._setOrigins();\n    return new Volume(Float32Array, this._getXYZdim(), this._getXYZbox(), 1, this._toXYZData(), this._getVolumeInfo());\n  }\n}\n\nexport default VolumeModel;\n","import Parser from './Parser';\nimport VolumeModel, { valueType } from './VolumeModel';\n\nconst CCP4Header = {\n  extent: [valueType.array, 'u32', 0],\n  type: [valueType.singular, 'u32', 3],\n  nstart: [valueType.array, 'i32', 4],\n  grid: [valueType.array, 'u32', 7],\n  cellDims: [valueType.vector, 'f32', 10],\n  angles: [valueType.array, 'f32', 13],\n  crs2xyz: [valueType.array, 'i32', 16],\n  dmin: [valueType.singular, 'f32', 19],\n  dmax: [valueType.singular, 'f32', 20],\n  dmean: [valueType.singular, 'f32', 21],\n  ispg: [valueType.singular, 'u32', 22],\n  nsymbt: [valueType.singular, 'u32', 23],\n  lksflg: [valueType.singular, 'u32', 24],\n  customData: [valueType.buffer, 'buffer', 25, 9],\n  origin: [valueType.vector, 'f32', 34],\n  map: [valueType.buffer, 'buffer', 52, 1],\n  machine: [valueType.singular, 'u32', 53],\n  sd: [valueType.singular, 'f32', 54],\n  nlabel: [valueType.singular, 'f32', 55],\n  label: [valueType.buffer, 'buffer', 56, 200],\n};\n\nclass Ccp4Model extends VolumeModel {\n  // read header (http://www.ccp4.ac.uk/html/maplib.html)\n  _parseHeader(_buffer) {\n    this._buff = _buffer;\n    this._typedCheck();\n    const arrays = {};\n    arrays.u32 = new Uint32Array(this._buff, 0, 56);\n    arrays.i32 = new Int32Array(this._buff, 0, 56);\n    arrays.f32 = new Float32Array(this._buff, 0, 56);\n    arrays.buffer = this._buff;\n    const header = this._header;\n\n    this._fillHeader(CCP4Header, arrays);\n\n    // calculate non-orthogonal unit cell coordinates\n    header.angles.forEach((angle, i, a) => { a[i] *= Math.PI / 180.0; });\n  }\n\n  _setAxisIndices() {\n    const header = this._header;\n\n    if (header.cellDims.x === 0.0 && header.cellDims.y === 0.0 && header.cellDims.z === 0.0) {\n      header.cellDims.set(1.0, 1.0, 1.0);\n    }\n    // Apply header conversion\n    // Mapping between CCP4 column, row, section and VMD x, y, z.\n    const { crs2xyz } = this._header;\n    if (crs2xyz[0] === 0 && crs2xyz[1] === 0 && crs2xyz[2] === 0) {\n      crs2xyz[0] = 1;\n      crs2xyz[1] = 2;\n      crs2xyz[2] = 3;\n    }\n\n    const xyz2crs = this._xyz2crs;\n    xyz2crs[crs2xyz[0] - 1] = 0; // column\n    xyz2crs[crs2xyz[1] - 1] = 1; // row\n    xyz2crs[crs2xyz[2] - 1] = 2; // section\n  }\n\n  _setOrigins() {\n    const [xaxis, yaxis, zaxis] = this._getAxis();\n    this._setAxisIndices();\n\n    const header = this._header;\n    const xyz2crs = this._xyz2crs;\n    // Handle both MRC-2000 and older format maps\n    if (header.origin.x === 0.0 && header.origin.y === 0.0 && header.origin.z === 0.0) {\n      this._origin.addScaledVector(xaxis, header.nstart[xyz2crs[0]]);\n      this._origin.addScaledVector(yaxis, header.nstart[xyz2crs[1]]);\n      this._origin.addScaledVector(zaxis, header.nstart[xyz2crs[2]]);\n    } else {\n      this._origin = header.origin;\n      // Use ORIGIN records rather than old n[xyz]start records\n      //   http://www2.mrc-lmb.cam.ac.uk/image2000.html\n      // XXX the ORIGIN field is only used by the EM community, and\n      // has undefined meaning for non-orthogonal maps and/or non-cubic voxels, etc.\n    }\n    xaxis.multiplyScalar(header.extent[xyz2crs[0]] - 1);\n    yaxis.multiplyScalar(header.extent[xyz2crs[1]] - 1);\n    zaxis.multiplyScalar(header.extent[xyz2crs[2]] - 1);\n\n    if (header.type === 2) {\n      this._data = new Float32Array(\n        this._buff,\n        1024 + header.nsymbt,\n        header.extent[0] * header.extent[1] * header.extent[2],\n      );\n    } else {\n      throw new Error(`CCP4: Unsupported format ${header.type}`);\n    }\n\n    this._setBoxParams(xaxis, yaxis, zaxis);\n  }\n\n  _toXYZData() {\n    const header = this._header;\n    const data = this._data;\n    const xyz2crs = this._xyz2crs;\n    const xyzData = new Float32Array(data.length);\n\n    const dim = this._getXYZdim();\n    const xSize = dim[0];\n    const ySize = dim[1];\n\n    let crsIdx = 0;\n    const coord = [];\n    let x;\n    let y;\n    let z;\n    for (coord[2] = 0; coord[2] < header.extent[2]; coord[2]++) { // Site\n      for (coord[1] = 0; coord[1] < header.extent[1]; coord[1]++) { // Row\n        for (coord[0] = 0; coord[0] < header.extent[0]; coord[0]++, crsIdx++) { // Column\n          x = coord[xyz2crs[0]];\n          y = coord[xyz2crs[1]];\n          z = coord[xyz2crs[2]];\n          xyzData[x + xSize * (y + ySize * z)] = data[crsIdx];\n        }\n      }\n    }\n\n    return xyzData;\n  }\n}\n\nclass CCP4Parser extends Parser {\n  constructor(data, options) {\n    super(data, options);\n    this._options.fileType = 'ccp4';\n    this.model = new Ccp4Model();\n  }\n\n  static canProbablyParse(_data) {\n    return false; // Autodetection is not implemented yet\n  }\n\n  parseSync() {\n    return this.model.parse(this._data);\n  }\n}\n\nCCP4Parser.formats = ['ccp4'];\nCCP4Parser.extensions = ['.ccp4', '.map', '.mrc'];\nCCP4Parser.binary = true;\n\nexport default CCP4Parser;\n","import * as THREE from 'three';\nimport _ from 'lodash';\nimport Parser from './Parser';\nimport chem from '../../chem';\n\nconst { Complex, Element, Molecule } = chem;\n\nclass XYZParser extends Parser {\n  constructor(data, options) {\n    super(data, options);\n\n    this._complex = null;\n    this._atomsInf = null;\n\n    this._options.fileType = 'xyz';\n    this._fileName = options.name;\n  }\n\n  static canProbablyParse(data) {\n    return _.isString(data) && /^\\s*\\d+ *\\n[^\\n]*\\n\\s*\\w{1,3}\\s+-?\\d/.test(data);\n  }\n\n  _parseToAtomsInf(source) {\n    const endnAtoms = source.indexOf('\\n');\n    const nAtoms = parseInt(source.substring(0, endnAtoms), 10);\n    const endComment = source.indexOf('\\n', endnAtoms + 1);\n    let comment = source.slice(endnAtoms + 1, endComment).trim();\n    if (comment.length === 0) {\n      comment = this._fileName;\n    }\n\n    const startAtomsInf = endComment + source.substring(endComment).search(/\\S/);\n    this._atomsInf = source.substring(startAtomsInf).split(/[\\s,]*\\n[\\s,]*/);\n    if (!Number.isNaN(nAtoms) && (this._atomsInf.length - 1 !== nAtoms)) {\n      this._complex.error = {\n        message: 'wrong number of atoms',\n      };\n      return;\n    }\n\n    this._complex.metadata.format = 'xyz';\n    this._complex.name = comment;\n  }\n\n  _parseAtomsInf() {\n    const het = true;\n    const altLoc = ' ';\n    const occupancy = 1;\n    const tempFactor = 1;\n    const charge = 0;\n\n    const chain = this._complex.addChain('A');\n    const residue = chain.addResidue('UNK', 1, ' ');\n\n    for (let i = 0; i < this._atomsInf.length - 1; i++) {\n      const words = this._atomsInf[i].split(/[\\s,]+/);\n\n      if (words.length !== 4) {\n        this._complex.error = {\n          message: 'missed parameters',\n        };\n        break;\n      }\n\n      const serial = i + 1;\n      const name = words[0];\n      const xyz = new THREE.Vector3(parseFloat(words[1]), parseFloat(words[2]), parseFloat(words[3]));\n      const type = Element.getByName(name);\n      const role = undefined;\n\n      residue.addAtom(name, type, xyz, role, het, serial, altLoc, occupancy, tempFactor, charge);\n    }\n\n    const molecule = new Molecule(this._complex, this._complex.name, 1);\n    molecule.residues = residue;\n    this._complex._molecules[0] = molecule;\n  }\n\n  parseSync() {\n    const result = this._complex = new Complex();\n\n    this._parseToAtomsInf(this._data);\n    this._parseAtomsInf();\n\n    this._complex.finalize({\n      needAutoBonding: true,\n      detectAromaticLoops: this.settings.now.aromatic,\n      enableEditing: this.settings.now.editing,\n      serialAtomMap: this._serialAtomMap,\n    });\n\n    this._complex = null;\n    this._atomsInf = null;\n\n    if (result.error) {\n      throw new Error(result.error.message);\n    }\n    return result;\n  }\n\n  static formats = ['xyz'];\n\n  static extensions = ['.xyz'];\n}\n\nexport default XYZParser;\n","import * as THREE from 'three';\nimport _ from 'lodash';\nimport Parser from './Parser';\nimport chem from '../../chem';\n\nconst { Complex, Element } = chem;\n\nclass PubChemParser extends Parser {\n  constructor(data, options) {\n    super(data, options);\n    this._options.fileType = 'pubchem+json';\n  }\n\n  static canProbablyParse(data) {\n    return _.isString(data) && data[0] === '{';\n  }\n\n  parseSync() {\n    this.logger.info('Parsing PubChem JSON file...');\n    return this._toComplex(JSON.parse(this._data));\n  }\n\n  _toComplex(jsonData) {\n    const complex = new Complex();\n    const complexData = jsonData.PC_Compounds && jsonData.PC_Compounds[0];\n    if (complexData) {\n      this._extractAtoms(complex, complexData);\n      complex.finalize({\n        needAutoBonding: false,\n        detectAromaticLoops: this.settings.now.aromatic,\n        enableEditing: this.settings.now.editing,\n      });\n    }\n    return complex;\n  }\n\n  _extractAtoms(complex, complexData) {\n    let aids = complexData.atoms && complexData.atoms.aid;\n    let elements = aids && complexData.atoms.element;\n    if (!elements || aids.length !== elements.length) {\n      throw new Error('Unable to parse atom elements');\n    }\n    elements = _.fromPairs(_.zip(aids, elements));\n    const atoms = {};\n\n    const coords = complexData.coords && complexData.coords[0];\n    const model = coords && coords.conformers && coords.conformers[0];\n    const xs = model && model.x;\n    const ys = model && model.y;\n    const zs = (model && model.z) || [];\n    aids = coords && coords.aid;\n    if (!aids || !xs || !ys) {\n      throw new Error('Coordinates are not found in the file');\n    }\n\n    const chain = complex.addChain(' ');\n    const residue = chain.addResidue('UNK', 1, ' ');\n\n    for (let i = 0, n = aids.length; i < n; ++i) {\n      const aid = aids[i];\n      const element = Element.ByAtomicNumber[elements[aid]];\n      const xyz = new THREE.Vector3(xs[i], ys[i], zs[i] || 0.0);\n      atoms[aid] = residue.addAtom(element.name, element, xyz, undefined, true, aid, ' ', 1.0, 0.0, 0);\n    }\n\n    const aids1 = complexData.bonds && complexData.bonds.aid1;\n    const aids2 = complexData.bonds && complexData.bonds.aid2;\n    const orders = (complexData.bonds && complexData.bonds.order) || [];\n    if (!aids1 || !aids2 || aids1.length !== aids2.length) {\n      return;\n    }\n\n    for (let j = 0, m = aids1.length; j < m; ++j) {\n      complex.addBond(atoms[aids1[j]], atoms[aids2[j]], orders[j] || 1, 0, true);\n    }\n  }\n}\n\nPubChemParser.formats = ['pubchem', 'pubchem+json', 'pc'];\nPubChemParser.extensions = ['.json'];\n\nexport default PubChemParser;\n","import _ from 'lodash';\n\nexport default class SDFStream {\n  constructor(data) {\n    this._strings = data.split(/\\r?\\n|\\r/);\n    this._currentStart = 0;\n    this._currentStringIndx = 0;\n  }\n\n  setStart(start) {\n    if (start >= this._strings.length) {\n      this._currentStart = this._strings.length - 1;\n      this._currentStringIndx = this._strings.length - 1;\n    } else {\n      this._currentStart = start;\n      this._currentStringIndx = start;\n    }\n  }\n\n  getNextString() {\n    return this._strings[++this._currentStringIndx];\n  }\n\n  getCurrentString() {\n    return this._strings[this._currentStringIndx];\n  }\n\n  getStringFromStart(numb) {\n    this._currentStringIndx = this._currentStart + numb;\n    return this._strings[this._currentStart + numb];\n  }\n\n  findNextDataItem() {\n    let curStr = this.getNextString();\n    let res = false;\n    while (!_.isUndefined(curStr) && curStr.trim() !== '$$$$') {\n      if (curStr.match(/>\\s+<(.*)>/)) {\n        res = true;\n        break;\n      }\n      curStr = this.getNextString();\n    }\n\n    return res;\n  }\n\n  findNextCompoundStart() {\n    let curStr = this.getCurrentString();\n    while (!_.isUndefined(curStr) && curStr.trim() !== '$$$$') {\n      curStr = this.getNextString();\n    }\n    this.setStart(++this._currentStringIndx);\n    return this.probablyHaveDataToParse();\n  }\n\n  probablyHaveDataToParse() {\n    return this._currentStringIndx < this._strings.length - 2;\n  }\n}\n","import * as THREE from 'three';\nimport _ from 'lodash';\nimport Parser from './Parser';\nimport chem from '../../chem';\nimport SDFStream from './SDFStream';\nimport Assembly from '../../chem/Assembly';\n\nconst {\n  Complex,\n  Element,\n  Bond,\n  Molecule,\n} = chem;\n\nconst chargeMap = [0, 3, 2, 1, 0, -1, -2, -3];\nconst orderMap = [0, 1, 2, 3, 1, 1, 1, 2];\nconst typeMap = [\n  Bond.BondType.UNKNOWN, // 0 - error\n  Bond.BondType.COVALENT, // 1 - single\n  Bond.BondType.COVALENT, // 2 - double\n  Bond.BondType.COVALENT, // 3 - triple\n  Bond.BondType.AROMATIC, // 4 - aromatic\n  Bond.BondType.UNKNOWN, // 5 - single or double\n  Bond.BondType.AROMATIC, // 6 - single or aromatic\n  Bond.BondType.AROMATIC, // 7 - double or aromatic\n  // 8 - any\n  // 9 - coordination\n  // 10 - hydrogen\n];\n\nconst sdfAndMolRegexp = /.*(M\\s\\sEND).*|.*(^$$$$).*|.*>\\s+<(.+)>.*/;\nconst sdfRegExp = /.*($$$$).*|.*>\\s+<(.+)>.*/;\n\nconst fileFormat = { SDF: 'sdf', MOL: 'mol' };\n\nconst possibleNameTags = ['PUBCHEM_IUPAC_TRADITIONAL_NAME', /PUBCHEM_(.+)_NAME/, /(.+)name/, /(.+)NAME/];\nconst possibleIDTags = ['PUBCHEM_COMPOUND_CID', 'id', 'ID', /.*CID/, /.*ID/, /.*id/];\nconst possibleTitleTags = ['msg', 'MSG', 'message', 'title', 'description', 'desc'];\nconst tagsNames = ['name', 'id', 'title'];\nconst tags = { name: possibleNameTags, id: possibleIDTags, title: possibleTitleTags };\n\nfunction buildChainID(index) {\n  if (!index) {\n    return 'A';\n  }\n\n  const codes = [];\n  while (index) {\n    codes.push(65 + (index % 26));\n    index = Math.trunc(index / 26);\n  }\n  if (codes.length > 1) {\n    codes.reverse();\n    codes[0] -= 1;\n  }\n\n  return String.fromCharCode(...codes);\n}\n\nexport default class SDFParser extends Parser {\n  constructor(data, options) {\n    super(data, options);\n    this._format = 'sdf';\n    this._complex = null;\n    this._chain = null;\n    this._residue = null;\n    this._molecules = null;\n    this._metadata = {};\n    this._metadata.molecules = [];\n    this._currentMolProps = {};\n    this._compoundIndx = -1;\n    this._assemblies = [];\n    this._atomsParsed = 0;\n    this._atomsIndexes = [];\n  }\n\n  canProbablyParse(data) {\n    return _.isString(data) && sdfAndMolRegexp.test(data);\n  }\n\n  _parseHeader(stream) {\n    const molecule = {};\n    molecule.name = stream.getStringFromStart(0);\n    const date = parseInt(stream.getStringFromStart(1).substr(10, 6).trim(), 10);\n    molecule.date = date.toString() || '';\n    molecule.title = stream.getStringFromStart(2);\n    this._metadata.molecules.push(molecule);\n  }\n\n  _parseAtoms(stream, atomsNum) {\n    let curStr;\n    let serial = this._atomsParsed;\n\n    // each molecule = chain\\residue\n    const chainID = buildChainID(this._compoundIndx);\n    const resName = 'UNK';\n    const resSeq = 1;\n\n    this._chain = this._complex.getChain(chainID) || this._complex.addChain(chainID);\n    this._residue = this._chain.addResidue(resName, resSeq, ' ');\n\n    for (let i = 0; i < atomsNum; i++) {\n      curStr = stream.getNextString();\n      serial++;\n      const x = parseFloat(curStr.substr(0, 10));\n      const y = parseFloat(curStr.substr(10, 10));\n      const z = parseFloat(curStr.substr(20, 10));\n      const charge = chargeMap[parseInt(curStr.substr(36, 3), 10)];\n      const xyz = new THREE.Vector3(x, y, z);\n      let name = curStr.substr(31, 3).trim().toUpperCase();\n      const type = Element.getByName(name);\n      if (!this._atomsIndexes[name]) {\n        this._atomsIndexes[name] = 0;\n      }\n      this._atomsIndexes[name] += 1;\n      name += this._atomsIndexes[name]; // every atom need to have unique name.\n\n      this._residue.addAtom(name, type, xyz, undefined, true, serial, ' ', 1.0, 0.0, charge);\n    }\n  }\n\n  _parseBonds(stream, bondsNum) {\n    let curStr;\n\n    for (let i = 0; i < bondsNum; i++) {\n      curStr = stream.getNextString();\n      let atom1 = parseInt(curStr.substr(0, 3), 10) + this._atomsParsed;\n      let atom2 = parseInt(curStr.substr(3, 3), 10) + this._atomsParsed;\n      const bondType = parseInt(curStr.substr(6, 3), 10);\n\n      if (atom1 > atom2) {\n        [atom1, atom2] = [atom2, atom1];\n      }\n      this._complex.addBond(atom1, atom2,\n        orderMap[bondType] || 1,\n        typeMap[bondType] || Bond.BondType.UNKNOWN,\n        true);\n    }\n  }\n\n  _parseMOL(stream) {\n    this._compoundIndx++;\n\n    this._parseHeader(stream);\n    const countsLine = stream.getStringFromStart(3);\n    const atomsNum = parseInt(countsLine.substr(0, 3), 10);\n    const bondsNum = parseInt(countsLine.substr(3, 3), 10);\n    this._parseAtoms(stream, atomsNum);\n    this._parseBonds(stream, bondsNum);\n\n    this._atomsParsed += atomsNum;\n\n    this._metadata.molecules[this._compoundIndx]._residues = [];\n    this._metadata.molecules[this._compoundIndx]._residues.push(this._residue);\n  }\n\n  _parseDataItem(stream) {\n    const tag = stream.getCurrentString();\n\n    let data = [];\n    let curStr = stream.getNextString();\n\n    // read data\n    while (curStr.trim() !== '') {\n      data.push(curStr);\n      curStr = stream.getNextString();\n    }\n    if (data.length === 1) {\n      [data] = data;\n    }\n    this._currentMolProps[tag.replace(/[<>]/g, '').trim()] = data;\n  }\n\n  _parseCompound(stream) {\n    this._parseMOL(stream);\n\n    // parse data items block\n    if (this._format === fileFormat.SDF) {\n      this._currentMolProps = {};\n      while (stream.findNextDataItem()) {\n        this._parseDataItem(stream);\n      }\n      if (Object.keys(this._currentMolProps).length !== 0) {\n        const molecule = this._metadata.molecules[this._compoundIndx];\n        molecule.props = this._currentMolProps;\n        this._tryToUpdateMoleculeData(molecule);\n      }\n    }\n  }\n\n  _fixBondsArray() {\n    const serialAtomMap = this._serialAtomMap;\n    const complex = this._complex;\n\n    const bonds = complex._bonds;\n    for (let j = 0; j < bonds.length; j++) {\n      const bond = bonds[j];\n      if (bond._right < bond._left) {\n        console.log('_fixBondsArray: Logic error.');\n      }\n      bond._left = serialAtomMap[bond._left] || null;\n      bond._right = serialAtomMap[bond._right] || null;\n    }\n  }\n\n  _buildAssemblies() {\n    const chains = this._complex._chains;\n\n    if (chains.length === 1) {\n      return this._assemblies;\n    }\n\n    for (let i = 0; i < chains.length; i++) {\n      const assembly = new Assembly(this._complex);\n      const matrix = new THREE.Matrix4();\n      assembly.addMatrix(matrix);\n      assembly.addChain(chains[i]._name);\n      this._assemblies.push(assembly);\n    }\n\n    return this._assemblies;\n  }\n\n  _buildMolecules() {\n    this._complex._molecules = [];\n    const { molecules } = this._metadata;\n    for (let i = 0; i < molecules.length; i++) {\n      const molecule = new Molecule(this._complex, molecules[i].name, i + 1);\n      molecule.residues = molecules[i]._residues;\n      this._complex._molecules[i] = molecule;\n    }\n\n    return this._complex._molecules;\n  }\n\n  _searchTag(tag, props) {\n    for (let i = 0; i < props.length; i++) {\n      if ((tag instanceof RegExp && tag.test(props[i].tag)) || tag === props[i].tag) {\n        return props[i].data;\n      }\n    }\n    return undefined;\n  }\n\n  _tryToFind(tagsList, props) {\n    for (let j = 0; j < tagsList.length; j++) {\n      const res = this._searchTag(tagsList[j], props);\n      if (res) {\n        return res;\n      }\n    }\n    return undefined;\n  }\n\n  _tryToUpdateMoleculeData(molecule) {\n    let res = false;\n    for (let i = 0; i < tagsNames.length; i++) {\n      const tagPossibleNames = tags[tagsNames[i]];\n      const data = this._tryToFind(tagPossibleNames, molecule.props);\n      if (data) {\n        molecule[tagsNames[i]] = data;\n        res = true;\n      }\n    }\n\n    molecule.name = molecule.name || molecule.id;\n    if (molecule.name.match(/^\\d+$/)) {\n      molecule.name = `CID: ${molecule.name}`;\n    }\n\n    return res;\n  }\n\n  _finalizeMetadata() {\n    const { molecules } = this._metadata;\n    const { metadata } = this._complex;\n    const complex = this._complex;\n\n    if (molecules.length === 1) {\n      complex.name = molecules[0].name;\n      metadata.title = molecules[0].title;\n      metadata.date = molecules[0].date;\n      metadata.properties = molecules[0].props;\n    } else if (molecules.length > 1) {\n      metadata.molecules = [];\n      for (let i = 0; i < molecules.length; i++) {\n        metadata.molecules.push({\n          name: molecules[i].name, date: molecules[i].date, title: molecules[i].title, properties: molecules[i].props,\n        });\n      }\n    }\n  }\n\n  _finalize() {\n    const serialAtomMap = this._serialAtomMap = {};\n    const atoms = this._complex._atoms;\n\n    for (let i = 0; i < atoms.length; i++) {\n      const atom = atoms[i];\n      serialAtomMap[atom.serial] = atom;\n    }\n\n    this._complex._finalizeBonds();\n    this._fixBondsArray();\n    this._finalizeMetadata();\n    this._buildAssemblies();\n    this._complex.units = this._complex.units.concat(this._assemblies);\n    this._buildMolecules();\n    this._complex.finalize({\n      needAutoBonding: false, detectAromaticLoops: false, enableEditing: false, serialAtomMap: this._serialAtomMap,\n    });\n  }\n\n  defineFormat(data) {\n    let format;\n    if (sdfRegExp.test(data)) {\n      format = fileFormat.SDF;\n    } else {\n      format = fileFormat.MOL;\n    }\n\n    return format;\n  }\n\n  parseSync() {\n    const result = this._complex = new Complex();\n    const stream = new SDFStream(this._data);\n\n    this._format = this.defineFormat(this._data);\n    result.metadata.format = this._format;\n\n    do {\n      this._parseCompound(stream);\n    } while (stream.findNextCompoundStart());\n\n    this._finalize();\n\n    return result;\n  }\n}\n\nSDFParser.formats = ['mol', 'sdf'];\nSDFParser.extensions = ['.mol', '.sdf'];\n","import * as THREE from 'three';\nimport Parser from './Parser';\nimport VolumeModel, { valueType } from './VolumeModel';\n\n// http://www.uoxray.uoregon.edu/tnt/manual/node104.html\nconst DSN6Header = {\n  nstart: [valueType.array, 'i16', 0],\n  extent: [valueType.array, 'i16', 3],\n  grid: [valueType.array, 'i16', 6],\n  cellDims: [valueType.vector, 'i16', 9],\n  angles: [valueType.array, 'i16', 12],\n  div: [valueType.singular, 'i16', 15],\n  adder: [valueType.singular, 'i16', 16],\n  scaleFactor: [valueType.singular, 'i16', 17],\n};\n\nclass DSN6Model extends VolumeModel {\n  _parseHeader(_buffer) {\n    this._buff = _buffer;\n    this._typedCheck();\n\n    const arrays = {};\n    arrays.i16 = new Int16Array(this._buff);\n\n    // check and reverse if big endian\n    if (arrays.i16[18] !== 100) {\n      for (let i = 0, n = arrays.i16.length; i < n; ++i) {\n        const val = arrays.i16[i];\n        arrays.i16[i] = ((val & 0xff) << 8) | ((val >> 8) & 0xff);\n      }\n    }\n    if (arrays.i16[18] !== 100) {\n      throw new Error('DSN6: Incorrect format ');\n    }\n\n    const header = this._header;\n\n    this._fillHeader(DSN6Header, arrays);\n    header.cellDims.multiplyScalar(1.0 / header.scaleFactor);\n    header.angles.forEach((angle, i, a) => { a[i] *= (Math.PI / 180.0) / header.scaleFactor; });\n    header.div /= 100;\n  }\n\n  _setAxisIndices() {\n    this._xyz2crs[0] = 0;\n    this._xyz2crs[1] = 1;\n    this._xyz2crs[2] = 2;\n  }\n\n  _setOrigins() {\n    const header = this._header;\n    const [xaxis, yaxis, zaxis] = this._getAxis();\n    this._setAxisIndices();\n\n    this._origin.addScaledVector(xaxis, header.nstart[0]);\n    this._origin.addScaledVector(yaxis, header.nstart[1]);\n    this._origin.addScaledVector(zaxis, header.nstart[2]);\n\n    xaxis.multiplyScalar(header.extent[0]);\n    yaxis.multiplyScalar(header.extent[1]);\n    zaxis.multiplyScalar(header.extent[2]);\n\n    this._setBoxParams(xaxis, yaxis, zaxis);\n  }\n\n  _pointCalculate(xyzData, byteBuffer, z, y, x, pos, i) {\n    const header = this._header;\n\n    if (x < header.extent[0] && y < header.extent[1] && z < header.extent[2]) {\n      const idx = x + header.extent[0] * (y + header.extent[1] * z);\n      xyzData[idx] = (byteBuffer[pos.counter] - header.adder) / header.div;\n      ++pos.counter;\n    } else {\n      pos.counter += 8 - i;\n      return false;\n    }\n    return true;\n  }\n\n  _blockCalculate(xyzData, byteBuffer, zBlock, yBlock, xBlock, pos) {\n    for (let k = 0; k < 8; ++k) {\n      const z = 8 * zBlock + k;\n      for (let j = 0; j < 8; ++j) {\n        const y = 8 * yBlock + j;\n        let inRange = true;\n        let i = 0;\n        while (inRange && i < 8) {\n          const x = 8 * xBlock + i;\n          inRange = this._pointCalculate(xyzData, byteBuffer, z, y, x, pos, i);\n          i++;\n        }\n      }\n    }\n  }\n\n  _toXYZData() {\n    const header = this._header;\n    const byteBuffer = new Uint8Array(this._buff);\n    const xyzData = new Float32Array(header.extent[0] * header.extent[1] * header.extent[2]);\n\n    const blocks = new THREE.Vector3(header.extent[0] / 8, header.extent[1] / 8, header.extent[2] / 8);\n\n    const pos = {};\n    pos.counter = 512;\n\n    for (let zBlock = 0; zBlock < blocks.z; ++zBlock) {\n      for (let yBlock = 0; yBlock < blocks.y; ++yBlock) {\n        for (let xBlock = 0; xBlock < blocks.x; ++xBlock) {\n          this._blockCalculate(xyzData, byteBuffer, zBlock, yBlock, xBlock, pos);\n        }\n      }\n    }\n    this._calculateInfoParams(xyzData);\n    return xyzData;\n  }\n\n  _calculateInfoParams(xyzData) {\n    this._header.dmean /= xyzData.length;\n    let dispersion = 0;\n    let minDensity = xyzData[0];\n    let maxDensity = xyzData[0];\n    for (let j = 0; j < xyzData.length; j++) {\n      dispersion += (this._header.dmean - xyzData[j]) ** 2;\n\n      if (xyzData[j] < minDensity) {\n        minDensity = xyzData[j];\n      }\n      if (xyzData[j] > maxDensity) {\n        maxDensity = xyzData[j];\n      }\n    }\n    this._header.sd = Math.sqrt(dispersion / xyzData.length);\n    this._header.dmax = maxDensity;\n    this._header.dmin = minDensity;\n  }\n}\n\nclass DSN6Parser extends Parser {\n  constructor(data, options) {\n    super(data, options);\n    this._options.fileType = 'dsn6';\n    this.model = new DSN6Model();\n  }\n\n  static canParse(data, options) {\n    if (!data) {\n      return false;\n    }\n    return data instanceof ArrayBuffer && Parser.checkDataTypeOptions(options, 'dsn6');\n  }\n\n  static canProbablyParse(_data) {\n    return false;\n  }\n\n  parseSync() {\n    return this.model.parse(this._data);\n  }\n}\n\nDSN6Parser.formats = ['dsn6'];\nDSN6Parser.extensions = ['.dsn6', '.omap'];\nDSN6Parser.binary = true;\n\nexport default DSN6Parser;\n","import PDBStream from './PDBStream';\n\n/**\n * Little helper class for GRO Parser usage.\n * @extends PDBStream\n */\nclass GROReader extends PDBStream {\n  constructor(data) {\n    super(data);\n    /** @type Number */\n    this._next = -1; // End position of line\n    this.next();\n  }\n\n  /**\n   * Getting end of string.\n   * @returns {Number} Pointer to end of string\n   */\n  getNext() {\n    return this._next;\n  }\n}\n\nexport default GROReader;\n","import * as THREE from 'three';\nimport _ from 'lodash';\nimport Parser from './Parser';\nimport chem from '../../chem';\nimport GROReader from './GROReader';\n\nconst {\n  Complex,\n  Element,\n  Molecule,\n} = chem;\n\n/**\n * Gromos87 file format parser.\n * @extends Parser\n */\nclass GROParser extends Parser {\n  /**\n   * Create parser for .gro file format\n   *\n   * @param {String} data Input file\n   * @param {String} options Input options (optional field)\n   */\n  constructor(data, options) {\n    super(data, options);\n    /** @type Date */\n    this._time = null; // Time in ps, optional field for animations\n    /** @type Number */\n    this._numAtoms = null; // Number of atoms in complex\n    /** @type Number */\n    this._residueNumber = null; // Number of exact residue\n    /** @type String */\n    this._residueName = ''; // Scientific name of exact residue\n    /** @type String */\n    this._atomName = ''; // Scientific name of exact atom\n    /** @type Number */\n    this._atomNumber = null; // Sorted number of exact atom\n    /** @type Array */\n    this._atomPosition = []; // Array which contains x, y, z position of exact atom\n    /** @type Array */\n    this._atomVelocity = []; // Array which contains x, y, z velocity of exact atom (optional)\n    /** @type Complex */\n    this._complex = null; // Complex structure for unified molecule representation\n    /** @type Vector3 */\n    this._molecules = []; // Molecules array\n    /** @type Molecule */\n    this._molecule = null; // Single molecule\n    /** @type String */\n    this._options.filetype = 'gro'; // Extension of data file.\n  }\n\n  /**\n   * General check for possibility of parsing.\n   * @param {String} data - Input file\n   * @returns {boolean} true if this file is in ascii, false otherwise\n   */\n  canProbablyParse(data) {\n    return _.isString(this._data) && /^\\s*[^\\n]*\\n\\s*\\d+ *\\n\\s*\\d+[^\\n\\d]{3}\\s*\\w+\\s*\\d+\\s*-?\\d/.test(data);\n  }\n\n  /**\n   * Parsing title of molecule complex.\n   * NOTE: that names are ESTIMATES, there is no strict rules in Gromos87 standard for first line in input file.\n   * @param {GROReader} line - Line containing title and time.\n   */\n  _parseTitle(line) {\n    const { metadata } = this._complex;\n    metadata.id = line.readLine().trim();\n    metadata.name = metadata.id.slice(metadata.id.lastIndexOf('\\\\') + 1, metadata.id.lastIndexOf('.'));\n    metadata.format = 'gro';\n  }\n\n  /**\n   * Parsing line containing number of atoms information.\n   * @param {GROReader} line - Line containing number of atoms.\n   */\n  _parseNumberOfAtoms(line) {\n    this._numAtoms = line.readInt(0, line.getNext());\n    if (Number.isNaN(this._numAtoms)) {\n      throw new Error('Line 2 is not representing atom number. Consider checking input file');\n    }\n  }\n\n  /**\n   * Parsing line containing information about residues, atoms etc. Also information about box vectors.\n   * Format of atoms MUST (by Gromos87 standard) be this: (note that numbering starts not from 0, but from 1!)\n   * ResidueNumber[1 - 5]  ResidueName[6 - 10] AtomName[11 - 15] AtomNumber[16 - 20] Position[21 - 45] Velocity[46 - 69]\n   * @param {GROReader} line - Line containing information about atom.\n   */\n  _parseAtom(line) {\n    this._residueNumber = line.readInt(1, 5);\n    this._residueName = line.readString(6, 10).trim();\n    this._atomName = line.readString(11, 15).trim();\n    this._atomNumber = line.readInt(16, 20);\n    const positionX = line.readFloat(21, 28) * 10;\n    const positionY = line.readFloat(29, 36) * 10;\n    const positionZ = line.readFloat(37, 45) * 10;\n    if (Number.isNaN(positionX) || Number.isNaN(positionY) || Number.isNaN(positionZ)) {\n      this._complex.error = {\n        message: `Atom position is invalid in \"${line.readLine()}\"`,\n      };\n      return;\n    }\n    /* const velocityX = line.readFloat(46, 53);\n    const velocityY = line.readFloat(54, 61);\n    const velocityZ = line.readFloat(62, 69); */\n    /* Adding residue and atom to complex structure */\n    const type = Element.getByName(this._atomName[0]); /* MAGIC 0. REASONS: This name is something like \"CA\", where\n     C - is an element an A is something else. But what about Calcium? */\n    if (type.fullName === 'Unknown') {\n      this._complex.error = {\n        message: `${this._atomName[0]} hasn't been recognised as an atom name.`,\n      };\n      return;\n    }\n    const role = Element.Role[this._atomName];\n    /* Firstly, create a dummy chain */\n    let chain = this._chain;\n    if (!chain) {\n      this._chain = chain = this._complex.addChain('A');\n    }\n    /* Secondly, add residue to that chain */\n    let residue = this._residue;\n    if (!residue || residue.getSequence() !== this._residueNumber) {\n      this._residue = residue = chain.addResidue(this._residueName, this._residueNumber, ' ');\n    }\n    /* Lastly, add atom to that residue */\n    this._atomPosition = new THREE.Vector3(positionX, positionY, positionZ);\n    /* Adding default constants to correct atom addition process */\n    const het = true;\n    const altLoc = ' ';\n    const occupancy = 1;\n    const tempFactor = 1;\n    const charge = 0;\n    residue.addAtom(this._atomName, type, this._atomPosition, role, het, this._atomNumber, altLoc, occupancy, tempFactor, charge);\n  }\n\n  /**\n   * Some finalizing procedures. In '.gro' file format there is only 1 chain and 1 molecule.\n   */\n  _finalize() {\n    const molecule = new Molecule(this._complex, this._complex.metadata.name, 1);\n    // aggregate residues from chain\n    molecule.residues = this._chain._residues;\n    molecule._chains = this._chain;\n    this._complex._molecules[0] = molecule;\n    this._molecules.push(molecule);\n    this._complex.finalize({\n      needAutoBonding: true,\n      detectAromaticLoops: this.settings.now.aromatic,\n      enableEditing: this.settings.now.editing,\n      serialAtomMap: this._serialAtomMap,\n    });\n  }\n\n  /**\n   * Main parsing procedure.\n   * @returns {Complex} Complex structure for visualizing.\n   */\n  parseSync() {\n    /* Create \"Complex\" variable */\n    const result = this._complex = new Complex();\n    /* Parse input file line-by-line */\n    const reader = new GROReader(this._data);\n    let counter = 0; /* Simple counter regarding to format of .gro file */\n    /* First two lines - technical information, other lines - Atoms */\n    this._parseTitle(reader);\n    reader.next();\n    this._parseNumberOfAtoms(reader);\n    reader.next();\n    for (counter = 0; counter < this._numAtoms; ++counter) {\n      if (!reader.end()) {\n        this._parseAtom(reader);\n        reader.next();\n      } else break;\n    }\n    /* If number of atoms in second line is less then actual atoms in file */\n    if (counter < this._numAtoms) {\n      this._complex.error = {\n        message: 'File ended unexpectedly.',\n      };\n    }\n    /* Catch errors occurred in parsing process */\n    if (result.error) {\n      throw new Error(result.error.message);\n    }\n\n    /* Finalizing data */\n    this._finalize();\n\n    /* Cleaning up */\n    this._atomPosition = null;\n    this._complex = null;\n    this._molecules = null;\n    this._molecule = null;\n\n    /* Return resulting Complex variable */\n    return result;\n  }\n}\n\nGROParser.formats = ['gro'];\nGROParser.extensions = ['.gro'];\n\nexport default GROParser;\n","import * as THREE from 'three';\nimport Parser from './Parser';\nimport chem from '../../chem';\n\nconst {\n  Complex,\n  Element,\n  Bond,\n  Molecule,\n} = chem;\n\nconst orderMap = {\n  un: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  ar: 1,\n  am: 1,\n  nc: 0,\n  du: 1,\n};\nconst typeMap = {\n  un: Bond.BondType.UNKNOWN, // unknown (cannot be determined from the parameter tables)\n  1: Bond.BondType.COVALENT, // single\n  2: Bond.BondType.COVALENT, // double\n  3: Bond.BondType.COVALENT, // triple\n  ar: Bond.BondType.AROMATIC, // aromatic\n  am: Bond.BondType.COVALENT, // amide\n  nc: Bond.BondType.UNKNOWN, // not connected\n  du: Bond.BondType.COVALENT, // dummy\n};\n\nconst resNumberRegex = /\\d+$/;\nconst spacesRegex = /\\s+/;\n\nfunction splitToFields(str) {\n  return str.trim().split(spacesRegex);\n}\n/* There is no jsdoc documentation because of eslint corrections:\n * not all Parser methods are implemented\n */\n\nclass MOL2Parser extends Parser {\n  constructor(data, options) {\n    super(data, options);\n\n    this._complex = null;\n    this._chain = null;\n    this._residue = null;\n    this._compoundIndx = -1;\n\n    this._molecules = [];\n    this._molecule = null;\n\n    this._currPosIdx = 0;\n    this._currStartIdx = 0;\n\n    this._serialAtomMap = {};\n\n    this._options.fileType = 'mol2';\n  }\n\n  _parseRawStrings(data) {\n    return data.split(/\\r?\\n|\\r/);\n  }\n\n  _toStringFromStart(numb, MOL2Data) {\n    const newPosIdx = this._currStartIdx + numb;\n    this._currPosIdx = (newPosIdx < MOL2Data.length) ? newPosIdx : this._currStartIdx;\n  }\n\n  _toHeaderString(header, MOL2Data) {\n    this._toStringFromStart(0, MOL2Data);\n    while (this._currPosIdx < MOL2Data.length) {\n      if (MOL2Data[this._currPosIdx].match(`@<TRIPOS>${header}`)) {\n        return;\n      }\n      this._currPosIdx++;\n    }\n    this._toStringFromStart(0, MOL2Data);\n  }\n\n  _toStringFromHeader(header, numb, MOL2Data) {\n    this._toHeaderString(header, MOL2Data);\n    const newPosIdx = this._currPosIdx + numb;\n\n    if (MOL2Data[this._currPosIdx].match(`@<TRIPOS>${header}`) && newPosIdx < MOL2Data.length) {\n      this._currPosIdx = newPosIdx;\n    }\n  }\n\n  _setStart(startPos, MOL2Data) {\n    if (startPos >= MOL2Data.length) {\n      this._currStartIdx = this._currPosIdx = MOL2Data.length - 1;\n    } else {\n      this._currStartIdx = this._currPosIdx = startPos;\n    }\n  }\n\n  _probablyHaveDataToParse(MOL2Data) {\n    return this._currPosIdx < MOL2Data.length - 2;\n  }\n\n  _findNextCompoundStart(MOL2Data) {\n    while (this._currPosIdx < MOL2Data.length && MOL2Data[this._currPosIdx].trim() !== '@<TRIPOS>MOLECULE>') {\n      this._currPosIdx++;\n    }\n    this._setStart(++this._currPosIdx, MOL2Data);\n    return this._probablyHaveDataToParse(MOL2Data);\n  }\n\n  _parseMolecule(MOL2Data) {\n    this._toHeaderString('MOLECULE', MOL2Data);\n\n    const { metadata } = this._complex;\n    metadata.name = MOL2Data[++this._currPosIdx];\n    metadata.format = 'mol2';\n\n    this._molecule = { _index: '', _chains: [] };\n    this._molecule._index = this._compoundIndx + 1;\n    this._molecules.push(this._molecule);\n  }\n\n  /* Atom format description:\n   * atomId atomName x y z element [resSeq [resName [charge [statusBit]]]]\n   * statusBits is the internal SYBYL status bits associated with the atom.\n   * These should never be set by the user.\n   * Source: http://chemyang.ccnu.edu.cn/ccb/server/AIMMS/mol2.pdf\n   */\n  _parseAtoms(atomsNum, MOL2Data) {\n    this._toHeaderString('ATOM', MOL2Data);\n\n    for (let i = 0; i < atomsNum; i++) {\n      const parsedStr = splitToFields(MOL2Data[++this._currPosIdx]);\n\n      if (parsedStr.length < 6) {\n        throw new Error('MOL2 parsing error: Not enough information to create atom!');\n      }\n      const atomId = parseInt(parsedStr[0], 10);\n      const atomName = parsedStr[1];\n\n      const x = parseFloat(parsedStr[2]);\n      const y = parseFloat(parsedStr[3]);\n      const z = parseFloat(parsedStr[4]);\n\n      const element = parsedStr[5].split('.')[0].toUpperCase();\n\n      let charge = 0;\n      if (parsedStr.length >= 9) {\n        charge = parseFloat(parsedStr[8]) || 0.0;\n      }\n\n      let chain = this._chain;\n      if (!chain) {\n        // .mol2 may contain information about multiple molecules, but they can't be visualized\n        // at the same time now. There is no need to create different chain IDs then.\n        this._chain = chain = this._complex.getChain('A') || this._complex.addChain('A');\n        this._residue = null;\n      }\n      if (!this._setResidue(parsedStr)) {\n        continue;\n      }\n\n      // These fields are not listed in mol2 format. Set them default.\n      // Atoms and het atoms doesn't differ in .mol2,\n      // but het atoms have special residues. It can be used in next updates\n      const het = false;\n      const altLoc = ' ';\n      const occupancy = 1.0;\n      const tempFactor = 0.0;\n      const type = Element.getByName(element);\n      const role = Element.Role[atomName];\n\n      const xyz = new THREE.Vector3(x, y, z);\n      this._residue.addAtom(atomName, type, xyz, role, het, atomId, altLoc, occupancy, tempFactor, charge);\n    }\n  }\n\n  _setResidue(parsedStr) {\n    let resSeq = 1;\n    let resName = 'UNK'; // The same meaning has '<0>' in some mol2 files\n\n    if (parsedStr.length >= 7) {\n      resSeq = parseInt(parsedStr[6], 10);\n    }\n    if (parsedStr.length >= 8 && parsedStr[7] !== '<0>') {\n      resName = parsedStr[7].replace(resNumberRegex, '');\n    }\n    if (this.settings.now.nowater) {\n      if (resName === 'HOH' || resName === 'WAT') {\n        return false;\n      }\n    }\n    const residue = this._residue;\n    const chain = this._chain;\n    if (!residue || residue.getSequence() !== resSeq) {\n      this._residue = chain.addResidue(resName, resSeq, 'A');\n    }\n    return true;\n  }\n\n  /* Bond format description\n   * bondId originAtomId targetAtomId bondType [statusBits]\n   */\n  _parseBonds(bondsNum, MOL2Data) {\n    this._toHeaderString('BOND', MOL2Data);\n\n    for (let i = 0; i < bondsNum; i++) {\n      const parsedStr = splitToFields(MOL2Data[++this._currPosIdx]);\n\n      if (parsedStr.length < 3) {\n        throw new Error('MOL2 parsing error: Missing information about bonds!');\n      }\n\n      let originAtomId = parseInt(parsedStr[1], 10);\n      let targetAtomId = parseInt(parsedStr[2], 10);\n      const bondType = parsedStr[3];\n\n      if (originAtomId > targetAtomId) {\n        [originAtomId, targetAtomId] = [targetAtomId, originAtomId];\n      }\n      this._complex.addBond(originAtomId, targetAtomId,\n        orderMap[bondType] || 0,\n        typeMap[bondType] || Bond.BondType.UNKNOWN,\n        true);\n    }\n  }\n\n  _fixSerialAtoms() {\n    const atoms = this._complex._atoms;\n    for (let i = 0; i < atoms.length; i++) {\n      const atom = atoms[i];\n      this._serialAtomMap[atom.serial] = atom;\n    }\n  }\n\n  _fixBondsArray() {\n    const serialAtomMap = this._serialAtomMap;\n    const complex = this._complex;\n\n    if (Object.keys(serialAtomMap).length === 0) {\n      throw new Error('MOL2 parsing error: Missing atom information!');\n    }\n\n    const bonds = complex._bonds;\n    for (let j = 0; j < bonds.length; j++) {\n      const bond = bonds[j];\n      bond._left = serialAtomMap[bond._left] || null;\n      bond._right = serialAtomMap[bond._right] || null;\n    }\n  }\n\n  _finalizeMolecules() {\n    // Get chain from complex\n    const chain = this._complex._chains[0];\n    this._complex._molecules = [];\n\n    // Aggregate residues from chains\n    // (to be precise from the chain 'A')\n    for (let i = 0; i < this._molecules.length; i++) {\n      const currMolecule = this._molecules[i];\n      const molResidues = chain._residues;\n      const molecule = new Molecule(this._complex, currMolecule._name, i + 1);\n      molecule.residues = molResidues;\n      this._complex._molecules[i] = molecule;\n    }\n  }\n\n  _finalize() {\n    this._complex._finalizeBonds();\n    this._fixSerialAtoms();\n    this._fixBondsArray();\n    this._finalizeMolecules();\n\n    this._complex.finalize({\n      needAutoBonding: false,\n      detectAromaticLoops: this.settings.now.aromatic,\n      enableEditing: this.settings.now.editing,\n      serialAtomMap: this._serialAtomMap,\n    });\n  }\n\n  _parseCompound(MOL2Data) {\n    this._compoundIndx++;\n    this._parseMolecule(MOL2Data);\n\n    // Ignoring comments and everything before @<TRIPOS>MOLECULE block\n    this._toStringFromHeader('MOLECULE', 2, MOL2Data);\n\n    const parsedStr = MOL2Data[this._currPosIdx].trim().split(spacesRegex);\n    const atomsNum = parsedStr[0];\n    const bondsNum = parsedStr[1];\n\n    this._parseAtoms(atomsNum, MOL2Data);\n    this._parseBonds(bondsNum, MOL2Data);\n  }\n\n  parseSync() {\n    const result = this._complex = new Complex();\n    const MOL2Data = this._parseRawStrings(this._data);\n    do {\n      this._parseCompound(MOL2Data);\n    } while (this._findNextCompoundStart(MOL2Data));\n\n    this._finalize();\n\n    return result;\n  }\n}\n\nMOL2Parser.formats = ['mol2'];\nMOL2Parser.extensions = ['.mol2', '.ml2', '.sy2'];\n\nexport default MOL2Parser;\n","import ParserList from './parsers/ParserList';\n\nimport PDBParser from './parsers/PDBParser';\nimport CMLParser from './parsers/CMLParser';\nimport MMTFParser from './parsers/MMTFParser';\nimport CIFParser from './parsers/CIFParser';\nimport CCP4Parser from './parsers/CCP4Parser';\nimport XYZParser from './parsers/XYZParser';\nimport PubChemParser from './parsers/PubChemParser';\nimport SDFParser from './parsers/SDFParser';\nimport DSN6Parser from './parsers/DSN6Parser';\nimport GROParser from './parsers/GROParser';\nimport MOL2Parser from './parsers/MOL2Parser';\n\nexport default new ParserList([\n  // note: order might be important\n  PDBParser,\n  CIFParser,\n  MMTFParser,\n  XYZParser,\n  CMLParser,\n  PubChemParser,\n  SDFParser,\n  CCP4Parser,\n  DSN6Parser,\n  GROParser,\n  MOL2Parser,\n]);\n","import EntityList from '../../utils/EntityList';\n\n/**\n * A list of available exporters.\n * @extends EntityList\n */\nclass ExporterList extends EntityList {\n  /**\n   * Create a list of exporters.\n   * The exporters are indexed by supported data formats (`.formats` and\n   * `.extensions` properties of a Exporter subclass).\n   * The Exporters can be retrieved later by matching against specs (see {@link ExporterList#find}).\n   *\n   * @param {!Array<function(new:Exporter)>=} someExporters A list of {@link Exporter} subclasses to\n   *   automatically register at creation time.\n   * @see ExporterList#register\n   */\n  constructor(someExporters = []) {\n    super(someExporters, ['formats']);\n  }\n\n  /**\n   * Find a suitable exporter for data.\n   *\n   * @param {Object} specs Exporter specifications.\n   * @param {string=} specs.format Supported data format.\n   * @param {*=} specs.data Data to export.\n   */\n  find(specs) {\n    let list = [];\n    if (specs.format) {\n      list = this._dict.formats[specs.format.toLowerCase()] || [];\n    }\n    return [...list];\n  }\n}\n\nexport default ExporterList;\n","import makeContextDependent from '../../utils/makeContextDependent';\n\nexport default class Exporter {\n  constructor(source, options) {\n    this._source = source;\n    this._options = options || {};\n    this._abort = false;\n  }\n\n  exportSync() {\n    throw new Error('Exporting to this source is not implemented');\n  }\n\n  export() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        try {\n          if (this._abort) {\n            return reject(new Error('Export aborted'));\n          }\n          return resolve(this.exportSync());\n        } catch (error) {\n          return reject(error);\n        }\n      });\n    });\n  }\n\n  abort() {\n    this._abort = true;\n  }\n}\n\nmakeContextDependent(Exporter.prototype);\n","import _ from 'lodash';\nimport { Matrix4 } from 'three';\n\nexport default class PDBResult {\n  constructor() {\n    this._resultArray = [];\n    this._currentStr = -1;\n    this._tag = null;\n    this._fixedNumeration = false;\n    this._numeration = false;\n    this._tagStrNum = 0;\n  }\n\n  getResult() {\n    this.writeString('\\n', 81, 81);\n    return this._resultArray.join('');\n  }\n\n  _currentStrLength() {\n    const curStr = this._resultArray[this._currentStr];\n    return curStr ? curStr.length : 0;\n  }\n\n  // numeration can be number or boolean\n  // if numeration is number then just put this number to 8-10 pos in string\n  // if numeration is boolean then increase number for all new strings\n  newTag(tag, numeration) {\n    if (!tag) {\n      this._tag = null;\n    } else {\n      this._tag = tag;\n    }\n    if (!_.isUndefined(numeration)) {\n      if (_.isNumber(numeration)) {\n        this._tagStrNum = numeration;\n        this._numeration = true;\n        this._fixedNumeration = true;\n      } else if (_.isBoolean(numeration)) {\n        this._tagStrNum = 0;\n        this._numeration = numeration;\n        this._fixedNumeration = false;\n      }\n    } else {\n      this._numeration = false;\n      this._fixedNumeration = false;\n      this._tagStrNum = 0;\n    }\n  }\n\n  newString(tag) {\n    this.writeString('\\n', 81, 81);\n    this._currentStr++;\n    this._resultArray.push('');\n\n    if (tag) {\n      this.writeString(tag, 1, 6);\n    } else if (this._tag) {\n      this.writeString(this._tag, 1, 6);\n    }\n\n    if (this._numeration) {\n      if (!this._fixedNumeration) {\n        this._tagStrNum++;\n      }\n      if (this._tagStrNum !== 1) {\n        this.writeString(this._tagStrNum.toString(), 10, 8);\n      }\n    }\n  }\n\n  writeEntireString(string, maxStrPos, concat) {\n    if (!maxStrPos) {\n      maxStrPos = 81;\n    }\n    for (let j = 0; j < string.length; j++) {\n      if (this._currentStrLength() === maxStrPos && j !== string.length - 1) {\n        this.newString();\n        if (concat) { // pretty hardcoddy\n          this.writeString(concat.tag, concat.begin, concat.end);\n        }\n      }\n      if (string[j] === '\\n') {\n        this.newString();\n      } else {\n        this.writeString(string[j]);\n      }\n    }\n  }\n\n  writeString(string, begin, end) {\n    let curStr = this._resultArray[this._currentStr];\n    let str;\n\n    const curStrLength = curStr ? curStr.length : 0;\n\n    if (_.isUndefined(string)) {\n      return;\n    }\n\n    if (!_.isNumber(begin)) {\n      begin = curStrLength + 1;\n    }\n\n    if (!_.isNumber(end)) {\n      end = curStrLength + string.length;\n    }\n\n    if (!_.isString(string)) {\n      str = string.toString();\n    } else {\n      str = string;\n    }\n\n    const finish = begin < end ? end : begin;\n    const start = begin < end ? begin : end;\n\n    if (str.length > Math.abs(begin - end) + 1) {\n      str = str.substr(0, Math.abs(begin - end + 1));\n    }\n\n    // spaces before start of new data\n    if (start > curStrLength + 1) {\n      this._resultArray[this._currentStr] += ' '.repeat(start - curStrLength - 1);\n    } else if (start <= curStrLength) {\n      const cStr = this._resultArray[this._currentStr];\n      this._resultArray[this._currentStr] = cStr.slice(0, start - 1);\n    }\n\n    // if reverse order\n    // reverse order of end and begin means that user wants to align text right\n    if (end < begin) {\n      const len = begin - end + 1;\n      str = ' '.repeat(len - str.length) + str;\n    }\n\n    // some hardcode fix for space between string numeration and data\n    // (see pdb file format description)\n    if (start === 11 && this._numeration && this._tagStrNum !== 1) {\n      str = ` ${str}`;\n    }\n\n    // append new data to string\n    this._resultArray[this._currentStr] += str;\n    curStr = this._resultArray[this._currentStr];\n\n    if (finish > curStr.length) {\n      this._resultArray[this._currentStr] += ' '.repeat(finish - curStr.length);\n    }\n  }\n\n  writeBondsArray(bonds, atom) {\n    const bondsArrays = this._getSubArrays(bonds, 4);\n\n    for (let k = 0; k < bondsArrays.length; k++) {\n      this.newString();\n      this.writeString(atom.serial, 11, 7);\n\n      for (let j = 0; j < bondsArrays[k].length; j++) {\n        const serial = (bondsArrays[k][j]._left.serial === atom.serial)\n          ? bondsArrays[k][j]._right.serial : bondsArrays[k][j]._left.serial;\n\n        this.writeString(serial, 16 + 5 * j, 12 + 5 * j);\n      }\n    }\n  }\n\n  _getSubArrays(arr, subArraySize) {\n    const subArrays = [];\n    for (let i = 0; i < arr.length; i += subArraySize) {\n      subArrays.push(arr.slice(i, i + subArraySize));\n    }\n    return subArrays;\n  }\n\n  // function for writing matrix in Remark290 and Remark350 tags\n  // (see pdb file description)\n  writeMatrix(matrix, matrixIndx, tag) {\n    for (let j = 0; j < 3; j++) {\n      this.newString();\n      this.writeString(tag, 14, 18);\n      this.writeString((j + 1).toString(), 19, 19);\n      this.writeString(matrixIndx.toString(), 23, 20);\n      for (let k = 0; k < 3; k++) {\n        const numb = parseFloat(matrix.elements[j * 4 + k]).toFixed(6);\n        this.writeString(numb.toString(), 33 + k * 10, 24 + k * 10);\n      }\n\n      const numb = parseFloat(matrix.elements[j * 4 + 3]).toFixed(5);\n      this.writeString(numb.toString(), 68, 55);\n    }\n  }\n\n  writeMatrices(matrices, string) {\n    if (!matrices) {\n      return;\n    }\n    const matrix = new Matrix4();\n    for (let j = 0; j < matrices.length; j++) {\n      matrix.copy(matrices[j]).transpose();\n      this.writeMatrix(matrix, j + 1, string);\n    }\n  }\n}\n","import _ from 'lodash';\nimport Complex from '../../chem/Complex';\nimport Exporter from './Exporter';\nimport PDBResult from './PDBResult';\nimport Assembly from '../../chem/Assembly';\nimport { typeByPDBHelixClass } from '../../chem/Helix';\n\nexport default class PDBExporter extends Exporter {\n  constructor(source, options) {\n    super(source, options);\n    this._tags = ['HEADER', 'TITLE', 'COMPND', 'REMARK', 'HELIX', 'SHEET', 'ATOM and HETATM', 'CONECT'];\n    this._result = null;\n    this._tagExtractors = {\n      HEADER: this._extractHEADER,\n      TITLE: this._extractTITLE,\n      'ATOM and HETATM': this._extractATOM,\n      CONECT: this._extractCONECT,\n      COMPND: this._extractCOMPND,\n      REMARK: this._extractREMARK,\n      HELIX: this._extractHELIX,\n      SHEET: this._extractSHEET,\n    };\n    this._stringForRemark350 = 'COORDINATES FOR A COMPLETE MULTIMER REPRESENTING THE KNOWN\\n'\n                             + 'BIOLOGICALLY SIGNIFICANT OLIGOMERIZATION STATE OF THE\\n'\n                             + 'MOLECULE CAN BE GENERATED BY APPLYING BIOMT TRANSFORMATIONS\\n'\n                             + 'GIVEN BELOW.  BOTH NON-CRYSTALLOGRAPHIC AND\\n'\n                             + 'CRYSTALLOGRAPHIC OPERATIONS ARE GIVEN.';\n\n    this._stringForRemark290 = 'CRYSTALLOGRAPHIC SYMMETRY TRANSFORMATIONS\\n'\n                             + 'THE FOLLOWING TRANSFORMATIONS OPERATE ON THE ATOM/HETATM\\n'\n                             + 'RECORDS IN THIS ENTRY TO PRODUCE CRYSTALLOGRAPHICALLY\\n'\n                             + 'RELATED MOLECULES.';\n  }\n\n  exportSync() {\n    const result = new PDBResult();\n    if (!this._source) {\n      return this._result;\n    }\n\n    for (let i = 0; i < this._tags.length; i++) {\n      const tag = this._tags[i];\n      const func = this._tagExtractors[tag];\n      if (_.isFunction(func)) {\n        func.call(this, result);\n      }\n    }\n\n    this._result = result.getResult();\n\n    return this._result;\n  }\n\n  _extractHEADER(result) {\n    if (!this._source.metadata) {\n      return;\n    }\n    const { metadata } = this._source;\n    result.newTag('HEADER');\n    result.newString();\n    if (metadata.classification) {\n      result.writeString(metadata.classification, 11, 50);\n    }\n    if (metadata.date) {\n      result.writeString(metadata.date, 51, 59);\n    }\n    if (metadata.id) {\n      result.writeString(metadata.id, 63, 66);\n    }\n  }\n\n  _extractTITLE(result) {\n    if (!this._source.metadata) {\n      return;\n    }\n    const { metadata } = this._source;\n    if (!metadata.title) {\n      return;\n    }\n    result.newTag('TITLE', true);\n    for (let i = 0; i < metadata.title.length; i++) {\n      result.newString();\n      result.writeString(metadata.title[i], 11, 80);\n    }\n  }\n\n  _extractCONECT(result) {\n    if (!this._source._atoms) {\n      return;\n    }\n\n    const atoms = this._source._atoms;\n    result.newTag('CONECT');\n\n    for (let i = 0; i < atoms.length; i++) {\n      const fixedBonds = atoms[i].bonds.filter((bond) => bond._fixed);\n      if (fixedBonds.length !== 0) {\n        result.writeBondsArray(fixedBonds.reverse(), atoms[i]);\n      }\n    }\n  }\n\n  _extractSHEET(result) {\n    if (!this._source._sheets) {\n      return;\n    }\n\n    result.newTag('SHEET');\n\n    const sheets = this._source._sheets;\n    for (let i = 0; i < sheets.length; i++) {\n      if (sheets[i]._strands) {\n        const strands = sheets[i]._strands;\n        for (let j = 0; j < strands.length; j++) {\n          result.newString();\n          result.writeString(j + 1, 10, 8);\n          result.writeString(sheets[i]._name, 14, 12);\n          result.writeString(strands.length, 16, 15);\n          result.writeString(strands[j].init._type._name, 18, 20);\n          result.writeString(strands[j].init._chain._name, 22, 22);\n          result.writeString(strands[j].init._sequence, 26, 23);\n          result.writeString(strands[j].init._icode, 27, 27);\n          result.writeString(strands[j].term._type._name, 29, 31);\n          result.writeString(strands[j].init._chain._name, 33, 33);\n          result.writeString(strands[j].term._sequence, 37, 34);\n          result.writeString(strands[j].term._icode, 38, 38);\n          result.writeString(strands[j].sense, 40, 39);\n        }\n      }\n    }\n  }\n\n  _extractHELIX(result) {\n    if (!this._source._helices) {\n      return;\n    }\n\n    result.newTag('HELIX');\n    const helices = this._source._helices;\n    for (let i = 0; i < helices.length; i++) {\n      const helix = helices[i];\n      const helixClass = _.invert(typeByPDBHelixClass);\n      result.newString();\n      result.writeString(helix.serial, 10, 8);\n      result.writeString(helix.name, 14, 12);\n      result.writeString(helix.init._type._name, 16, 18);\n      result.writeString(helix.init._chain._name, 20, 20);\n      result.writeString(helix.init._sequence, 25, 22);\n      result.writeString(helix.init._icode, 26, 26);\n      result.writeString(helix.term._type._name, 28, 30);\n      result.writeString(helix.term._chain._name, 32, 32);\n      result.writeString(helix.term._sequence, 37, 34);\n      result.writeString(helix.term._icode, 38, 38);\n      result.writeString(helixClass[helix.type], 40, 39);\n      result.writeString(helix.comment, 41, 70);\n      result.writeString(helix.length, 76, 72);\n    }\n  }\n\n  _extractATOM(result) {\n    if (!this._source._atoms) {\n      return;\n    }\n    const atoms = this._source._atoms;\n\n    for (let i = 0; i < atoms.length; i++) {\n      const tag = atoms[i].het ? 'HETATM' : 'ATOM';\n      result.newString(tag);\n      const startIndx = (atoms[i].element.name.length > 1 || atoms[i].name.length > 3) ? 13 : 14;\n      result.writeString(atoms[i].serial, 11, 7);\n      result.writeString(atoms[i].name, startIndx, 16);\n      result.writeString(String.fromCharCode(atoms[i].location), 17, 17);\n      result.writeString(atoms[i].residue._type._name, 20, 18);\n      result.writeString(atoms[i].residue._chain._name, 22, 22);\n      result.writeString(atoms[i].residue._sequence, 26, 23);\n      result.writeString(atoms[i].residue._icode, 27, 27);\n      result.writeString(atoms[i].position.x.toFixed(3), 38, 31);\n      result.writeString(atoms[i].position.y.toFixed(3), 46, 39);\n      result.writeString(atoms[i].position.z.toFixed(3), 54, 47);\n      result.writeString(atoms[i].occupancy.toFixed(2), 60, 55);\n      result.writeString(atoms[i].temperature.toFixed(2), 66, 61);\n      result.writeString(atoms[i].element.name, 78, 77);\n      if (atoms[i].charge) {\n        result.writeString(atoms[i].charge, 79, 80);\n      }\n    }\n  }\n\n  _extractCOMPND(result) {\n    if (!this._source._molecules) {\n      return;\n    }\n    const molecules = this._source._molecules;\n    result.newTag('COMPND', true);\n\n    for (let i = 0; i < molecules.length; i++) {\n      const chains = this._getMoleculeChains(molecules[i]);\n      result.newString();\n      result.writeString(`MOL_ID: ${molecules[i].index};`, 11, 80);\n      result.newString();\n      result.writeString(`MOLECULE: ${molecules[i].name};`, 11, 80);\n      result.newString();\n      result.writeString('CHAIN: ', 11, 18);\n      const chainsString = `${chains.join(', ')};`;\n      result.writeEntireString(chainsString, 81);\n    }\n  }\n\n  _extractREMARK(result) {\n    this._Remark290(result);\n    this._Remark350(result);\n  }\n\n  _Remark290(result) {\n    if (!this._source.symmetry) {\n      return;\n    }\n\n    if (this._source.symmetry.length !== 0) {\n      const matrices = this._source.symmetry;\n      result.newTag('REMARK', 290);\n      result.newString();\n      result.newString();\n      result.writeEntireString(this._stringForRemark290);\n      result.writeMatrices(matrices, 'SMTRY');\n      result.newString();\n      result.newString();\n      result.writeString('REMARK: NULL', 11, 80);\n    }\n  }\n\n  _Remark350(result) {\n    if (!this._source.units) {\n      return;\n    }\n    const { units } = this._source;\n    let biomolIndx = 0;\n\n    result.newTag('REMARK', 350);\n    result.newString();\n    result.newString();\n    result.writeEntireString(this._stringForRemark350);\n\n    const assemblies = units.filter((unit) => unit instanceof Assembly);\n\n    for (let i = 0; i < assemblies.length; i++) {\n      result.newString();\n      result.newString();\n      biomolIndx++;\n      result.writeString(`BIOMOLECULE: ${biomolIndx}`, 11, 80);\n      const chains = assemblies[i].chains.join(', ');\n      result.newString();\n      result.writeString('APPLY THE FOLLOWING TO CHAINS: ');\n      result.writeEntireString(chains, 69, { tag: 'AND CHAINS: ', begin: 31, end: 42 });\n\n      const { matrices } = assemblies[i];\n      result.writeMatrices(matrices, 'BIOMT');\n    }\n  }\n\n  _getMoleculeChains(molecule) {\n    function getChainName(residue) {\n      return residue._chain._name;\n    }\n    const chainNames = molecule.residues.map(getChainName);\n    return chainNames.filter((item, pos) => chainNames.indexOf(item) === pos);\n  }\n}\n\nPDBExporter.formats = ['pdb'];\nPDBExporter.SourceClass = Complex;\n","import * as THREE from 'three';\n\nconst FBX_POS_SIZE = 3;\nconst FBX_NORM_SIZE = 3;\nconst FBX_COL_SIZE = 4;\n\nfunction copyFbxPoint3(src, srcIdx, dst, dstIdx) {\n  dst[dstIdx] = src[srcIdx];\n  dst[dstIdx + 1] = src[srcIdx + 1];\n  dst[dstIdx + 2] = src[srcIdx + 2];\n}\n\nfunction copyFbxPoint4(src, srcIdx, dst, dstIdx, value) {\n  dst[dstIdx] = src[srcIdx];\n  dst[dstIdx + 1] = src[srcIdx + 1];\n  dst[dstIdx + 2] = src[srcIdx + 2];\n  dst[dstIdx + 3] = value;\n}\n\nconst vector4 = new THREE.Vector4();\nfunction copyTransformedPoint3(src, srcIdx, dst, dstIdx, opts) {\n  vector4.set(src[srcIdx], src[srcIdx + 1], src[srcIdx + 2], opts.w);\n  vector4.applyMatrix4(opts.matrix);\n  dst[dstIdx] = vector4.x;\n  dst[dstIdx + 1] = vector4.y;\n  dst[dstIdx + 2] = vector4.z;\n}\n\nfunction setSubArray(src, dst, count, copyFunctor, functorOpts) {\n  if ((dst.array.length - dst.start) / dst.stride < count\n    || (src.array.length - src.start) / src.stride < count) {\n    return; // we've got no space\n  }\n  if (src.stride === dst.stride) { // stride is the same\n    dst.array.set(src.array, dst.start);\n  } else {\n    let idx = dst.start;\n    let arridx = src.start;\n    for (let i = 0; i < count; ++i, idx += dst.stride, arridx += src.stride) {\n      copyFunctor(src.array, arridx, dst.array, idx, functorOpts);\n    }\n  }\n}\n\nexport default class FBXModel {\n  constructor() {\n    this.positions = null;\n    this.normals = null;\n    this.colors = null;\n    this.indices = null;\n    this.lastPos = 0;\n    this.lastNorm = 0;\n    this.lastCol = 0;\n    this.lastIdx = 0;\n  }\n\n  init(vertsCount, indsCount) {\n    this.positions = new Float32Array(vertsCount * FBX_POS_SIZE);\n    this.normals = new Float32Array(vertsCount * FBX_NORM_SIZE);\n    this.colors = new Float32Array(vertsCount * FBX_COL_SIZE);\n    this.indices = new Int32Array(indsCount);\n  }\n\n  setPositions(array, start, count, stride) {\n    const src = {\n      array,\n      start,\n      stride,\n    };\n    const dst = {\n      array: this.positions,\n      start: this.lastPos,\n      stride: FBX_POS_SIZE,\n    };\n    setSubArray(src, dst, count, copyFbxPoint3);\n    this.lastPos += count * FBX_POS_SIZE;\n  }\n\n  setTransformedPositions(array, start, count, stride, matrix) {\n    let idx = this.lastPos;\n    let arrIdx = start;\n    const opts = { matrix, w: 1 };\n    for (let i = 0; i < count; ++i, arrIdx += stride, idx += FBX_POS_SIZE) {\n      copyTransformedPoint3(array, arrIdx, this.positions, idx, opts);\n    }\n    this.lastPos += count * FBX_POS_SIZE;\n  }\n\n  setNormals(array, start, count, stride) {\n    const src = {\n      array,\n      start,\n      stride,\n    };\n    const dst = {\n      array: this.normals,\n      start: this.lastNorm,\n      stride: FBX_NORM_SIZE,\n    };\n    setSubArray(src, dst, count, copyFbxPoint3);\n    this.lastNorm += count * FBX_NORM_SIZE;\n  }\n\n  setTransformedNormals(array, start, count, stride, matrix) {\n    let idx = this.lastNorm;\n    let arrIdx = start;\n    const opts = { matrix, w: 0 };\n    for (let i = 0; i < count; ++i, arrIdx += stride, idx += FBX_NORM_SIZE) {\n      copyTransformedPoint3(array, arrIdx, this.normals, idx, opts);\n    }\n    this.lastNorm += count * FBX_NORM_SIZE;\n  }\n\n  setColors(array, start, count, stride) {\n    const src = {\n      array,\n      start,\n      stride,\n    };\n    const dst = {\n      array: this.colors,\n      start: this.lastCol,\n      stride: FBX_COL_SIZE,\n    };\n    setSubArray(src, dst, count, copyFbxPoint4, 1);\n    this.lastCol += count * FBX_COL_SIZE;\n  }\n\n  setIndices(array, start, count) {\n    this.indices.set(array, this.lastIdx);\n    this.lastIdx += count;\n  }\n\n  setShiftedIndices(array, count, shift) {\n    const shifted = array.map((x) => x + shift);\n    this.setIndices(shifted, 0, count);\n  }\n\n  getVerticesNumber() {\n    return this.lastPos / FBX_POS_SIZE;\n  }\n\n  addInstance(matrix, geo) {\n    // add indices at first to take old number of vertices for shift\n    const currentCount = this.getVerticesNumber();\n    this.setShiftedIndices(geo.indices, geo.indices.length, currentCount);\n    // simply write vertices at empty space\n    const size = geo.itemSize;\n    this.setTransformedPositions(geo.positions, 0, geo.vertsCount, size.position, matrix);\n    this.setTransformedNormals(geo.normals, 0, geo.vertsCount, size.normal, matrix);\n    this.setColors(geo.colors, 0, geo.vertsCount, size.color);\n  }\n}\n","/** Base class for fbx geometry contains simply organized attributes: positions+normals+colors, indices. */\nexport default class FBXGeometry {\n  /**\n   * Create a base geo with necessary members.\n   */\n  constructor() {\n    this.positions = null;\n    this.normals = null;\n    this.colors = null;\n    this.indices = null;\n    this.vertsCount = 0;\n    this.itemSize = null;\n  }\n\n  /**\n   * Initialize base geo storing items info from attributes.\n   * @param {Object} geo - THREE.BufferGeometry.\n   */\n  init(geo, _info) {\n    const { attributes } = geo;\n    // save item size\n    this.itemSize = {\n      position: attributes.position.itemSize,\n      normal: attributes.normal.itemSize,\n      color: attributes.color.itemSize,\n    };\n  }\n}\n","import FBXGeometry from './FBXGeometry';\n\n/**\n * Fbx geometry, that copies positions+normals, indexes and creates colors filled with defined value.\n * @extends FBXGeometry\n */\nexport default class FBX1CGeometry extends FBXGeometry {\n  /**\n   * Initialize geo storing positions, normals, indices and create colors.\n   * @param {Object} geo - THREE.BufferGeometry.\n   */\n  init(geo, _info) {\n    super.init(geo, _info);\n    const {\n      attributes: {\n        position,\n        normal,\n      },\n      index,\n    } = geo;\n    // copy vertices attributes\n    this.vertsCount = position.count;\n    this.positions = position.array;\n    this.normals = normal.array;\n    // create color array\n    this.colors = new Float32Array(this.vertsCount * this.itemSize.color);\n    // indices\n    this.indices = index.array;\n  }\n\n  /**\n   * Set defined color for all items in color attribute\n   * @param {Object} color - THREE.Color.\n   */\n  setColors(color) {\n    let offset = 0;\n    for (let i = 0, l = this.colors.length, cl = this.itemSize.color; i < l; i += cl) {\n      this.colors[offset++] = color.r;\n      this.colors[offset++] = color.g;\n      this.colors[offset++] = color.b;\n    }\n  }\n}\n","import FBXGeometry from './FBXGeometry';\n\n/**\n * Fbx geometry, that copies positions+normals, indexes from cylinder  geometry and creates colors filled with two\n * defined values.\n * @extends FBXGeometry\n */\nexport default class FBX2CCylinder extends FBXGeometry {\n  constructor() {\n    super();\n    this._cutRawStart = 0;\n    this._cutRawEnd = 0;\n    this._facesPerSlice = 0;\n  }\n\n  /**\n   * Initialize geo by creating new attributes, because we extend number of vertices to make cylinder two-colored.\n   * Indices remain the same. We process open- end close-ended cylinders and consider cylinders od 2 segments\n   * in height ONLY.\n   * NOTE: cylinder consists of 2 height segments and stores parts in the order: tube, topCap, bottomCap\n   * @param {Object} geo - THREE.BufferGeometry.\n   * @param {Object} info - information needed for geo extend\n   */\n  init(geo, info) {\n    super.init(geo, info);\n    const {\n      attributes: {\n        position,\n      },\n      index,\n    } = geo;\n    // extend vertices arrays\n    this.vertsCount = position.count + info.addPerCylinder;\n    this._facesPerSlice = info.addPerCylinder;\n    this.positions = new Float32Array(this.vertsCount * position.itemSize);\n    this.normals = new Float32Array(this.vertsCount * this.itemSize.normal);\n    this.colors = new Float32Array(this.vertsCount * this.itemSize.color);\n    this._extendVertices(geo, info);\n    // number of indices stays the same\n    this.indices = new Uint32Array(index.count);\n    this._extendIndices(geo, info);\n  }\n\n  /** Extend vertex attributes to have one more slice to make sharp middle startColor-endColor line. */\n  _extendVertices(geo, info) {\n    const { position } = geo.attributes;\n    const { normal } = geo.attributes;\n    const geoParams = geo.getGeoParams();\n    const cutRaw = 1; // we expect cylinders of 2 segments in height => so half segment = 1\n    this._cutRawStart = cutRaw * geoParams.radialSegments;\n    this._cutRawEnd = this._cutRawStart + info.addPerCylinder;\n    { // write first half of cylinder\n      let temp = position.array.slice(0, this._cutRawEnd * position.itemSize);\n      this.positions.set(temp, 0);\n      temp = normal.array.slice(0, this._cutRawEnd * normal.itemSize);\n      this.normals.set(temp, 0);\n    }\n    { // write second part of cylinder\n      let temp = position.array.slice(this._cutRawStart * position.itemSize, position.array.length);\n      this.positions.set(temp, this._cutRawEnd * position.itemSize);\n      temp = normal.array.slice(this._cutRawStart * normal.itemSize, normal.array.length);\n      this.normals.set(temp, this._cutRawEnd * normal.itemSize);\n    }\n  }\n\n  /** Shift values of second part (+caps) indices by newly added vertices count. Number of faces remains the same. */\n  _extendIndices(geo, info) {\n    const { index } = geo;\n    const indicesPerQuad = 6; // quad = 2 triangles => 6 indices\n    const startToShift = info.addPerCylinder * indicesPerQuad;\n    const shift = info.addPerCylinder;\n    let shifted = index.array.slice(startToShift, index.count);\n    shifted = shifted.map((x) => x + shift); // shift only the endings\n    this.indices.set(index.array, 0);\n    this.indices.set(shifted, startToShift);\n  }\n\n  /**\n   * Set defined colors: (first part + bottom cap), (second part + top cap)\n   * @param {number} start - start color index\n   * @param {number} end - start color index\n   * @param {array} array - array of colors\n   * @param {array} color - color value components\n   */\n  _setColorRange(start, end, array, color) {\n    const colorSize = color.length;\n    for (let i = start; i < end; i += colorSize) {\n      array.set(color, i);\n    }\n  }\n\n  /**\n   * Set defined colors: (first part + bottom cap), (second part + top cap)\n   * @param {Object} color1 - THREE.Color.\n   * @param {Object} color2 - THREE.Color.\n   */\n  setColors(color1, color2) {\n    const colorSize = this.itemSize.color;\n    const part1End = this._cutRawEnd * colorSize;\n    const part2End = part1End * 2;\n    this._setColorRange(0, part1End, this.colors, color1.toArray());\n    this._setColorRange(part1End, part2End, this.colors, color2.toArray());\n    if (part2End < this.colors.length) { // cylinder has caps, lets paint them\n      const capSize = (this._facesPerSlice + 1) * colorSize;\n      const cap1End = part2End + capSize;\n      this._setColorRange(part2End, cap1End, this.colors, color2.toArray());\n      const cap2End = cap1End + capSize; // should be equal to this.colors.length;\n      this._setColorRange(cap1End, cap2End, this.colors, color1.toArray());\n    }\n  }\n}\n","import _ from 'lodash';\nimport * as THREE from 'three';\n\nimport utils from '../../../utils';\nimport gfxutils from '../../../gfx/gfxutils';\nimport logger from '../../../utils/logger';\n\nimport FBXModel from './FBXModel';\nimport ThickLineMesh from '../../../gfx/meshes/ThickLineMesh';\nimport ZSpriteMesh from '../../../gfx/meshes/ZSpriteMesh';\nimport InstancedSpheresGeometry from '../../../gfx/geometries/InstancedSpheresGeometry';\nimport Instanced2CCylindersGeometry from '../../../gfx/geometries/Instanced2CCylindersGeometry';\nimport FBX1CGeometry from './FBX1CGeometry';\nimport FBX2CCylinder from './FBX2CCylinder';\n\nexport default class FBXInfoExtractor {\n  constructor() {\n    this._materials = [];\n    this._models = [];\n  }\n\n  process(data) {\n    this._extractModelsAndMaterials(data);\n    const models = this._flattenModels();\n\n    return {\n      name: data.name,\n      models,\n      materials: this._materials,\n    };\n  }\n\n  /**\n   * Extract fbx object information from ComplexVisual\n   * @param {object} data - complexVisual to get geometry info from\n   */\n  _extractModelsAndMaterials(data) {\n    const layersOfInterest = new THREE.Layers();\n    layersOfInterest.set(gfxutils.LAYERS.DEFAULT);\n    layersOfInterest.enable(gfxutils.LAYERS.TRANSPARENT);\n    data.traverse((object) => {\n      if (object instanceof THREE.Mesh && object.layers.test(layersOfInterest) && this.checkExportAbility(object)) {\n        if (object.geometry.type === 'InstancedBufferGeometry') {\n          this._collectInstancedGeoInfo(object);\n        } else {\n          this._collectGeoInfo(object);\n        }\n      }\n    });\n  }\n\n  /**\n   * Reworking indices buffer, see https://banexdevblog.wordpress.com/2014/06/23/a-quick-tutorial-about-the-fbx-ascii-format/\n   * basically, every triangle in Miew has been represented hat way (e.g.) : 0,1,7, but we must (for FBX) rework that\n   * into: 0,1,-8.\n   * @param {array} indices - belongs to [0, maxVertIndex]\n   */\n  _reworkIndices(indices) {\n    const faceSize = 3;\n    for (let i = faceSize - 1; i < indices.length; i += faceSize) {\n      indices[i] *= -1;\n      indices[i]--;\n    }\n  }\n\n  /**\n   * Combine geometry from several models having the same material into one Model and finally prepare indices\n    * @returns {array} models, combined by material id\n   */\n  _flattenModels() {\n    let overallVertsCount = 0;\n    function shift(x) {\n      return x + overallVertsCount;\n    }\n    const combined = [];\n    // flatten models geometry\n    for (let i = 0, n = this._models.length; i < n; i++) {\n      const models = this._models[i];\n      let indices = [];\n      let positions = [];\n      let normals = [];\n      let colors = [];\n      // reorganize every attributes as array of arrays\n      overallVertsCount = 0;\n      for (let j = 0; j < models.length; j++) {\n        const m = models[j];\n        indices.push(m.indices.map(shift));\n        overallVertsCount += m.getVerticesNumber();\n        positions.push(m.positions);\n        normals.push(m.normals);\n        colors.push(m.colors);\n      }\n      // join all subarrays into one\n      indices = utils.mergeTypedArraysUnsafe(indices);\n      this._reworkIndices(indices);\n      positions = utils.mergeTypedArraysUnsafe(positions);\n      normals = utils.mergeTypedArraysUnsafe(normals);\n      colors = utils.mergeTypedArraysUnsafe(colors);\n      combined.push({\n        indices,\n        positions,\n        normals,\n        colors,\n        verticesCount: overallVertsCount,\n      });\n    }\n    return combined;\n  }\n\n  /**\n   * Check ability to export the kind of mesh.\n   * @param {object} mesh - given mesh to check\n   * @returns {boolean} result of check\n   */\n  checkExportAbility(mesh) {\n    // check mesh on not being empty\n    if (mesh.geometry.attributes.position.count === 0) {\n      return false;\n    }\n    // check type of mesh\n    // if (mesh.geometry.isInstancedBufferGeometry && settings.now.zSprites) {\n    if (mesh instanceof ZSpriteMesh) {\n      logger.warn('Currently we cannot export \\'sprites\\' modes, like BS, WV, LC. Please turn of settings \\'zSprites\\' and try again');\n      return false;\n    }\n    if (mesh instanceof ThickLineMesh) {\n      logger.warn('Currently we cannot export Lines mode');\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Save geometry info from common mesh, like Surface or Cartoon\n   */\n  _collectGeoInfo(mesh) {\n    const {\n      geometry: {\n        attributes: {\n          position,\n          color,\n          normal,\n        },\n        index,\n      },\n      matrix,\n    } = mesh;\n\n    const model = new FBXModel();\n    const vertCount = position.count;\n    model.init(vertCount, index.count);\n    if (matrix.isIdentity()) {\n      model.setPositions(position.array, 0, vertCount, position.itemSize);\n      model.setNormals(normal.array, 0, vertCount, normal.itemSize);\n    } else {\n      model.setTransformedPositions(position.array, 0, vertCount, position.itemSize, matrix);\n      model.setTransformedNormals(normal.array, 0, vertCount, normal.itemSize, matrix);\n    }\n    model.setColors(color.array, 0, vertCount, color.itemSize);\n    model.setIndices(index.array, 0, index.count);\n    const material = this._collectMaterialInfo(mesh);\n    this._addToPool(model, material);\n  }\n\n  /**\n   * Collect instanced spheres geometry and materials.\n   * @param {object} mesh - mesh with instanced spheres info\n   */\n  _collectSpheresInfo(mesh) {\n    const {\n      geometry: {\n        attributes: {\n          position,\n          color,\n        },\n        index,\n      },\n      matrix,\n    } = mesh;\n\n    const model = new FBXModel();\n    const instCount = mesh.geometry.instanceCount;\n    const vertCount = position.count;\n    const indsCount = index.count;\n    model.init(instCount * vertCount, instCount * indsCount);\n    const geo = new FBX1CGeometry();\n    geo.init(mesh.geometry);\n    const instMatrix = new THREE.Matrix4();\n    const objMatrix = new THREE.Matrix4();\n    const sphereColor = new THREE.Color();\n    for (let instanceIndex = 0; instanceIndex < instCount; ++instanceIndex) {\n      // update colors in geometry\n      const colorIdx = instanceIndex * color.itemSize;\n      sphereColor.fromArray(color.array, colorIdx);\n      geo.setColors(sphereColor);\n      // add instance to the model\n      this._getSphereInstanceMatrix(mesh.geometry, instanceIndex, instMatrix);\n      objMatrix.multiplyMatrices(matrix, instMatrix);\n      model.addInstance(objMatrix, geo);\n    }\n    const material = this._collectMaterialInfo(mesh);\n    this._addToPool(model, material);\n  }\n\n  /**\n   * Getting all instanced cylinders from given mesh.\n   * Divide cylinder (add additional vertexes) for prettiness therefore algorithm is a bit complicated\n   * @param {object} mesh - given mesh with instanced cylinders\n   */\n  _collectCylindersInfo(mesh) {\n    const {\n      geometry: {\n        attributes: {\n          position,\n          color,\n          color2,\n        },\n        index,\n      },\n      matrix,\n    } = mesh;\n\n    const model = new FBXModel();\n    const instCount = mesh.geometry.instanceCount;\n    const oneCCylinder = new FBX1CGeometry();\n    oneCCylinder.init(mesh.geometry);\n    const splittingInfo = this._gatherCylindersColoringInfo(mesh.geometry);\n    let twoCCylinder = null;\n    if (splittingInfo.needToSplit > 0) {\n      twoCCylinder = new FBX2CCylinder();\n      twoCCylinder.init(mesh.geometry, splittingInfo);\n    }\n    const additionalVertsCount = splittingInfo.addPerCylinder * splittingInfo.needToSplit;\n    const vertCount = position.count;\n    const indsCount = index.count;\n    model.init(instCount * vertCount + additionalVertsCount, instCount * indsCount);\n    const instMatrix = new THREE.Matrix4();\n    const objMatrix = new THREE.Matrix4();\n    const colorStart = new THREE.Color();\n    const colorEnd = new THREE.Color();\n    let geo = {};\n    for (let instanceIndex = 0; instanceIndex < instCount; ++instanceIndex) {\n      // update colors in geometry\n      const colorIdx = instanceIndex * color.itemSize;\n      if (splittingInfo.is2Colored[instanceIndex]) {\n        // .color2 contains starting color, and .color contains starting color (see uber.frag ATTR_COLOR2)\n        colorStart.fromArray(color2.array, colorIdx);\n        colorEnd.fromArray(color.array, colorIdx);\n        if (twoCCylinder) {\n          twoCCylinder.setColors(colorStart, colorEnd);\n          geo = twoCCylinder;\n        }\n      } else {\n        // has one color per cylinder\n        colorStart.fromArray(color.array, colorIdx);\n        oneCCylinder.setColors(colorStart);\n        geo = oneCCylinder;\n      }\n      // add instance to the model\n      this._getCylinderInstanceMatrix(mesh.geometry, instanceIndex, instMatrix);\n      objMatrix.multiplyMatrices(matrix, instMatrix);\n      model.addInstance(objMatrix, geo);\n    }\n    const material = this._collectMaterialInfo(mesh);\n    this._addToPool(model, material);\n  }\n\n  /**\n   * Adding model to pool of models or extend existing ones\n   * @param {object} model - model to add\n   * @param {object} material - material to add\n   */\n  _addToPool(model, material) {\n    const materialIdx = this._checkExistingMaterial(material);\n    if (materialIdx < 0) { // new model-material pair\n      this._models.push([model]);\n      this._materials.push(material);\n    } else { // add model to existing model-material pair\n      const models = this._models[materialIdx];\n      models.push(model);\n    }\n  }\n\n  /**\n   * Checking if given material already was registered in materials pool (no need to create new one)\n   * @param {object} material - given material\n   * @returns {number} number of model-material pair\n   */\n  _checkExistingMaterial(material) {\n    return _.findIndex(this._materials, (m) => _.isEqual(m, material));\n  }\n\n  _gatherCylindersColoringInfo(geo) {\n    const instCount = geo.instanceCount;\n    const color1 = geo.attributes.color.array;\n    const color2 = geo.attributes.color2.array;\n    const stride = geo.attributes.color.itemSize;\n    const is2Colored = new Array(instCount);\n    // analyze color instance attributes\n    let needToSplit = 0;\n    let colIdx = 0;\n    for (let i = 0; i < instCount; i++, colIdx += stride) {\n      const differs = (Math.abs(color1[colIdx] - color2[colIdx]) > 0.0000001) // compare ending colors\n        || (Math.abs(color1[colIdx + 1] - color2[colIdx + 1]) > 0.0000001)\n        || (Math.abs(color1[colIdx + 2] - color2[colIdx + 2]) > 0.0000001);\n      is2Colored[i] = differs;\n      needToSplit += differs; // count number of 2-colored cylinders\n    }\n    // calc number of vertices to add into 2-colored\n    const geoParams = geo.getGeoParams();\n    const addPerCylinder = geoParams.radialSegments;\n    return { is2Colored, needToSplit, addPerCylinder };\n  }\n\n  /**\n   * Collect instanced models and materials.\n   * @param {object} mesh - given mesh with instanced something (spheres or cylinders)\n   */\n  _collectInstancedGeoInfo(mesh) {\n    if (mesh.geometry instanceof InstancedSpheresGeometry) {\n      this._collectSpheresInfo(mesh);\n    } else if (mesh.geometry instanceof Instanced2CCylindersGeometry) {\n      this._collectCylindersInfo(mesh);\n    }\n  }\n\n  /**\n   * Collect Material info from given mesh.\n   * @param {object} mesh - given mesh with material info\n   * @returns {object} material\n   */\n  _collectMaterialInfo(mesh) {\n    const { uberOptions } = mesh.material;\n    return ({\n      diffuse: uberOptions.diffuse.toArray(),\n      opacity: uberOptions.opacity,\n      shininess: uberOptions.shininess,\n      specular: uberOptions.specular.toArray(),\n    });\n  }\n\n  _getCylinderInstanceMatrix(geo, instIdx, matrix) {\n    const matVector1 = geo.attributes.matVector1.array;\n    const matVector2 = geo.attributes.matVector2.array;\n    const matVector3 = geo.attributes.matVector3.array;\n    const idxOffset = instIdx * 4; // used 4 because offset arrays are stored in quads\n    matrix.set(matVector1[idxOffset], matVector1[idxOffset + 1], matVector1[idxOffset + 2], matVector1[idxOffset + 3],\n      matVector2[idxOffset], matVector2[idxOffset + 1], matVector2[idxOffset + 2], matVector2[idxOffset + 3],\n      matVector3[idxOffset], matVector3[idxOffset + 1], matVector3[idxOffset + 2], matVector3[idxOffset + 3],\n      0, 0, 0, 1);\n  }\n\n  _getSphereInstanceMatrix(geo, instIdx, matrix) {\n    const { offset } = geo.attributes;\n    const idx = instIdx * offset.itemSize;\n    const x = offset.array[idx];\n    const y = offset.array[idx + 1];\n    const z = offset.array[idx + 2];\n    const scale = offset.array[idx + 3];\n    matrix.set(\n      scale, 0, 0, x,\n      0, scale, 0, y,\n      0, 0, scale, z,\n      0, 0, 0, 1,\n    );\n  }\n}\n","// Forming default definitions block\nconst defaultDefinitions = `\nDefinitions:  {\n  Version: 100\n  Count: 3\n  ObjectType: \"Model\" {\n    Count: 1\n  }\n  ObjectType: \"Geometry\" {\n    Count: 1\n  }\n  ObjectType: \"Material\" {\n    Count: 1\n  }\n  ObjectType: \"Pose\" {\n    Count: 1\n  }\n  ObjectType: \"GlobalSettings\" {\n    Count: 1\n  }\n} `;\n\n// Default model properties\nconst defaultProperties = `Properties60: {\n      Property: \"QuaternionInterpolate\", \"bool\", \"\",0\n      Property: \"Visibility\", \"Visibility\", \"A\",1\n      Property: \"Lcl Translation\", \"Lcl Translation\", \"A\",0.000000000000000,0.000000000000000,-1789.238037109375000\n      Property: \"Lcl Rotation\", \"Lcl Rotation\", \"A\",0.000009334667643,-0.000000000000000,0.000000000000000\n      Property: \"Lcl Scaling\", \"Lcl Scaling\", \"A\",1.000000000000000,1.000000000000000,1.000000000000000\n      Property: \"RotationOffset\", \"Vector3D\", \"\",0,0,0\n      Property: \"RotationPivot\", \"Vector3D\", \"\",0,0,0\n      Property: \"ScalingOffset\", \"Vector3D\", \"\",0,0,0\n      Property: \"ScalingPivot\", \"Vector3D\", \"\",0,0,0\n      Property: \"TranslationActive\", \"bool\", \"\",0\n      Property: \"TranslationMin\", \"Vector3D\", \"\",0,0,0\n      Property: \"TranslationMax\", \"Vector3D\", \"\",0,0,0\n      Property: \"TranslationMinX\", \"bool\", \"\",0\n      Property: \"TranslationMinY\", \"bool\", \"\",0\n      Property: \"TranslationMinZ\", \"bool\", \"\",0\n      Property: \"TranslationMaxX\", \"bool\", \"\",0\n      Property: \"TranslationMaxY\", \"bool\", \"\",0\n      Property: \"TranslationMaxZ\", \"bool\", \"\",0\n      Property: \"RotationOrder\", \"enum\", \"\",0\n      Property: \"RotationSpaceForLimitOnly\", \"bool\", \"\",0\n      Property: \"AxisLen\", \"double\", \"\",10\n      Property: \"PreRotation\", \"Vector3D\", \"\",0,0,0\n      Property: \"PostRotation\", \"Vector3D\", \"\",0,0,0\n      Property: \"RotationActive\", \"bool\", \"\",0\n      Property: \"RotationMin\", \"Vector3D\", \"\",0,0,0\n      Property: \"RotationMax\", \"Vector3D\", \"\",0,0,0\n      Property: \"RotationMinX\", \"bool\", \"\",0\n      Property: \"RotationMinY\", \"bool\", \"\",0\n      Property: \"RotationMinZ\", \"bool\", \"\",0\n      Property: \"RotationMaxX\", \"bool\", \"\",0\n      Property: \"RotationMaxY\", \"bool\", \"\",0\n      Property: \"RotationMaxZ\", \"bool\", \"\",0\n      Property: \"RotationStiffnessX\", \"double\", \"\",0\n      Property: \"RotationStiffnessY\", \"double\", \"\",0\n      Property: \"RotationStiffnessZ\", \"double\", \"\",0\n      Property: \"MinDampRangeX\", \"double\", \"\",0\n      Property: \"MinDampRangeY\", \"double\", \"\",0\n      Property: \"MinDampRangeZ\", \"double\", \"\",0\n      Property: \"MaxDampRangeX\", \"double\", \"\",0\n      Property: \"MaxDampRangeY\", \"double\", \"\",0\n      Property: \"MaxDampRangeZ\", \"double\", \"\",0\n      Property: \"MinDampStrengthX\", \"double\", \"\",0\n      Property: \"MinDampStrengthY\", \"double\", \"\",0\n      Property: \"MinDampStrengthZ\", \"double\", \"\",0\n      Property: \"MaxDampStrengthX\", \"double\", \"\",0\n      Property: \"MaxDampStrengthY\", \"double\", \"\",0\n      Property: \"MaxDampStrengthZ\", \"double\", \"\",0\n      Property: \"PreferedAngleX\", \"double\", \"\",0\n      Property: \"PreferedAngleY\", \"double\", \"\",0\n      Property: \"PreferedAngleZ\", \"double\", \"\",0\n      Property: \"InheritType\", \"enum\", \"\",0\n      Property: \"ScalingActive\", \"bool\", \"\",0\n      Property: \"ScalingMin\", \"Vector3D\", \"\",1,1,1\n      Property: \"ScalingMax\", \"Vector3D\", \"\",1,1,1\n      Property: \"ScalingMinX\", \"bool\", \"\",0\n      Property: \"ScalingMinY\", \"bool\", \"\",0\n      Property: \"ScalingMinZ\", \"bool\", \"\",0\n      Property: \"ScalingMaxX\", \"bool\", \"\",0\n      Property: \"ScalingMaxY\", \"bool\", \"\",0\n      Property: \"ScalingMaxZ\", \"bool\", \"\",0\n      Property: \"GeometricTranslation\", \"Vector3D\", \"\",0,0,0\n      Property: \"GeometricRotation\", \"Vector3D\", \"\",0,0,0\n      Property: \"GeometricScaling\", \"Vector3D\", \"\",1,1,1\n      Property: \"LookAtProperty\", \"object\", \"\"\n      Property: \"UpVectorProperty\", \"object\", \"\"\n      Property: \"Show\", \"bool\", \"\",1\n      Property: \"NegativePercentShapeSupport\", \"bool\", \"\",1\n      Property: \"DefaultAttributeIndex\", \"int\", \"\",0\n      Property: \"Color\", \"Color\", \"A+\",0,0,0\n      Property: \"Size\", \"double\", \"\",100\n      Property: \"Look\", \"enum\", \"\",1\n    }`;\n\n// Default materials layer\nconst defaultMaterialLayer = `\n    LayerElementMaterial: 0 {\n      Version: 101\n      Name: \"\"\n      MappingInformationType: \"AllSame\"\n      ReferenceInformationType: \"Direct\"\n      Materials: 0\n    }`;\n\n// Default layers block\nconst defaultLayerBlock = `\n    Layer: 0 {\n      Version: 100\n      LayerElement:  {\n        Type: \"LayerElementNormal\"\n        TypedIndex: 0\n      }\n      LayerElement:  {\n        Type: \"LayerElementColor\"\n        TypedIndex: 0\n      }\n      LayerElement:  {\n        Type: \"LayerElementMaterial\"\n        TypedIndex: 0\n      }\n    }`;\n\n/**\n * globalSettings info in output file.\n */\nconst globalSettings = `GlobalSettings: {\n    Version: 1000\n    Properties60:  {\n      Property: \"UpAxis\", \"int\", \"\",1\n      Property: \"UpAxisSign\", \"int\", \"\",1\n      Property: \"FrontAxis\", \"int\", \"\",2\n      Property: \"FrontAxisSign\", \"int\", \"\",1\n      Property: \"CoordAxis\", \"int\", \"\",0\n      Property: \"CoordAxisSign\", \"int\", \"\",1\n      Property: \"UnitScaleFactor\", \"double\", \"\",1\n    }\n  }`;\n\nexport default class FBXResult {\n  constructor() {\n    this._resultArray = [];\n    this._info = null;\n  }\n\n  getResult(info) {\n    this._info = info;\n    this._resultArray.push(this._writeHeader());\n    this._resultArray.push(this._writeDefinitions());\n    this._resultArray.push(this._writeObjects(info.models, info.materials));\n    this._resultArray.push(this._writeRelations());\n    this._resultArray.push(this._writeConnections()); // connections between models and materials)\n    this._info = null;\n    return this._resultArray.join('');\n  }\n\n  /**\n   * Add FBXHeader info to output file.\n   * Some fields are really confusing, but it seems that all listed fields are very informative\n   */\n  _writeHeader() {\n    const FBXHeaderVersion = 1003; // 1003 is some number which appears to present in many 6.1 ASCII files\n    const FBXVersion = 6100; // Mandatory and only supported version\n    const date = new Date();\n    const timeStampVersion = 1000;\n    const creator = `Miew FBX Exporter v${this._info.version}`; // Supposed to be an engine\n\n    return `; FBX 6.1.0 project file\n; Created by ${creator} Copyright (c) 2015-2020 EPAM Systems, Inc.\n; For support please contact miew@epam.com\n; ----------------------------------------------------\n\nFBXHeaderExtension:  {\n  FBXHeaderVersion: ${FBXHeaderVersion}\n  FBXVersion: ${FBXVersion}\n  CreationTimeStamp:  {\n    Version: ${timeStampVersion}\n    Year: ${date.getFullYear()}\n    Month: ${date.getMonth() + 1} \n    Day: ${date.getDate()}\n    Hour: ${date.getHours()}\n    Minute: ${date.getMinutes()}\n    Second: ${date.getSeconds()}\n    Millisecond: ${date.getMilliseconds()}\n  }\n  Creator: \"${creator}\"\n  OtherFlags:  {\n    FlagPLE: 0\n  }\n}\nCreationTime: \"${date}\"\nCreator: \"${creator}\"  \n`;\n  }\n\n  /**\n   * Add Definitions info to output file.\n   * Not exactly sure if this section is template section (as it is in 7.4+) or it should every time be like this\n   */\n  _writeDefinitions() {\n    return `\n; Object definitions\n;------------------------------------------------------------------\n\n${defaultDefinitions}\n`;\n  }\n\n  /**\n   * Adding gathered information about Models to resulting string.\n   * Reminder - there may be more then 1 model in scene, but we must place materials after ALL models.\n   * @returns {string} string containing all models (vertices, indices, colors, normals etc)\n   */\n  _models() {\n    const modelVersion = 232;\n    let allModels = '';\n    const { models } = this._info;\n    for (let i = 0; i < models.length; ++i) {\n      const model = models[i];\n      const vertCount = model.verticesCount;\n      allModels += `\n  Model: \"Model::${this._info.name}_${i}\", \"Mesh\" {\n    Version: ${modelVersion} \n    ${defaultProperties}\n    ${this._verticesIndices(model.positions, model.indices)}\n    ${this._normalLayer(model.normals)} \n    ${this._colorLayer(model.colors, vertCount)} \n    ${defaultMaterialLayer}  \n    ${defaultLayerBlock}\n  }`;\n    }\n    return allModels;\n  }\n\n  /**\n   * Add Material info to result\n   */\n  _materials() {\n    const materialVersion = 102;\n    let allMaterials = '';\n    const { materials } = this._info;\n    for (let i = 0; i < materials.length; ++i) {\n      const material = materials[i];\n      allMaterials += `\n  Material: \"Material::${this._info.name}_${i}_default\", \"\" {\n    Version: ${materialVersion}\n    ShadingModel: \"lambert\"\n    MultiLayer: 0\n    ${this._materialProperties(material)}\n  }`;\n    }\n    return allMaterials;\n  }\n\n  /**\n   * Add Objects info to output file.\n   */\n  _writeObjects() {\n    return `\n; Object properties\n;------------------------------------------------------------------\n\nObjects:  {\n  ${this._models()}\n  ${this._materials()}\n  ${globalSettings}\n}\n`;\n  }\n\n  /**\n   * Add Relations info to output file.\n   */\n  _writeRelations() {\n    let modelsList = '';\n    for (let i = 0; i < this._info.models.length; ++i) {\n      modelsList += `\n  Model: \"Model::${this._info.name}_${i}\", \"Mesh\" {\n  }`;\n    }\n    let materialList = '';\n    for (let i = 0; i < this._info.materials.length; ++i) {\n      materialList += `\n  Material: \"Material::${this._info.name}_${i}_default\", \"\" {\n  }`;\n    }\n\n    return `\n; Object relations\n;------------------------------------------------------------------\n\nRelations:  {\n  ${modelsList}\n  Model: \"Model::Producer Perspective\", \"Camera\" {\n  }\n  Model: \"Model::Producer Top\", \"Camera\" {\n  }\n  Model: \"Model::Producer Bottom\", \"Camera\" {\n  }\n  Model: \"Model::Producer Front\", \"Camera\" {\n  }\n  Model: \"Model::Producer Back\", \"Camera\" {\n  }\n  Model: \"Model::Producer Right\", \"Camera\" {\n  }\n  Model: \"Model::Producer Left\", \"Camera\" {\n  }\n  Model: \"Model::Camera Switcher\", \"CameraSwitcher\" {\n  }\n  ${materialList}\n}`;\n  }\n\n  /**\n   * Add Connections info to output file.\n   */\n  _writeConnections() {\n    let modelsList = '';\n    const { name } = this._info;\n    for (let i = 0; i < this._info.models.length; ++i) {\n      modelsList += `\n  Connect: \"OO\", \"Model::${name}_${i}\", \"Model::Scene\"`;\n    }\n\n    let materialList = '';\n    for (let i = 0; i < this._info.materials.length; ++i) {\n      materialList += `\n  Connect: \"OO\", \"Material::${name}_${i}_default\", \"Model::${name}_${i}\"`;\n    }\n\n    return `\n; Object connections\n;------------------------------------------------------------------\n\nConnections:  {\n  ${modelsList}\n  ${materialList}\n}`;\n  }\n\n  /**\n   * Write float array to string with limited precision\n   * @param {Float32Array} array - array to be fixed\n   * @returns {String} String with fixed floats\n   */\n  _floatArrayToString(array) {\n    const str = [];\n    for (let i = 0; i < array.length; ++i) {\n      str[i] = array[i].toFixed(6);\n    }\n    return str.join(',');\n  }\n\n  /**\n   * Adding color layer to resulting file\n   * @param {Float32Array} colorArray attribute\n   * @param {number} vertCount - number of vertices in the model\n   * @returns {string} color layer info\n   */\n  _colorLayer(colorArray, vertCount) {\n    const layerElementColorNumber = 0;\n    const layerElementColorVersion = 101;\n    const layerElementColorName = '';\n    const colorsStr = this._floatArrayToString(colorArray);\n    // Mapping Information type and Reference Information type are mandatory for our Miew! Must not be changed\n    // As said [..Array(...)] - fastest and easiest way to produce [0, 1, .....] array\n    const colorIndices = [...Array(vertCount).keys()];\n    return `\n    LayerElementColor: ${layerElementColorNumber} {\n      Version: ${layerElementColorVersion}\n      Name: \"${layerElementColorName}\"\n      MappingInformationType: \"ByVertice\"\n      ReferenceInformationType: \"Direct\"\n      Colors: ${colorsStr}\n      ColorIndex: ${colorIndices}\n    }`;\n  }\n\n  /**\n   * Adding normal layer to resulting file\n   * @param {Float32Array} normalArray attribute\n   * @returns {string} normal layer info\n   */\n  _normalLayer(normalArray) {\n    const layerElementNormalNumber = 0;\n    const layerElementNormalVersion = 101;\n    const layerElementNormalName = '';\n    const normalsStr = this._floatArrayToString(normalArray);\n    // Mapping Information type and Reference Information type are mandatory for our Miew! Must not be changed\n    return `\n    LayerElementNormal: ${layerElementNormalNumber} {\n      Version: ${layerElementNormalVersion}\n      Name: \"${layerElementNormalName}\"\n      MappingInformationType: \"ByVertice\"\n      ReferenceInformationType: \"Direct\" \n      Normals: ${normalsStr}\n    }`;\n  }\n\n  /**\n   * Adding vertices and indices to resulting string\n   * @return {string} resulting string in FBX notation\n   */\n  _verticesIndices(positions, indices) {\n    const multiLayer = 0;\n    const multiTake = 1;\n    const shading = 'Y';\n    const culling = 'CullingOff';\n    const geometryVersion = 124;\n    const vertStr = this._floatArrayToString(positions);\n    /* About _correctArrayNotation: Float32Arrays will contains only Float32 numbers, which implies that it will be floating points with 17 numbers after point.\n    * We cannot (and it's logically incorrect) save all this information, so we convert this Float32Array into Array-like object with numbers with only 6 numbers after point\n    * Reminder - this is big memory loss (as we must save at one moment two arrays with similar information) */\n    return `MultiLayer: ${multiLayer}\n    MultiTake: ${multiTake}\n    Shading: ${shading}\n    Culling: \"${culling}\"\n    Vertices: ${vertStr}\n    PolygonVertexIndex: ${indices}\n    GeometryVersion: ${geometryVersion}`;\n  }\n\n  /**\n   * Forming material properties block.\n   * @param {Object} material - given material of model\n   * @returns {String} material properties string\n   */\n  _materialProperties(material) {\n    return `Properties60:  {\n      Property: \"ShadingModel\", \"KString\", \"\", \"Lambert\"\n      Property: \"MultiLayer\", \"bool\", \"\",0\n      Property: \"EmissiveColor\", \"ColorRGB\", \"\",0,0,0\n      Property: \"EmissiveFactor\", \"double\", \"\",0.0000\n      Property: \"AmbientColor\", \"ColorRGB\", \"\",1,1,1\n      Property: \"AmbientFactor\", \"double\", \"\",0.0000\n      Property: \"DiffuseColor\", \"ColorRGB\", \"\",${material.diffuse}\n      Property: \"DiffuseFactor\", \"double\", \"\",1.0000\n      Property: \"Bump\", \"Vector3D\", \"\",0,0,0\n      Property: \"TransparentColor\", \"ColorRGB\", \"\",1,1,1\n      Property: \"TransparencyFactor\", \"double\", \"\",0.0000\n      Property: \"SpecularColor\", \"ColorRGB\", \"\",${material.specular}\n      Property: \"SpecularFactor\", \"double\", \"\",1.0000\n      Property: \"ShininessExponent\", \"double\", \"\",${material.shininess}\n      Property: \"ReflectionColor\", \"ColorRGB\", \"\",0,0,0\n      Property: \"ReflectionFactor\", \"double\", \"\",1\n      Property: \"Ambient\", \"ColorRGB\", \"\",1,1,1\n      Property: \"Diffuse\", \"ColorRGB\", \"\",${material.diffuse}\n      Property: \"Specular\", \"ColorRGB\", \"\",${material.specular}\n      Property: \"Shininess\", \"double\", \"\",${material.shininess}\n      Property: \"Opacity\", \"double\", \"\",${material.opacity}\n      Property: \"Reflectivity\", \"double\", \"\",0\n    }`;\n  }\n}\n","import Exporter from './Exporter';\nimport FBXInfoExtractor from './fbx/FBXInfoExtractor';\nimport FBXResult from './fbx/FBXResult';\nimport ComplexVisual from '../../ComplexVisual';\n\nexport default class FBXExporter extends Exporter {\n  constructor(source, options) {\n    super(source, options);\n    // Data\n    this._data = source;\n    this._version = options.miewVersion || '0.0-UNSPECIFIED';\n    this._extractor = new FBXInfoExtractor();\n  }\n\n  /**\n   * Entry point to exporter.\n   */\n  exportSync() {\n    // Creating mandatory blocks\n    const result = new FBXResult();\n    if (!this._source) {\n      return this._result;\n    }\n\n    const info = this._extractor.process(this._data);\n    info.version = this._version;\n    this._result = result.getResult(info);\n    return this._result;\n  }\n}\n\nFBXExporter.formats = ['fbx'];\nFBXExporter.SourceClass = ComplexVisual;\n","import ExporterList from './exporters/ExporterList';\n\nimport PDBExporter from './exporters/PDBExporter';\nimport FBXExporter from './exporters/FBXExporter';\n\nexport default new ExporterList([\n  PDBExporter,\n  FBXExporter,\n]);\n","import * as THREE from 'three';\nimport Timer from '../Timer';\nimport settings from '../settings';\nimport EventDispatcher from '../utils/EventDispatcher';\n\nconst VK_LEFT = 37;\nconst VK_UP = 38;\nconst VK_RIGHT = 39;\nconst VK_DOWN = 40;\n\nconst STATE = {\n  NONE: -1, ROTATE: 0, TRANSLATE: 1, SCALE: 2, TRANSLATE_PIVOT: 3,\n};\n\n// pausing for this amount of time before releasing mouse button prevents inertial rotation (seconds)\nconst FULL_STOP_THRESHOLD = 0.1;\n\nconst quaternion = new THREE.Quaternion();\nconst matrix4 = new THREE.Matrix4();\n\n// pivot -- local offset of the rotation pivot point\nfunction ObjectHandler(objects, camera, pivot, options) {\n  this.objects = objects;\n  [this.object] = objects;\n  this.camera = camera;\n  this.pivot = pivot;\n  this.axis = new THREE.Vector3(0, 0, 1);\n  this.options = options;\n\n  this.lastRotation = {\n    axis: new THREE.Vector3(),\n    angle: 0.0,\n  };\n}\n\nObjectHandler.prototype._rotate = (function () {\n  const p = new THREE.Vector3();\n  const q = new THREE.Quaternion();\n  const s = new THREE.Vector3();\n\n  const m = new THREE.Matrix4();\n\n  return function (quat) {\n    const zeroPivot = (this.pivot.x === 0.0 && this.pivot.y === 0.0 && this.pivot.z === 0.0);\n\n    m.copy(this.object.matrix);\n\n    if (zeroPivot) {\n      m.multiply(matrix4.makeRotationFromQuaternion(quat));\n    } else {\n      m.multiply(matrix4.makeTranslation(this.pivot.x, this.pivot.y, this.pivot.z));\n      m.multiply(matrix4.makeRotationFromQuaternion(quat));\n      m.multiply(matrix4.makeTranslation(-this.pivot.x, -this.pivot.y, -this.pivot.z));\n    }\n\n    m.decompose(p, q, s);\n\n    // update objects\n    if (!zeroPivot) {\n      for (let i = 0; i < this.objects.length; ++i) {\n        this.objects[i].position.copy(p);\n      }\n    }\n\n    for (let j = 0; j < this.objects.length; ++j) {\n      this.objects[j].quaternion.copy(q);\n      this.objects[j].updateMatrix();\n    }\n  };\n}());\n\nObjectHandler.prototype.setObjects = function (objects) {\n  this.objects = objects;\n  [this.object] = objects;\n};\n\nObjectHandler.prototype.rotate = (function () {\n  const rot = {\n    axis: new THREE.Vector3(),\n    angle: 0.0,\n  };\n\n  return function (quat, mousePrevPos, mouseCurPos, aboutAxis) {\n    this.mouse2rotation(rot, mousePrevPos, mouseCurPos, aboutAxis);\n    quat.setFromAxisAngle(rot.axis, rot.angle);\n\n    if (rot.angle) {\n      this._rotate(quat);\n    }\n\n    this.lastRotation = rot;\n  };\n}());\n\nObjectHandler.prototype.translate = (function () {\n  const dir = new THREE.Vector3();\n  const pivot = new THREE.Vector3();\n\n  return function (delta) {\n    // reverse-project viewport movement to view coords (compensate for screen aspect ratio)\n    dir.set(\n      delta.x / this.camera.projectionMatrix.elements[0],\n      delta.y / this.camera.projectionMatrix.elements[5], 0,\n    );\n    let dist = dir.length();\n    dir.normalize();\n\n    // transform movement direction to object local coords\n    dir.transformDirection(matrix4.copy(this.object.matrixWorld).invert());\n\n    // visible translate distance shouldn't depend on camera-to-object distance\n    pivot.copy(this.pivot);\n    this.object.localToWorld(pivot);\n    dist *= Math.abs(pivot.z - this.camera.position.z);\n\n    // visible translate distance shouldn't depend on object scale\n    dist /= this.object.matrixWorld.getMaxScaleOnAxis();\n\n    // all objects are translated similar to principal object\n    // (we assume they all have identical pivot and scale)\n    for (let i = 0; i < this.objects.length; ++i) {\n      this.objects[i].translateOnAxis(dir, dist);\n    }\n  };\n}());\n\nObjectHandler.prototype.update = (function () {\n  const axis = new THREE.Vector3();\n\n  return function (timeSinceLastUpdate, timeSinceMove) {\n    if (settings.now.autoRotation !== 0.0) {\n      // auto-rotation with constant speed\n\n      // if rotation axis is fixed or hasn't been defined yet\n      if (settings.now.autoRotationAxisFixed || this.lastRotation.axis.length() === 0.0) {\n        // use Y-axis (transformed to local object coords)\n        axis.set(0, 1, 0).transformDirection(matrix4.copy(this.object.matrixWorld).invert());\n      } else {\n        // use axis defined by last user rotation\n        axis.copy(this.lastRotation.axis);\n      }\n\n      this._rotate(quaternion.setFromAxisAngle(axis, settings.now.autoRotation * timeSinceLastUpdate));\n      return true;\n    }\n\n    if (this.options.intertia && this.lastRotation.angle) {\n      // inertial object rotation\n      const angle = this.lastRotation.angle * ((1.0 - this.options.dynamicDampingFactor) ** (40.0 * timeSinceMove));\n\n      if (Math.abs(angle) <= this.options.intertiaThreshold) {\n        this.lastRotation.angle = 0.0;\n      } else {\n        this._rotate(quaternion.setFromAxisAngle(this.lastRotation.axis, angle));\n        return true;\n      }\n    }\n\n    return false;\n  };\n}());\n\nObjectHandler.prototype.stop = function () {\n  this.lastRotation.angle = 0.0;\n};\n\n// calculate (axis, angle) pair from mouse/touch movement\nObjectHandler.prototype.mouse2rotation = (function () {\n  const center = new THREE.Vector3();\n\n  const eye = new THREE.Vector3();\n  const eyeDirection = new THREE.Vector3();\n\n  const cameraUpDirection = new THREE.Vector3();\n  const cameraSidewaysDirection = new THREE.Vector3();\n\n  const moveDirection = new THREE.Vector3();\n\n  const mouseDelta = new THREE.Vector2();\n\n  return function (rot, mousePrev, mouseCur, aboutAxis) {\n    if (aboutAxis) {\n      rot.axis.copy(this.axis);\n      rot.angle = this.options.axisRotateFactor * (mouseCur.y - mousePrev.y);\n\n      /* cool method that allows rotation around Z axis to be \"tied\" to mouse cursor\n\n        res.axis.copy(this.axis);\n\n        var pivot = this.pivot.clone();\n        this.object.localToWorld(pivot);\n        pivot.project(this.camera);\n\n        var v1 = new THREE.Vector3(mousePrev.x, mousePrev.y, this.camera.position.z);\n        v1.sub(pivot);\n        var v2 = new THREE.Vector3(mouseCur.x, mouseCur.y, this.camera.position.z);\n        v2.sub(pivot);\n\n        v1.sub(res.axis.clone().multiplyScalar(v1.dot(res.axis)));\n        v2.sub(res.axis.clone().multiplyScalar(v2.dot(res.axis)));\n\n        var abs = v1.length() * v2.length();\n        if (abs > 0) {\n          res.angle = res.axis.dot(v1.cross(v2)) / abs;\n        }\n      */\n    } else {\n      mouseDelta.subVectors(mouseCur, mousePrev);\n      const angle = mouseDelta.length();\n      if (angle === 0.0) {\n        return;\n      }\n\n      center.copy(this.pivot);\n      this.object.localToWorld(center);\n      eye.subVectors(this.camera.position, center);\n      eyeDirection.copy(eye).normalize();\n\n      cameraUpDirection.copy(this.camera.up).normalize();\n      cameraSidewaysDirection.crossVectors(cameraUpDirection, eyeDirection).normalize();\n\n      cameraUpDirection.setLength(mouseDelta.y);\n      cameraSidewaysDirection.setLength(mouseDelta.x);\n\n      moveDirection.copy(cameraUpDirection.add(cameraSidewaysDirection));\n\n      rot.axis.crossVectors(moveDirection, eye);\n\n      rot.angle = -angle * this.options.rotateFactor;\n    }\n\n    rot.axis.transformDirection(matrix4.copy(this.object.matrixWorld).invert());\n\n    // make sure angle is always positive (thus 'axis' defines both axis and direction of rotation)\n    if (rot.angle < 0.0) {\n      rot.axis.negate();\n      rot.angle = -rot.angle;\n    }\n  };\n}());\n\nfunction ObjectControls(object, objectPivot, camera, domElement, getAltObj) {\n  EventDispatcher.call(this);\n  const self = this;\n\n  this.object = object;\n  this.objectPivot = objectPivot;\n  this.camera = camera;\n  this.domElement = (typeof domElement !== 'undefined') ? domElement : document;\n  this.getAltObj = getAltObj;\n\n  // API\n\n  this.enabled = true;\n  this.hotkeysEnabled = true;\n\n  this.screen = {\n    left: 0, top: 0, width: 0, height: 0,\n  };\n\n  this.options = {\n    rotateFactor: Math.PI, // full screen slide (along short side) would roughly mean 180 deg. rotation\n    axisRotateFactor: 4 * Math.PI, // full screen slide (along short side) would roughly mean 720 deg. rotation\n    intertia: true,\n    dynamicDampingFactor: 0.1,\n    intertiaThreshold: 1e-3,\n  };\n\n  // internals\n\n  this._state = STATE.NONE;\n\n  this._mousePrevPos = new THREE.Vector2();\n  this._mouseCurPos = new THREE.Vector2();\n\n  this._mainObj = new ObjectHandler([this.object], this.camera, new THREE.Vector3(0, 0, 0), this.options);\n  this._altObj = new ObjectHandler([this.object], this.camera, new THREE.Vector3(0, 0, 0), this.options);\n  this._affectedObj = this._mainObj;\n  this._isAltObjFreeRotationAllowed = true;\n  this._isTranslationAllowed = true;\n  this._isKeysTranslatingObj = false;\n\n  this._pressedKeys = [];\n\n  this._clock = new Timer();\n  this._clock.start();\n  this._lastUpdateTime = this._clock.getElapsedTime();\n\n  // events\n  this._listeners = [\n    {\n      obj: self.domElement,\n      type: 'mousedown',\n      handler(e) {\n        self.mousedown(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'mouseup',\n      handler(e) {\n        self.mouseup(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'mousemove',\n      handler(e) {\n        self.mousemove(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'mousewheel',\n      handler(e) {\n        self.mousewheel(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'DOMMouseScroll',\n      handler(e) {\n        self.mousewheel(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'mouseout',\n      handler(e) {\n        self.mouseup(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'touchstart',\n      handler(e) {\n        self.touchstartend(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'touchend',\n      handler(e) {\n        self.touchstartend(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'touchmove',\n      handler(e) {\n        self.touchmove(e);\n      },\n    },\n    {\n      obj: self.getKeyBindObject(),\n      type: 'keydown',\n      handler(e) {\n        self.keydownup(e);\n      },\n    },\n    {\n      obj: self.getKeyBindObject(),\n      type: 'keyup',\n      handler(e) {\n        self.keydownup(e);\n      },\n    },\n    {\n      obj: window,\n      type: 'resize',\n      handler() {\n        self.handleResize();\n      },\n    },\n    {\n      obj: window,\n      type: 'blur',\n      handler() {\n        self.resetKeys();\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'contextmenu',\n      handler(e) {\n        self.contextmenu(e);\n      },\n    }];\n\n  for (let i = 0; i < this._listeners.length; i++) {\n    const l = this._listeners[i];\n    l.obj.addEventListener(l.type, l.handler);\n  }\n\n  this.handleResize();\n\n  this.resetKeys();\n\n  // force an update at start\n  this.update();\n}\n\n// methods\n\nObjectControls.prototype = Object.create(EventDispatcher.prototype);\nObjectControls.prototype.constructor = ObjectControls;\n\nObjectControls.prototype.resetKeys = function () {\n  this._pressedKeys[VK_LEFT] = false;\n  this._pressedKeys[VK_UP] = false;\n  this._pressedKeys[VK_RIGHT] = false;\n  this._pressedKeys[VK_DOWN] = false;\n};\n\nObjectControls.prototype.contextmenu = function (e) {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nObjectControls.prototype.handleResize = function () {\n  if (this.domElement === document) {\n    this.screen.left = 0;\n    this.screen.top = 0;\n    this.screen.width = window.innerWidth;\n    this.screen.height = window.innerHeight;\n  } else {\n    const box = this.domElement.getBoundingClientRect();\n    // adjustments come from similar code in the jquery offset() function\n    const d = this.domElement.ownerDocument.documentElement;\n    this.screen.left = box.left + window.pageXOffset - d.clientLeft;\n    this.screen.top = box.top + window.pageYOffset - d.clientTop;\n    this.screen.width = box.width;\n    this.screen.height = box.height;\n  }\n};\n\nObjectControls.prototype.enable = function (enable) {\n  this.enabled = enable;\n};\n\nObjectControls.prototype.enableHotkeys = function (enable) {\n  this.hotkeysEnabled = enable;\n};\n\nObjectControls.prototype.allowTranslation = function (allow) {\n  this._isTranslationAllowed = allow;\n};\n\nObjectControls.prototype.allowAltObjFreeRotation = function (allow) {\n  this._isAltObjFreeRotationAllowed = allow;\n};\n\nObjectControls.prototype.keysTranslateObj = function (on) {\n  this._isKeysTranslatingObj = on;\n};\n\nObjectControls.prototype.isEditingAltObj = function () {\n  return ((this._state === STATE.ROTATE) || (this._state === STATE.TRANSLATE))\n            && (this._affectedObj === this._altObj);\n};\n\n// convert page coords of mouse/touch to uniform coords with smaller side being [-0.5, 0.5]\n// (uniform coords keep direct proportion with screen distance travelled by mouse regardless of screen aspect ratio)\nObjectControls.prototype.convertMouseToOnCircle = function (coords, pageX, pageY) {\n  const screenSize = Math.min(this.screen.width, this.screen.height);\n\n  if (screenSize === 0) {\n    coords.set(0, 0);\n    return;\n  }\n\n  coords.set(\n    ((pageX - this.screen.width * 0.5 - this.screen.left) / screenSize),\n    ((0.5 * this.screen.height + this.screen.top - pageY) / screenSize),\n  );\n};\n\n// convert page coords of mouse/touch to viewport coords with both sides being [-1, 1]\n// (those are non-uniform coords affected by screen aspect ratio)\nObjectControls.prototype.convertMouseToViewport = function (coords, pageX, pageY) {\n  if (this.screen.width === 0 || this.screen.height === 0) {\n    coords.set(0, 0);\n    return;\n  }\n\n  coords.set(\n    (2.0 * (pageX - this.screen.width * 0.5 - this.screen.left) / this.screen.width),\n    (2.0 * (0.5 * this.screen.height + this.screen.top - pageY) / this.screen.height),\n  );\n};\n\nObjectControls.prototype.stop = function () {\n  this._mainObj.stop();\n  this._altObj.stop();\n};\n\n// rotate object based on latest mouse/touch movement\nObjectControls.prototype.rotateByMouse = (function () {\n  const quat = new THREE.Quaternion();\n\n  return function (aboutZAxis) {\n    this._affectedObj.rotate(quat, this._mousePrevPos, this._mouseCurPos, aboutZAxis);\n    this.dispatchEvent({ type: 'change', action: 'rotate', quaternion: quat });\n  };\n}());\n\n// rotate object by specified quaternion\nObjectControls.prototype.rotate = function (quat) {\n  this.object.quaternion.multiply(quat);\n  this.dispatchEvent({ type: 'change', action: 'rotate', quaternion: quat });\n};\n\n// get object's orientation\nObjectControls.prototype.getOrientation = function () {\n  return this.object.quaternion;\n};\n\n// set object's orientation\nObjectControls.prototype.setOrientation = function (quat) {\n  this.object.quaternion.copy(quat);\n};\n\n// translate object based on latest mouse/touch movement\nObjectControls.prototype.translate = (function () {\n  const delta = new THREE.Vector2();\n  return function () {\n    delta.subVectors(this._mouseCurPos, this._mousePrevPos);\n    this._affectedObj.translate(delta);\n    this.dispatchEvent({ type: 'change', action: 'translate' });\n  };\n}());\n\n// get object scale\nObjectControls.prototype.getScale = function () {\n  return this.object.scale.x;\n};\n\n// set uniform object scale\nObjectControls.prototype.setScale = function (scale) {\n  this.object.scale.set(scale, scale, scale);\n};\n\n// scale object by factor (factor should be greater than zero)\nObjectControls.prototype.scale = function (factor) {\n  if (factor <= 0) {\n    return;\n  }\n  this.setScale(this.object.scale.x * factor);\n  this.dispatchEvent({ type: 'change', action: 'zoom', factor });\n};\n\nObjectControls.prototype.update = (function () {\n  const shift = new THREE.Vector2();\n\n  return function () {\n    const curTime = this._clock.getElapsedTime();\n    const timeSinceLastUpdate = curTime - this._lastUpdateTime;\n\n    // update object handler\n    if (this._state === STATE.NONE) {\n      const timeSinceMove = curTime - this._lastMouseMoveTime;\n      if (this._mainObj.update(timeSinceLastUpdate, timeSinceMove)\n        || this._altObj.update(timeSinceLastUpdate, timeSinceMove)) {\n        this.dispatchEvent({ type: 'change', action: 'auto' });\n      }\n    }\n\n    // apply arrow keys\n    if (this._isKeysTranslatingObj) {\n      const speedX = Number(this._pressedKeys[VK_RIGHT]) - Number(this._pressedKeys[VK_LEFT]);\n      const speedY = Number(this._pressedKeys[VK_UP]) - Number(this._pressedKeys[VK_DOWN]);\n      if (speedX !== 0.0 || speedY !== 0.0) {\n        const delta = timeSinceLastUpdate;\n\n        // update object translation\n        const altObj = this.getAltObj();\n        if (altObj.objects.length > 0) {\n          this._altObj.setObjects(altObj.objects);\n          this._altObj.pivot = altObj.pivot;\n\n          if ('axis' in altObj) {\n            this._altObj.axis = altObj.axis.clone();\n          } else {\n            this._altObj.axis.set(0, 0, 1);\n          }\n\n          shift.set(delta * speedX, delta * speedY);\n          this._altObj.translate(shift);\n          this.dispatchEvent({ type: 'change', action: 'translate' });\n        }\n      }\n    }\n\n    this._lastUpdateTime = curTime;\n  };\n}());\n\nObjectControls.prototype.reset = function () {\n  this._state = STATE.NONE;\n\n  this.object.quaternion.copy(quaternion.set(0, 0, 0, 1));\n};\n\n// listeners\n\nObjectControls.prototype.mousedown = function (event) {\n  if (this.enabled === false || this._state !== STATE.NONE) {\n    return;\n  }\n\n  event.preventDefault();\n  event.stopPropagation();\n\n  if (this._state === STATE.NONE) {\n    if (event.button === 0) {\n      this._affectedObj.stop(); // can edit only one object at a time\n\n      let workWithAltObj = false;\n\n      if (event.altKey) {\n        const altObj = this.getAltObj();\n        workWithAltObj = (altObj.objects.length > 0);\n        if (workWithAltObj) {\n          this._altObj.setObjects(altObj.objects);\n          this._altObj.pivot = altObj.pivot;\n\n          if ('axis' in altObj) {\n            this._altObj.axis = altObj.axis.clone();\n          } else {\n            this._altObj.axis.set(0, 0, 1);\n          }\n        }\n      }\n\n      this._affectedObj = workWithAltObj ? this._altObj : this._mainObj;\n\n      this._state = (workWithAltObj && event.ctrlKey && this._isTranslationAllowed) ? STATE.TRANSLATE : STATE.ROTATE;\n    } else if (event.button === 2) {\n      this._state = STATE.TRANSLATE_PIVOT;\n    }\n  }\n\n  if (this._state === STATE.ROTATE) {\n    this.convertMouseToOnCircle(this._mouseCurPos, event.pageX, event.pageY);\n    this._mousePrevPos.copy(this._mouseCurPos);\n  }\n\n  if (this._state === STATE.TRANSLATE || this._state === STATE.TRANSLATE_PIVOT) {\n    this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY);\n    this._mousePrevPos.copy(this._mouseCurPos);\n  }\n};\n\nObjectControls.prototype.mousemove = function (event) {\n  if (this.enabled === false || this._state === STATE.NONE) {\n    return;\n  }\n\n  event.preventDefault();\n  event.stopPropagation();\n\n  switch (this._state) {\n    case STATE.ROTATE:\n      this._mousePrevPos.copy(this._mouseCurPos);\n      this.convertMouseToOnCircle(this._mouseCurPos, event.pageX, event.pageY);\n      this.rotateByMouse((event.altKey && !this._isAltObjFreeRotationAllowed) || event.shiftKey);\n      this._lastMouseMoveTime = this._clock.getElapsedTime();\n      break;\n\n    case STATE.TRANSLATE:\n      this._mousePrevPos.copy(this._mouseCurPos);\n      this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY);\n      this.translate();\n      break;\n\n    case STATE.TRANSLATE_PIVOT:\n      this._mousePrevPos.copy(this._mouseCurPos);\n      this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY);\n      this.translatePivotByMouse();\n      break;\n\n    default: break;\n  }\n};\n\nObjectControls.prototype.mousewheel = function (event) {\n  if (this.enabled === false || !settings.now.zooming || this._state !== STATE.NONE || event.shiftKey) {\n    return;\n  }\n\n  event.preventDefault();\n\n  let delta = 0;\n\n  if (event.wheelDelta) {\n    // WebKit / Opera / Explorer 9\n    delta = event.wheelDelta / 40;\n  } else if (event.detail) {\n    // Firefox\n    delta = -event.detail / 3;\n  }\n\n  let factor = 1.0 + delta * 0.05;\n  factor = Math.max(factor, 0.01);\n  this.scale(factor);\n};\n\nObjectControls.prototype.mouseup = function (event) {\n  if (this.enabled === false || this._state === STATE.NONE) {\n    return;\n  }\n\n  event.preventDefault();\n  event.stopPropagation();\n\n  this._state = STATE.NONE;\n\n  if (this._clock.getElapsedTime() - this._lastMouseMoveTime > FULL_STOP_THRESHOLD) {\n    this._affectedObj.stop();\n  }\n};\n\nObjectControls.prototype.touchstartend = function (event) {\n  if (this.enabled === false) {\n    return;\n  }\n\n  event.preventDefault();\n  event.stopPropagation();\n\n  switch (event.touches.length) {\n    case 1:\n      this._state = STATE.ROTATE;\n      this.convertMouseToOnCircle(this._mouseCurPos, event.touches[0].pageX, event.touches[0].pageY);\n      this._mousePrevPos.copy(this._mouseCurPos);\n      break;\n\n    case 2: {\n      // prevent inertial rotation\n      this._mainObj.stop();\n      this._altObj.stop();\n\n      this._state = STATE.SCALE;\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      this._touchDistanceCur = this._touchDistanceStart = Math.sqrt(dx * dx + dy * dy);\n      this._scaleStart = this.object.scale.x;\n      break;\n    }\n\n    default:\n      this._state = STATE.NONE;\n  }\n};\n\nObjectControls.prototype.touchmove = function (event) {\n  if (this.enabled === false || this._state === STATE.NONE) {\n    return;\n  }\n\n  event.preventDefault();\n  event.stopPropagation();\n\n  switch (this._state) {\n    case STATE.ROTATE:\n      this._mousePrevPos.copy(this._mouseCurPos);\n      this.convertMouseToOnCircle(this._mouseCurPos, event.touches[0].pageX, event.touches[0].pageY);\n      this.rotateByMouse(false);\n\n      this._lastMouseMoveTime = this._clock.getElapsedTime();\n      break;\n\n    case STATE.SCALE:\n      if (settings.now.zooming) {\n        // update scale\n        const dx = event.touches[0].pageX - event.touches[1].pageX;\n        const dy = event.touches[0].pageY - event.touches[1].pageY;\n        this._touchDistanceCur = Math.sqrt(dx * dx + dy * dy);\n        const newScale = this._scaleStart * this._touchDistanceCur / this._touchDistanceStart;\n        const factor = newScale / this.object.scale.x;\n        this.scale(factor);\n      }\n      break;\n\n    default:\n  }\n};\n\nObjectControls.prototype.keydownup = function (event) {\n  if (this.enabled === false || this.hotkeysEnabled === false) {\n    return;\n  }\n\n  switch (event.keyCode) {\n    case VK_LEFT:\n    case VK_UP:\n    case VK_RIGHT:\n    case VK_DOWN:\n      this._pressedKeys[event.keyCode] = (event.type === 'keydown');\n      event.preventDefault();\n      event.stopPropagation();\n      break;\n    default:\n  }\n};\n\nObjectControls.prototype.getKeyBindObject = function () {\n  return window.top;\n};\n\nObjectControls.prototype.dispose = function () {\n  for (let i = 0; i < this._listeners.length; i++) {\n    const l = this._listeners[i];\n    l.obj.removeEventListener(l.type, l.handler);\n  }\n};\n\nObjectControls.prototype.translatePivotByMouse = (function () {\n  const delta = new THREE.Vector2();\n  return function () {\n    delta.subVectors(this._mouseCurPos, this._mousePrevPos);\n    this.translatePivotInWorld(settings.now.translationSpeed * delta.x, settings.now.translationSpeed * delta.y, 0);\n  };\n}());\n\n// Translate in WorldCS, translation is scaled with root scale matrix\nObjectControls.prototype.translatePivotInWorld = function (x, y, z) {\n  const pos = this.objectPivot.position;\n  pos.applyMatrix4(this.object.matrixWorld);\n  pos.setX(pos.x + x);\n  pos.setY(pos.y + y);\n  pos.setZ(pos.z + z);\n  pos.applyMatrix4(matrix4.copy(this.object.matrixWorld).invert());\n\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' });\n};\n\n// Translate in ModelCS, x, y, z are Ang\nObjectControls.prototype.translatePivot = function (x, y, z) {\n  const pos = this.objectPivot.position;\n  pos.setX(pos.x + x);\n  pos.setY(pos.y + y);\n  pos.setZ(pos.z + z);\n\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' });\n};\n\n// Set pivot\nObjectControls.prototype.setPivot = function (newPivot) {\n  this.objectPivot.position.copy(newPivot);\n\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' });\n};\n\nexport default ObjectControls;\n","import loaders from './loaders';\nimport parsers from './parsers';\nimport exporters from './exporters';\n\nexport default {\n  loaders,\n  parsers,\n  exporters,\n};\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport * as THREE from 'three';\nimport CSS2DObject from './CSS2DObject';\n\nconst tempColor = new THREE.Color();\n\nclass CSS2DRenderer {\n  constructor() {\n    this._width = 0;\n    this._height = 0;\n    this._widthHalf = 0;\n    this._heightHalf = 0;\n\n    this._vector = new THREE.Vector3();\n    this._viewMatrix = new THREE.Matrix4();\n    this._projectionMatrix = new THREE.Matrix4();\n\n    this._domElement = document.createElement('div');\n    this._domElement.style.overflow = 'hidden';\n    this._domElement.style.position = 'absolute';\n    this._domElement.style.top = '0';\n    this._domElement.style.zIndex = '0'; // start a new Stacking Context to enclose all z-ordered children\n    this._domElement.style.pointerEvents = 'none';\n  }\n\n  getElement() {\n    return this._domElement;\n  }\n\n  reset() {\n    const myNode = this.getElement();\n    while (myNode.firstChild) {\n      myNode.removeChild(myNode.firstChild);\n    }\n  }\n\n  setSize(width, height) {\n    this._width = width;\n    this._height = height;\n\n    this._widthHalf = this._width / 2;\n    this._heightHalf = this._height / 2;\n\n    this._domElement.style.width = `${width}px`;\n    this._domElement.style.height = `${height}px`;\n  }\n\n  _renderObject(object, camera, scene) {\n    function lerpColorAsHex(a, b, t) {\n      tempColor.setHex(a);\n      tempColor.lerp(b, t);\n      return `#${tempColor.getHexString()}`;\n    }\n\n    function colorAsHex(a) {\n      tempColor.setHex(a);\n      return `#${tempColor.getHexString()}`;\n    }\n\n    if (object instanceof CSS2DObject) {\n      this._vector.setFromMatrixPosition(object.matrixWorld);\n\n      if (object.userData !== undefined && object.userData.offset !== undefined) {\n        const localOffset = new THREE.Vector3(object.userData.offset.x, object.userData.offset.y, 0);\n        this._vector.add(localOffset.multiplyScalar(object.matrixWorld.getMaxScaleOnAxis()));\n      }\n\n      this._vector.applyMatrix4(this._viewMatrix);\n\n      const visibility = this._vector.z > -camera.near ? 'hidden' : 'visible';\n      const zIndex = 10000 * (camera.far - (-this._vector.z)) / (camera.far - camera.near);\n\n      const element = object.getElement();\n      if (typeof scene.fog === 'undefined') {\n        element.style.color = colorAsHex(object.userData.color);\n        if (object.userData.background !== 'transparent') {\n          element.style.background = colorAsHex(object.userData.background);\n        }\n      } else {\n        const fogFactor = THREE.MathUtils.smoothstep(-this._vector.z, scene.fog.near, scene.fog.far);\n        element.style.color = lerpColorAsHex(object.userData.color, scene.fog.color, fogFactor);\n        if (object.userData.background !== 'transparent') {\n          element.style.background = lerpColorAsHex(object.userData.background, scene.fog.color, fogFactor);\n        }\n      }\n\n      this._vector.applyMatrix4(this._projectionMatrix);\n\n      const style = `${object.userData !== {} ? object.userData.translation : 'translate(-50%, -50%) '\n      }translate(${this._vector.x * this._widthHalf + this._widthHalf}px,${\n        -this._vector.y * this._heightHalf + this._heightHalf}px)`;\n      element.style.visibility = visibility;\n      element.style.WebkitTransform = style;\n      element.style.MozTransform = style;\n      element.style.oTransform = style;\n      element.style.transform = style;\n      element.style.zIndex = Number(zIndex).toFixed(0);\n\n      if (element.parentNode !== this._domElement) {\n        this._domElement.appendChild(element);\n      }\n    }\n\n    for (let i = 0, l = object.children.length; i < l; i++) {\n      this._renderObject(object.children[i], camera, scene);\n    }\n  }\n\n  render(scene, camera) {\n    scene.updateMatrixWorld();\n\n    if (camera.parent === null) {\n      camera.updateMatrixWorld();\n    }\n\n    camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n\n    this._viewMatrix.copy(camera.matrixWorldInverse);\n    this._projectionMatrix.copy(camera.projectionMatrix);\n\n    this._renderObject(scene, camera, scene);\n  }\n}\nexport default CSS2DRenderer;\n","import * as THREE from 'three';\nimport settings from '../settings';\nimport Timer from '../Timer';\nimport EventDispatcher from '../utils/EventDispatcher';\n\nfunction Picker(gfxObj, camera, domElement) {\n  EventDispatcher.call(this);\n  const self = this;\n\n  this.gfxObj = gfxObj;\n  this.camera = camera;\n  this.domElement = (typeof domElement !== 'undefined') ? domElement : document;\n  this.screen = {\n    left: 0, top: 0, width: 0, height: 0,\n  };\n  this._lastMousePos = new THREE.Vector2(0, 0);\n  this._mouseTotalDist = 0.0;\n  this._lastClickBeginTime = -1000.0;\n  this._lastClickPos = new THREE.Vector2(0, 0);\n  this._clickBeginTime = 0.0;\n\n  this._clock = new Timer();\n  this._clock.start();\n\n  this._listeners = [\n    {\n      obj: self.domElement,\n      type: 'mousedown',\n      handler(e) {\n        self.mousedown(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'mouseup',\n      handler(e) {\n        self.mouseup(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'mousemove',\n      handler(e) {\n        self.mousemove(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'touchstart',\n      handler(e) {\n        self.touchstart(e);\n      },\n    },\n    {\n      obj: self.domElement,\n      type: 'touchend',\n      handler(e) {\n        self.touchend(e);\n      },\n    },\n    {\n      obj: window,\n      type: 'resize',\n      handler() {\n        self.handleResize();\n      },\n    }];\n\n  for (let i = 0; i < this._listeners.length; i++) {\n    const l = this._listeners[i];\n    l.obj.addEventListener(l.type, l.handler);\n  }\n\n  this.handleResize();\n}\n\nPicker.prototype = Object.create(EventDispatcher.prototype);\nPicker.prototype.constructor = Picker;\n\nPicker.prototype.reset = function () {\n  this.picked = {};\n  this.dispatchEvent({ type: 'newpick', obj: {} });\n};\n\nPicker.prototype.handleResize = function () {\n  if (this.domElement === document) {\n    this.screen.left = 0;\n    this.screen.top = 0;\n    this.screen.width = window.innerWidth;\n    this.screen.height = window.innerHeight;\n  } else {\n    const box = this.domElement.getBoundingClientRect();\n    // adjustments come from similar code in the jquery offset() function\n    const d = this.domElement.ownerDocument.documentElement;\n    this.screen.left = box.left + window.pageXOffset - d.clientLeft;\n    this.screen.top = box.top + window.pageYOffset - d.clientTop;\n    this.screen.width = box.width;\n    this.screen.height = box.height;\n  }\n};\n\nPicker.prototype.pickObject = function (screenPos) {\n  if (!this.gfxObj) {\n    this.picked = {};\n    this.dispatchEvent({ type: 'newpick', obj: {} });\n    return;\n  }\n\n  const { gfxObj } = this;\n  const rayCaster = new THREE.Raycaster();\n  rayCaster.ray.origin.setFromMatrixPosition(this.camera.matrixWorld);\n  rayCaster.ray.direction.set(screenPos.x, screenPos.y, 0.5).unproject(this.camera).sub(rayCaster.ray.origin).normalize();\n\n  const clipPlane = (settings.now.draft.clipPlane && this.clipPlaneValue) ? this.clipPlaneValue : Infinity;\n  const fogFarPlane = (settings.now.fog && this.fogFarValue) ? this.fogFarValue : Infinity;\n  const point = rayCaster.intersectVisibleObject(gfxObj, this.camera, clipPlane, fogFarPlane);\n  if (!point) {\n    this.picked = {};\n    this.dispatchEvent({ type: 'newpick', obj: {} });\n    return;\n  }\n\n  let picked = {};\n  if (point.residue || point.atom) {\n    const residue = point.residue || point.atom.residue;\n    if (settings.now.pick === 'chain') {\n      picked = { chain: residue.getChain() };\n    } else if (settings.now.pick === 'molecule') {\n      picked = { molecule: residue.getMolecule() };\n    } else if (point.residue || settings.now.pick === 'residue') {\n      picked = { residue };\n    } else if (point.atom) {\n      picked = { atom: point.atom };\n    }\n  }\n  this.picked = picked;\n  this.dispatchEvent({ type: 'newpick', obj: picked });\n};\n\nPicker.prototype.getMouseInViewport = function (pageX, pageY) {\n  return new THREE.Vector2(\n    (pageX - this.screen.left) / this.screen.width * 2 - 1,\n    -(pageY - this.screen.top) / this.screen.height * 2 + 1,\n  );\n};\n\nPicker.prototype.mousedown = function (event) {\n  event.preventDefault();\n  event.stopPropagation();\n\n  if (event.button === 0) {\n    this._lastMousePos = this.getMouseInViewport(event.pageX, event.pageY);\n    this._mouseTotalDist = 0.0;\n    this._clickBeginTime = this._clock.getElapsedTime();\n  }\n};\n\nPicker.prototype.mousemove = function (event) {\n  event.preventDefault();\n  event.stopPropagation();\n\n  const pos = this.getMouseInViewport(event.pageX, event.pageY);\n  this._mouseTotalDist += pos.sub(this._lastMousePos).length();\n};\n\nPicker.prototype.mouseup = function (event) {\n  const self = this;\n\n  event.preventDefault();\n  event.stopPropagation();\n\n  if (event.button === 0) {\n    if (this._mouseTotalDist < 0.01) {\n      const curTime = this._clock.getElapsedTime();\n      const curPos = this.getMouseInViewport(event.pageX, event.pageY);\n\n      const timeSinceLastClickBegin = curTime - this._lastClickBeginTime;\n      if (timeSinceLastClickBegin < 0.7) {\n        const clickDist = new THREE.Vector2().subVectors(curPos, this._lastClickPos);\n        if (clickDist.length() < 0.01) {\n          // it's a double click\n          this.dispatchEvent({ type: 'dblclick', obj: this.picked });\n\n          this._lastClickPos = curPos;\n          this._lastClickBeginTime = -1000; // this click cannot serve as first click in double-click\n          return;\n        }\n      }\n\n      setTimeout(() => {\n        self.pickObject(curPos);\n      }, 0);\n\n      this._lastClickPos = curPos;\n      this._lastClickBeginTime = this._clickBeginTime;\n    }\n  }\n};\n\nPicker.prototype.touchstart = function (event) {\n  event.preventDefault();\n  event.stopPropagation();\n\n  if (event.touches.length === 1) {\n    this._lastTouchdownPos = this.getMouseInViewport(event.touches[0].pageX, event.touches[0].pageY);\n  }\n};\n\nPicker.prototype.touchend = function (event) {\n  const self = this;\n\n  event.preventDefault();\n  event.stopPropagation();\n\n  if (event.touches.length === 0\n        && event.changedTouches.length === 1) {\n    const pos = this.getMouseInViewport(event.changedTouches[0].pageX, event.changedTouches[0].pageY);\n    const dist = pos.sub(this._lastTouchdownPos).length();\n    if (dist < 0.01) {\n      setTimeout(() => {\n        self.pickObject(self._lastTouchdownPos);\n      }, 0);\n    }\n  }\n};\n\nPicker.prototype.dispose = function () {\n  for (let i = 0; i < this._listeners.length; i++) {\n    const l = this._listeners[i];\n    l.obj.removeEventListener(l.type, l.handler);\n  }\n};\n\nexport default Picker;\n","import * as THREE from 'three';\n\nclass Axes {\n  constructor(target, targetCamera) {\n    this._target = target;\n    this._targetCamera = targetCamera;\n    this._camera = new THREE.PerspectiveCamera(targetCamera.fov, targetCamera.aspect, 1, 100);\n    this._object = new THREE.AxesHelper(1);\n    this._scene = new THREE.Scene();\n    this._scene.add(this._object);\n    this._full = new THREE.Vector2();\n\n    this._update();\n  }\n\n  _update() {\n    const { fov } = this._targetCamera;\n    const camera = this._camera;\n    camera.aspect = this._targetCamera.aspect;\n    camera.setMinimalFov(fov);\n    camera.setDistanceToFit(1.0, fov);\n    camera.updateProjectionMatrix();\n\n    this._object.quaternion.copy(this._target.quaternion);\n  }\n\n  render(renderer) {\n    this._update();\n\n    renderer.getSize(this._full);\n    const width = this._full.width * 0.25;\n    const height = this._full.height * 0.25;\n\n    const { autoClear } = renderer;\n    renderer.autoClear = false;\n    renderer.setViewport(0.0, 0.0, width, height);\n    renderer.clear(false, true, false);\n    renderer.render(this._scene, this._camera);\n    renderer.setViewport(0, 0, this._full.width, this._full.height);\n    renderer.autoClear = autoClear;\n  }\n}\nexport default Axes;\n","import * as THREE from 'three';\nimport SecondaryStructureColorer from './colorers/SecondaryStructureColorer';\n\nconst cDataOffset = 12;\nconst cFirstMask = 0x0FFFFF00;\nconst cFirstShift = 8;\nconst cSecMask1 = 0x000000FF;\nconst cSecShift1 = 12;\nconst cSecMask2 = 0xFFF00000;\nconst cSecShift2 = 20;\nconst cThirdMask = 0x000FFFFF;\nconst cStrMask = 0xF0000000;\nconst cStrShift = 28;\nconst c219 = 1 << 19;\nconst c220 = 1 << 20;\n\nconst cHelixIdx = 1;\nconst cSheetIdx = 2;\nconst secTypes = ['helix', 'strand'];\nconst cSecNames = ['fs', 'ps', 'ns', 'us'];\n\nfunction _createSecondary(strArray, complex) {\n  const residues = complex._residues;\n  const nRes = residues.length;\n  const resid = new Uint8Array(nRes);\n\n  const atoms = complex._atoms;\n  for (let i = 0, n = strArray.length; i < n; ++i) {\n    const atom = atoms[i];\n    resid[atom.residue._index] = strArray[i];\n  }\n\n  const secondary = [];\n  let rIdx = 0;\n  while (rIdx < nRes) {\n    if (resid[rIdx] !== 0) {\n      const start = rIdx;\n      const val = resid[rIdx];\n      while (rIdx < nRes - 1 && resid[rIdx + 1] === val\n      && residues[rIdx].isConnected(residues[rIdx + 1])) {\n        ++rIdx;\n      }\n      secondary.push({ start, end: rIdx, type: secTypes[val - 1] });\n    }\n    ++rIdx;\n  }\n  return secondary;\n}\n\nfunction fromUInt20ToInt20(uint20) {\n  return uint20 >= c219 ? uint20 - c220 : uint20;\n}\n\nclass FrameInfo {\n  constructor(complex, payload, callbacks) {\n    this._complex = complex;\n    this._secondary = null;\n    this.isLoading = false;\n    this._framesRange = {\n      start: 0,\n      end: -1,\n    };\n    this.frameIsReady = false;\n    this._buffer = null;\n    this._frameRequest = null;\n    this._callbacks = callbacks;\n    if (typeof payload === 'function') {\n      this._framesRequestLength = 1;\n      this._downloadDataFn = payload;\n    } else {\n      this.parseBinaryData(payload, true);\n    }\n    this.reset();\n    this.setFrame(0);\n  }\n\n  _prepareBuffer(framesStart, framesEnd) {\n    if (framesStart === undefined || framesStart === null) {\n      framesStart = 0;\n    }\n    if (framesEnd === undefined || framesEnd === null) {\n      framesEnd = framesStart + this._framesRequestLength;\n    }\n    if (this._framesCount !== undefined) {\n      framesEnd = Math.min(this._framesCount - 1, framesEnd);\n    }\n    if (this._downloadDataFn) {\n      const self = this;\n      const onDone = function (data) {\n        self.isLoading = false;\n        if (self._callbacks && typeof self._callbacks.onLoadStatusChanged === 'function') {\n          self._callbacks.onLoadStatusChanged();\n        }\n        self._buffer = {\n          data,\n          state: 'ready',\n          start: framesStart,\n          end: framesEnd,\n        };\n        if (self._frameRequest !== null) {\n          const idx = self._frameRequest;\n          self._frameRequest = null;\n          self.setFrame(idx);\n        }\n      };\n      const onFail = function () {\n        self.isLoading = false;\n        if (self._callbacks && typeof self._callbacks.onError === 'function') {\n          self._callbacks.onError('Streaming failed');\n        }\n      };\n      if (!this._buffer) {\n        this._buffer = {};\n      }\n      this._buffer.state = 'downloading';\n      this.isLoading = true;\n      if (self._callbacks && typeof self._callbacks.onLoadStatusChanged === 'function') {\n        self._callbacks.onLoadStatusChanged();\n      }\n      this._downloadDataFn({ start: framesStart, end: framesEnd + 1 }, onDone, onFail);\n    }\n  }\n\n  _parseBuffer() {\n    if (this._buffer && this._buffer.state === 'ready') {\n      this._framesRange = {\n        start: this._buffer.start,\n        end: this._buffer.end,\n      };\n      this.parseBinaryData(this._buffer.data, false);\n      let _bufferRequestStart = (this._buffer.end + 1) % this._framesCount;\n      if (_bufferRequestStart >= this._framesCount) {\n        _bufferRequestStart = 0;\n      }\n      this._buffer = {\n        state: 'none',\n      };\n      this._prepareBuffer(_bufferRequestStart, _bufferRequestStart + this._framesRequestLength);\n      if (this._frameRequest !== null) {\n        const idx = this._frameRequest;\n        this._frameRequest = null;\n        this.setFrame(idx);\n      }\n    }\n  }\n\n  parseBinaryData(arrayBuffer) {\n    const dataView = new DataView(arrayBuffer);\n    let offset = 0;\n    const atomsCount = dataView.getUint32(offset, true);\n    offset += 4;\n    const framesCount = dataView.getUint32(offset, true);\n    this._framesCount = framesCount;\n    this._framesRange.end = this._framesRange.end > 0\n      ? Math.min(this._framesRange.end, framesCount - 1) : framesCount - 1;\n    offset += 4;\n    this._atomsCount = atomsCount;\n    const maxSize = 1024 * 1024; // 1 MB\n    this._framesRequestLength = Math.ceil(maxSize / (atomsCount * 8));\n    const chunkedFramesCount = this._framesRange.end - this._framesRange.start + 1;\n    if (atomsCount !== this._complex._atoms.length\n      || arrayBuffer.byteLength !== cDataOffset + chunkedFramesCount * atomsCount * 8) {\n      throw new Error();\n    }\n    const complex = this._complex;\n    let timeStep = dataView.getUint32(offset, true);\n    let iName = 0;\n    while (timeStep > 1000 && iName < cSecNames.length - 1) {\n      timeStep /= 1000;\n      ++iName;\n    }\n\n    this._timeStep = `${timeStep.toString()} ${cSecNames[iName]}`;\n    offset += 4;\n    const secondary = [];\n    const posData = new Float32Array(chunkedFramesCount * atomsCount * 3);\n    let coordIdx = 0;\n    const secondaryArr = new Int8Array(atomsCount);\n    for (let j = 0; j < chunkedFramesCount; ++j) {\n      for (let i = 0; i < atomsCount; ++i) {\n        const hiWord = dataView.getUint32(offset, true);\n        offset += 4;\n        const loWord = dataView.getUint32(offset, true);\n        offset += 4;\n        const str = (loWord & cStrMask) >>> cStrShift;\n        const x = fromUInt20ToInt20(((loWord & cFirstMask) >>> cFirstShift) >> 0);\n        const y = fromUInt20ToInt20((((loWord & cSecMask1) << cSecShift1)\n          | ((hiWord & cSecMask2) >>> cSecShift2)) >> 0);\n        const z = fromUInt20ToInt20((hiWord & cThirdMask) >> 0);\n        secondaryArr[i] = 0;\n        if (str > 0 && str < 4) {\n          secondaryArr[i] = cHelixIdx;\n        } else if (str === 4) {\n          secondaryArr[i] = cSheetIdx;\n        }\n        posData[coordIdx++] = x / 100;\n        posData[coordIdx++] = y / 100;\n        posData[coordIdx++] = z / 100;\n      }\n      secondary.push(_createSecondary(secondaryArr, complex));\n    }\n    this._secondaryData = secondary;\n    this._data = posData;\n  }\n\n  nextFrame() {\n    this.setFrame((this._currFrame + 1) % this._framesCount);\n  }\n\n  needsColorUpdate(colorer) {\n    return colorer instanceof SecondaryStructureColorer;\n  }\n\n  getAtomColor(colorer, atom) {\n    return colorer.getResidueColor(this._residues[atom.residue._index], this._complex);\n  }\n\n  getResidueColor(colorer, residue) {\n    return colorer.getResidueColor(this._residues[residue._index], this._complex);\n  }\n\n  _updateSecondary() {\n    let i;\n    const myResidues = this._residues;\n    let n = myResidues.length;\n    for (i = 0; i < n; ++i) {\n      myResidues[i]._secondary = null;\n    }\n    const sec = this._secondaryData[this._currFrame - this._framesRange.start];\n    for (i = 0, n = sec.length; i < n; ++i) {\n      const oldSec = sec[i];\n      const { start, end } = oldSec;\n      const nSec = {\n        _start: myResidues[start],\n        _end: myResidues[end],\n        type: oldSec.type,\n        generic: oldSec.generic,\n      };\n      for (let j = start; j <= end; ++j) {\n        myResidues[j]._secondary = nSec;\n      }\n    }\n  }\n\n  reset() {\n    const compRes = this._complex._residues;\n    const n = compRes.length;\n    this._residues = new Array(n);\n    const myResidues = this._residues;\n    const getSec = function () {\n      return this._secondary;\n    };\n    for (let i = 0; i < n; ++i) {\n      myResidues[i] = {\n        _type: compRes[i]._type,\n        _isValid: compRes[i]._isValid,\n        _controlPoint: null,\n        _wingVector: null,\n        _secondary: null,\n        getSecondary: getSec,\n      };\n    }\n  }\n\n  setFrame(frameIdx) {\n    this.frameIsReady = false;\n    if (frameIdx >= this._framesRange.start && frameIdx <= this._framesRange.end) {\n      this._currFrame = frameIdx;\n      this._cachedResidues = false;\n      this._updateSecondary();\n      this.frameIsReady = true;\n    } else {\n      this._frameRequest = frameIdx;\n      if (!this._buffer) {\n        this._prepareBuffer(frameIdx);\n      } else {\n        const self = this;\n        switch (this._buffer.state) {\n          case 'none':\n            this._prepareBuffer(frameIdx);\n            break;\n          case 'ready':\n            self._parseBuffer();\n            break;\n          default:\n            break;\n        }\n      }\n    }\n  }\n\n  disableEvents() {\n    this._callbacks = null;\n  }\n\n  /**\n   * Returns link to atom pos vector, clone it if needed\n   */\n\n  static _vec = new THREE.Vector3();\n\n  getAtomPos(atomIdx) {\n    const vec = FrameInfo._vec;\n    const self = this;\n    const data = self._data;\n    const idx = (self._atomsCount * (self._currFrame - self._framesRange.start) + atomIdx) * 3;\n    vec.set(data[idx], data[idx + 1], data[idx + 2]);\n    return vec;\n  }\n\n  getResidues() {\n    if (this._cachedResidues) {\n      return this._residues;\n    }\n    this._complex.updateToFrame(this);\n    return this._residues;\n  }\n}\nexport default FrameInfo;\n","import _ from 'lodash';\nimport settings from '../../settings';\nimport utils from '../../utils';\nimport gfxutils from '../gfxutils';\n\n/**\n * Create new scene object.\n *\n * @param {array=} params - Object required params.\n * @param {object=} opts - Options to override defaults with.\n *\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\n *   changes to the `opts` object. However, changes in defaults **will** affect the colorer after its creation.\n *\n * @exports SceneObject\n * @this SceneObject\n * @abstract\n * @constructor\n * @classdesc Basic class for all scene objects that are not reps.\n */\nclass SceneObject {\n  constructor(params, opts) {\n    if (this.constructor === SceneObject) {\n      throw new Error('Can not instantiate abstract class!');\n    }\n    /**\n     * Object's options inherited (prototyped) from defaults.\n     * @type {object}\n     */\n    this.params = params;\n    this.opts = _.merge(utils.deriveDeep(settings.now.objects[this.type], true), opts);\n    this.needsRebuild = false;\n    this._mesh = null;\n    this.id = null;\n  }\n\n  /**\n   * Get object identification, probably with options.\n   *  @returns {Object} field type contains type information, params - object's formal parameters,\n   * opts - changed options\n   * Options are returned if they were changed during or after object creation.\n   */\n  identify() {\n    const result = {\n      type: this.type,\n      params: this.params,\n    };\n    const diff = utils.objectsDiff(this.opts, settings.now.modes[this.id]);\n    if (!_.isEmpty(diff)) {\n      result.opts = diff;\n    }\n    return result;\n  }\n\n  toString() {\n    const paramsStr = `o=${this.type},${this.params.join(',')}`;\n    const optsStr = utils.compareOptionsWithDefaults(this.opts, settings.defaults.objects[this.type]);\n    return paramsStr + optsStr;\n  }\n\n  getGeometry() {\n    return this._mesh;\n  }\n\n  destroy() {\n    if (this._mesh) {\n      gfxutils.destroyObject(this._mesh);\n    }\n  }\n}\n\n/**\n * Scene object identifier.\n * @type {string}\n */\nSceneObject.prototype.type = '__';\n\nexport default SceneObject;\n","import * as THREE from 'three';\nimport SceneObject from './SceneObject';\nimport meshutils from '../meshutils';\nimport UberMaterial from '../shaders/UberMaterial';\nimport meshes from '../meshes/meshes';\nimport settings from '../../settings';\n\nclass LinesObj extends SceneObject {\n  constructor(params, opts) {\n    super(params, opts);\n    if (params.length < 2) {\n      throw new Error('Wrong number of argumets on line object creation!');\n    }\n    [this._id1, this._id2] = params;\n  }\n\n  _getAtomFromName(complex, atomId) {\n    const err = ' - Wrong atom format it must be \\'#CHAIN_NAME.#RESIDUE_NUMBER.#ATOM_NAME\\' (e.g. \\'A.38.CO1\\')';\n    const atom1 = complex.getAtomByFullname(atomId);\n    if (!atom1) {\n      throw new Error(atomId + err);\n    }\n    return atom1;\n  }\n\n  build(complex) {\n    const geom = new THREE.BufferGeometry();\n    this._atom1 = this._getAtomFromName(complex, this._id1);\n    this._atom2 = this._getAtomFromName(complex, this._id2);\n\n    const p1 = this._atom1.position;\n    const p2 = this._atom2.position;\n    const vertices = new Float32Array([\n      p1.x, p1.y, p1.z,\n      p2.x, p2.y, p2.z,\n    ]);\n\n    geom.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    geom.computeBoundingBox();\n\n    this._line = new meshes.Line(geom, new UberMaterial({\n      lights: false,\n      overrideColor: true,\n      dashedLine: true,\n      fogTransparent: settings.now.bg.transparent,\n    }));\n    this._line.computeLineDistances();\n    this._line.material.setUberOptions({\n      fixedColor: new THREE.Color(this.opts.color),\n      dashedLineSize: this.opts.dashSize,\n      dashedLinePeriod: this.opts.dashSize + this.opts.gapSize,\n    });\n    this._line.material.updateUniforms();\n\n    this._line.raycast = function (_raycaster, _intersects) {};\n    this._mesh = this._line;\n    const transforms = complex.getTransforms();\n    if (transforms.length > 0) {\n      this._mesh = new THREE.Group();\n      this._mesh.add(this._line);\n      meshutils.applyTransformsToMeshes(this._mesh, transforms);\n    }\n  }\n\n  updateToFrame(frameData) {\n    if (!this._atom1 || !this._atom2 || !this._line) {\n      return;\n    }\n\n    const geo = this._line.geometry;\n    geo.vertices[0].copy(frameData.getAtomPos(this._atom1.index));\n    geo.vertices[1].copy(frameData.getAtomPos(this._atom2.index));\n    this._line.computeLineDistances();\n    geo.computeBoundingSphere();\n\n    geo.verticesNeedUpdate = true;\n  }\n}\n\nLinesObj.prototype.constructor = LinesObj;\nLinesObj.prototype.type = 'line';\n\nexport default LinesObj;\n","/* eslint-disable no-magic-numbers */\n/* eslint-disable guard-for-in */\nimport * as THREE from 'three';\nimport vertexShader from './ScreenQuad.vert';\nimport fragmentShader from './Outline.frag';\n\nclass OutlineMaterial extends THREE.RawShaderMaterial {\n  constructor(params) {\n    // add depth outline\n    super(params);\n\n    const settings = {\n      uniforms: {\n        srcTex: { type: 't', value: null },\n        srcDepthTex: { type: 't', value: null },\n        srcTexSize: { type: 'v2', value: new THREE.Vector2(512, 512) },\n        color: { type: 'v3', value: null },\n        threshold: { type: 'f', value: null },\n        opacity: { type: 'f', value: 1.0 },\n        thickness: { type: 'v2', value: new THREE.Vector2(1, 1) },\n      },\n      vertexShader,\n      fragmentShader,\n      transparent: true,\n      depthTest: false,\n      depthWrite: false,\n    };\n\n    this.setValues(settings);\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.depth = source.depth;\n  }\n\n  setValues(values) {\n    if (typeof values === 'undefined') {\n      return;\n    }\n\n    // set direct values\n    super.setValues(values);\n    const defines = {};\n\n    if (this.depth) {\n      defines.DEPTH_OUTLINE = 1;\n    }\n\n    // set dependent values\n    this.defines = defines;\n  }\n}\n\nOutlineMaterial.prototype.depth = false;\n\nexport default OutlineMaterial;\n","export default \"precision highp float;\\n\\nuniform sampler2D srcTex;\\nuniform vec2 srcTexSize;\\nuniform vec2 thickness;\\nvarying vec2 vUv;\\n\\n#ifdef DEPTH_OUTLINE\\n  uniform sampler2D srcDepthTex; //depthTexture\\n  uniform vec3 color;\\n  uniform float threshold;\\n#endif\\n\\nvoid main() {\\n\\n  vec2 pixelSize = thickness / srcTexSize;\\n\\n  #ifdef DEPTH_OUTLINE\\n    float c00 = texture2D(srcDepthTex, vUv + vec2(-pixelSize.x,-pixelSize.y)).x;\\n    float c01 = texture2D(srcDepthTex, vUv + vec2(0,-pixelSize.y)).x;\\n    float c02 = texture2D(srcDepthTex, vUv + vec2(pixelSize.x,-pixelSize.y)).x;\\n    float c10 = texture2D(srcDepthTex, vUv + vec2(-pixelSize.x,0)).x;\\n    float c12 = texture2D(srcDepthTex, vUv + vec2(pixelSize.x,0)).x;\\n    float c20 = texture2D(srcDepthTex, vUv + vec2(-pixelSize.x,pixelSize.y)).x;\\n    float c21 = texture2D(srcDepthTex, vUv + vec2(0,pixelSize.y)).x;\\n    float c22 = texture2D(srcDepthTex, vUv + vec2(pixelSize.x,pixelSize.y)).x;\\n\\n    float horizEdge = - c00 - 2.0 * c01 - c02 + c20 + 2.0 * c21 + c22;\\n    float vertEdge  = - c00 - 2.0 * c10 - c20 + c02 + 2.0 * c12 + c22;\\n\\n    float grad = sqrt(horizEdge * horizEdge + vertEdge * vertEdge);\\n\\n    gl_FragColor = ( grad > threshold ) ? vec4(color.rgb, 1.0) : gl_FragColor = texture2D(srcTex, vUv);\\n\\n  #else\\n    vec4 c00 = texture2D(srcTex, vUv + vec2(-pixelSize.x,-pixelSize.y));\\n    vec4 c01 = texture2D(srcTex, vUv + vec2(0,-pixelSize.y));\\n    vec4 c02 = texture2D(srcTex, vUv + vec2(pixelSize.x,-pixelSize.y));\\n    vec4 c10 = texture2D(srcTex, vUv + vec2(-pixelSize.x,0));\\n    vec4 c12 = texture2D(srcTex, vUv + vec2(pixelSize.x,0));\\n    vec4 c20 = texture2D(srcTex, vUv + vec2(-pixelSize.x,pixelSize.y));\\n    vec4 c21 = texture2D(srcTex, vUv + vec2(0,pixelSize.y));\\n    vec4 c22 = texture2D(srcTex, vUv + vec2(pixelSize.x,pixelSize.y));\\n\\n    vec4 horizEdge = - c00 - 2.0 * c01 - c02 + c20 + 2.0 * c21 + c22;\\n    vec4 vertEdge  = - c00 - 2.0 * c10 - c20 + c02 + 2.0 * c12 + c22;\\n\\n    vec4 grad = sqrt(horizEdge * horizEdge + vertEdge * vertEdge);\\n    gl_FragColor = grad;\\n  #endif\\n}\\n\";","/* eslint-disable no-magic-numbers */\n/* eslint-disable guard-for-in */\nimport * as THREE from 'three';\nimport vertexShader from './ScreenQuad.vert';\nimport fragmentShader from './FXAA.frag';\n\nclass FXAAMaterial extends THREE.RawShaderMaterial {\n  constructor(params) {\n    super(params);\n\n    // set default values\n    this.setValues.call(this, {\n      uniforms: {\n        srcTex: { type: 't', value: null },\n        srcTexelSize: { type: 'v2', value: new THREE.Vector2(1.0 / 512.0, 1.0 / 512.0) },\n        bgColor: { type: 'c', value: new THREE.Color(0xffffff) },\n      },\n      vertexShader,\n      fragmentShader,\n      transparent: false,\n      depthTest: false,\n      depthWrite: false,\n    });\n\n    this.setValues(params);\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.depth = source.depth;\n  }\n\n  setValues(values) {\n    if (typeof values === 'undefined') {\n      return;\n    }\n\n    // set direct values\n    super.setValues(values);\n\n    const defines = {};\n\n    if (this.bgTransparent) {\n      defines.BG_TRANSPARENT = 1;\n    }\n    // set dependent values\n    this.defines = defines;\n  }\n}\n\nFXAAMaterial.prototype.bgTransparent = false;\n\nexport default FXAAMaterial;\n","export default \"precision highp float;\\n\\n// edge end finding algorithm parameters\\n#define FXAA_QUALITY_PS 8\\n#define FXAA_QUALITY_P0 1.0\\n#define FXAA_QUALITY_P1 1.5\\n#define FXAA_QUALITY_P2 2.0\\n#define FXAA_QUALITY_P3 2.0\\n#define FXAA_QUALITY_P4 2.0\\n#define FXAA_QUALITY_P5 2.0\\n#define FXAA_QUALITY_P6 4.0\\n#define FXAA_QUALITY_P7 12.0\\n// constants\\nfloat fxaaQualityEdgeThreshold = 0.125;\\nfloat fxaaQualityEdgeThresholdMin = 0.0625;\\nfloat fxaaQualitySubpix = 0.7; //0.65;\\n// global params\\nuniform sampler2D srcTex;\\nuniform vec2 srcTexelSize;\\nuniform vec3 bgColor;\\n// from vs\\nvarying vec2 vUv;\\n//=====================================================================//\\n// calc luminance from rgb\\n//'float FxaaLuma(vec3 rgb) {return rgb.y * (0.587/0.299) + rgb.x; } // Lotte's idea about game luminance\\nfloat FxaaLuma(vec3 rgb) {return dot(rgb, vec3(0.299, 0.587, 0.114)); } // real luminance calculation\\n                                                                           // for non-real scene rendering\\n// texture sampling by pixel position(coords) and offset(in pixels)\\n vec3 FxaaTex(sampler2D tex, vec2 pos, vec2 off,  vec2 res ) {\\n  #ifdef BG_TRANSPARENT\\n    vec4 color = texture2D( tex, pos + off * res );\\n    return mix(color.rgb, bgColor, 1.0 - color.a);\\n  #else\\n    return texture2D( tex, pos + off * res ).xyz;\\n  #endif\\n}\\nvec3 FxaaTexTop(sampler2D tex, vec2 pos) {\\n  #ifdef BG_TRANSPARENT\\n    vec4 color = texture2D( tex, pos );\\n    return mix(color.rgb, bgColor, 1.0 - color.a);\\n  #else\\n    return texture2D( tex, pos).xyz;\\n  #endif\\n}\\nvec4 FxaaTexTopAlpha(sampler2D tex, vec2 pos) {\\n  return texture2D( tex, pos);\\n}\\n\\n//=====================================================================//\\nvoid main() {\\n  // renaming\\n  vec2 posM = vUv;\\n  // get luminance for neighbours\\n  float lumaS = FxaaLuma(FxaaTex(srcTex, posM, vec2( 0.0, 1.0 ), srcTexelSize));\\n  float lumaE = FxaaLuma(FxaaTex(srcTex, posM, vec2( 1.0, 0.0 ), srcTexelSize));\\n  float lumaN = FxaaLuma(FxaaTex(srcTex, posM, vec2( 0.0, -1.0 ), srcTexelSize));\\n  float lumaW = FxaaLuma(FxaaTex(srcTex, posM, vec2( -1.0, 0.0 ), srcTexelSize));\\n  float lumaM = FxaaLuma(FxaaTexTop(srcTex, posM));\\n  // find max and min luminance\\n  float rangeMax = max(max(lumaN, lumaW), max(lumaE, max(lumaS, lumaM)));\\n  float rangeMin = min(min(lumaN, lumaW), min(lumaE, min(lumaS, lumaM)));\\n  // calc maximum non-edge range\\n  float rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\\n  float range = rangeMax - rangeMin;\\n  float rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\\n  // exit when luma contrast is small (is not edge)\\n  if(range < rangeMaxClamped){\\n    gl_FragColor = FxaaTexTopAlpha(srcTex, posM);\\n    return;\\n  }\\n  float subpixRcpRange = 1.0/range;\\n  // note: the sampling coordinates can be calculated in vertex shader but the approach doesn't affect performance\\n  // visibly, thus we decided to leave calculation here for better readability.\\n  // calc other neighbours luminance\\n  float lumaNE = FxaaLuma(FxaaTex(srcTex, posM, vec2(  1.0, -1.0 ), srcTexelSize));\\n  float lumaSW = FxaaLuma(FxaaTex(srcTex, posM, vec2( -1.0,  1.0 ), srcTexelSize));\\n  float lumaSE = FxaaLuma(FxaaTex(srcTex, posM, vec2(  1.0,  1.0 ), srcTexelSize));\\n  float lumaNW = FxaaLuma(FxaaTex(srcTex, posM, vec2( -1.0, -1.0 ), srcTexelSize));\\n/*--------------span calculation and subpix amount calulation-----------------*/\\n  float lumaNS = lumaN + lumaS;\\n  float lumaWE = lumaW + lumaE;\\n  float subpixNSWE = lumaNS + lumaWE;\\n  float edgeHorz1 = (-2.0 * lumaM) + lumaNS;\\n  float edgeVert1 = (-2.0 * lumaM) + lumaWE;\\n/*--------------------------------------------------------------------------*/\\n  float lumaNESE = lumaNE + lumaSE;\\n  float lumaNWNE = lumaNW + lumaNE;\\n  float edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\\n  float edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\\n/*--------------------------------------------------------------------------*/\\n  float lumaNWSW = lumaNW + lumaSW;\\n  float lumaSWSE = lumaSW + lumaSE;\\n  float edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\\n  float edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\\n  float edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\\n  float edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\\n  float edgeHorz = abs(edgeHorz3) + edgeHorz4;\\n  float edgeVert = abs(edgeVert3) + edgeVert4;\\n/*--------------------subpix amount calulation------------------------------*/\\n  float subpixNWSWNESE = lumaNWSW + lumaNESE;\\n  float lengthSign = srcTexelSize.x;\\n  bool horzSpan = edgeHorz >= edgeVert;\\n   // debug  code edge span visualization\\n/*'  if (horzSpan)\\n      gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0);\\n  else\\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n  return;*/\\n  float subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\\n/*--------------------------------------------------------------------------*/\\n  if(!horzSpan) lumaN = lumaW;\\n  if(!horzSpan) lumaS = lumaE;\\n  if(horzSpan) lengthSign = srcTexelSize.y;\\n  float subpixB = (subpixA * (1.0/12.0)) - lumaM;\\n/*--------------------------------------------------------------------------*/\\n  float gradientN = lumaN - lumaM;\\n  float gradientS = lumaS - lumaM;\\n  float lumaNN = lumaN + lumaM;\\n  float lumaSS = lumaS + lumaM;\\n  bool pairN = abs(gradientN) >= abs(gradientS);\\n  float gradient = max(abs(gradientN), abs(gradientS));\\n  if(pairN) lengthSign = -lengthSign;\\n  float subpixC = clamp(abs(subpixB) * subpixRcpRange, 0.0, 1.0);\\n/*--------------------------------------------------------------------------*/\\n  vec2 posB;\\n  posB = posM;\\n  vec2 offNP;\\n  offNP.x = (!horzSpan) ? 0.0 : srcTexelSize.x;\\n  offNP.y = ( horzSpan) ? 0.0 : srcTexelSize.y;\\n  if(!horzSpan) posB.x += lengthSign * 0.5;\\n  if( horzSpan) posB.y += lengthSign * 0.5;\\n/*--------------------------------------------------------------------------*/\\n  vec2 posN;\\n  posN = posB - offNP * FXAA_QUALITY_P0;\\n  vec2 posP;\\n  posP = posB + offNP * FXAA_QUALITY_P0;\\n  float subpixD = ((-2.0)*subpixC) + 3.0;\\n  float lumaEndN = FxaaLuma(FxaaTexTop(srcTex, posN));\\n  float subpixE = subpixC * subpixC;\\n  float lumaEndP = FxaaLuma(FxaaTexTop(srcTex, posP));\\n/*--------------------------------------------------------------------------*/\\n  if(!pairN) lumaNN = lumaSS;\\n  float gradientScaled = gradient * 1.0/4.0;\\n  float lumaMM = lumaM - lumaNN * 0.5;\\n  float subpixF = subpixD * subpixE;\\n  bool lumaMLTZero = lumaMM < 0.0;\\n/*---------------------looped edge-end search-------------------------------*/\\n  lumaEndN -= lumaNN * 0.5;\\n  lumaEndP -= lumaNN * 0.5;\\n  bool doneN = abs(lumaEndN) >= gradientScaled;\\n  bool doneP = abs(lumaEndP) >= gradientScaled;\\n  if(!doneN) posN -= offNP * FXAA_QUALITY_P1;\\n  bool doneNP = (!doneN) || (!doneP);\\n  if(!doneP) posP += offNP * FXAA_QUALITY_P1;\\n/*--------------------------------------------------------------------------*/\\n  if(doneNP) {\\n    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(srcTex, posN.xy));\\n    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(srcTex, posP.xy));\\n    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n    doneN = abs(lumaEndN) >= gradientScaled;\\n    doneP = abs(lumaEndP) >= gradientScaled;\\n    if(!doneN) posN -= offNP * FXAA_QUALITY_P2;\\n    doneNP = (!doneN) || (!doneP);\\n    if(!doneP) posP += offNP * FXAA_QUALITY_P2;\\n/*--------------------------------------------------------------------------*/\\n    #if (FXAA_QUALITY_PS > 3)\\n      if(doneNP) {\\n        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(srcTex, posN.xy));\\n        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(srcTex, posP.xy));\\n        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n        doneN = abs(lumaEndN) >= gradientScaled;\\n        doneP = abs(lumaEndP) >= gradientScaled;\\n        if(!doneN) posN -= offNP * FXAA_QUALITY_P3;\\n        doneNP = (!doneN) || (!doneP);\\n        if(!doneP) posP += offNP * FXAA_QUALITY_P3;\\n/*--------------------------------------------------------------------------*/\\n        #if (FXAA_QUALITY_PS > 4)\\n          if(doneNP) {\\n            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(srcTex, posN.xy));\\n            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(srcTex, posP.xy));\\n            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n            doneN = abs(lumaEndN) >= gradientScaled;\\n            doneP = abs(lumaEndP) >= gradientScaled;\\n            if(!doneN) posN -= offNP * FXAA_QUALITY_P4;\\n            doneNP = (!doneN) || (!doneP);\\n            if(!doneP) posP += offNP * FXAA_QUALITY_P4;\\n/*--------------------------------------------------------------------------*/\\n            #if (FXAA_QUALITY_PS > 5)\\n               if(doneNP) {\\n                 if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(srcTex, posN.xy));\\n                 if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(srcTex, posP.xy));\\n                 if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n                 if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n                 doneN = abs(lumaEndN) >= gradientScaled;\\n                 doneP = abs(lumaEndP) >= gradientScaled;\\n                 if(!doneN) posN -= offNP * FXAA_QUALITY_P5;\\n                 doneNP = (!doneN) || (!doneP);\\n                 if(!doneP) posP += offNP * FXAA_QUALITY_P5;\\n/*--------------------------------------------------------------------------*/\\n                 #if (FXAA_QUALITY_PS > 6)\\n                   if(doneNP) {\\n                     if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(srcTex, posN.xy));\\n                     if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(srcTex, posP.xy));\\n                     if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n                     if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n                     doneN = abs(lumaEndN) >= gradientScaled;\\n                     doneP = abs(lumaEndP) >= gradientScaled;\\n                     if(!doneN) posN -= offNP * FXAA_QUALITY_P6;\\n                     doneNP = (!doneN) || (!doneP);\\n                     if(!doneP) posP += offNP * FXAA_QUALITY_P6;\\n/*--------------------------------------------------------------------------*/\\n                     #if (FXAA_QUALITY_PS > 7)\\n                       if(doneNP) {\\n                         if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(srcTex, posN.xy));\\n                         if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(srcTex, posP.xy));\\n                         if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\\n                         if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\\n                         doneN = abs(lumaEndN) >= gradientScaled;\\n                         doneP = abs(lumaEndP) >= gradientScaled;\\n                         if(!doneN) posN -= offNP * FXAA_QUALITY_P7;\\n                         doneNP = (!doneN) || (!doneP);\\n                         if(!doneP) posP += offNP * FXAA_QUALITY_P7;\\n/*--------------------------------------------------------------------------*/\\n                       }\\n                     #endif\\n                   }\\n                 #endif\\n               }\\n             #endif\\n           }\\n         #endif\\n      }\\n    #endif\\n  }\\n/*----------------calculate subpix offset due to edge ends-------------------*/\\n  float dstN = posM.x - posN.x;\\n  float dstP = posP.x - posM.x;\\n  if(!horzSpan) dstN = posM.y - posN.y;\\n  if(!horzSpan) dstP = posP.y - posM.y;\\n/*--------------------------------------------------------------------------*/\\n  bool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\\n  float spanLength = (dstP + dstN);\\n  bool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\\n  float spanLengthRcp = 1.0 / spanLength;\\n/*--------------------------------------------------------------------------*/\\n  bool directionN = dstN < dstP;\\n  float dst = min(dstN, dstP);\\n  bool goodSpan = directionN ? goodSpanN : goodSpanP;\\n  float subpixG = subpixF * subpixF;\\n  float pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\\n  float subpixH = subpixG * fxaaQualitySubpix;\\n/*-----------------calc texture offest using subpix-------------------------*/\\n  float pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\\n  float pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\\n\\n  float offset = pixelOffsetSubpix * lengthSign;\\n  #ifdef BG_TRANSPARENT\\n    // get original texel\\n    vec4 rgbaA = FxaaTexTopAlpha(srcTex, posM);\\n    // calc step to blended texel\\n    vec2 step = sign((!horzSpan) ? vec2 (offset, 0.0) : vec2 (0.0, offset));\\n    // get neighboring texel\\n    vec4 rgbaB = FxaaTexTopAlpha(srcTex, posM + step * srcTexelSize);\\n    //  calc blend factor from offset\\n    float f = (!horzSpan) ? offset / srcTexelSize.x : offset / srcTexelSize.y;\\n    f = abs(f);\\n    // calc alpha (special formula to emulate blending with bg)\\n    gl_FragColor.a = 1.0 - mix(1.0 - rgbaA.a, 1.0 - rgbaB.a, f);\\n    // calc color (special formula to emulate blending with bg)\\n    gl_FragColor.rgb = mix(rgbaA.rgb * rgbaA.a, rgbaB.rgb * rgbaB.a, f) / gl_FragColor.a;\\n  #else\\n    if(!horzSpan) {\\n       posM.x += offset;\\n    } else {\\n       posM.y += offset;\\n    }\\n    gl_FragColor = FxaaTexTopAlpha(srcTex, posM);\\n  #endif\\n  return;\\n}\\n\";","/* eslint-disable no-magic-numbers */\n/* eslint-disable guard-for-in */\nimport * as THREE from 'three';\nimport vertexShader from './ScreenQuad.vert';\nimport fragmentShader from './AO.frag';\nimport noise from '../noiseTexture';\n\nconst _samplesKernel = [\n  // hemisphere samples adopted to sphere\n  new THREE.Vector3(0.295184, 0.077723, 0.068429),\n  new THREE.Vector3(-0.271976, -0.365221, 0.838363),\n  new THREE.Vector3(0.547713, 0.467576, 0.488515),\n  new THREE.Vector3(0.662808, -0.031733, 0.584758),\n  new THREE.Vector3(-0.025717, 0.218955, 0.657094),\n  new THREE.Vector3(-0.310153, -0.365223, 0.370701),\n  new THREE.Vector3(-0.101407, -0.006313, 0.747665),\n  new THREE.Vector3(-0.769138, 0.360399, 0.086847),\n  new THREE.Vector3(-0.271988, -0.275140, 0.905353),\n  new THREE.Vector3(0.096740, -0.566901, 0.700151),\n  new THREE.Vector3(0.562872, -0.735136, 0.094647),\n  new THREE.Vector3(0.379877, 0.359278, 0.190061),\n  new THREE.Vector3(0.519064, -0.023055, 0.405068),\n  new THREE.Vector3(-0.301036, 0.114696, 0.088885),\n  new THREE.Vector3(-0.282922, 0.598305, 0.487214),\n  new THREE.Vector3(-0.181859, 0.251670, 0.679702),\n  new THREE.Vector3(-0.191463, -0.635818, 0.512919),\n  new THREE.Vector3(-0.293655, 0.427423, 0.078921),\n  new THREE.Vector3(-0.267983, 0.680534, 0.132880),\n  new THREE.Vector3(0.139611, 0.319637, 0.477439),\n  new THREE.Vector3(-0.352086, 0.311040, 0.653913),\n  new THREE.Vector3(0.321032, 0.805279, 0.487345),\n  new THREE.Vector3(0.073516, 0.820734, 0.414183),\n  new THREE.Vector3(-0.155324, 0.589983, 0.411460),\n  new THREE.Vector3(0.335976, 0.170782, 0.527627),\n  new THREE.Vector3(0.463460, -0.355658, 0.167689),\n  new THREE.Vector3(0.222654, 0.596550, 0.769406),\n  new THREE.Vector3(0.922138, -0.042070, 0.147555),\n  new THREE.Vector3(-0.727050, -0.329192, 0.369826),\n  new THREE.Vector3(-0.090731, 0.533820, 0.463767),\n  new THREE.Vector3(-0.323457, -0.876559, 0.238524),\n  new THREE.Vector3(-0.663277, -0.372384, 0.342856),\n];\n\nclass AOMaterial extends THREE.RawShaderMaterial {\n  constructor() {\n    super();\n\n    // set default values\n    this.setValues.call(this, {\n      uniforms: {\n        noiseTexture: { type: 't', value: noise.noiseTexture },\n        noiseTexelSize: { type: 'v2', value: new THREE.Vector2(1.0 / noise.noiseWidth, 1.0 / noise.noiseHeight) },\n        diffuseTexture: { type: 't', value: null },\n        normalTexture: { type: 't', value: null },\n        depthTexture: { type: 't', value: null },\n        srcTexelSize: { type: 'v2', value: new THREE.Vector2(1.0 / 512.0, 1.0 / 512.0) },\n        camNearFar: { type: 'v2', value: new THREE.Vector2(1.0, 10.0) },\n        projMatrix: { type: 'mat4', value: new THREE.Matrix4() },\n        aspectRatio: { type: 'f', value: 0.0 },\n        tanHalfFOV: { type: 'f', value: 0.0 },\n        samplesKernel: { type: 'v3v', value: _samplesKernel },\n        kernelRadius: { type: 'f', value: 1.0 },\n        depthThreshold: { type: 'f', value: 1.0 },\n        factor: { type: 'f', value: 1.0 },\n      },\n      vertexShader,\n      fragmentShader,\n      transparent: false,\n      depthTest: false,\n      depthWrite: false,\n    });\n  }\n}\n\nexport default AOMaterial;\n","export default \"precision highp float;\\n#define EPSILON 0.0000001\\n\\n#define MAX_SAMPLES_COUNT 32\\nuniform vec3 samplesKernel[MAX_SAMPLES_COUNT];\\nuniform sampler2D noiseTexture;\\nuniform vec2      noiseTexelSize;\\nuniform sampler2D diffuseTexture;\\nuniform sampler2D depthTexture;\\nuniform sampler2D normalTexture;\\nuniform vec2      srcTexelSize;\\nuniform vec2      camNearFar;\\nuniform mat4      projMatrix;\\n\\nuniform float aspectRatio;\\nuniform float tanHalfFOV;\\n\\nuniform float kernelRadius;\\nuniform float depthThreshold;\\nuniform float factor;\\n\\nvarying vec2 vUv;\\n\\nfloat CalcViewZ(vec2 screenPos)\\n{\\n  float depth = texture2D(depthTexture, screenPos).x;\\n  // [0, 1]->[-1, 1]\\n  float clipedZ = 2.0 * depth - 1.0;\\n  // see THREE.js camera.makeFrustum for projection details\\n  return (-projMatrix[3][2] / (clipedZ + projMatrix[2][2]));\\n}\\n\\nvec3 ViewPosFromDepth(vec2 screenPos)\\n{\\n  vec3 viewPos;\\n  viewPos.z = CalcViewZ(screenPos);\\n  //[0, 1]->[-1, 1]\\n  vec2 projPos = 2.0 * screenPos - 1.0;\\n  // reconstruct viewposition in right-handed sc with z to viewer\\n  viewPos.xy = vec2(\\n                    projPos.x * aspectRatio * tanHalfFOV * abs(viewPos.z),\\n                    projPos.y * tanHalfFOV * abs(viewPos.z)\\n                   );\\n  return viewPos;\\n}\\n\\nvoid main() {\\n  vec3 viewPos = ViewPosFromDepth(vUv);\\n  // remap coordinates to prevent noise exture rescale\\n  vec2 vUvNoise = vUv / srcTexelSize * noiseTexelSize;\\n  vec4 normalData = texture2D(normalTexture, vUv);\\n  // return for background fragments (their normals are zero vectors)\\n  if (length(normalData.rgb) < EPSILON) {\\n    // 0.0 in alpha component means that it is background fragment\\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n    return;\\n  }\\n  //[0, 1] -> [-1, 1]\\n  vec3 normal = (normalData.rgb * 2.0 - 1.0);\\n  // normalData.a store 1.0 if normal was build for frontfaced surface\\n  // and 0.0 in other case\\n  if (normalData.a < EPSILON) {\\n    normal *= -1.0;\\n  }\\n  // get random vector for sampling sphere rotation\\n  vec3 randN = texture2D(noiseTexture, vUvNoise).rgb * 2.0 - 1.0;\\n  randN = normalize(randN);\\n  // build TBN (randomly rotated around normal)\\n  vec3 tangent   = normalize(randN - normal * dot(randN, normal));\\n  vec3 bitangent = cross(tangent, normal);\\n  mat3 TBN = mat3(tangent, bitangent, normal);\\n  // calc AO value\\n  float AO = 0.0;\\n  for (int i = 0 ; i < MAX_SAMPLES_COUNT ; i++) {\\n    // rotate sampling kernel around normal\\n    vec3 reflectedSample = TBN * samplesKernel[i];\\n    // get sample\\n    vec3 samplePos = viewPos + reflectedSample * kernelRadius;\\n\\n    // project sample to screen to get sample's screen pos\\n    vec4 SampleScrPos = vec4(samplePos, 1.0);\\n    // eye -> clip\\n    SampleScrPos = projMatrix * SampleScrPos;\\n    // normalize\\n    SampleScrPos.xy /= SampleScrPos.w;\\n    //[-1, 1] -> [0, 1]\\n    SampleScrPos.xy = (SampleScrPos.xy + vec2(1.0)) * 0.5;\\n\\n    // get view z for sample projected to the objct surface\\n    float sampleDepth = CalcViewZ(SampleScrPos.xy);\\n    // calc occlusion made by object surface at the sample\\n    AO += step(samplePos.z, sampleDepth);\\n  }\\n  // calc result AO-map color\\n  AO = 1.0 - max(0.0, AO / float(MAX_SAMPLES_COUNT) * factor);\\n  // write value to AO-map\\n  gl_FragColor = vec4(AO, AO, AO, 1.0);\\n}\\n\";","/* eslint-disable no-magic-numbers */\n/* eslint-disable guard-for-in */\nimport * as THREE from 'three';\nimport vertexShader from './ScreenQuad.vert';\nimport fragmentShader from './AOHorBlur.frag';\n\nconst _kernelOffsets = [-2.0, -1.0, 0.0, 1.0, 2.0];\n\nclass AOHorBlurMaterial extends THREE.RawShaderMaterial {\n  constructor() {\n    super();\n\n    // set default values\n    this.setValues.call(this, {\n      uniforms: {\n        depthTexture: { type: 't', value: null },\n        srcTexelSize: { type: 'v2', value: new THREE.Vector2(1.0 / 512.0, 1.0 / 512.0) },\n        aoMap: { type: 't', value: null },\n        samplesOffsets: { type: 'fv1', value: _kernelOffsets },\n      },\n      vertexShader,\n      fragmentShader,\n      transparent: false,\n      depthTest: false,\n      depthWrite: false,\n    });\n  }\n}\n\nexport default AOHorBlurMaterial;\n","export default \"precision highp float;\\n#define EPSILON 0.0000001\\n\\n#define MAX_SAMPLES_COUNT 5\\nuniform float samplesOffsets[MAX_SAMPLES_COUNT];\\nuniform sampler2D aoMap;\\nuniform sampler2D depthTexture;\\nuniform vec2      srcTexelSize;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  float x = vUv.x;\\n  float y = vUv.y;\\n  vec4 res = vec4(0.0);\\n  res.a = texture2D(aoMap, vec2(x, y )).a;\\n  // return for background fragments (0.0 in alpha component means that it is background fragment)\\n  if (res.a < EPSILON) {\\n    gl_FragColor = res;\\n    return;\\n  }\\n\\n  float pixelDepth = texture2D(depthTexture, vec2(x, y)).x;\\n  float weightSum = 0.0;\\n  for (int i = 0; i < MAX_SAMPLES_COUNT; ++i) {\\n    if (texture2D(aoMap, vec2(x + samplesOffsets[i] * srcTexelSize.x, y )).a < EPSILON) {\\n      continue;\\n    }\\n    vec2 samplePos = vec2(x + samplesOffsets[i] * srcTexelSize.x, y);\\n    float depth = texture2D(depthTexture, samplePos).x;\\n    float weight = (1.0 / (0.0001 + abs(depth - pixelDepth)));\\n    res.rgb += texture2D(aoMap, vec2(x + samplesOffsets[i] * srcTexelSize.x, y )).rgb * weight;\\n    weightSum += weight;\\n  }\\n  res.rgb = res.rgb / weightSum;\\n  gl_FragColor = res;\\n}\\n\";","/* eslint-disable no-magic-numbers */\n/* eslint-disable guard-for-in */\nimport * as THREE from 'three';\nimport vertexShader from './ScreenQuad.vert';\nimport fragmentShader from './AOVertBlurWithBlend.frag';\n\nconst _kernelOffsets = [-2.0, -1.0, 0.0, 1.0, 2.0];\n\nclass AOVertBlurWithBlendMaterial extends THREE.RawShaderMaterial {\n  constructor(params) {\n    super(params);\n\n    // set default values\n    this.setValues.call(this, {\n      uniforms: {\n        diffuseTexture: { type: 't', value: null },\n        depthTexture: { type: 't', value: null },\n        srcTexelSize: { type: 'v2', value: new THREE.Vector2(1.0 / 512.0, 1.0 / 512.0) },\n        aoMap: { type: 't', value: null },\n        samplesOffsets: { type: 'fv1', value: _kernelOffsets },\n        projMatrix: { type: 'mat4', value: new THREE.Matrix4() },\n        aspectRatio: { type: 'f', value: 0.0 },\n        tanHalfFOV: { type: 'f', value: 0.0 },\n        fogNearFar: { type: 'v2', value: new THREE.Vector2(100.0, 100.0) },\n        fogColor: { type: 'v4', value: new THREE.Vector4(0.0, 0.5, 0.0, 1.0) },\n      },\n      vertexShader,\n      fragmentShader,\n      transparent: false,\n      depthTest: false,\n      depthWrite: false,\n    });\n\n    this.setValues(params);\n  }\n\n  setValues(values) {\n    if (typeof values === 'undefined') {\n      return;\n    }\n\n    // set direct values\n    super.setValues(values);\n\n    const defines = {};\n\n    if (this.useFog) {\n      defines.USE_FOG = 1;\n    }\n    if (this.fogTransparent) {\n      defines.FOG_TRANSPARENT = 1;\n    }\n    // set dependent values\n    this.defines = defines;\n  }\n}\n\nAOVertBlurWithBlendMaterial.prototype.useFog = true;\nAOVertBlurWithBlendMaterial.prototype.fogTransparent = false;\n\nexport default AOVertBlurWithBlendMaterial;\n","export default \"precision highp float;\\n#define EPSILON 0.0000001\\n\\n#define MAX_SAMPLES_COUNT 5\\nuniform float samplesOffsets[MAX_SAMPLES_COUNT];\\nuniform sampler2D diffuseTexture;\\nuniform sampler2D aoMap;\\nuniform sampler2D depthTexture;\\nuniform vec2      srcTexelSize;\\n\\nuniform mat4  projMatrix;\\nuniform float aspectRatio;\\nuniform float tanHalfFOV;\\n\\n#ifdef USE_FOG\\n  uniform vec2 fogNearFar;\\n  uniform vec4 fogColor;\\n#endif\\nvarying vec2 vUv;\\n\\nfloat CalcViewZ(vec2 screenPos)\\n{\\n  float depth = texture2D(depthTexture, screenPos).x;\\n  // [0, 1]->[-1, 1]\\n  float clipedZ = 2.0 * depth - 1.0;\\n  // see THREE.js camera.makeFrustum for projection details\\n  return (-projMatrix[3][2] / (clipedZ + projMatrix[2][2]));\\n}\\n\\nvec3 ViewPosFromDepth(vec2 screenPos)\\n{\\n  vec3 viewPos;\\n  viewPos.z = CalcViewZ(screenPos);\\n  //[0, 1]->[-1, 1]\\n  vec2 projPos = 2.0 * screenPos - 1.0;\\n  // reconstruct viewposition in right-handed sc with z to viewer\\n  viewPos.xy = vec2(\\n  projPos.x * aspectRatio * tanHalfFOV * abs(viewPos.z),\\n  projPos.y * tanHalfFOV * abs(viewPos.z)\\n  );\\n  return viewPos;\\n}\\n\\nvoid main() {\\n  vec3 viewPos = ViewPosFromDepth(vUv);\\n  float x = vUv.x;\\n  float y = vUv.y;\\n  vec4 color = texture2D(diffuseTexture, vec2(x, y));\\n  vec4 res = vec4(0.0);\\n  res.a = texture2D(aoMap, vec2(x, y )).a;\\n  // return for background fragments (0.0 in alpha component means that it is background fragment)\\n  if (res.a < EPSILON) {\\n    gl_FragColor = color;\\n    return;\\n  }\\n\\n  float pixelDepth = texture2D(depthTexture, vec2(x, y)).x;\\n  float weightSum = 0.0;\\n  for (int i = 0; i < MAX_SAMPLES_COUNT; ++i) {\\n    if (texture2D(aoMap, vec2(x, y + samplesOffsets[i] * srcTexelSize.y)).a < EPSILON) {\\n      continue;\\n    }\\n    vec2 samplePos = vec2(x, y + samplesOffsets[i] * srcTexelSize.y);\\n    float depth = texture2D(depthTexture, samplePos).x;\\n    float weight = (1.0 / (0.0001 + abs(depth - pixelDepth)));\\n    res.rgb += texture2D(aoMap, vec2(x, y + samplesOffsets[i] * srcTexelSize.y)).rgb * weight;\\n    weightSum += weight;\\n  }\\n  res.rgb /= weightSum;\\n\\n  #if defined(USE_FOG) && !defined(FOG_TRANSPARENT)\\n    // Add fog to the result value\\n    // Proper way to get an image with fog and ao requires formula:\\n    //          gl_FragColor = fragColor*AO*(1-fogFactor) + fogColor*fogFactor\\n    // But we have already fogged molecule to add AO too. Let's split the straight formula into our real steps!\\n    // We have:  AO, fogFactor, fogColor,\\n    //          color = fragColor*(1-fogFactor) + fogColor*fogFactor (it comes from diffuseTexture,\\n    //                                                                where molecule has been already drawn with fog)\\n    // Transform:\\n    //          fragColor*AO*(1-fogFactor) + fogColor*fogFactor =\\n    //        = [fragColor*(1-fogFactor) = color - fogColor*fogFactor] =\\n    //        = (color - fogColor*fogFactor)*AO + fogColor*fogFactor =\\n    //        = color*AO + fogColor*fogFactor*(1 - AO)\\n    // Result:  gl_FragColor = color*AO + fogColor*fogFactor*(1 - AO)\\n    float fogFactor = smoothstep(fogNearFar.x, fogNearFar.y, - viewPos.z) * fogColor.a;\\n    gl_FragColor.rgb = color.rgb * res.rgb + fogColor.rgb * fogFactor *(vec3(1.0, 1.0, 1.0) - res.rgb);\\n  #else\\n    gl_FragColor.rgb = color.rgb * res.rgb;\\n  #endif\\n  gl_FragColor.a = color.a;\\n}\\n\";","/* eslint-disable no-magic-numbers */\n/* eslint-disable guard-for-in */\nimport * as THREE from 'three';\nimport vertexShader from './ScreenQuad.vert';\nimport fragmentShader from './Anaglyph.frag';\n\nclass AnaglyphMaterial extends THREE.RawShaderMaterial {\n  constructor() {\n    super();\n    const settings = {\n      uniforms: {\n        srcL: { type: 't', value: null },\n        srcR: { type: 't', value: null },\n      },\n      vertexShader,\n      fragmentShader,\n      transparent: false,\n      depthTest: false,\n      depthWrite: false,\n    };\n    this.setValues(settings);\n  }\n}\n\nexport default AnaglyphMaterial;\n","export default \"precision highp float;\\n\\nuniform sampler2D srcL;\\nuniform sampler2D srcR;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec4 l = texture2D(srcL, vUv);\\n  vec4 r = texture2D(srcR, vUv);\\n  gl_FragColor = vec4(l.r, r.g, r.b, 1.0);\\n}\\n\";","import * as THREE from 'three';\nimport settings from '../settings';\n\nclass View {\n  constructor() {\n    this.position = new THREE.Vector3(0, 0, 0);\n    this.scale = 1;\n    this.orientation = new THREE.Quaternion(0, 0, 0, 1);\n  }\n\n  set(position, scale, orientation) {\n    this.position = position;\n    this.scale = scale;\n    this.orientation = orientation;\n  }\n}\n\nconst _transitionTime = 1.5; // in seconds\n\nexport default class ViewInterpolator {\n  setup(startView, endView) {\n    this._startTime = undefined;\n    this._endTime = undefined;\n    this._isPaused = false;\n\n    this._srcView = startView;\n    this._dstView = endView;\n    this._isMoving = false;\n  }\n\n  isMoving() {\n    return this._isMoving;\n  }\n\n  wasStarted() {\n    return typeof this._startTime !== 'undefined' && typeof this._endTime !== 'undefined';\n  }\n\n  start() {\n    this._startTime = Date.now();\n    const transTime = settings.now.interpolateViews ? _transitionTime * 1000 : 0;\n    this._endTime = this._startTime + transTime;\n    this._isMoving = true;\n  }\n\n  getCurrentView() {\n    if (typeof this._srcView === 'undefined' || typeof this._dstView === 'undefined'\n      || !this._isMoving || !this.wasStarted()) {\n      return { success: false };\n    }\n\n    let view = this.createView();\n    const time = Date.now();\n    if (time > this._endTime) {\n      view = this._dstView;\n      this.reset();\n      return { success: true, view };\n    }\n\n    const factor = (time - this._startTime) / (this._endTime - this._startTime);\n    view.position.copy(this._srcView.position);\n    view.position.lerp(this._dstView.position, factor);\n    view.scale = (1 - factor) * this._srcView.scale + factor * this._dstView.scale;\n    view.orientation.copy(this._srcView.orientation);\n    view.orientation.slerp(this._dstView.orientation, factor);\n    return { success: true, view };\n  }\n\n  reset() {\n    this._startTime = this._endTime = 0;\n    this._isMoving = false;\n  }\n\n  pause() {\n    if (!this._isPaused) {\n      this.setup(this.getCurrentView().view, this._dstView);\n      this._isPaused = true;\n    }\n  }\n\n  resume() {\n    this._isPaused = false;\n  }\n\n  createView() {\n    return new View();\n  }\n}\n","import _ from 'lodash';\nimport makeContextDependent from './makeContextDependent';\n\nconst MAX_COOKIE_LEN = 4000;\nconst COUNT_SUFFIX = 'Cnt';\n\nfunction _chunkString(string, chunkLen) {\n  const l = string.length;\n  const chunks = [];\n  for (let c = 0, lc = 0; lc < l; c++, lc += chunkLen) {\n    chunks[c] = string.slice(lc, lc + chunkLen);\n  }\n  return chunks;\n}\n\n/**\n * Create new context dependent Cookie holder object.\n * @param context\n * @param {Object} opts - options\n * @param {string} opts.path - cookie path\n * @constructor\n */\nfunction Cookies(context, opts) {\n  this.context = context;\n  this._opts = _.merge({\n    path: '/',\n  }, opts);\n}\n\nmakeContextDependent(Cookies.prototype);\n\n/**\n * Remove cookie by the name.\n * @param key\n */\nCookies.prototype.removeCookie = function (key) {\n  const cntKey = this._toCount(key);\n  let cntVal = this._getSimpleCookie(cntKey);\n  if (!cntVal) {\n    this._removeSimpleCookie(key);\n    return;\n  }\n  this._removeSimpleCookie(cntKey);\n  cntVal = parseInt(cntVal, 10);\n  for (let i = 0; i < cntVal; ++i) {\n    this._removeSimpleCookie(key + i);\n  }\n};\n\n/**\n * Set new cookie value. Automatically splits\n * values that are too large into multiple cookies.\n * @param key\n * @param value\n */\nCookies.prototype.setCookie = function (key, value) {\n  this.removeCookie(key);\n  value = encodeURIComponent(value);\n  const values = _chunkString(value, MAX_COOKIE_LEN - key.length - 1);\n  const cntVal = values.length;\n  if (cntVal === 1) {\n    this._setSimpleCookie(key, value);\n    return;\n  }\n  const cntKey = this._toCount(key);\n  this._setSimpleCookie(cntKey, cntVal.toString());\n  for (let i = 0; i < cntVal; ++i) {\n    this._setSimpleCookie(key + i, values[i]);\n  }\n};\n\n/**\n * Obtain the value of a compound cookie.\n * @param key\n */\nCookies.prototype.getCookie = function (key) {\n  const cntKey = this._toCount(key);\n  let cntVal = this._getSimpleCookie(cntKey);\n  if (!cntVal) {\n    return this._getSimpleCookie(key);\n  }\n  cntVal = parseInt(cntVal, 10);\n  const value = [];\n  for (let i = 0; i < cntVal; ++i) {\n    value[i] = this._getSimpleCookie(key + i);\n  }\n  return value.join('');\n};\n\nCookies.prototype._toCount = function (key) {\n  return key + COUNT_SUFFIX;\n};\n\nCookies.prototype._removeSimpleCookie = function (key) {\n  document.cookie = `${key}=; expires=Thu, 01 Jan 1970 00:00:01 GMT;`;\n};\n\nCookies.prototype._getExpirationDate = function () {\n  const today = new Date();\n  const EXP_PERIOD_YEARS = 10;\n  today.setFullYear(today.getFullYear() + EXP_PERIOD_YEARS);\n  return today;\n};\n\nCookies.prototype._setSimpleCookie = function (key, value) {\n  document.cookie = `${key}=${value\n  };expires=${this._getExpirationDate().toUTCString()\n  };path=${this._opts.path}`;\n};\n\nCookies.prototype._getSimpleCookie = function (key) {\n  const matches = document.cookie.match(new RegExp(`(?:^|; )${key}=([^;]*)`));\n  return matches ? decodeURIComponent(matches[1]) : '';\n};\n\nCookies.prototype._exists = function (key) {\n  return document.cookie.match(new RegExp(`(?:^|; )${key}=([^;]*)`));\n};\n\nexport default Cookies;\n","/* global PACKAGE_VERSION:false */\nimport _ from 'lodash';\nimport * as THREE from 'three';\nimport { Spinner } from 'spin.js';\nimport Stats from './gfx/Stats';\nimport utils from './utils';\nimport JobHandle from './utils/JobHandle';\nimport options from './options';\nimport settings from './settings';\nimport chem from './chem';\nimport Visual from './Visual';\nimport ComplexVisual from './ComplexVisual';\nimport Complex from './chem/Complex';\nimport VolumeVisual from './VolumeVisual';\nimport io from './io/io';\nimport modes from './gfx/modes';\nimport colorers from './gfx/colorers';\nimport palettes from './gfx/palettes';\nimport materials from './gfx/materials';\nimport Representation from './gfx/Representation';\nimport CSS2DRenderer from './gfx/CSS2DRenderer';\nimport ObjectControls from './ui/ObjectControls';\nimport Picker from './ui/Picker';\nimport Axes from './gfx/Axes';\nimport gfxutils from './gfx/gfxutils';\nimport meshutils from './gfx/meshutils';\nimport FrameInfo from './gfx/FrameInfo';\nimport meshes from './gfx/meshes/meshes';\nimport LinesObject from './gfx/objects/LinesObj';\nimport UberMaterial from './gfx/shaders/UberMaterial';\nimport OutlineMaterial from './gfx/shaders/OutlineMaterial';\nimport FXAAMaterial from './gfx/shaders/FXAAMaterial';\nimport AOMaterial from './gfx/shaders/AOMaterial';\nimport AOHorBlurMaterial from './gfx/shaders/AOHorBlurMaterial';\nimport AOVertBlurWithBlendMaterial from './gfx/shaders/AOVertBlurWithBlendMaterial';\nimport AnaglyphMaterial from './gfx/shaders/AnaglyphMaterial';\nimport VolumeMaterial from './gfx/shaders/VolumeMaterial';\nimport ViewInterpolator from './gfx/ViewInterpolator';\nimport EventDispatcher from './utils/EventDispatcher';\nimport logger from './utils/logger';\nimport Cookies from './utils/Cookies';\nimport capabilities from './gfx/capabilities';\nimport WebVRPoC from './gfx/vr/WebVRPoC';\nimport vertexScreenQuadShader from './gfx/shaders/ScreenQuad.vert';\nimport fragmentScreenQuadFromDistTex from './gfx/shaders/ScreenQuadFromDistortionTex.frag';\n\nconst {\n  selectors,\n  Atom,\n  Residue,\n  Chain,\n  Molecule,\n} = chem;\n\nconst EDIT_MODE = { COMPLEX: 0, COMPONENT: 1, FRAGMENT: 2 };\n\nconst LOADER_NOT_FOUND = 'Could not find suitable loader for this source';\nconst PARSER_NOT_FOUND = 'Could not find suitable parser for this source';\n\nconst { createElement } = utils;\n\nfunction updateFogRange(fog, center, radius) {\n  fog.near = center - radius * settings.now.fogNearFactor;\n  fog.far = center + radius * settings.now.fogFarFactor;\n}\n\nfunction removeExtension(fileName) {\n  const dot = fileName.lastIndexOf('.');\n  if (dot >= 0) {\n    fileName = fileName.substr(0, dot);\n  }\n  return fileName;\n}\n\nfunction hasValidResidues(complex) {\n  let hasValidRes = false;\n  complex.forEachComponent((component) => {\n    component.forEachResidue((residue) => {\n      if (residue._isValid) {\n        hasValidRes = true;\n      }\n    });\n  });\n  return hasValidRes;\n}\n\nfunction reportProgress(log, action, percent) {\n  const TOTAL_PERCENT = 100;\n  if (percent !== undefined) {\n    log.debug(`${action}... ${Math.floor(percent * TOTAL_PERCENT)}%`);\n  } else {\n    log.debug(`${action}...`);\n  }\n}\n\nfunction chooseFogColor() {\n  return settings.now.fogColorEnable ? settings.now.fogColor : settings.now.bg.color;\n}\n\n// ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Main 3D Molecular Viewer class.\n *\n * @param {object} opts - Viewer options.\n * @param {HTMLElement=} opts.container - DOM element that serves as a viewer container.\n * @param {object=} opts.settings - An object with properties to override default settings.\n * @param {string=} opts.settingsCookie='settings' - The name of the cookie to save current settings to.\n * @param {string=} opts.cookiePath='/' - The path option for cookies. Defaults to root.\n *\n * @exports Miew\n * @constructor\n */\nfunction Miew(opts) {\n  EventDispatcher.call(this);\n  this._opts = _.merge({\n    settingsCookie: 'settings',\n    cookiePath: '/',\n  }, opts);\n  /** @type {?object} */\n  this._gfx = null;\n  /** @type {ViewInterpolator} */\n  this._interpolator = new ViewInterpolator();\n  /** @type {HTMLElement} */\n  this._container = (opts && opts.container)\n    || document.getElementById('miew-container')\n    || _.head(document.getElementsByClassName('miew-container'))\n    || document.body;\n  /** @type {HTMLElement} */\n  this._containerRoot = this._container;\n\n  /** @type {boolean} */\n  this._running = false;\n  /** @type {boolean} */\n  this._halting = false;\n  /** @type {boolean} */\n  this._building = false;\n  /** @type {boolean} */\n  this._needRender = true;\n  /** @type {boolean} */\n  this._hotKeysEnabled = true;\n\n  /** @type {Settings} */\n  this.settings = settings;\n  const log = logger;\n  log.console = DEBUG;\n  log.level = DEBUG ? 'debug' : 'info';\n  /**\n   * @type {Logger}\n   * @example\n   * miew.logger.addEventListener('message', function _onLogMessage(evt) {\n   *   console.log(evt.message);\n   * });\n   */\n  this.logger = log;\n\n  this._cookies = new Cookies(this);\n  this.restoreSettings();\n  if (opts && opts.settings) {\n    this.settings.set(opts.settings);\n  }\n\n  /** @type {?Spinner} */\n  this._spinner = null;\n  /** @type {JobHandle[]} */\n  this._loading = [];\n  /** @type {?number}\n   * @deprecated until Animation system refactoring\n   */\n  this._animInterval = null;\n\n  /** @type {object} */\n  this._visuals = {};\n  /** @type {?string} */\n  this._curVisualName = null;\n\n  /** @type {array} */\n  this._objects = [];\n\n  /** @type {object} */\n  this._sourceWindow = null;\n\n  this.reset();\n\n  if (this._repr) {\n    log.debug(`Selected ${this._repr.mode.name} mode with ${this._repr.colorer.name} colorer.`);\n  }\n\n  const self = this;\n  Miew.registeredPlugins.forEach((plugin) => {\n    plugin.call(self);\n  });\n\n  this._initOnSettingsChanged();\n}\n\nMiew.prototype = Object.create(EventDispatcher.prototype);\nMiew.prototype.constructor = Miew;\n\nMiew.prototype.getMaxRepresentationCount = function () {\n  return ComplexVisual.NUM_REPRESENTATION_BITS;\n};\n\n/**\n * Replace viewer container contents with a DOM element.\n * @param {HTMLElement} container - parent container.\n * @param {HTMLElement} element - DOM element to show.\n * @private\n */\nfunction _setContainerContents(container, element) {\n  const parent = container;\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n  parent.appendChild(element);\n}\n\n/**\n * Update Shadow Camera target position and frustum.\n * @private\n */\nMiew.prototype._updateShadowCamera = (function () {\n  const shadowMatrix = new THREE.Matrix4();\n  const direction = new THREE.Vector3();\n  const OBB = { center: new THREE.Vector3(), halfSize: new THREE.Vector3() };\n\n  return function () {\n    this._gfx.scene.updateMatrixWorld();\n    for (let i = 0; i < this._gfx.scene.children.length; i++) {\n      if (this._gfx.scene.children[i].type === 'DirectionalLight') {\n        const light = this._gfx.scene.children[i];\n        shadowMatrix.copy(light.shadow.camera.matrixWorldInverse);\n        this.getOBB(shadowMatrix, OBB);\n\n        direction.subVectors(light.target.position, light.position);\n        light.position.subVectors(OBB.center, direction);\n        light.target.position.copy(OBB.center);\n\n        light.shadow.bias = 0.09;\n        light.shadow.camera.bottom = -OBB.halfSize.y;\n        light.shadow.camera.top = OBB.halfSize.y;\n        light.shadow.camera.right = OBB.halfSize.x;\n        light.shadow.camera.left = -OBB.halfSize.x;\n        light.shadow.camera.near = direction.length() - OBB.halfSize.z;\n        light.shadow.camera.far = direction.length() + OBB.halfSize.z;\n\n        light.shadow.camera.updateProjectionMatrix();\n      }\n    }\n  };\n}());\n\n/**\n * Initialize the viewer.\n * @returns {boolean} true on success.\n * @throws Forwards exception raised during initialization.\n * @see Miew#term\n */\nMiew.prototype.init = function () {\n  const container = this._container;\n  const elem = utils.createElement('div', { class: 'miew-canvas' });\n  _setContainerContents(container, elem);\n  this._container = elem;\n\n  const frag = document.createDocumentFragment();\n  frag.appendChild(this._msgMode = createElement(\n    'div', { class: 'mode-message overlay' },\n    createElement('p', {}, 'COMPONENT EDIT MODE'),\n  ));\n  frag.appendChild(this._msgAtomInfo = createElement(\n    'div', { class: 'atom-info overlay' },\n    createElement('p', {}, ''),\n  ));\n  container.appendChild(frag);\n\n  if (this._gfx !== null) { // block double init\n    return true;\n  }\n\n  const self = this;\n  this._showMessage('Viewer is being initialized...');\n  try {\n    this._initGfx();\n\n    this._initListeners();\n    this._spinner = new Spinner({\n      lines: 13,\n      length: 28,\n      width: 14,\n      radius: 42,\n      color: '#fff',\n      zIndex: 700,\n    });\n\n    window.top.addEventListener('keydown', (event) => {\n      self._onKeyDown(event);\n    });\n\n    window.top.addEventListener('keyup', (event) => {\n      self._onKeyUp(event);\n    });\n\n    this._objectControls = new ObjectControls(\n      this._gfx.root, this._gfx.pivot,\n      this._gfx.camera, this._gfx.renderer.domElement, (() => self._getAltObj()),\n    );\n    this._objectControls.addEventListener('change', (e) => {\n      if (settings.now.shadow.on) {\n        self._updateShadowCamera();\n      }\n      // route rotate, zoom, translate and translatePivot events to the external API\n      switch (e.action) {\n        case 'rotate':\n          self.dispatchEvent({ type: 'rotate', quaternion: e.quaternion });\n          break;\n        case 'zoom':\n          self.dispatchEvent({ type: 'zoom', factor: e.factor });\n          break;\n        default:\n          self.dispatchEvent({ type: e.action });\n      }\n      self.dispatchEvent({ type: 'transform' });\n      self._needRender = true;\n    });\n\n    const gfx = this._gfx;\n    this._picker = new Picker(gfx.root, gfx.camera, gfx.renderer.domElement);\n    this._picker.addEventListener('newpick', (event) => {\n      self._onPick(event);\n    });\n    this._picker.addEventListener('dblclick', (event) => {\n      self.center(event);\n    });\n  } catch (error) {\n    if (error.name === 'TypeError' && error.message === 'Cannot read property \\'getExtension\\' of null') {\n      this._showMessage('Could not create WebGL context.');\n    } else if (error.message.search(/webgl/i) > 1) {\n      this._showMessage(error.message);\n    } else {\n      this._showMessage('Viewer initialization failed.');\n      throw error;\n    }\n    return false;\n  }\n\n  // automatically load default file\n  const file = this._opts && this._opts.load;\n  if (file) {\n    const type = this._opts && this._opts.type;\n    this.load(file, { fileType: type, keepRepsInfo: true });\n  }\n\n  return true;\n};\n\n/**\n * Terminate the viewer completely.\n * @see Miew#init\n */\nMiew.prototype.term = function () {\n  this._showMessage('Viewer has been terminated.');\n  this._loading.forEach((job) => {\n    job.cancel();\n  });\n  this._loading.length = 0;\n  this.halt();\n  this._gfx = null;\n};\n\n/**\n * Display message inside the viewer container, hiding WebGL canvas.\n * @param {string} msg - Message to show.\n * @private\n */\nMiew.prototype._showMessage = function (msg) {\n  const element = document.createElement('div');\n  element.setAttribute('class', 'miew-message');\n  element.appendChild(document.createElement('p')).appendChild(document.createTextNode(msg));\n  _setContainerContents(this._container, element);\n};\n\n/**\n * Display WebGL canvas inside the viewer container, hiding any message shown.\n * @private\n */\nMiew.prototype._showCanvas = function () {\n  _setContainerContents(this._container, this._gfx.renderer.domElement);\n};\n\nMiew.prototype._requestAnimationFrame = function (callback) {\n  const { xr } = this._gfx.renderer;\n  if (xr && xr.enabled) {\n    this._gfx.renderer.setAnimationLoop(callback);\n    return;\n  }\n  requestAnimationFrame(callback);\n};\n\nfunction arezSpritesSupported(context) {\n  return context.getExtension('EXT_frag_depth');\n}\n\nfunction isAOSupported(context) {\n  return (context.getExtension('WEBGL_depth_texture')\n  && context.getExtension('WEBGL_draw_buffers'));\n}\n\n/**\n * Initialize WebGL and set 3D scene up.\n * @private\n */\nMiew.prototype._initGfx = function () {\n  const gfx = {\n    width: this._container.clientWidth,\n    height: this._container.clientHeight,\n  };\n\n  const webGLOptions = { preserveDrawingBuffer: true, alpha: true, premultipliedAlpha: false };\n  if (settings.now.antialias) {\n    webGLOptions.antialias = true;\n  }\n\n  gfx.renderer2d = new CSS2DRenderer();\n\n  gfx.renderer = new THREE.WebGL1Renderer(webGLOptions);\n  gfx.renderer.shadowMap.enabled = settings.now.shadow.on;\n  gfx.renderer.shadowMap.autoUpdate = false;\n  gfx.renderer.shadowMap.type = THREE.PCFShadowMap;\n  capabilities.init(gfx.renderer);\n\n  // z-sprites and ambient occlusion possibility\n  if (!arezSpritesSupported(gfx.renderer.getContext())) {\n    settings.set('zSprites', false);\n  }\n  if (!isAOSupported(gfx.renderer.getContext())) {\n    settings.set('ao', false);\n  }\n\n  gfx.renderer.autoClear = false;\n  gfx.renderer.setPixelRatio(window.devicePixelRatio);\n  gfx.renderer.setSize(gfx.width, gfx.height);\n  gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\n  gfx.renderer.clearColor();\n\n  gfx.renderer2d.setSize(gfx.width, gfx.height);\n\n  gfx.camera = new THREE.PerspectiveCamera(\n    settings.now.camFov, gfx.width / gfx.height,\n    settings.now.camNear, settings.now.camFar,\n  );\n  gfx.camera.setMinimalFov(settings.now.camFov);\n  gfx.camera.position.z = settings.now.camDistance;\n  gfx.camera.updateProjectionMatrix();\n  gfx.camera.layers.set(gfxutils.LAYERS.DEFAULT);\n  gfx.camera.layers.enable(gfxutils.LAYERS.VOLUME);\n  gfx.camera.layers.enable(gfxutils.LAYERS.VOLUME_BFPLANE);\n\n  gfx.stereoCam = new THREE.StereoCamera();\n\n  gfx.scene = new THREE.Scene();\n\n  const color = chooseFogColor();\n  gfx.scene.fog = new THREE.Fog(color, settings.now.camNear, settings.now.camFar);\n\n  gfx.root = new gfxutils.RCGroup();\n  gfx.scene.add(gfx.root);\n\n  gfx.pivot = new gfxutils.RCGroup();\n  gfx.root.add(gfx.pivot);\n\n  gfx.selectionScene = new THREE.Scene();\n  gfx.selectionRoot = new THREE.Group();\n  gfx.selectionRoot.matrixAutoUpdate = false;\n  gfx.selectionScene.add(gfx.selectionRoot);\n\n  gfx.selectionPivot = new THREE.Group();\n  gfx.selectionPivot.matrixAutoUpdate = false;\n  gfx.selectionRoot.add(gfx.selectionPivot);\n\n  const light12 = new THREE.DirectionalLight(0xffffff, 0.45);\n  light12.position.set(0, 0.414, 1);\n  light12.layers.enable(gfxutils.LAYERS.TRANSPARENT);\n  light12.castShadow = true;\n  light12.shadow.bias = 0.09;\n  light12.shadow.radius = settings.now.shadow.radius;\n  light12.shadow.camera.layers.set(gfxutils.LAYERS.SHADOWMAP);\n\n  const pixelRatio = gfx.renderer.getPixelRatio();\n  const shadowMapSize = Math.max(gfx.width, gfx.height) * pixelRatio;\n  light12.shadow.mapSize.width = shadowMapSize;\n  light12.shadow.mapSize.height = shadowMapSize;\n  light12.target.position.set(0.0, 0.0, 0.0);\n  gfx.scene.add(light12);\n  gfx.scene.add(light12.target);\n\n  const light3 = new THREE.AmbientLight(0x666666);\n  light3.layers.enable(gfxutils.LAYERS.TRANSPARENT);\n  gfx.scene.add(light3);\n\n  // add axes\n  gfx.axes = new Axes(gfx.root, gfx.camera);\n  const deviceWidth = gfx.width * pixelRatio;\n  const deviceHeight = gfx.height * pixelRatio;\n\n  gfx.offscreenBuf = new THREE.WebGLRenderTarget(\n    deviceWidth,\n    deviceHeight,\n    {\n      minFilter: THREE.LinearFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat, depthBuffer: true,\n    },\n  );\n\n  if (gfx.renderer.getContext().getExtension('WEBGL_depth_texture')) {\n    gfx.offscreenBuf.depthTexture = new THREE.DepthTexture();\n    gfx.offscreenBuf.depthTexture.type = THREE.UnsignedShortType;\n  }\n\n  gfx.offscreenBuf2 = new THREE.WebGLRenderTarget(\n    deviceWidth,\n    deviceHeight,\n    {\n      minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, depthBuffer: false,\n    },\n  );\n\n  gfx.offscreenBuf3 = new THREE.WebGLRenderTarget(\n    deviceWidth,\n    deviceHeight,\n    {\n      minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, depthBuffer: false,\n    },\n  );\n\n  gfx.offscreenBuf4 = new THREE.WebGLRenderTarget(\n    deviceWidth,\n    deviceHeight,\n    {\n      minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, depthBuffer: false,\n    },\n  );\n\n  gfx.volBFTex = gfx.offscreenBuf3;\n  gfx.volFFTex = gfx.offscreenBuf4;\n  gfx.volWFFTex = gfx.offscreenBuf;\n\n  // use float textures for volume rendering if possible\n  if (gfx.renderer.getContext().getExtension('OES_texture_float')) {\n    gfx.offscreenBuf5 = new THREE.WebGLRenderTarget(\n      deviceWidth,\n      deviceHeight,\n      {\n        minFilter: THREE.LinearFilter,\n        magFilter: THREE.LinearFilter,\n        format: THREE.RGBAFormat,\n        type: THREE.FloatType,\n        depthBuffer: false,\n      },\n    );\n\n    gfx.offscreenBuf6 = new THREE.WebGLRenderTarget(\n      deviceWidth,\n      deviceHeight,\n      {\n        minFilter: THREE.LinearFilter,\n        magFilter: THREE.LinearFilter,\n        format: THREE.RGBAFormat,\n        type: THREE.FloatType,\n        depthBuffer: false,\n      },\n    );\n\n    gfx.offscreenBuf7 = new THREE.WebGLRenderTarget(\n      deviceWidth,\n      deviceHeight,\n      {\n        minFilter: THREE.LinearFilter,\n        magFilter: THREE.LinearFilter,\n        format: THREE.RGBAFormat,\n        type: THREE.FloatType,\n        depthBuffer: true,\n      },\n    );\n\n    gfx.volBFTex = gfx.offscreenBuf5;\n    gfx.volFFTex = gfx.offscreenBuf6;\n    gfx.volWFFTex = gfx.offscreenBuf7;\n  } else {\n    this.logger.warn('Device doesn\\'t support OES_texture_float extension');\n  }\n\n  gfx.stereoBufL = new THREE.WebGLRenderTarget(\n    deviceWidth,\n    deviceHeight,\n    {\n      minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, depthBuffer: false,\n    },\n  );\n\n  gfx.stereoBufR = new THREE.WebGLRenderTarget(\n    deviceWidth,\n    deviceHeight,\n    {\n      minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, depthBuffer: false,\n    },\n  );\n\n  this._gfx = gfx;\n  this._showCanvas();\n\n  this._embedWebXR(settings.now.stereo === 'WEBVR');\n\n  this._container.appendChild(gfx.renderer2d.getElement());\n\n  // add FPS counter\n  const stats = new Stats();\n  stats.domElement.style.position = 'absolute';\n  stats.domElement.style.right = '0';\n  stats.domElement.style.bottom = '0';\n  this._container.appendChild(stats.domElement);\n  this._fps = stats;\n  this._fps.show(settings.now.fps);\n};\n\n/**\n * Setup event listeners.\n * @private\n */\nMiew.prototype._initListeners = function () {\n  const self = this;\n  window.addEventListener('resize', () => {\n    self._onResize();\n  });\n};\n\n/**\n * Try to add numbers to the base name to make it unique among visuals\n * @private\n */\nMiew.prototype._makeUniqueVisualName = function (baseName) {\n  if (!baseName) {\n    return Math.random().toString();\n  }\n\n  let name = baseName;\n  let suffix = 1;\n  while (this._visuals.hasOwnProperty(name)) {\n    name = `${baseName} (${suffix.toString()})`;\n    suffix++;\n  }\n\n  return name;\n};\n\n/**\n * Add visual to the viewer\n * @private\n */\nMiew.prototype._addVisual = function (visual) {\n  if (!visual) {\n    return null;\n  }\n\n  // change visual name in order to make it unique\n  const name = this._makeUniqueVisualName(visual.name);\n  visual.name = name;\n\n  this._visuals[name] = visual;\n  this._gfx.pivot.add(visual);\n  if (visual.getSelectionGeo) {\n    this._gfx.selectionPivot.add(visual.getSelectionGeo());\n  }\n\n  return name;\n};\n\n/**\n * Remove visual from the viewer\n * @private\n */\nMiew.prototype._removeVisual = function (visual) {\n  let name = '';\n  let obj = null;\n  if (visual instanceof Visual) {\n    ({ name } = visual);\n    obj = visual;\n  } else if (typeof visual === 'string') {\n    name = visual;\n    obj = this._visuals[name];\n  }\n\n  if (!obj || !this._visuals.hasOwnProperty(name) || this._visuals[name] !== obj) {\n    return;\n  }\n\n  if (name === this._curVisualName) {\n    this._curVisualName = undefined;\n  }\n\n  delete this._visuals[name];\n  obj.release(); // removes nodes from scene\n\n  this._needRender = true;\n};\n\n/**\n * Call specified function for each Visual\n * @private\n */\nMiew.prototype._forEachVisual = function (callback) {\n  for (const name in this._visuals) {\n    if (this._visuals.hasOwnProperty(name)) {\n      callback(this._visuals[name]);\n    }\n  }\n};\n\n/**\n * Release (destroy) all visuals in the scene\n * @private\n */\nMiew.prototype._releaseAllVisuals = function () {\n  if (!this._gfx || !this._gfx.pivot) {\n    return;\n  }\n\n  for (const name in this._visuals) {\n    if (this._visuals.hasOwnProperty(name)) {\n      this._visuals[name].release();\n    }\n  }\n\n  this._visuals = {};\n};\n\n/**\n * Call specified function for each ComplexVisual\n * @private\n */\nMiew.prototype._forEachComplexVisual = function (callback) {\n  if (!this._gfx || !this._gfx.pivot) {\n    return;\n  }\n\n  for (const name in this._visuals) {\n    if (this._visuals.hasOwnProperty(name)\n          && this._visuals[name] instanceof ComplexVisual) {\n      callback(this._visuals[name]);\n    }\n  }\n};\n\n/**\n * Returns ComplexVisual with specified name, or current (if not found), or any, or null\n * @private\n */\nMiew.prototype._getComplexVisual = function (name) {\n  name = name || this._curVisualName;\n  let any = null;\n  let named = null;\n  this._forEachComplexVisual((visual) => {\n    any = visual;\n    if (visual.name === name) {\n      named = visual;\n    }\n  });\n  return named || any;\n};\n\n/**\n * Returns first found VolumeVisual (no more than one should be present actually)\n * @private\n */\nMiew.prototype._getVolumeVisual = function () {\n  let any = null;\n  this._forEachVisual((visual) => {\n    if (visual instanceof VolumeVisual) {\n      any = visual;\n    }\n  });\n  return any;\n};\n\n/**\n * Returns ComplexVisual corresponding to specified complex\n * @private\n */\nMiew.prototype._getVisualForComplex = function (complex) {\n  if (!complex) {\n    return null;\n  }\n\n  let found = null;\n  this._forEachComplexVisual((visual) => {\n    if (visual.getComplex() === complex) {\n      found = visual;\n    }\n  });\n  return found;\n};\n\n/*\n   * Get a list of names of visuals currently shown by the viewer\n   */\nMiew.prototype.getVisuals = function () {\n  return Object.keys(this._visuals);\n};\n\n/*\n   * Get complex visuals count\n   */\nMiew.prototype.getComplexVisualsCount = function () {\n  let count = 0;\n  this._forEachComplexVisual(() => count++);\n  return count;\n};\n\n/*\n   * Get current visual\n   */\nMiew.prototype.getCurrentVisual = function () {\n  return this._curVisualName;\n};\n\n/*\n   * Set current visual.\n   * All further operations will be performed on this visual (complex) if not stated otherwise.\n   */\nMiew.prototype.setCurrentVisual = function (name) {\n  if (!this._visuals[name]) {\n    return;\n  }\n\n  this._curVisualName = name;\n};\n\n/**\n * Run the viewer, start processing update/render frames periodically.\n * Has no effect if already running.\n * @see Miew#halt\n */\nMiew.prototype.run = function () {\n  if (!this._running) {\n    this._running = true;\n    if (this._halting) {\n      this._halting = false;\n      return;\n    }\n\n    this._objectControls.enable(true);\n    this._interpolator.resume();\n\n    this._requestAnimationFrame(() => this._onTick());\n  }\n};\n\n/**\n * Request the viewer to stop.\n * Will be processed during the next frame.\n * @see Miew#run\n */\nMiew.prototype.halt = function () {\n  if (this._running) {\n    this._discardComponentEdit();\n    this._discardFragmentEdit();\n    this._objectControls.enable(false);\n    this._interpolator.pause();\n    this._halting = true;\n  }\n};\n\n/**\n * Request the viewer to start / stop responsing\n * on hot keys.\n * @param enabled - start (true) or stop (false) response on hot keys.\n */\nMiew.prototype.enableHotKeys = function (enabled) {\n  this._hotKeysEnabled = enabled;\n  this._objectControls.enableHotkeys(enabled);\n};\n\n/**\n * Callback which processes window resize.\n * @private\n */\nMiew.prototype._onResize = function () {\n  this._needRender = true;\n\n  const gfx = this._gfx;\n  gfx.width = this._container.clientWidth;\n  gfx.height = this._container.clientHeight;\n\n  gfx.camera.aspect = gfx.width / gfx.height;\n  gfx.camera.setMinimalFov(settings.now.camFov);\n  gfx.camera.updateProjectionMatrix();\n\n  gfx.renderer.setSize(gfx.width, gfx.height);\n  gfx.renderer2d.setSize(gfx.width, gfx.height);\n\n  this.dispatchEvent({ type: 'resize' });\n};\n\nMiew.prototype._resizeOffscreenBuffers = function (width, height, stereo) {\n  const gfx = this._gfx;\n  stereo = stereo || 'NONE';\n  const isAnaglyph = (stereo === 'NONE' || stereo === 'ANAGLYPH');\n  const multi = isAnaglyph ? 1 : 0.5;\n  gfx.offscreenBuf.setSize(multi * width, height);\n  gfx.offscreenBuf2.setSize(multi * width, height);\n  gfx.offscreenBuf3.setSize(multi * width, height);\n  gfx.offscreenBuf4.setSize(multi * width, height);\n  if (gfx.offscreenBuf5) {\n    gfx.offscreenBuf5.setSize(multi * width, height);\n  }\n  if (gfx.offscreenBuf6) {\n    gfx.offscreenBuf6.setSize(multi * width, height);\n  }\n  if (gfx.offscreenBuf7) {\n    gfx.offscreenBuf7.setSize(multi * width, height);\n  }\n  if (isAnaglyph) {\n    gfx.stereoBufL.setSize(width, height);\n    gfx.stereoBufR.setSize(width, height);\n  }\n};\n\n/**\n * Callback which processes update/render frames.\n * @private\n */\nMiew.prototype._onTick = function () {\n  if (this._halting) {\n    this._running = false;\n    this._halting = false;\n    return;\n  }\n\n  this._fps.update();\n\n  this._requestAnimationFrame(() => this._onTick());\n\n  this._onUpdate();\n  if (this._needRender) {\n    this._onRender();\n    this._needRender = !settings.now.suspendRender || settings.now.stereo === 'WEBVR';\n  }\n};\n\nMiew.prototype._getBSphereRadius = function () {\n  // calculate radius that would include all visuals\n  let radius = 0;\n  this._forEachVisual((visual) => {\n    radius = Math.max(radius, visual.getBoundaries().boundingSphere.radius);\n  });\n  return radius * this._objectControls.getScale();\n};\n\n/**\n * Calculate bounding box that would include all visuals and being axis aligned in world defined by\n * transformation matrix: matrix\n * @param {Matrix4} matrix - transformation matrix.\n * @param {object}  OBB           - calculating bounding box.\n * @param {Vector3} OBB.center    - OBB center.\n * @param {Vector3} OBB.halfSize  - half magnitude of OBB sizes.\n */\nMiew.prototype.getOBB = (function () {\n  const _bSphereForOneVisual = new THREE.Sphere();\n  const _bBoxForOneVisual = new THREE.Box3();\n  const _bBox = new THREE.Box3();\n\n  const _invMatrix = new THREE.Matrix4();\n\n  const _points = [\n    new THREE.Vector3(),\n    new THREE.Vector3(),\n    new THREE.Vector3(),\n    new THREE.Vector3(),\n  ];\n\n  return function (matrix, OBB) {\n    _bBox.makeEmpty();\n\n    this._forEachVisual((visual) => {\n      _bSphereForOneVisual.copy(visual.getBoundaries().boundingSphere);\n      _bSphereForOneVisual.applyMatrix4(visual.matrixWorld).applyMatrix4(matrix);\n      _bSphereForOneVisual.getBoundingBox(_bBoxForOneVisual);\n      _bBox.union(_bBoxForOneVisual);\n    });\n    _bBox.getCenter(OBB.center);\n\n    _invMatrix.copy(matrix).invert();\n    OBB.center.applyMatrix4(_invMatrix);\n\n    const { min } = _bBox;\n    const { max } = _bBox;\n    _points[0].set(min.x, min.y, min.z); // 000\n    _points[1].set(max.x, min.y, min.z); // 100\n    _points[2].set(min.x, max.y, min.z); // 010\n    _points[3].set(min.x, min.y, max.z); // 001\n    for (let i = 0, l = _points.length; i < l; i++) {\n      _points[i].applyMatrix4(_invMatrix);\n    }\n\n    OBB.halfSize.set(\n      Math.abs(_points[0].x - _points[1].x),\n      Math.abs(_points[0].y - _points[2].y),\n      Math.abs(_points[0].z - _points[3].z),\n    ).multiplyScalar(0.5);\n  };\n}());\n\nMiew.prototype._updateFog = function () {\n  const gfx = this._gfx;\n\n  if (settings.now.fog) {\n    if (typeof gfx.scene.fog === 'undefined' || gfx.scene.fog === null) {\n      const color = chooseFogColor();\n      gfx.scene.fog = new THREE.Fog(color);\n      this._setUberMaterialValues({ fog: settings.now.fog });\n    }\n    updateFogRange(gfx.scene.fog, gfx.camera.position.z, this._getBSphereRadius());\n  } else if (gfx.scene.fog) {\n    gfx.scene.fog = undefined;\n    this._setUberMaterialValues({ fog: settings.now.fog });\n  }\n};\n\nMiew.prototype._onUpdate = function () {\n  if (this.isScriptingCommandAvailable !== undefined && this.isScriptingCommandAvailable() && !this._building) {\n    this.callNextCmd();\n  }\n\n  this._objectControls.update();\n\n  this._forEachComplexVisual((visual) => {\n    visual.getComplex().update();\n  });\n\n  if (settings.now.autobuild && !this._loading.length && !this._building && this._needRebuild()) {\n    this.rebuild();\n  }\n\n  if (!this._loading.length && !this._building && !this._needRebuild()) {\n    this._updateView();\n  }\n\n  this._updateFog();\n\n  if (this._gfx.renderer.xr.enabled) {\n    this.webVR.updateMoleculeScale();\n  }\n};\n\nMiew.prototype._onRender = function () {\n  const gfx = this._gfx;\n\n  // update all matrices\n  gfx.scene.updateMatrixWorld();\n  gfx.camera.updateMatrixWorld();\n\n  this._clipPlaneUpdateValue(this._getBSphereRadius());\n  this._fogFarUpdateValue();\n\n  gfx.renderer.setRenderTarget(null);\n  gfx.renderer.clear();\n\n  this._renderFrame(settings.now.stereo);\n};\n\nMiew.prototype._renderFrame = (function () {\n  const _anaglyphMat = new AnaglyphMaterial();\n  const _size = new THREE.Vector2();\n\n  return function (stereo) {\n    const gfx = this._gfx;\n    const { renderer } = gfx;\n\n    renderer.getSize(_size);\n\n    if (stereo !== 'NONE') {\n      gfx.camera.focus = gfx.camera.position.z; // set focus to the center of the object\n      gfx.stereoCam.aspect = 1.0;\n\n      // in anaglyph mode we render full-size image for each eye\n      // while in other stereo modes only half-size (two images on the screen)\n      if (stereo === 'ANAGLYPH') {\n        gfx.stereoCam.update(gfx.camera);\n      } else {\n        gfx.stereoCam.updateHalfSized(gfx.camera, settings.now.camFov);\n      }\n    }\n\n    // resize offscreen buffers to match the target\n    const pixelRatio = gfx.renderer.getPixelRatio();\n    this._resizeOffscreenBuffers(_size.width * pixelRatio, _size.height * pixelRatio, stereo);\n\n    this._renderShadowMap();\n\n    switch (stereo) {\n      case 'WEBVR':\n      case 'NONE':\n        this._renderScene(gfx.camera, false);\n        break;\n      case 'SIMPLE':\n      case 'DISTORTED':\n        renderer.setScissorTest(true);\n\n        renderer.setScissor(0, 0, _size.width / 2, _size.height);\n        renderer.setViewport(0, 0, _size.width / 2, _size.height);\n        this._renderScene(this._gfx.stereoCam.cameraL, stereo === 'DISTORTED');\n\n        renderer.setScissor(_size.width / 2, 0, _size.width / 2, _size.height);\n        renderer.setViewport(_size.width / 2, 0, _size.width / 2, _size.height);\n        this._renderScene(this._gfx.stereoCam.cameraR, stereo === 'DISTORTED');\n\n        renderer.setScissorTest(false);\n        break;\n      case 'ANAGLYPH':\n        this._renderScene(this._gfx.stereoCam.cameraL, false, gfx.stereoBufL);\n        this._renderScene(this._gfx.stereoCam.cameraR, false, gfx.stereoBufR);\n        renderer.setRenderTarget(null);\n        _anaglyphMat.uniforms.srcL.value = gfx.stereoBufL.texture;\n        _anaglyphMat.uniforms.srcR.value = gfx.stereoBufR.texture;\n        gfx.renderer.renderScreenQuad(_anaglyphMat);\n        break;\n      default:\n    }\n\n    gfx.renderer2d.render(gfx.scene, gfx.camera);\n\n    if (settings.now.axes && gfx.axes && !gfx.renderer.xr.enabled) {\n      gfx.axes.render(renderer);\n    }\n  };\n}());\n\nMiew.prototype._onBgColorChanged = function () {\n  const gfx = this._gfx;\n  const color = chooseFogColor();\n  if (gfx) {\n    if (gfx.scene.fog) {\n      gfx.scene.fog.color.set(color);\n    }\n    gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\n  }\n  this._needRender = true;\n};\n\nMiew.prototype._onFogColorChanged = function () {\n  const gfx = this._gfx;\n  const color = chooseFogColor();\n  if (gfx && gfx.scene.fog) {\n    gfx.scene.fog.color.set(color);\n  }\n  this._needRender = true;\n};\n\nMiew.prototype._setUberMaterialValues = function (values) {\n  this._gfx.root.traverse((obj) => {\n    if ((obj instanceof THREE.Mesh || obj instanceof THREE.LineSegments || obj instanceof THREE.Line)\n        && obj.material instanceof UberMaterial) {\n      obj.material.setValues(values);\n      obj.material.needsUpdate = true;\n    }\n  });\n};\n\nMiew.prototype._enableMRT = function (on, renderBuffer, textureBuffer) {\n  const gfx = this._gfx;\n  const gl = gfx.renderer.getContext();\n  const ext = gl.getExtension('WEBGL_draw_buffers');\n  const { properties } = gfx.renderer;\n\n  if (!on) {\n    ext.drawBuffersWEBGL([gl.COLOR_ATTACHMENT0, null]);\n    return;\n  }\n\n  // take extra texture from Texture Buffer\n  gfx.renderer.setRenderTarget(textureBuffer);\n  const tx8 = properties.get(textureBuffer.texture).__webglTexture;\n  gl.bindTexture(gl.TEXTURE_2D, tx8);\n\n  // take texture and framebuffer from renderbuffer\n  gfx.renderer.setRenderTarget(renderBuffer);\n  const fb = properties.get(renderBuffer).__webglFramebuffer;\n  const tx = properties.get(renderBuffer.texture).__webglTexture;\n\n  // set framebuffer\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n  fb.width = renderBuffer.width;\n  fb.height = renderBuffer.height;\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tx, 0);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, ext.COLOR_ATTACHMENT1_WEBGL, gl.TEXTURE_2D, tx8, 0);\n\n  // mapping textures\n  ext.drawBuffersWEBGL([gl.COLOR_ATTACHMENT0, ext.COLOR_ATTACHMENT1_WEBGL]);\n};\n\nMiew.prototype._renderScene = (function () {\n  return function (camera, distortion, target) {\n    distortion = distortion || false;\n    target = target || null;\n\n    const gfx = this._gfx;\n\n    // render to offscreen buffer\n    gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\n    gfx.renderer.setRenderTarget(target);\n    gfx.renderer.clear();\n    if (gfx.renderer.xr.enabled) {\n      gfx.renderer.render(gfx.scene, camera);\n      return;\n    }\n\n    // clean buffer for normals texture\n    gfx.renderer.setClearColor(0x000000, 0.0);\n    gfx.renderer.setRenderTarget(gfx.offscreenBuf4);\n    gfx.renderer.clearColor();\n\n    gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\n    gfx.renderer.setRenderTarget(gfx.offscreenBuf);\n    gfx.renderer.clear();\n\n    const bHaveComplexes = (this._getComplexVisual() !== null);\n    const volumeVisual = this._getVolumeVisual();\n    const ssao = bHaveComplexes && settings.now.ao;\n\n    if (ssao) {\n      this._enableMRT(true, gfx.offscreenBuf, gfx.offscreenBuf4);\n    }\n\n    if (settings.now.transparency === 'prepass') {\n      this._renderWithPrepassTransparency(camera, gfx.offscreenBuf);\n    } else if (settings.now.transparency === 'standard') {\n      gfx.renderer.setRenderTarget(gfx.offscreenBuf);\n      gfx.renderer.render(gfx.scene, camera);\n    }\n\n    if (ssao) {\n      this._enableMRT(false, null, null);\n    }\n\n    // when fxaa we should get resulting image in temp off-screen buff2 for further postprocessing with fxaa filter\n    // otherwise we render to canvas\n    const outline = bHaveComplexes && settings.now.outline.on;\n    const fxaa = bHaveComplexes && settings.now.fxaa;\n    const volume = (volumeVisual !== null) && (volumeVisual.getMesh().material != null);\n    let dstBuffer = (ssao || outline || volume || fxaa || distortion) ? gfx.offscreenBuf2 : target;\n    let srcBuffer = gfx.offscreenBuf;\n\n    if (ssao) {\n      this._performAO(\n        srcBuffer,\n        gfx.offscreenBuf4,\n        gfx.offscreenBuf.depthTexture,\n        dstBuffer,\n        gfx.offscreenBuf3,\n        gfx.offscreenBuf2,\n      );\n      if (!fxaa && !distortion && !volume && !outline) {\n        srcBuffer = dstBuffer;\n        dstBuffer = target;\n        gfx.renderer.setRenderTarget(dstBuffer);\n        gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 1.0);\n      }\n    } else {\n      // just copy color buffer to dst buffer\n      gfx.renderer.setRenderTarget(dstBuffer);\n      gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 1.0);\n    }\n\n    // outline\n    if (outline) {\n      srcBuffer = dstBuffer;\n      dstBuffer = (volume || fxaa || distortion) ? gfx.offscreenBuf3 : target;\n      if (srcBuffer != null) {\n        this._renderOutline(camera, gfx.offscreenBuf, srcBuffer, dstBuffer);\n      }\n    }\n\n    // render selected part with outline material\n    this._renderSelection(camera, gfx.offscreenBuf, dstBuffer);\n\n    if (volume) {\n      // copy current picture to the buffer that retains depth-data of the original molecule render\n      // so that volume renderer could use depth-test\n      gfx.renderer.setRenderTarget(gfx.offscreenBuf);\n      gfx.renderer.renderScreenQuadFromTex(dstBuffer.texture, 1.0);\n      dstBuffer = gfx.offscreenBuf;\n      this._renderVolume(volumeVisual, camera, dstBuffer, gfx.volBFTex, gfx.volFFTex, gfx.volWFFTex);\n\n      // if this is the last stage -- copy image to target\n      if (!fxaa && !distortion) {\n        gfx.renderer.setRenderTarget(target);\n        gfx.renderer.renderScreenQuadFromTex(dstBuffer.texture, 1.0);\n      }\n    }\n\n    srcBuffer = dstBuffer;\n\n    if (fxaa) {\n      dstBuffer = distortion ? gfx.offscreenBuf4 : target;\n      this._performFXAA(srcBuffer, dstBuffer);\n      srcBuffer = dstBuffer;\n    }\n\n    if (distortion) {\n      dstBuffer = target;\n      this._performDistortion(srcBuffer, dstBuffer, true);\n    }\n  };\n}());\n\nMiew.prototype._performDistortion = (function () {\n  const _scene = new THREE.Scene();\n  const _camera = new THREE.OrthographicCamera(-1.0, 1.0, 1.0, -1.0, -500, 1000);\n\n  const _material = new THREE.RawShaderMaterial({\n    uniforms: {\n      srcTex: { type: 't', value: null },\n      aberration: { type: 'fv3', value: new THREE.Vector3(1.0) },\n    },\n    vertexShader: vertexScreenQuadShader,\n    fragmentShader: fragmentScreenQuadFromDistTex,\n    transparent: false,\n    depthTest: false,\n    depthWrite: false,\n  });\n\n  const _geo = gfxutils.buildDistorionMesh(10, 10, settings.now.debug.stereoBarrel);\n  _scene.add(new meshes.Mesh(_geo, _material));\n\n  return function (srcBuffer, targetBuffer, mesh) {\n    this._gfx.renderer.setRenderTarget(targetBuffer);\n    this._gfx.renderer.clear();\n\n    if (mesh) {\n      _material.uniforms.srcTex.value = srcBuffer.texture;\n      _material.uniforms.aberration.value.set(0.995, 1.0, 1.01);\n      this._gfx.renderer.render(_scene, _camera);\n    } else {\n      this._gfx.renderer.renderScreenQuadFromTexWithDistortion(srcBuffer, settings.now.debug.stereoBarrel);\n    }\n  };\n}());\n\nMiew.prototype._renderOutline = (function () {\n  const _outlineMaterial = new OutlineMaterial({ depth: true });\n\n  return function (camera, srcDepthBuffer, srcColorBuffer, targetBuffer) {\n    const self = this;\n    const gfx = self._gfx;\n\n    // apply Sobel filter -- draw outline\n    _outlineMaterial.uniforms.srcTex.value = srcColorBuffer.texture;\n    _outlineMaterial.uniforms.srcDepthTex.value = srcDepthBuffer.depthTexture;\n    _outlineMaterial.uniforms.srcTexSize.value.set(srcDepthBuffer.width, srcDepthBuffer.height);\n    _outlineMaterial.uniforms.color.value = new THREE.Color(settings.now.outline.color);\n    _outlineMaterial.uniforms.threshold.value = settings.now.outline.threshold;\n    _outlineMaterial.uniforms.thickness.value = new THREE.Vector2(\n      settings.now.outline.thickness,\n      settings.now.outline.thickness,\n    );\n\n    gfx.renderer.setRenderTarget(targetBuffer);\n    gfx.renderer.renderScreenQuad(_outlineMaterial);\n  };\n}());\n\nMiew.prototype._renderShadowMap = (function () {\n  const pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\n\n  return function () {\n    if (!settings.now.shadow.on) {\n      return;\n    }\n\n    const gfx = this._gfx;\n    const currentRenderTarget = gfx.renderer.getRenderTarget();\n    const activeCubeFace = gfx.renderer.getActiveCubeFace();\n    const activeMipmapLevel = gfx.renderer.getActiveMipmapLevel();\n\n    const _state = gfx.renderer.state;\n\n    // Set GL state for depth map.\n    _state.setBlending(THREE.NoBlending);\n    _state.buffers.color.setClear(1, 1, 1, 1);\n    _state.buffers.depth.setTest(true);\n    _state.setScissorTest(false);\n\n    for (let i = 0; i < gfx.scene.children.length; i++) {\n      if (gfx.scene.children[i].type === 'DirectionalLight') {\n        const light = gfx.scene.children[i];\n\n        if (light.shadow.map == null) {\n          light.shadow.map = new THREE.WebGLRenderTarget(light.shadow.mapSize.width, light.shadow.mapSize.height, pars);\n          light.shadow.camera.updateProjectionMatrix();\n        }\n        light.shadow.updateMatrices(light);\n\n        gfx.renderer.setRenderTarget(light.shadow.map);\n        gfx.renderer.clear();\n\n        gfx.renderer.render(gfx.scene, light.shadow.camera);\n      }\n    }\n    gfx.renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n  };\n}());\n\n/**\n * Check if there is selection which must be rendered or not.\n * @private\n * @returns {boolean} true on existing selection to render\n */\nMiew.prototype._hasSelectionToRender = function () {\n  const selPivot = this._gfx.selectionPivot;\n\n  for (let i = 0; i < selPivot.children.length; i++) {\n    const selPivotChild = selPivot.children[i];\n    if (selPivotChild.children.length > 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\nMiew.prototype._renderSelection = (function () {\n  const _outlineMaterial = new OutlineMaterial();\n\n  return function (camera, srcBuffer, targetBuffer) {\n    const self = this;\n    const gfx = self._gfx;\n\n    // clear offscreen buffer (leave z-buffer intact)\n    gfx.renderer.setClearColor('black', 0);\n\n    // render selection to offscreen buffer\n    gfx.renderer.setRenderTarget(srcBuffer);\n    gfx.renderer.clear(true, false, false);\n    if (self._hasSelectionToRender()) {\n      gfx.selectionRoot.matrix = gfx.root.matrix;\n      gfx.selectionPivot.matrix = gfx.pivot.matrix;\n      gfx.renderer.render(gfx.selectionScene, camera);\n    } else {\n      // just render something to force \"target clear\" operation to finish\n      gfx.renderer.renderDummyQuad();\n    }\n\n    // overlay to screen\n    gfx.renderer.setRenderTarget(targetBuffer);\n    gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 0.6);\n\n    // apply Sobel filter -- draw outline\n    _outlineMaterial.uniforms.srcTex.value = srcBuffer.texture;\n    _outlineMaterial.uniforms.srcTexSize.value.set(srcBuffer.width, srcBuffer.height);\n    gfx.renderer.renderScreenQuad(_outlineMaterial);\n  };\n}());\n\nMiew.prototype._checkVolumeRenderingSupport = function (renderTarget) {\n  if (!renderTarget) {\n    return false;\n  }\n  const gfx = this._gfx;\n  const oldRT = gfx.renderer.getRenderTarget();\n\n  gfx.renderer.setRenderTarget(renderTarget);\n  const context = gfx.renderer.getContext();\n  const result = context.checkFramebufferStatus(context.FRAMEBUFFER);\n  gfx.renderer.setRenderTarget(oldRT);\n  if (result !== context.FRAMEBUFFER_COMPLETE) {\n    // floatFrameBufferWarning = ;\n    this.logger.warn('Device doesn\\'t support electron density rendering');\n    return false;\n  }\n  return true;\n};\n\nMiew.prototype._renderVolume = (function () {\n  const volumeBFMat = new VolumeMaterial.BackFacePosMaterial();\n  const volumeFFMat = new VolumeMaterial.FrontFacePosMaterial();\n  const cubeOffsetMat = new THREE.Matrix4().makeTranslation(0.5, 0.5, 0.5);\n  const world2colorMat = new THREE.Matrix4();\n\n  let volumeRenderingSupported;\n\n  return function (volumeVisual, camera, dstBuf, tmpBuf1, tmpBuf2, tmpBuf3) {\n    const gfx = this._gfx;\n\n    if (typeof volumeRenderingSupported === 'undefined') {\n      volumeRenderingSupported = this._checkVolumeRenderingSupport(tmpBuf1);\n    }\n\n    if (!volumeRenderingSupported) {\n      return;\n    }\n\n    const mesh = volumeVisual.getMesh();\n\n    mesh.rebuild(gfx.camera);\n\n    // use main camera to prepare special textures to be used by volumetric rendering\n    // these textures have the size of the window and are stored in offscreen buffers\n    gfx.renderer.setClearColor('black', 0);\n    gfx.renderer.setRenderTarget(tmpBuf1);\n    gfx.renderer.clear();\n    gfx.renderer.setRenderTarget(tmpBuf2);\n    gfx.renderer.clear();\n    gfx.renderer.setRenderTarget(tmpBuf3);\n    gfx.renderer.clear();\n\n    gfx.renderer.setRenderTarget(tmpBuf1);\n    // draw plane with its own material, because it differs slightly from volumeBFMat\n    camera.layers.set(gfxutils.LAYERS.VOLUME_BFPLANE);\n    gfx.renderer.render(gfx.scene, camera);\n\n    camera.layers.set(gfxutils.LAYERS.VOLUME);\n    gfx.scene.overrideMaterial = volumeBFMat;\n    gfx.renderer.render(gfx.scene, camera);\n\n    gfx.renderer.setRenderTarget(tmpBuf2);\n    camera.layers.set(gfxutils.LAYERS.VOLUME);\n    gfx.scene.overrideMaterial = volumeFFMat;\n    gfx.renderer.render(gfx.scene, camera);\n\n    gfx.scene.overrideMaterial = null;\n    camera.layers.set(gfxutils.LAYERS.DEFAULT);\n\n    // prepare texture that contains molecule positions\n    world2colorMat.copy(mesh.matrixWorld).invert();\n    UberMaterial.prototype.uberOptions.world2colorMatrix.multiplyMatrices(cubeOffsetMat, world2colorMat);\n    camera.layers.set(gfxutils.LAYERS.COLOR_FROM_POSITION);\n    gfx.renderer.setRenderTarget(tmpBuf3);\n    gfx.renderer.render(gfx.scene, camera);\n\n    // render volume\n    const vm = mesh.material;\n    vm.uniforms._BFRight.value = tmpBuf1.texture;\n    vm.uniforms._FFRight.value = tmpBuf2.texture;\n    vm.uniforms._WFFRight.value = tmpBuf3.texture;\n    camera.layers.set(gfxutils.LAYERS.VOLUME);\n    gfx.renderer.setRenderTarget(dstBuf);\n    gfx.renderer.render(gfx.scene, camera);\n    camera.layers.set(gfxutils.LAYERS.DEFAULT);\n  };\n}());\n\n/*  Render scene with 'ZPrepass transparency Effect'\n   * Idea: transparent objects are rendered in two passes. The first one writes result only into depth buffer.\n   * The second pass reads depth buffer and writes only to color buffer. The method results in\n   * correct image of front part of the semi-transparent objects, but we can see only front transparent objects\n   * and opaque objects inside, there is no transparent objects inside.\n   * Notes: 1. Opaque objects should be rendered strictly before semi-transparent ones.\n   * 2. Realization doesn't use camera layers because scene traversing is used for material changes and\n   * we can use it to select needed meshes and don't complicate meshes builders with layers\n  */\nMiew.prototype._renderWithPrepassTransparency = (function () {\n  return function (camera, targetBuffer) {\n    const gfx = this._gfx;\n    gfx.renderer.setRenderTarget(targetBuffer);\n\n    // opaque objects\n    camera.layers.set(gfxutils.LAYERS.DEFAULT);\n    gfx.renderer.render(gfx.scene, camera);\n\n    // transparent objects z prepass\n    camera.layers.set(gfxutils.LAYERS.PREPASS_TRANSPARENT);\n    gfx.renderer.getContext().colorMask(false, false, false, false); // don't update color buffer\n    gfx.renderer.render(gfx.scene, camera);\n    gfx.renderer.getContext().colorMask(true, true, true, true); // update color buffer\n\n    // transparent objects color pass\n    camera.layers.set(gfxutils.LAYERS.TRANSPARENT);\n    gfx.renderer.render(gfx.scene, camera);\n\n    // restore default layer\n    camera.layers.set(gfxutils.LAYERS.DEFAULT);\n  };\n}());\n\nMiew.prototype._performFXAA = (function () {\n  const _fxaaMaterial = new FXAAMaterial();\n\n  return function (srcBuffer, targetBuffer) {\n    if (typeof srcBuffer === 'undefined' || typeof targetBuffer === 'undefined') {\n      return;\n    }\n\n    const gfx = this._gfx;\n\n    // clear canvas\n    gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\n    gfx.renderer.setRenderTarget(targetBuffer);\n    gfx.renderer.clear();\n\n    // do fxaa processing of offscreen buff2\n    _fxaaMaterial.uniforms.srcTex.value = srcBuffer.texture;\n    _fxaaMaterial.uniforms.srcTexelSize.value.set(1.0 / srcBuffer.width, 1.0 / srcBuffer.height);\n    _fxaaMaterial.uniforms.bgColor.value.set(settings.now.bg.color);\n\n    if (_fxaaMaterial.bgTransparent !== settings.now.bg.transparent) {\n      _fxaaMaterial.setValues({ bgTransparent: settings.now.bg.transparent });\n      _fxaaMaterial.needsUpdate = true;\n    }\n    gfx.renderer.renderScreenQuad(_fxaaMaterial);\n  };\n}());\n\nMiew.prototype._performAO = (function () {\n  const _aoMaterial = new AOMaterial();\n  const _horBlurMaterial = new AOHorBlurMaterial();\n  const _vertBlurMaterial = new AOVertBlurWithBlendMaterial();\n\n  const _scale = new THREE.Vector3();\n  return function (srcColorBuffer, normalBuffer, srcDepthTexture, targetBuffer, tempBuffer, tempBuffer1) {\n    if (!srcColorBuffer || !normalBuffer || !srcDepthTexture || !targetBuffer || !tempBuffer || !tempBuffer1) {\n      return;\n    }\n    const gfx = this._gfx;\n    const tanHalfFOV = Math.tan(THREE.MathUtils.DEG2RAD * 0.5 * gfx.camera.fov);\n\n    _aoMaterial.uniforms.diffuseTexture.value = srcColorBuffer.texture;\n    _aoMaterial.uniforms.depthTexture.value = srcDepthTexture;\n    _aoMaterial.uniforms.normalTexture.value = normalBuffer.texture;\n    _aoMaterial.uniforms.srcTexelSize.value.set(1.0 / srcColorBuffer.width, 1.0 / srcColorBuffer.height);\n    _aoMaterial.uniforms.camNearFar.value.set(gfx.camera.near, gfx.camera.far);\n    _aoMaterial.uniforms.projMatrix.value = gfx.camera.projectionMatrix;\n    _aoMaterial.uniforms.aspectRatio.value = gfx.camera.aspect;\n    _aoMaterial.uniforms.tanHalfFOV.value = tanHalfFOV;\n    gfx.root.matrix.extractScale(_scale);\n    _aoMaterial.uniforms.kernelRadius.value = settings.now.debug.ssaoKernelRadius * _scale.x;\n    _aoMaterial.uniforms.depthThreshold.value = 2.0 * this._getBSphereRadius(); // diameter\n    _aoMaterial.uniforms.factor.value = settings.now.debug.ssaoFactor;\n    // N: should be tempBuffer1 for proper use of buffers (see buffers using outside the function)\n    gfx.renderer.setRenderTarget(tempBuffer1);\n    gfx.renderer.renderScreenQuad(_aoMaterial);\n\n    _horBlurMaterial.uniforms.aoMap.value = tempBuffer1.texture;\n    _horBlurMaterial.uniforms.srcTexelSize.value.set(1.0 / tempBuffer1.width, 1.0 / tempBuffer1.height);\n    _horBlurMaterial.uniforms.depthTexture.value = srcDepthTexture;\n    gfx.renderer.setRenderTarget(tempBuffer);\n    gfx.renderer.renderScreenQuad(_horBlurMaterial);\n\n    _vertBlurMaterial.uniforms.aoMap.value = tempBuffer.texture;\n    _vertBlurMaterial.uniforms.diffuseTexture.value = srcColorBuffer.texture;\n    _vertBlurMaterial.uniforms.srcTexelSize.value.set(1.0 / tempBuffer.width, 1.0 / tempBuffer.height);\n    _vertBlurMaterial.uniforms.depthTexture.value = srcDepthTexture;\n    _vertBlurMaterial.uniforms.projMatrix.value = gfx.camera.projectionMatrix;\n    _vertBlurMaterial.uniforms.aspectRatio.value = gfx.camera.aspect;\n    _vertBlurMaterial.uniforms.tanHalfFOV.value = tanHalfFOV;\n    const { fog } = gfx.scene;\n    if (fog) {\n      _vertBlurMaterial.uniforms.fogNearFar.value.set(fog.near, fog.far);\n      _vertBlurMaterial.uniforms.fogColor.value.set(fog.color.r, fog.color.g, fog.color.b, settings.now.fogAlpha);\n    }\n    if ((_vertBlurMaterial.useFog !== settings.now.fog)\n      || (_vertBlurMaterial.fogTransparent !== settings.now.bg.transparent)) {\n      _vertBlurMaterial.setValues({ useFog: settings.now.fog, fogTransparent: settings.now.bg.transparent });\n      _vertBlurMaterial.needsUpdate = true;\n    }\n    gfx.renderer.setRenderTarget(targetBuffer);\n    gfx.renderer.renderScreenQuad(_vertBlurMaterial);\n  };\n}());\n\n/**\n * Reset the viewer, unload molecules.\n * @param {boolean=} keepReps - Keep representations while resetting viewer state.\n */\nMiew.prototype.reset = function (/* keepReps */) {\n  if (this._picker) {\n    this._picker.reset();\n  }\n  this._lastPick = null;\n\n  this._releaseAllVisuals();\n\n  this._setEditMode(EDIT_MODE.COMPLEX);\n\n  this._resetObjects();\n\n  if (this._gfx) {\n    gfxutils.clearTree(this._gfx.pivot);\n    this._gfx.renderer2d.reset();\n  }\n\n  this.setNeedRender();\n};\n\nMiew.prototype._resetScene = function () {\n  this._objectControls.reset();\n  this._objectControls.allowTranslation(true);\n  this._objectControls.allowAltObjFreeRotation(true);\n  this.resetReps();\n  this.resetPivot();\n  this.rebuildAll();\n};\n\nMiew.prototype.resetView = function () {\n  // reset controls\n  if (this._picker) {\n    this._picker.reset();\n  }\n  this._setEditMode(EDIT_MODE.COMPLEX);\n  this._resetScene();\n\n  // reset selection\n  this._forEachComplexVisual((visual) => {\n    visual.updateSelectionMask({});\n    visual.rebuildSelectionGeometry();\n  });\n};\n\nMiew.prototype._export = function (format) {\n  const TheExporter = _.head(io.exporters.find({ format }));\n  if (!TheExporter) {\n    this.logger.error('Could not find suitable exporter for this source');\n    return Promise.reject(new Error('Could not find suitable exporter for this source'));\n  }\n  this.dispatchEvent({ type: 'exporting' });\n\n  if (this._visuals[this._curVisualName] instanceof ComplexVisual) {\n    let dataSource = null;\n    if (TheExporter.SourceClass === ComplexVisual) {\n      dataSource = this._visuals[this._curVisualName];\n    } else if (TheExporter.SourceClass === Complex) {\n      dataSource = this._visuals[this._curVisualName]._complex;\n    }\n    const exporter = new TheExporter(dataSource, { miewVersion: Miew.VERSION });\n    return exporter.export().then((data) => data);\n  }\n  if (this._visuals[this._curVisualName] instanceof VolumeVisual) {\n    return Promise.reject(new Error('Sorry, exporter for volume data not implemented yet'));\n  }\n  return Promise.reject(new Error('Unexpected format of data'));\n};\n\nconst rePdbId = /^(?:(pdb|cif|mmtf|ccp4|dsn6):\\s*)?(\\d[a-z\\d]{3})$/i;\nconst rePubchem = /^(?:pc|pubchem):\\s*([a-z]+)$/i;\nconst reUrlScheme = /^([a-z][a-z\\d\\-+.]*):/i;\n\nfunction resolveSourceShortcut(source, opts) {\n  if (!_.isString(source)) {\n    return source;\n  }\n\n  // e.g. \"mmtf:1CRN\"\n  const matchesPdbId = rePdbId.exec(source);\n  if (matchesPdbId) {\n    let [, format = 'pdb', id] = matchesPdbId;\n\n    format = format.toLowerCase();\n    id = id.toUpperCase();\n\n    switch (format) {\n      case 'pdb':\n        source = `https://files.rcsb.org/download/${id}.pdb`;\n        break;\n      case 'cif':\n        source = `https://files.rcsb.org/download/${id}.cif`;\n        break;\n      case 'mmtf':\n        source = `https://mmtf.rcsb.org/v1.0/full/${id}`;\n        break;\n      case 'ccp4':\n        source = `https://www.ebi.ac.uk/pdbe/coordinates/files/${id.toLowerCase()}.ccp4`;\n        break;\n      case 'dsn6':\n        source = `https://edmaps.rcsb.org/maps/${id.toLowerCase()}_2fofc.dsn6`;\n        break;\n      default:\n        throw new Error('Unexpected data format shortcut');\n    }\n\n    opts.fileType = format;\n    opts.fileName = `${id}.${format}`;\n    opts.sourceType = 'url';\n    return source;\n  }\n\n  // e.g. \"pc:aspirin\"\n  const matchesPubchem = rePubchem.exec(source);\n  if (matchesPubchem) {\n    const compound = matchesPubchem[1].toLowerCase();\n    source = `https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/name/${compound}/JSON?record_type=3d`;\n    opts.fileType = 'pubchem';\n    opts.fileName = `${compound}.json`;\n    opts.sourceType = 'url';\n    return source;\n  }\n\n  // otherwise is should be an URL\n  if (opts.sourceType === 'url' || opts.sourceType === undefined) {\n    opts.sourceType = 'url';\n\n    // e.g. \"./data/1CRN.pdb\"\n    if (!reUrlScheme.test(source)) {\n      source = utils.resolveURL(source);\n    }\n  }\n\n  return source;\n}\n\nfunction updateBinaryMode(opts) {\n  let { binary } = opts;\n\n  // detect by format\n  if (opts.fileType !== undefined) {\n    const TheParser = _.head(io.parsers.find({ format: opts.fileType }));\n    if (TheParser) {\n      binary = TheParser.binary || false;\n    } else {\n      throw new Error('Could not find suitable parser for this format');\n    }\n  }\n\n  // detect by file extension\n  if (binary === undefined && opts.fileExt !== undefined) {\n    const TheParser = _.head(io.parsers.find({ ext: opts.fileExt }));\n    if (TheParser) {\n      binary = TheParser.binary || false;\n    }\n  }\n\n  // temporary workaround for animation\n  if (opts.fileExt !== undefined && opts.fileExt.toLowerCase() === '.man') {\n    opts.binary = true;\n    opts.animation = true; // who cares?\n  }\n\n  // update if detected\n  if (binary !== undefined) {\n    if (opts.binary !== undefined && opts.binary !== binary) {\n      opts.context.logger.warn('Overriding incorrect binary mode');\n    }\n  }\n\n  opts.binary = binary || false;\n}\n\nfunction _fetchData(source, opts, job) {\n  return new Promise(((resolve) => {\n    if (job.shouldCancel()) {\n      throw new Error('Operation cancelled');\n    }\n    job.notify({ type: 'fetching' });\n\n    // allow for source shortcuts\n    source = resolveSourceShortcut(source, opts);\n\n    // detect a proper loader\n    const TheLoader = _.head(io.loaders.find({ type: opts.sourceType, source }));\n    if (!TheLoader) {\n      throw new Error(LOADER_NOT_FOUND);\n    }\n\n    // split file name\n    const fileName = opts.fileName || TheLoader.extractName(source);\n    if (fileName) {\n      const [name, fileExt] = utils.splitFileName(fileName);\n      _.defaults(opts, { name, fileExt, fileName });\n    }\n\n    // should it be text or binary?\n    updateBinaryMode(opts);\n\n    // FIXME: All new settings retrieved from server are applied after the loading is complete. However, we need some\n    // flags to alter the loading process itself. Here we apply them in advance. Dirty hack. Kill the server, remove\n    // all hacks and everybody's happy.\n    let newOptions = _.get(opts, 'preset.expression');\n    if (!_.isUndefined(newOptions)) {\n      newOptions = JSON.parse(newOptions);\n      if (newOptions && newOptions.settings) {\n        const keys = ['singleUnit'];\n        for (let keyIndex = 0, keyCount = keys.length; keyIndex < keyCount; ++keyIndex) {\n          const key = keys[keyIndex];\n          const value = _.get(newOptions.settings, key);\n          if (!_.isUndefined(value)) {\n            settings.set(key, value);\n          }\n        }\n      }\n    }\n\n    // create a loader\n    const loader = new TheLoader(source, opts);\n    loader.context = opts.context;\n    job.addEventListener('cancel', () => loader.abort());\n\n    loader.addEventListener('progress', (event) => {\n      if (event.lengthComputable && event.total > 0) {\n        reportProgress(loader.logger, 'Fetching', event.loaded / event.total);\n      } else {\n        reportProgress(loader.logger, 'Fetching');\n      }\n    });\n\n    console.time('fetch');\n    const promise = loader.load()\n      .then((data) => {\n        console.timeEnd('fetch');\n        opts.context.logger.info('Fetching finished');\n        job.notify({ type: 'fetchingDone', data });\n        return data;\n      })\n      .catch((error) => {\n        console.timeEnd('fetch');\n        opts.context.logger.debug(error.message);\n        if (error.stack) {\n          opts.context.logger.debug(error.stack);\n        }\n        opts.context.logger.error('Fetching failed');\n        job.notify({ type: 'fetchingDone', error });\n        throw error;\n      });\n    resolve(promise);\n  }));\n}\n\nfunction _parseData(data, opts, job) {\n  if (job.shouldCancel()) {\n    return Promise.reject(new Error('Operation cancelled'));\n  }\n\n  job.notify({ type: 'parsing' });\n\n  const TheParser = _.head(io.parsers.find({ format: opts.fileType, ext: opts.fileExt, data }));\n  if (!TheParser) {\n    return Promise.reject(new Error('Could not find suitable parser'));\n  }\n\n  const parser = new TheParser(data, opts);\n  parser.context = opts.context;\n  job.addEventListener('cancel', () => parser.abort());\n\n  console.time('parse');\n  return parser.parse()\n    .then((dataSet) => {\n      console.timeEnd('parse');\n      job.notify({ type: 'parsingDone', data: dataSet });\n      return dataSet;\n    })\n    .catch((error) => {\n      console.timeEnd('parse');\n      opts.error = error;\n      opts.context.logger.debug(error.message);\n      if (error.stack) {\n        opts.context.logger.debug(error.stack);\n      }\n      opts.context.logger.error('Parsing failed');\n      job.notify({ type: 'parsingDone', error });\n      throw error;\n    });\n}\n\n/**\n * Load molecule asynchronously.\n * @param {string|File} source - Molecule source to load (e.g. PDB ID, URL or File object).\n * @param {object=} opts - Options.\n * @param {string=} opts.sourceType - Data source type (e.g. 'url', 'file').\n * @param {string=} opts.fileType - Data contents type (e.g. 'pdb', 'cml').\n * @param {string=} opts.mdFile - .nc file path.\n * @param {boolean=} opts.keepRepsInfo - prevent reset of object and reps information.\n * @returns {Promise} name of the visual that was added to the viewer\n */\nMiew.prototype.load = function (source, opts) {\n  opts = _.merge({}, opts, {\n    context: this,\n  });\n\n  // for a single-file scenario\n  if (!this.settings.now.use.multiFile) {\n    // abort all loaders in progress\n    if (this._loading.length) {\n      this._loading.forEach((job) => {\n        job.cancel();\n      });\n      this._loading.length = 0;\n    }\n\n    // reset\n    if (!opts.animation) { // FIXME: sometimes it is set AFTERWARDS!\n      this.reset(true);\n    }\n  }\n\n  this._interpolator.reset();\n\n  this.dispatchEvent({ type: 'loading', options: opts, source });\n\n  const job = new JobHandle();\n  this._loading.push(job);\n  job.addEventListener('notification', (e) => {\n    this.dispatchEvent(e.slaveEvent);\n  });\n\n  this._spinner.spin(this._container);\n\n  const onLoadEnd = (anything) => {\n    const jobIndex = this._loading.indexOf(job);\n    if (jobIndex !== -1) {\n      this._loading.splice(jobIndex, 1);\n    }\n    this._spinner.stop();\n    this._refreshTitle();\n    job.notify({ type: 'loadingDone', anything });\n    return anything;\n  };\n\n  return _fetchData(source, opts, job)\n    .then((data) => _parseData(data, opts, job))\n    .then((object) => {\n      const name = this._onLoad(object, opts);\n      return onLoadEnd(name);\n    })\n    .catch((err) => {\n      this.logger.error('Could not load data');\n      this.logger.debug(err);\n      throw onLoadEnd(err);\n    });\n};\n\n/**\n * Unload molecule (delete corresponding visual).\n * @param {string=} name - name of the visual\n */\nMiew.prototype.unload = function (name) {\n  this._removeVisual(name || this.getCurrentVisual());\n  this.resetPivot();\n  if (settings.now.shadow.on) {\n    this._updateShadowCamera();\n  }\n};\n\n/**\n * Start new animation. Now is broken.\n * @param fileData - new data to animate\n * @private\n * @deprecated until animation system refactoring.\n */\nMiew.prototype._startAnimation = function (fileData) {\n  this._stopAnimation();\n  const self = this;\n  const visual = this._getComplexVisual();\n  if (visual === null) {\n    this.logger.error('Unable to start animation - no molecule is loaded.');\n    return;\n  }\n  try {\n    this._frameInfo = new FrameInfo(\n      visual.getComplex(), fileData,\n      {\n        onLoadStatusChanged() {\n          self.dispatchEvent({\n            type: 'mdPlayerStateChanged',\n            state: {\n              isPlaying: self._isAnimating,\n              isLoading: self._frameInfo ? self._frameInfo.isLoading : true,\n            },\n          });\n        },\n        onError(message) {\n          self._stopAnimation();\n          self.logger.error(message);\n        },\n      },\n    );\n  } catch (e) {\n    this.logger.error('Animation file does not fit to current complex!');\n    return;\n  }\n  this._continueAnimation();\n};\n\n/**\n * Pause current animation. Now is broken.\n * @private\n * @deprecated until animation system refactoring.\n */\nMiew.prototype._pauseAnimation = function () {\n  if (this._animInterval === null) {\n    return;\n  }\n  this._isAnimating = false;\n  clearInterval(this._animInterval);\n  this._animInterval = null;\n  if (this._frameInfo) {\n    this.dispatchEvent({\n      type: 'mdPlayerStateChanged',\n      state: {\n        isPlaying: this._isAnimating,\n        isLoading: this._frameInfo.isLoading,\n      },\n    });\n  }\n};\n\n/**\n * Continue current animation after pausing. Now is broken.\n * @private\n * @deprecated until animation system refactoring.\n */\nMiew.prototype._continueAnimation = function () {\n  this._isAnimating = true;\n  let minFrameTime = 1000 / settings.now.maxfps;\n  minFrameTime = Number.isNaN(minFrameTime) ? 0 : minFrameTime;\n  const self = this;\n  const { pivot } = self._gfx;\n  const visual = this._getComplexVisual();\n  if (visual) {\n    visual.resetSelectionMask();\n    visual.rebuildSelectionGeometry();\n    this._msgAtomInfo.style.opacity = 0.0;\n  }\n  this._animInterval = setInterval(() => {\n    self.dispatchEvent({\n      type: 'mdPlayerStateChanged',\n      state: {\n        isPlaying: self._isAnimating,\n        isLoading: self._frameInfo.isLoading,\n      },\n    });\n    if (self._frameInfo.frameIsReady) {\n      pivot.updateToFrame(self._frameInfo);\n      self._updateObjsToFrame(self._frameInfo);\n      self._refreshTitle(` Frame ${self._frameInfo._currFrame} of ${self._frameInfo._framesCount\n      } time interval - ${self._frameInfo._timeStep}`);\n      try {\n        self._frameInfo.nextFrame();\n      } catch (e) {\n        self.logger.error('Error during animation');\n        self._stopAnimation();\n        return;\n      }\n      self._needRender = true;\n    }\n  }, minFrameTime);\n};\n\n/**\n * Stop current animation. Now is broken.\n * @private\n * @deprecated until animation system refactoring.\n */\nMiew.prototype._stopAnimation = function () {\n  if (this._animInterval === null) {\n    return;\n  }\n  clearInterval(this._animInterval);\n  this._frameInfo.disableEvents();\n  this._frameInfo = null;\n  this._animInterval = null;\n  this.dispatchEvent({\n    type: 'mdPlayerStateChanged',\n    state: null,\n  });\n};\n\n/**\n * Invoked upon successful loading of some data source\n * @param {DataSource} dataSource - Data source for visualization (molecular complex or other)\n * @param {object} opts - Options.\n * @private\n */\nMiew.prototype._onLoad = function (dataSource, opts) {\n  const gfx = this._gfx;\n  let visualName = null;\n\n  if (opts.animation) {\n    this._refreshTitle();\n    this._startAnimation(dataSource);\n    return null;\n  }\n  this._stopAnimation();\n  if (!opts || !opts.keepRepsInfo) {\n    this._opts.reps = null;\n    this._opts._objects = null;\n  }\n\n  if (dataSource.id === 'Complex') {\n    const complex = dataSource;\n\n    // update title\n    if (opts.fileName) {\n      complex.name = complex.name || removeExtension(opts.fileName).toUpperCase();\n    } else if (opts.amberFileName) {\n      complex.name = complex.name || removeExtension(opts.amberFileName).toUpperCase();\n    } else {\n      complex.name = `Dynamic ${opts.fileType} molecule`;\n    }\n\n    visualName = this._addVisual(new ComplexVisual(complex.name, complex));\n    this._curVisualName = visualName;\n\n    const desc = this.info();\n    this.logger.info(`Parsed ${opts.fileName} (${\n      desc.atoms} atoms, ${\n      desc.bonds} bonds, ${\n      desc.residues} residues, ${\n      desc.chains} chains).`);\n\n    if (_.isNumber(this._opts.unit)) {\n      complex.setCurrentUnit(this._opts.unit);\n    }\n\n    if (opts.preset) {\n      // ...removed server access...\n    } else if (settings.now.autoPreset) {\n      switch (opts.fileType) {\n        case 'cml':\n          this.resetReps('small');\n          break;\n        case 'pdb':\n        case 'mmtf':\n        case 'cif':\n          if (hasValidResidues(complex)) {\n            this.resetReps('macro');\n          } else {\n            this.resetReps('small');\n          }\n          break;\n        default:\n          this.resetReps('default');\n          break;\n      }\n    } else {\n      this.resetReps('default');\n    }\n  } else if (dataSource.id === 'Volume') {\n    this.resetEd();\n    visualName = this._onLoadEd(dataSource);\n  }\n\n  gfx.camera.updateProjectionMatrix();\n  this._updateFog();\n\n  // reset global transform\n  gfx.root.resetTransform();\n  this.resetPivot();\n\n  // set scale to fit everything on the screen\n  this._objectControls.setScale(settings.now.radiusToFit / this._getBSphereRadius());\n\n  this._resetObjects();\n\n  if (settings.now.autoResolution) {\n    this._tweakResolution();\n  }\n\n  if (settings.now.shadow.on) {\n    this._updateShadowCamera();\n  }\n\n  if (this._opts.view) {\n    this.view(this._opts.view);\n    delete this._opts.view;\n  }\n\n  this._refreshTitle();\n\n  return visualName;\n};\n\nMiew.prototype.resetEd = function () {\n  if (this._edLoader) {\n    this._edLoader.abort();\n    this._edLoader = null;\n  }\n\n  // free all resources\n  this._removeVisual(this._getVolumeVisual());\n\n  this._needRender = true;\n};\n\nMiew.prototype.loadEd = function (source) {\n  this.resetEd();\n\n  const TheLoader = _.head(io.loaders.find({ source }));\n  if (!TheLoader) {\n    this.logger.error(LOADER_NOT_FOUND);\n    return Promise.reject(new Error(LOADER_NOT_FOUND));\n  }\n\n  const loader = this._edLoader = new TheLoader(source, { binary: true });\n  loader.context = this;\n  return loader.load().then((data) => {\n    const TheParser = _.head(io.parsers.find({ format: 'ccp4' }));\n    if (!TheParser) {\n      throw new Error(PARSER_NOT_FOUND);\n    }\n    const parser = new TheParser(data);\n    parser.context = this;\n    return parser.parse().then((dataSource) => {\n      this._onLoadEd(dataSource);\n    });\n  }).catch((error) => {\n    this.logger.error('Could not load ED data');\n    this.logger.debug(error);\n  });\n};\n\nMiew.prototype._onLoadEd = function (dataSource) {\n  dataSource.normalize();\n\n  const volumeVisual = new VolumeVisual('volume', dataSource);\n  volumeVisual.getMesh().layers.set(gfxutils.LAYERS.VOLUME); // volume mesh is not visible to common render\n  const visualName = this._addVisual(volumeVisual);\n\n  this._needRender = true;\n  return visualName;\n};\n\nMiew.prototype._needRebuild = function () {\n  let needsRebuild = false;\n  this._forEachComplexVisual((visual) => {\n    needsRebuild = needsRebuild || visual.needsRebuild();\n  });\n  return needsRebuild;\n};\n\nMiew.prototype._rebuildObjects = function () {\n  const self = this;\n  const gfx = this._gfx;\n  let i;\n  let n;\n\n  // remove old object geometry\n  const toRemove = [];\n  for (i = 0; i < gfx.pivot.children.length; ++i) {\n    const child = gfx.pivot.children[i];\n    if (!(child instanceof Visual)) {\n      toRemove.push(child);\n    }\n  }\n  for (i = 0; i < toRemove.length; ++i) {\n    toRemove[i].parent.remove(toRemove[i]);\n  }\n\n  setTimeout(() => {\n    const objList = self._objects;\n    for (i = 0, n = objList.length; i < n; ++i) {\n      const obj = objList[i];\n      if (obj.needsRebuild) {\n        obj.build();\n      }\n      if (obj.getGeometry()) {\n        gfx.pivot.add(obj.getGeometry());\n      }\n    }\n  }, 10);\n};\n\nMiew.prototype.changeUnit = function (unitIdx, name) {\n  const visual = this._getComplexVisual(name);\n  if (!visual) {\n    throw new Error('There is no complex to change!');\n  }\n\n  function currentUnitInfo() {\n    const unit = visual ? visual.getComplex().getCurrentUnit() : 0;\n    const type = unit > 0 ? (`Bio molecule ${unit}`) : 'Asymmetric unit';\n    return `Current unit: ${unit} (${type})`;\n  }\n\n  if (unitIdx === undefined) {\n    return currentUnitInfo();\n  }\n  if (_.isString(unitIdx)) {\n    unitIdx = Math.max(parseInt(unitIdx, 10), 0);\n  }\n  if (visual.getComplex().setCurrentUnit(unitIdx)) {\n    this._resetScene();\n    this._updateInfoPanel();\n  }\n  return currentUnitInfo();\n};\n\n/**\n * Start to rebuild geometry asynchronously.\n */\nMiew.prototype.rebuild = function () {\n  if (this._building) {\n    this.logger.warn('Miew.rebuild(): already building!');\n    return;\n  }\n  this._building = true;\n\n  this.dispatchEvent({ type: 'rebuilding' });\n\n  this._rebuildObjects();\n\n  this._gfx.renderer2d.reset();\n\n  const rebuildActions = [];\n  this._forEachComplexVisual((visual) => {\n    if (visual.needsRebuild()) {\n      rebuildActions.push(visual.rebuild().then(() => new Promise(((resolve) => {\n        visual.rebuildSelectionGeometry();\n        resolve();\n      }))));\n    }\n  });\n\n  // Start asynchronous rebuild\n  const self = this;\n  this._spinner.spin(this._container);\n  Promise.all(rebuildActions).then(() => {\n    self._spinner.stop();\n\n    self._needRender = true;\n\n    self._refreshTitle();\n    this.dispatchEvent({ type: 'buildingDone' });\n    self._building = false;\n  });\n};\n\n/** Mark all representations for rebuilding */\nMiew.prototype.rebuildAll = function () {\n  this._forEachComplexVisual((visual) => {\n    visual.setNeedsRebuild();\n  });\n};\n\nMiew.prototype._refreshTitle = function (appendix) {\n  let title;\n  appendix = appendix === undefined ? '' : appendix;\n  const visual = this._getComplexVisual();\n  if (visual) {\n    title = visual.getComplex().name;\n    const rep = visual.repGet(visual.repCurrent());\n    title += (rep ? ` – ${rep.mode.name} Mode` : '');\n  } else {\n    title = Object.keys(this._visuals).length > 0 ? 'Unknown' : 'No Data';\n  }\n  title += appendix;\n\n  this.dispatchEvent({ type: 'titleChanged', data: title });\n};\n\nMiew.prototype.setNeedRender = function () {\n  this._needRender = true;\n};\n\nMiew.prototype._extractRepresentation = function () {\n  const changed = [];\n\n  this._forEachComplexVisual((visual) => {\n    if (visual.getSelectionCount() === 0) {\n      return;\n    }\n\n    const selector = visual.buildSelectorFromMask(1 << visual.getSelectionBit());\n    const defPreset = settings.now.presets.default;\n    const res = visual.repAdd({\n      selector,\n      mode: defPreset[0].mode.id,\n      colorer: defPreset[0].colorer.id,\n      material: defPreset[0].material.id,\n    });\n    if (!res) {\n      if (visual.repCount() === ComplexVisual.NUM_REPRESENTATION_BITS) {\n        this.logger.warn(`Number of representations is limited to ${ComplexVisual.NUM_REPRESENTATION_BITS}`);\n      }\n      return;\n    }\n\n    this.dispatchEvent({ type: 'repAdded', index: res.index, name: visual.name });\n    visual.repCurrent(res.index);\n\n    changed.push(visual.name);\n  });\n\n  if (changed.length > 0) {\n    this.logger.report(`New representation from selection for complexes: ${changed.join(', ')}`);\n  }\n};\n\n/**\n * Change current representation list.\n * @param {array} reps - Representation list.\n */\nMiew.prototype._setReps = function (reps) {\n  reps = reps || (this._opts && this._opts.reps) || [];\n  this._forEachComplexVisual((visual) => visual.resetReps(reps));\n};\n\n/**\n * Apply existing preset to current scene.\n * @param preset\n */\nMiew.prototype.applyPreset = function (preset) {\n  const { presets } = settings.now;\n  const presList = [\n    preset || settings.defaults.preset,\n    settings.defaults.preset,\n    Object.keys(presets)[0],\n  ];\n  let reps = null;\n  for (let i = 0; !reps && i < presList.length; ++i) {\n    settings.set('preset', presList[i]);\n    reps = presets[settings.now.preset];\n    if (!reps) {\n      this.logger.warn(`Unknown preset \"${settings.now.preset}\"`);\n    }\n  }\n  this._setReps(reps);\n};\n\n/**\n * Reset current representation list to initial values.\n * @param {string} [preset] - The source preset in case of uninitialized representation list.\n */\nMiew.prototype.resetReps = function (preset) {\n  const reps = this._opts && this._opts.reps;\n  if (reps) {\n    this._setReps(reps);\n  } else {\n    this.applyPreset(preset);\n  }\n};\n\n/**\n * Get number of representations created so far.\n * @returns {number} Number of reps.\n */\nMiew.prototype.repCount = function (name) {\n  const visual = this._getComplexVisual(name);\n  return visual ? visual.repCount() : 0;\n};\n\n/**\n * Get or set the current representation index.\n * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\n * @param {string=} [name] - Complex name. Defaults to the current one.\n * @returns {number} The current index.\n */\nMiew.prototype.repCurrent = function (index, name) {\n  const visual = this._getComplexVisual(name);\n  const newIdx = visual ? visual.repCurrent(index) : -1;\n  if (index && newIdx !== index) {\n    this.logger.warn(`Representation ${index} was not found. Current rep remains unchanged.`);\n  }\n  return newIdx;\n};\n\n/**\n * Get or set representation by index.\n * @param {number=} index - Zero-based index, up to {@link Miew#repCount}(). Defaults to the current one.\n * @param {object=} rep - Optional representation description.\n * @param {string=} rep.selector - Selector string.\n * @param {string=} rep.mode - Mode id.\n * @param {string=} rep.colorer - Colorer id.\n * @param {string=} rep.material - Material id.\n * @returns {?object} Representation description.\n */\nMiew.prototype.rep = function (index, rep) {\n  const visual = this._getComplexVisual('');\n  if (!visual) {\n    return null;\n  }\n  const res = visual.rep(index, rep);\n  if (res.status === 'created') {\n    this.dispatchEvent({ type: 'repAdded', index: res.index, name: visual.name });\n  } else if (res.status === 'changed') {\n    this.dispatchEvent({ type: 'repChanged', index: res.index, name: visual.name });\n  }\n  return res.desc;\n};\n\n/**\n * Get representation (not just description) by index.\n * @param {number=} index - Zero-based index, up to {@link Miew#repCount}(). Defaults to the current one.\n * @returns {?object} Representation.\n */\nMiew.prototype.repGet = function (index, name) {\n  const visual = this._getComplexVisual(name);\n  return visual ? visual.repGet(index) : null;\n};\n\n/**\n * Add new representation.\n * @param {object=} rep - Representation description.\n * @returns {number} Index of the new representation.\n */\nMiew.prototype.repAdd = function (rep, name) {\n  const visual = this._getComplexVisual(name);\n  if (!visual) {\n    return -1;\n  }\n\n  const res = visual.repAdd(rep);\n  if (res) {\n    this.dispatchEvent({ type: 'repAdded', index: res.index, name });\n    return res.index;\n  }\n  return -1;\n};\n\n/**\n * Remove representation.\n * @param {number=} index - Zero-based representation index.\n */\nMiew.prototype.repRemove = function (index, name) {\n  const visual = this._getComplexVisual(name);\n  if (!visual) {\n    return;\n  }\n\n  visual.repRemove(index);\n  this.dispatchEvent({ type: 'repRemoved', index, name });\n};\n\n/**\n * Hide representation.\n * @param {number} index - Zero-based representation index.\n * @param {boolean=} hide - Specify false to make rep visible, true to hide (by default).\n */\nMiew.prototype.repHide = function (index, hide, name) {\n  this._needRender = true;\n  const visual = this._getComplexVisual(name);\n  return visual ? visual.repHide(index, hide) : null;\n};\n\nMiew.prototype._setEditMode = function (mode) {\n  this._editMode = mode;\n\n  const elem = this._msgMode;\n  if (elem) {\n    elem.style.opacity = (mode === EDIT_MODE.COMPLEX) ? 0.0 : 1.0;\n\n    if (mode !== EDIT_MODE.COMPLEX) {\n      const t = elem.getElementsByTagName('p')[0];\n      t.innerHTML = (mode === EDIT_MODE.COMPONENT) ? 'COMPONENT EDIT MODE' : 'FRAGMENT EDIT MODE';\n    }\n  }\n\n  this.dispatchEvent({ type: 'editModeChanged', data: mode === EDIT_MODE.COMPLEX });\n};\n\nMiew.prototype._enterComponentEditMode = function () {\n  if (this._editMode !== EDIT_MODE.COMPLEX) {\n    return;\n  }\n\n  const editors = [];\n  this._forEachComplexVisual((visual) => {\n    const editor = visual.beginComponentEdit();\n    if (editor) {\n      editors.push(editor);\n    }\n  });\n\n  if (editors === []) {\n    return;\n  }\n\n  this._editors = editors;\n\n  this.logger.info('COMPONENT EDIT MODE -- ON');\n  this._setEditMode(EDIT_MODE.COMPONENT);\n  this._objectControls.keysTranslateObj(true);\n};\n\nMiew.prototype._applyComponentEdit = function () {\n  if (this._editMode !== EDIT_MODE.COMPONENT) {\n    return;\n  }\n\n  this._objectControls.stop();\n  this._objectControls.keysTranslateObj(false);\n\n  for (let i = 0; i < this._editors.length; ++i) {\n    this._editors[i].apply();\n  }\n  this._editors = [];\n\n  this.logger.info('COMPONENT EDIT MODE -- OFF (applied)');\n  this._setEditMode(EDIT_MODE.COMPLEX);\n\n  this.rebuildAll();\n};\n\nMiew.prototype._discardComponentEdit = function () {\n  if (this._editMode !== EDIT_MODE.COMPONENT) {\n    return;\n  }\n\n  this._objectControls.stop();\n  this._objectControls.keysTranslateObj(false);\n\n  for (let i = 0; i < this._editors.length; ++i) {\n    this._editors[i].discard();\n  }\n  this._editors = [];\n\n  this.logger.info('COMPONENT EDIT MODE -- OFF (discarded)');\n  this._setEditMode(EDIT_MODE.COMPLEX);\n\n  this._needRender = true;\n  this.rebuildAll();\n};\n\nMiew.prototype._enterFragmentEditMode = function () {\n  if (this._editMode !== EDIT_MODE.COMPLEX) {\n    return;\n  }\n\n  const selectedVisuals = [];\n  this._forEachComplexVisual((visual) => {\n    if (visual instanceof ComplexVisual\n          && visual.getSelectionCount() > 0) {\n      selectedVisuals.push(visual);\n    }\n  });\n\n  if (selectedVisuals.length !== 1) {\n    // either we have no selection or\n    // we have selected atoms in two or more visuals -- not supported\n    return;\n  }\n\n  const editor = selectedVisuals[0].beginFragmentEdit();\n  if (!editor) {\n    return;\n  }\n  this._editors = [editor];\n\n  this.logger.info('FRAGMENT EDIT MODE -- ON (single bond)');\n  this._setEditMode(EDIT_MODE.FRAGMENT);\n  this._objectControls.allowTranslation(false);\n  this._objectControls.allowAltObjFreeRotation(editor.isFreeRotationAllowed());\n\n  this._needRender = true;\n};\n\nMiew.prototype._applyFragmentEdit = function () {\n  if (this._editMode !== EDIT_MODE.FRAGMENT) {\n    return;\n  }\n\n  this._objectControls.stop();\n\n  for (let i = 0; i < this._editors.length; ++i) {\n    this._editors[i].apply();\n  }\n  this._editors = [];\n\n  this.logger.info('FRAGMENT EDIT MODE -- OFF (applied)');\n  this._setEditMode(EDIT_MODE.COMPLEX);\n  this._objectControls.allowTranslation(true);\n  this._objectControls.allowAltObjFreeRotation(true);\n\n  this.rebuildAll();\n};\n\nMiew.prototype._discardFragmentEdit = function () {\n  if (this._editMode !== EDIT_MODE.FRAGMENT) {\n    return;\n  }\n\n  this._objectControls.stop();\n\n  for (let i = 0; i < this._editors.length; ++i) {\n    this._editors[i].discard();\n  }\n  this._editors = [];\n\n  this.logger.info('FRAGMENT EDIT MODE -- OFF (discarded)');\n  this._setEditMode(EDIT_MODE.COMPLEX);\n  this._objectControls.allowTranslation(true);\n  this._objectControls.allowAltObjFreeRotation(true);\n\n  this._needRender = true;\n};\n\nMiew.prototype._onPick = function (event) {\n  if (!settings.now.picking) {\n    // picking is disabled\n    return;\n  }\n\n  if (this._animInterval !== null) {\n    // animation playback is on\n    return;\n  }\n\n  if (this._editMode === EDIT_MODE.FRAGMENT) {\n    // prevent picking in fragment edit mode\n    return;\n  }\n\n  if (this._objectControls.isEditingAltObj()) {\n    // prevent picking during component rotation\n    return;\n  }\n\n  // update last pick & find complex\n  let complex = null;\n  if (event.obj.atom) {\n    complex = event.obj.atom.residue.getChain().getComplex();\n    this._lastPick = event.obj.atom;\n  } else if (event.obj.residue) {\n    complex = event.obj.residue.getChain().getComplex();\n    this._lastPick = event.obj.residue;\n  } else if (event.obj.chain) {\n    complex = event.obj.chain.getComplex();\n    this._lastPick = event.obj.chain;\n  } else if (event.obj.molecule) {\n    complex = event.obj.molecule.complex;\n    this._lastPick = event.obj.molecule;\n  } else {\n    this._lastPick = null;\n  }\n\n  function _updateSelection(visual) {\n    visual.updateSelectionMask(event.obj);\n    visual.rebuildSelectionGeometry();\n  }\n\n  // update visual\n  if (complex) {\n    const visual = this._getVisualForComplex(complex);\n    if (visual) {\n      _updateSelection(visual);\n      this._needRender = true;\n    }\n  } else {\n    this._forEachComplexVisual(_updateSelection);\n    this._needRender = true;\n  }\n\n  this._updateInfoPanel();\n  this.dispatchEvent(event);\n};\n\nMiew.prototype._onKeyDown = function (event) {\n  if (!this._running || !this._hotKeysEnabled) {\n    return;\n  }\n\n  switch (event.keyCode) {\n    case 'C'.charCodeAt(0):\n      if (settings.now.editing) {\n        this._enterComponentEditMode();\n      }\n      break;\n    case 'F'.charCodeAt(0):\n      if (settings.now.editing) {\n        this._enterFragmentEditMode();\n      }\n      break;\n    case 'A'.charCodeAt(0):\n      switch (this._editMode) {\n        case EDIT_MODE.COMPONENT:\n          this._applyComponentEdit();\n          break;\n        case EDIT_MODE.FRAGMENT:\n          this._applyFragmentEdit();\n          break;\n        default: break;\n      }\n      break;\n    case 'D'.charCodeAt(0):\n      switch (this._editMode) {\n        case EDIT_MODE.COMPONENT:\n          this._discardComponentEdit();\n          break;\n        case EDIT_MODE.FRAGMENT:\n          this._discardFragmentEdit();\n          break;\n        default: break;\n      }\n      break;\n    case 'S'.charCodeAt(0):\n      event.preventDefault();\n      event.stopPropagation();\n      settings.set('ao', !settings.now.ao);\n      this._needRender = true;\n      break;\n    case 107:\n      event.preventDefault();\n      event.stopPropagation();\n      this._forEachComplexVisual((visual) => {\n        visual.expandSelection();\n        visual.rebuildSelectionGeometry();\n      });\n      this._updateInfoPanel();\n      this._needRender = true;\n      break;\n    case 109:\n      event.preventDefault();\n      event.stopPropagation();\n      this._forEachComplexVisual((visual) => {\n        visual.shrinkSelection();\n        visual.rebuildSelectionGeometry();\n      });\n      this._updateInfoPanel();\n      this._needRender = true;\n      break;\n    default:\n  }\n};\n\nMiew.prototype._onKeyUp = function (event) {\n  if (!this._running || !this._hotKeysEnabled) {\n    return;\n  }\n\n  if (event.keyCode === 'X'.charCodeAt(0)) {\n    this._extractRepresentation();\n  }\n};\n\nMiew.prototype._updateInfoPanel = function () {\n  const info = this._msgAtomInfo.getElementsByTagName('p')[0];\n  let atom;\n  let residue;\n\n  let count = 0;\n  this._forEachComplexVisual((visual) => {\n    count += visual.getSelectionCount();\n  });\n\n  while (info.firstChild) {\n    info.removeChild(info.firstChild);\n  }\n\n  if (count === 0) {\n    this._msgAtomInfo.style.opacity = 0.0;\n    return;\n  }\n\n  let firstLine = `${String(count)} atom${count !== 1 ? 's' : ''} selected`;\n  if (this._lastPick !== null) {\n    firstLine += ', the last pick:';\n  }\n  let secondLine = '';\n  let aName = '';\n  let coordLine = '';\n\n  if (this._lastPick instanceof Atom) {\n    atom = this._lastPick;\n    residue = atom.residue;\n\n    aName = atom.name;\n    const location = (atom.location !== 32) ? String.fromCharCode(atom.location) : ''; // 32 is code of white-space\n    secondLine = `${atom.element.fullName} #${atom.serial}${location}: \\\n      ${residue._chain._name}.${residue._type._name}${residue._sequence}${residue._icode.trim()}.`;\n    secondLine += aName;\n\n    coordLine = `Coord: (${atom.position.x.toFixed(2).toString()},\\\n     ${atom.position.y.toFixed(2).toString()},\\\n     ${atom.position.z.toFixed(2).toString()})`;\n  } else if (this._lastPick instanceof Residue) {\n    residue = this._lastPick;\n\n    secondLine = `${residue._type._fullName}: \\\n      ${residue._chain._name}.${residue._type._name}${residue._sequence}${residue._icode.trim()}`;\n  } else if (this._lastPick instanceof Chain) {\n    secondLine = `chain ${this._lastPick._name}`;\n  } else if (this._lastPick instanceof Molecule) {\n    secondLine = `molecule ${this._lastPick._name}`;\n  }\n\n  info.appendChild(document.createTextNode(firstLine));\n\n  if (secondLine !== '') {\n    info.appendChild(document.createElement('br'));\n    info.appendChild(document.createTextNode(secondLine));\n  }\n\n  if (coordLine !== '') {\n    info.appendChild(document.createElement('br'));\n    info.appendChild(document.createTextNode(coordLine));\n  }\n\n  this._msgAtomInfo.style.opacity = 1.0;\n};\n\nMiew.prototype._getAltObj = function () {\n  if (this._editors) {\n    let altObj = null;\n    for (let i = 0; i < this._editors.length; ++i) {\n      const nextAltObj = this._editors[i].getAltObj();\n      if (nextAltObj.objects.length > 0) {\n        if (altObj) {\n          // we have selected atoms in two or more visuals -- not supported\n          altObj = null;\n          break;\n        }\n        altObj = nextAltObj;\n      }\n    }\n    if (altObj) {\n      return altObj;\n    }\n  }\n\n  return {\n    objects: [],\n    pivot: new THREE.Vector3(0, 0, 0),\n  };\n};\n\nMiew.prototype.resetPivot = (function () {\n  const boundingBox = new THREE.Box3();\n  const center = new THREE.Vector3();\n\n  return function () {\n    boundingBox.makeEmpty();\n    this._forEachVisual((visual) => {\n      boundingBox.union(visual.getBoundaries().boundingBox);\n    });\n\n    boundingBox.getCenter(center);\n    this._objectControls.setPivot(center.negate());\n    this.dispatchEvent({ type: 'transform' });\n  };\n}());\n\nMiew.prototype.setPivotResidue = (function () {\n  const center = new THREE.Vector3();\n\n  return function (residue) {\n    const visual = this._getVisualForComplex(residue.getChain().getComplex());\n    if (!visual) {\n      return;\n    }\n\n    if (residue._controlPoint) {\n      center.copy(residue._controlPoint);\n    } else {\n      let x = 0;\n      let y = 0;\n      let z = 0;\n      const amount = residue._atoms.length;\n      for (let i = 0; i < amount; ++i) {\n        const p = residue._atoms[i].position;\n        x += p.x / amount;\n        y += p.y / amount;\n        z += p.z / amount;\n      }\n      center.set(x, y, z);\n    }\n    center.applyMatrix4(visual.matrix).negate();\n    this._objectControls.setPivot(center);\n    this.dispatchEvent({ type: 'transform' });\n  };\n}());\n\nMiew.prototype.setPivotAtom = (function () {\n  const center = new THREE.Vector3();\n\n  return function (atom) {\n    const visual = this._getVisualForComplex(atom.residue.getChain().getComplex());\n    if (!visual) {\n      return;\n    }\n\n    center.copy(atom.position);\n    center.applyMatrix4(visual.matrix).negate();\n    this._objectControls.setPivot(center);\n    this.dispatchEvent({ type: 'transform' });\n  };\n}());\n\nMiew.prototype.getSelectionCenter = (function () {\n  const _centerInVisual = new THREE.Vector3(0.0, 0.0, 0.0);\n\n  return function (center, includesAtom, selector) {\n    center.set(0.0, 0.0, 0.0);\n    let count = 0;\n\n    this._forEachComplexVisual((visual) => {\n      if (visual.getSelectionCenter(_centerInVisual, includesAtom, selector || visual.getSelectionBit())) {\n        center.add(_centerInVisual);\n        count++;\n      }\n    });\n    if (count === 0) {\n      return false;\n    }\n    center.divideScalar(count);\n    center.negate();\n    return true;\n  };\n}());\n\nMiew.prototype.setPivotSubset = (function () {\n  const _center = new THREE.Vector3(0.0, 0.0, 0.0);\n\n  function _includesInCurSelection(atom, selectionBit) {\n    return atom.mask & (1 << selectionBit);\n  }\n\n  function _includesInSelector(atom, selector) {\n    return selector.selector.includesAtom(atom);\n  }\n\n  return function (selector) {\n    const includesAtom = (selector) ? _includesInSelector : _includesInCurSelection;\n\n    if (this.getSelectionCenter(_center, includesAtom, selector)) {\n      this._objectControls.setPivot(_center);\n      this.dispatchEvent({ type: 'transform' });\n    } else {\n      this.logger.warn('selection is empty. Center operation not performed');\n    }\n  };\n}());\n\n/**\n * Makes a screenshot.\n * @param {number} [width] - Width of an image. Defaults to the canvas width.\n * @param {number} [height] - Height of an image. Defaults to the width (square) or canvas height,\n *        if width is omitted too.\n * @returns {string} Data URL representing the image contents.\n */\nMiew.prototype.screenshot = function (width, height) {\n  const gfx = this._gfx;\n  const deviceWidth = gfx.renderer.domElement.width;\n  const deviceHeight = gfx.renderer.domElement.height;\n\n  function fov2Tan(fov) {\n    return Math.tan(THREE.MathUtils.degToRad(0.5 * fov));\n  }\n\n  function tan2Fov(tan) {\n    return THREE.MathUtils.radToDeg(Math.atan(tan)) * 2.0;\n  }\n\n  function getDataURL() {\n    let dataURL;\n    const currBrowser = utils.getBrowser();\n\n    if (currBrowser === utils.browserType.SAFARI) {\n      const canvas = document.createElement('canvas');\n      const canvasContext = canvas.getContext('2d');\n\n      canvas.width = width === undefined ? deviceWidth : width;\n      canvas.height = height === undefined ? deviceHeight : height;\n\n      canvasContext.drawImage(gfx.renderer.domElement, 0, 0, canvas.width, canvas.height);\n      dataURL = canvas.toDataURL('image/png');\n    } else {\n      // Copy current canvas to screenshot\n      dataURL = gfx.renderer.domElement.toDataURL('image/png');\n    }\n    return dataURL;\n  }\n  height = height || width;\n\n  let screenshotURI;\n  if ((width === undefined && height === undefined)\n    || (width === deviceWidth && height === deviceHeight)) {\n    // renderer.domElement.toDataURL('image/png') returns flipped image in Safari\n    // It hasn't been resolved yet, but getScreenshotSafari()\n    // fixes it using an extra canvas.\n    screenshotURI = getDataURL();\n  } else {\n    const originalAspect = gfx.camera.aspect;\n    const originalFov = gfx.camera.fov;\n    const originalTanFov2 = fov2Tan(gfx.camera.fov);\n\n    // screenshot should contain the principal area of interest (a centered square touching screen sides)\n    const areaOfInterestSize = Math.min(gfx.width, gfx.height);\n    const areaOfInterestTanFov2 = originalTanFov2 * areaOfInterestSize / gfx.height;\n\n    // set appropriate camera aspect & FOV\n    const shotAspect = width / height;\n    gfx.renderer.setPixelRatio(1);\n    gfx.camera.aspect = shotAspect;\n    gfx.camera.fov = tan2Fov(areaOfInterestTanFov2 / Math.min(shotAspect, 1.0));\n    gfx.camera.updateProjectionMatrix();\n\n    // resize canvas to the required size of screenshot\n    gfx.renderer.setDrawingBufferSize(width, height, 1);\n\n    // make screenshot\n    this._renderFrame(settings.now.stereo);\n    screenshotURI = getDataURL();\n\n    // restore original camera & canvas proportions\n    gfx.renderer.setPixelRatio(window.devicePixelRatio);\n    gfx.camera.aspect = originalAspect;\n    gfx.camera.fov = originalFov;\n    gfx.camera.updateProjectionMatrix();\n    gfx.renderer.setDrawingBufferSize(gfx.width, gfx.height, window.devicePixelRatio);\n    this._needRender = true;\n  }\n\n  return screenshotURI;\n};\n\n/**\n * Makes screenshot and initiates a download.\n * @param {string} [filename] - Name of a file. Default to a 'screenshot-XXXXX.png', where XXXXX is a current\n *        date/time in seconds.\n * @param {number} [width] - Width of an image. Defaults to the canvas width.\n * @param {number} [height] - Height of an image. Defaults to the width (square) or canvas height,\n *        if width is omitted too.\n */\nMiew.prototype.screenshotSave = function (filename, width, height) {\n  const uri = this.screenshot(width, height);\n  utils.shotDownload(uri, filename);\n};\n\nMiew.prototype.save = function (opts) {\n  this._export(opts.fileType).then((dataString) => {\n    const filename = this._visuals[this._curVisualName]._complex.name;\n    utils.download(dataString, filename, opts.fileType);\n    this._refreshTitle();\n    this.dispatchEvent({ type: 'exportingDone' });\n  }).catch((error) => {\n    this.logger.error('Could not export data');\n    this.logger.debug(error);\n    this._refreshTitle();\n    this.dispatchEvent({ type: 'exportingDone', error });\n  });\n};\n\nMiew.prototype._tweakResolution = function () {\n  const maxPerf = [\n    ['poor', 100],\n    ['low', 500],\n    ['medium', 1000],\n    ['high', 5000],\n    ['ultra', Number.MAX_VALUE],\n  ];\n\n  let atomCount = 0;\n  this._forEachComplexVisual((visual) => {\n    atomCount += visual.getComplex().getAtomCount();\n  });\n\n  if (atomCount > 0) {\n    const performance = this._gfxScore * 10e5 / atomCount;\n    // set resolution based on estimated performance\n    for (let i = 0; i < maxPerf.length; ++i) {\n      if (performance < maxPerf[i][1]) {\n        this._autoChangeResolution(maxPerf[i][0]);\n        break;\n      }\n    }\n  }\n};\n\nMiew.prototype._autoChangeResolution = function (resolution) {\n  if (resolution !== settings.now.resolution) {\n    this.logger.report(`Your rendering resolution was changed to \"${resolution}\" for best performance.`);\n  }\n  settings.now.resolution = resolution;\n};\n\n/**\n * Save current settings to cookies.\n */\nMiew.prototype.saveSettings = function () {\n  this._cookies.setCookie(this._opts.settingsCookie, JSON.stringify(this.settings.getDiffs(true)));\n};\n\n/**\n * Load settings from cookies.\n */\nMiew.prototype.restoreSettings = function () {\n  try {\n    const cookie = this._cookies.getCookie(this._opts.settingsCookie);\n    const diffs = cookie ? JSON.parse(cookie) : {};\n    this.settings.applyDiffs(diffs, true);\n  } catch (e) {\n    this.logger.error(`Cookies parse error: ${e.message}`);\n  }\n};\n\n/**\n * Reset current settings to the defaults.\n */\nMiew.prototype.resetSettings = function () {\n  this.settings.reset();\n};\n\n/*\n   * DANGEROUS and TEMPORARY. The method should change or disappear in future versions.\n   * @param {string|object} opts - See {@link Miew} constructor.\n   * @see {@link Miew#set}, {@link Miew#repAdd}, {@link Miew#rep}.\n   */\nMiew.prototype.setOptions = function (opts) {\n  if (typeof opts === 'string') {\n    opts = Miew.options.fromAttr(opts);\n  }\n  if (opts.reps) {\n    this._opts.reps = null;\n  }\n  _.merge(this._opts, opts);\n  if (opts.settings) {\n    this.set(opts.settings);\n  }\n\n  this._opts._objects = opts._objects;\n  this._resetObjects();\n\n  if (opts.load) {\n    this.load(opts.load, { fileType: opts.type });\n  }\n\n  if (opts.preset) {\n    settings.now.preset = opts.preset;\n  }\n\n  if (opts.reps) {\n    this.resetReps(opts.preset);\n  }\n\n  if (this._opts.view) {\n    this.view(this._opts.view);\n    delete this._opts.view;\n  }\n\n  const visual = this._getComplexVisual();\n  if (visual) {\n    visual.getComplex().resetCurrentUnit();\n    if (_.isNumber(opts.unit)) {\n      visual.getComplex().setCurrentUnit(opts.unit);\n    }\n    this.resetView();\n    this.rebuildAll();\n  }\n};\n\nMiew.prototype.info = function (name) {\n  const visual = this._getComplexVisual(name);\n  if (!visual) {\n    return {};\n  }\n  const complex = visual.getComplex();\n  const { metadata } = complex;\n  return {\n    id: metadata.id || complex.name || 'UNKNOWN',\n    title: (metadata.title && metadata.title.join(' ')) || 'UNKNOWN DATA',\n    atoms: complex.getAtomCount(),\n    bonds: complex.getBondCount(),\n    residues: complex.getResidueCount(),\n    chains: complex.getChainCount(),\n  };\n};\n\n/*\n   * OBJECTS SEGMENT\n   */\n\nMiew.prototype.addObject = function (objData, bThrow) {\n  let Ctor = null;\n\n  if (objData.type === LinesObject.prototype.type) {\n    Ctor = LinesObject;\n  }\n\n  if (Ctor === null) {\n    throw new Error(`Unknown scene object type - ${objData.type}`);\n  }\n\n  try {\n    const newObj = new Ctor(objData.params, objData.opts);\n    this._addSceneObject(newObj);\n  } catch (error) {\n    if (!bThrow) {\n      this.logger.debug(`Error during scene object creation: ${error.message}`);\n    } else {\n      throw error;\n    }\n  }\n  this._needRender = true;\n};\n\nMiew.prototype._addSceneObject = function (sceneObject) {\n  const visual = this._getComplexVisual();\n  if (sceneObject.build && visual) {\n    sceneObject.build(visual.getComplex());\n    this._gfx.pivot.add(sceneObject.getGeometry());\n  }\n  const objects = this._objects;\n  objects[objects.length] = sceneObject;\n};\n\nMiew.prototype._updateObjsToFrame = function (frameData) {\n  const objs = this._objects;\n  for (let i = 0, n = objs.length; i < n; ++i) {\n    if (objs[i].updateToFrame) {\n      objs[i].updateToFrame(frameData);\n    }\n  }\n};\n\nMiew.prototype._resetObjects = function () {\n  const objs = this._opts._objects;\n\n  this._objects = [];\n  if (objs) {\n    for (let i = 0, n = objs.length; i < n; ++i) {\n      this.addObject(objs[i], false);\n    }\n  }\n};\n\nMiew.prototype.removeObject = function (index) {\n  const obj = this._objects[index];\n  if (!obj) {\n    throw new Error(`Scene object with index ${index} does not exist`);\n  }\n  obj.destroy();\n  this._objects.splice(index, 1);\n  this._needRender = true;\n};\n\n/**\n * Get a string with a URL to reproduce the current scene.\n *\n * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\n * preset information regardless of the differences with settings\n * @param {boolean} [opts.settings=false] - when this flag is true, changes in settings are included\n * @param {boolean} [opts.view=false] - when this flag is true, a view information is included\n * @returns {string} URL\n */\nMiew.prototype.getURL = function (opts) {\n  return options.toURL(this.getState(_.defaults(opts, {\n    compact: true,\n    settings: false,\n    view: false,\n  })));\n};\n\n/**\n * Get a string with a script to reproduce the current scene.\n *\n * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\n * preset information regardless of the differences with settings\n * @param {boolean} [opts.settings=true] - when this flag is true, changes in settings are included\n * @param {boolean} [opts.view=true] - when this flag is true, a view information is included\n * @returns {string} script\n */\nMiew.prototype.getScript = function (opts) {\n  return options.toScript(this.getState(_.defaults(opts, {\n    compact: true,\n    settings: true,\n    view: true,\n  })));\n};\n\n/*\n   * Generates object that represents the current state of representations list\n   * @param {boolean} compareWithDefaults - when this flag is true, reps list is compared (if possible)\n   * to preset's defaults and only diffs are generated\n   */\nMiew.prototype._compareReps = function (complexVisual, compareWithDefaults) {\n  const ans = {};\n  let repCount = 0;\n\n  if (complexVisual) {\n    repCount = complexVisual.repCount();\n  }\n\n  const currPreset = settings.defaults.presets[settings.now.preset];\n  let compare = compareWithDefaults;\n  if (currPreset === undefined || currPreset.length > repCount) {\n    compare = false;\n    ans.preset = 'empty';\n  } else if (settings.now.preset !== settings.defaults.preset) {\n    ans.preset = settings.now.preset;\n  }\n\n  const repsDiff = [];\n  let emptyReps = true;\n  for (let i = 0, n = repCount; i < n; ++i) {\n    repsDiff[i] = complexVisual.repGet(i).compare(compare ? currPreset[i] : null);\n    if (!_.isEmpty(repsDiff[i])) {\n      emptyReps = false;\n    }\n  }\n  if (!emptyReps) {\n    ans.reps = repsDiff;\n  }\n  return ans;\n};\n\n/*\n   * Obtain object that represents current state of miew (might be used as options in constructor).\n   * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\n   * preset information regardless of the differences with settings\n   * @param {boolean} [opts.settings=false] - when this flag is true, changes in settings are included\n   * @param {boolean} [opts.view=false] - when this flag is true, a view information is included\n   * @returns {Object} State object.\n   */\nMiew.prototype.getState = function (opts) {\n  const state = {};\n\n  opts = _.defaults(opts, {\n    compact: true,\n    settings: false,\n    view: false,\n  });\n\n  // load\n  const visual = this._getComplexVisual();\n  if (visual !== null) {\n    const complex = visual.getComplex();\n    const { metadata } = complex;\n    if (metadata.id) {\n      const format = metadata.format ? `${metadata.format}:` : '';\n      state.load = format + metadata.id;\n    }\n    const unit = complex.getCurrentUnit();\n    if (unit !== 1) {\n      state.unit = unit;\n    }\n  }\n\n  // representations\n  const repsInfo = this._compareReps(visual, opts.compact);\n  if (repsInfo.preset) {\n    state.preset = repsInfo.preset;\n  }\n\n  if (repsInfo.reps) {\n    state.reps = repsInfo.reps;\n  }\n\n  // objects\n  const objects = this._objects;\n  const objectsState = [];\n  for (let i = 0, n = objects.length; i < n; ++i) {\n    objectsState[i] = objects[i].identify();\n  }\n  if (objects.length > 0) {\n    state._objects = objectsState;\n  }\n\n  // view\n  if (opts.view) {\n    state.view = this.view();\n  }\n\n  // settings\n  if (opts.settings) {\n    const diff = this.settings.getDiffs(false);\n    if (!_.isEmpty(diff)) {\n      state.settings = diff;\n    }\n  }\n\n  return state;\n};\n\n/**\n * Get parameter value.\n * @param {string} param - Parameter name or path (e.g. 'modes.BS.atom').\n * @param {*=} value - Default value.\n * @returns {*} Parameter value.\n */\nMiew.prototype.get = function (param, value) {\n  return settings.get(param, value);\n};\n\nMiew.prototype._clipPlaneUpdateValue = function (radius) {\n  const clipPlaneValue = Math.max(\n    this._gfx.camera.position.z - radius * settings.now.draft.clipPlaneFactor,\n    settings.now.camNear,\n  );\n\n  const opts = { clipPlaneValue };\n  this._forEachComplexVisual((visual) => {\n    visual.setUberOptions(opts);\n  });\n  for (let i = 0, n = this._objects.length; i < n; ++i) {\n    const obj = this._objects[i];\n    if (obj._line) {\n      obj._line.material.setUberOptions(opts);\n    }\n  }\n  if (this._picker !== null) {\n    this._picker.clipPlaneValue = clipPlaneValue;\n  }\n};\n\nMiew.prototype._fogFarUpdateValue = function () {\n  if (this._picker !== null) {\n    if (this._gfx.scene.fog) {\n      this._picker.fogFarValue = this._gfx.scene.fog.far;\n    } else {\n      this._picker.fogFarValue = undefined;\n    }\n  }\n};\n\nMiew.prototype._updateShadowmapMeshes = function (process) {\n  this._forEachComplexVisual((visual) => {\n    const reprList = visual._reprList;\n    for (let i = 0, n = reprList.length; i < n; ++i) {\n      const repr = reprList[i];\n      process(repr.geo, repr.material);\n    }\n  });\n};\n\nMiew.prototype._updateMaterials = function (values, needTraverse = false, process = undefined) {\n  this._forEachComplexVisual((visual) => visual.setMaterialValues(values, needTraverse, process));\n  for (let i = 0, n = this._objects.length; i < n; ++i) {\n    const obj = this._objects[i];\n    if (obj._line) {\n      obj._line.material.setValues(values);\n      obj._line.material.needsUpdate = true;\n    }\n  }\n};\n\nMiew.prototype._fogAlphaChanged = function () {\n  this._forEachComplexVisual((visual) => {\n    visual.setUberOptions({\n      fogAlpha: settings.now.fogAlpha,\n    });\n  });\n};\n\nMiew.prototype._embedWebXR = function () {\n  // switch off\n  if (settings.now.stereo !== 'WEBVR') {\n    if (this.webVR) {\n      this.webVR.disable();\n    }\n    this.webVR = null;\n    return;\n  }\n  // switch on\n  if (!this.webVR) {\n    this.webVR = new WebVRPoC(() => {\n      this._requestAnimationFrame(() => this._onTick());\n      this._needRender = true;\n      this._onResize();\n    });\n  }\n  this.webVR.enable(this._gfx);\n};\n\nMiew.prototype._initOnSettingsChanged = function () {\n  const on = (props, func) => {\n    props = _.isArray(props) ? props : [props];\n    props.forEach((prop) => {\n      this.settings.addEventListener(`change:${prop}`, func);\n    });\n  };\n\n  on('modes.VD.frame', () => {\n    const volume = this._getVolumeVisual();\n    if (volume === null) return;\n\n    volume.showFrame(settings.now.modes.VD.frame);\n    this._needRender = true;\n  });\n\n  on('modes.VD.isoMode', () => {\n    const volume = this._getVolumeVisual();\n    if (volume === null) return;\n\n    volume.getMesh().material.updateDefines();\n    this._needRender = true;\n  });\n\n  on('bg.color', () => {\n    this._onBgColorChanged();\n  });\n\n  on('ao', () => {\n    if (settings.now.ao && !isAOSupported(this._gfx.renderer.getContext())) {\n      this.logger.warn('Your device or browser does not support ao');\n      settings.set('ao', false);\n    } else {\n      const values = { normalsToGBuffer: settings.now.ao };\n      this._setUberMaterialValues(values);\n    }\n  });\n\n  on('zSprites', () => {\n    if (settings.now.zSprites && !arezSpritesSupported(this._gfx.renderer.getContext())) {\n      this.logger.warn('Your device or browser does not support zSprites');\n      settings.set('zSprites', false);\n    }\n    this.rebuildAll();\n  });\n\n  on('fogColor', () => {\n    this._onFogColorChanged();\n  });\n\n  on('fogColorEnable', () => {\n    this._onFogColorChanged();\n  });\n\n  on('bg.transparent', (evt) => {\n    const gfx = this._gfx;\n    if (gfx) {\n      gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\n    }\n    // update materials\n    this._updateMaterials({ fogTransparent: evt.value });\n    this.rebuildAll();\n  });\n\n  on('draft.clipPlane', (evt) => {\n    // update materials\n    this._updateMaterials({ clipPlane: evt.value });\n    this.rebuildAll();\n  });\n\n  on('shadow.on', (evt) => {\n    // update materials\n    const values = { shadowmap: evt.value, shadowmapType: settings.now.shadow.type };\n    const gfx = this._gfx;\n    if (gfx) {\n      gfx.renderer.shadowMap.enabled = Boolean(values.shadowmap);\n    }\n    this._updateMaterials(values, true);\n    if (values.shadowmap) {\n      this._updateShadowCamera();\n      this._updateShadowmapMeshes(meshutils.createShadowmapMaterial);\n    } else {\n      this._updateShadowmapMeshes(meshutils.removeShadowmapMaterial);\n    }\n    this._needRender = true;\n  });\n\n  on('shadow.type', (evt) => {\n    // update materials if shadowmap is enable\n    if (settings.now.shadow.on) {\n      this._updateMaterials({ shadowmapType: evt.value }, true);\n      this._needRender = true;\n    }\n  });\n\n  on('shadow.radius', (evt) => {\n    for (let i = 0; i < this._gfx.scene.children.length; i++) {\n      if (this._gfx.scene.children[i].shadow !== undefined) {\n        const light = this._gfx.scene.children[i];\n        light.shadow.radius = evt.value;\n        this._needRender = true;\n      }\n    }\n  });\n\n  on('fps', () => {\n    this._fps.show(settings.now.fps);\n  });\n\n  on(['fog', 'fogNearFactor', 'fogFarFactor'], () => {\n    this._updateFog();\n    this._needRender = true;\n  });\n\n  on('fogAlpha', () => {\n    const { fogAlpha } = settings.now;\n    if (fogAlpha < 0 || fogAlpha > 1) {\n      this.logger.warn('fogAlpha must belong range [0,1]');\n    }\n    this._fogAlphaChanged();\n    this._needRender = true;\n  });\n\n  on('autoResolution', (evt) => {\n    if (evt.value && !this._gfxScore) {\n      this.logger.warn('Benchmarks are missed, autoresolution will not work! '\n        + 'Autoresolution should be set during miew startup.');\n    }\n  });\n\n  on('stereo', () => {\n    this._embedWebXR(settings.now.stereo === 'WEBVR');\n    this._needRender = true;\n  });\n\n  on(['transparency', 'palette'], () => {\n    this.rebuildAll();\n  });\n\n  on('resolution', () => {\n    // update complex visuals\n    this.rebuildAll();\n\n    // update volume visual\n    const volume = this._getVolumeVisual();\n    if (volume) {\n      volume.getMesh().material.updateDefines();\n      this._needRender = true;\n    }\n  });\n\n  on(['axes', 'fxaa', 'ao',\n    'outline.on', 'outline.color', 'outline.threshold', 'outline.thickness'], () => {\n    this._needRender = true;\n  });\n};\n\n/**\n * Set parameter value.\n * @param {string|object} params - Parameter name or path (e.g. 'modes.BS.atom') or even settings object.\n * @param {*=} value - Value.\n */\nMiew.prototype.set = function (params, value) {\n  settings.set(params, value);\n};\n\n/**\n * Select atoms with selection string.\n * @param {string} expression - string expression of selection\n * @param {boolean=} append - true to append selection atoms to current selection, false to rewrite selection\n */\nMiew.prototype.select = function (expression, append) {\n  const visual = this._getComplexVisual();\n  if (!visual) {\n    return;\n  }\n\n  let sel = expression;\n  if (_.isString(expression)) {\n    sel = selectors.parse(expression).selector;\n  }\n\n  visual.select(sel, append);\n  this._lastPick = null;\n\n  this._updateInfoPanel();\n  this._needRender = true;\n};\n\nconst VIEW_VERSION = '1';\n\n/**\n * Get or set view info packed into string.\n *\n * **Note:** view is stored for *left-handed* cs, euler angles are stored in radians and *ZXY-order*,\n *\n * @param {string=} expression - Optional string encoded the view\n */\nMiew.prototype.view = function (expression) {\n  const self = this;\n  const { pivot } = this._gfx;\n  let transform = [];\n  const eulerOrder = 'ZXY';\n\n  function encode() {\n    const pos = pivot.position;\n    const scale = self._objectControls.getScale() / settings.now.radiusToFit;\n    const euler = new THREE.Euler();\n    euler.setFromQuaternion(self._objectControls.getOrientation(), eulerOrder);\n    transform = [\n      pos.x, pos.y, pos.z,\n      scale,\n      euler.x, euler.y, euler.z,\n    ];\n    return VIEW_VERSION + utils.arrayToBase64(transform, Float32Array);\n  }\n\n  function decode() {\n    // backwards compatible: old non-versioned view is the 0th version\n    if (expression.length === 40) {\n      expression = `0${expression}`;\n    }\n\n    const version = expression[0];\n    transform = utils.arrayFromBase64(expression.substr(1), Float32Array);\n\n    // apply adapter for old versions\n    if (version !== VIEW_VERSION) {\n      if (version === '0') {\n        // cancel radiusToFit included in old views\n        transform[3] /= 8.0;\n      } else {\n        // do nothing\n        self.logger.warn(`Encoded view version mismatch, stored as ${version} vs ${VIEW_VERSION} expected`);\n        return;\n      }\n    }\n\n    const interpolator = self._interpolator;\n    const srcView = interpolator.createView();\n    srcView.position.copy(pivot.position);\n    srcView.scale = self._objectControls.getScale();\n    srcView.orientation.copy(self._objectControls.getOrientation());\n\n    const dstView = interpolator.createView();\n    dstView.position.set(transform[0], transform[1], transform[2]);\n\n    // hack to make preset views work after we moved centering offset to visual nodes\n    // FIXME should only store main pivot offset in preset\n    if (self._getComplexVisual()) {\n      dstView.position.sub(self._getComplexVisual().position);\n    }\n\n    dstView.scale = transform[3]; // eslint-disable-line prefer-destructuring\n    dstView.orientation.setFromEuler(new THREE.Euler(transform[4], transform[5], transform[6], eulerOrder));\n\n    interpolator.setup(srcView, dstView);\n  }\n\n  if (typeof expression === 'undefined') {\n    return encode();\n  }\n  decode();\n\n  return expression;\n};\n\n/*\n   * Update current view due to viewinterpolator state\n   */\nMiew.prototype._updateView = function () {\n  const self = this;\n  const { pivot } = this._gfx;\n\n  const interpolator = this._interpolator;\n  if (!interpolator.wasStarted()) {\n    interpolator.start();\n  }\n\n  if (!interpolator.isMoving()) {\n    return;\n  }\n\n  const res = interpolator.getCurrentView();\n  if (res.success) {\n    const curr = res.view;\n    pivot.position.copy(curr.position);\n    self._objectControls.setScale(curr.scale * settings.now.radiusToFit);\n    self._objectControls.setOrientation(curr.orientation);\n    this.dispatchEvent({ type: 'transform' });\n    self._needRender = true;\n  }\n};\n\n/**\n * Translate object by vector\n * @param {number} x - translation value (Ang) along model's X axis\n * @param {number} y - translation value (Ang) along model's Y axis\n * @param {number} z - translation value (Ang) along model's Z axis\n */\nMiew.prototype.translate = function (x, y, z) {\n  this._objectControls.translatePivot(x, y, z);\n  this.dispatchEvent({ type: 'transform' });\n  this._needRender = true;\n};\n\n/**\n * Rotate object by Euler angles\n * @param {number} x - rotation angle around X axis in radians\n * @param {number} y - rotation angle around Y axis in radians\n * @param {number} z - rotation angle around Z axis in radians\n */\nMiew.prototype.rotate = function (x, y, z) {\n  this._objectControls.rotate(new THREE.Quaternion().setFromEuler(new THREE.Euler(x, y, z, 'XYZ')));\n  this.dispatchEvent({ type: 'transform' });\n  this._needRender = true;\n};\n\n/**\n * Scale object by factor\n * @param {number} factor - scale multiplier, should greater than zero\n */\nMiew.prototype.scale = function (factor) {\n  if (factor <= 0) {\n    throw new RangeError('Scale should be greater than zero');\n  }\n  this._objectControls.scale(factor);\n  this.dispatchEvent({ type: 'transform' });\n  this._needRender = true;\n};\n\n/**\n * Center view on selection\n * @param {empty | subset | string} selector - defines part of molecule which must be centered (\n * empty - center on current selection;\n * subset - center on picked atom/residue/molecule;\n * string - center on atoms correspond to selection string)\n */\nMiew.prototype.center = function (selector) {\n  // no arguments - center on current selection;\n  if (selector === undefined) {\n    this.setPivotSubset();\n    this._needRender = true;\n    return;\n  }\n  // subset with atom or residue - center on picked atom/residue;\n  if (selector.obj !== undefined && ('atom' in selector.obj || 'residue' in selector.obj)) { // from event with selection\n    if ('atom' in selector.obj) {\n      this.setPivotAtom(selector.obj.atom);\n    } else {\n      this.setPivotResidue(selector.obj.residue);\n    }\n    this._needRender = true;\n    return;\n  }\n  // string - center on atoms correspond to selection string\n  if (selector.obj === undefined && selector !== '') {\n    const sel = selectors.parse(selector);\n    if (sel.error === undefined) {\n      this.setPivotSubset(sel);\n      this._needRender = true;\n      return;\n    }\n  }\n  // empty subset or incorrect/empty string - center on all molecule;\n  this.resetPivot();\n  this._needRender = true;\n};\n\n/**\n * Build selector that contains all atoms within given distance from group of atoms\n * @param {Selector} selector - selector describing source group of atoms\n * @param {number} radius - distance\n * @returns {Selector} selector describing result group of atoms\n */\nMiew.prototype.within = function (selector, radius) {\n  const visual = this._getComplexVisual();\n  if (!visual) {\n    return selectors.None();\n  }\n\n  if (selector instanceof String) {\n    selector = selectors.parse(selector);\n  }\n\n  const res = visual.within(selector, radius);\n  if (res) {\n    visual.rebuildSelectionGeometry();\n    this._needRender = true;\n  }\n  return res;\n};\n\n/**\n * Get atom position in 2D canvas coords\n * @param {string} fullAtomName - full atom name, like A.38.CG\n * @returns {Object} {x, y} or false if atom not found\n */\nMiew.prototype.projected = function (fullAtomName, complexName) {\n  const visual = this._getComplexVisual(complexName);\n  if (!visual) {\n    return false;\n  }\n\n  const atom = visual.getComplex().getAtomByFullname(fullAtomName);\n  if (atom === null) {\n    return false;\n  }\n\n  const pos = atom.position.clone();\n  // we consider atom position to be affected only by common complex transform\n  // ignoring any transformations that may add during editing\n  this._gfx.pivot.updateMatrixWorldRecursive();\n  this._gfx.camera.updateMatrixWorldRecursive();\n  this._gfx.pivot.localToWorld(pos);\n  pos.project(this._gfx.camera);\n\n  return {\n    x: (pos.x + 1.0) * 0.5 * this._gfx.width,\n    y: (1.0 - pos.y) * 0.5 * this._gfx.height,\n  };\n};\n\n/**\n * Replace secondary structure with calculated one.\n *\n * DSSP algorithm implementation is used.\n *\n * Kabsch W, Sander C. 1983. Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and\n * geometrical features. Biopolymers. 22(12):2577-2637. doi:10.1002/bip.360221211.\n *\n * @param {string=} complexName - complex name\n */\nMiew.prototype.dssp = function (complexName) {\n  const visual = this._getComplexVisual(complexName);\n  if (!visual) {\n    return;\n  }\n  visual.getComplex().dssp();\n\n  // rebuild dependent representations (cartoon or ss-colored)\n  visual._reprList.forEach((rep) => {\n    if (rep.mode.id === 'CA' || rep.colorer.id === 'SS') {\n      rep.needsRebuild = true;\n    }\n  });\n};\n\nMiew.prototype.exportCML = function () {\n  const self = this;\n\n  function extractRotation(m) {\n    const xAxis = new THREE.Vector3();\n    const yAxis = new THREE.Vector3();\n    const zAxis = new THREE.Vector3();\n    m.extractBasis(xAxis, yAxis, zAxis);\n    xAxis.normalize();\n    yAxis.normalize();\n    zAxis.normalize();\n    const retMat = new THREE.Matrix4();\n    retMat.identity();\n    retMat.makeBasis(xAxis, yAxis, zAxis);\n    return retMat;\n  }\n\n  function updateCMLData(complex) {\n    const { root } = self._gfx;\n    const mat = extractRotation(root.matrixWorld);\n    const v4 = new THREE.Vector4(0, 0, 0, 0);\n    const vCenter = new THREE.Vector4(0, 0, 0, 0);\n    let xml = null;\n    let ap = null;\n\n    // update atoms in cml\n    complex.forEachAtom((atom) => {\n      if (atom.xmlNodeRef && atom.xmlNodeRef.xmlNode) {\n        xml = atom.xmlNodeRef.xmlNode;\n        ap = atom.position;\n        v4.set(ap.x, ap.y, ap.z, 1.0);\n        v4.applyMatrix4(mat);\n        xml.setAttribute('x3', v4.x.toString());\n        xml.setAttribute('y3', v4.y.toString());\n        xml.setAttribute('z3', v4.z.toString());\n        xml.removeAttribute('x2');\n        xml.removeAttribute('y2');\n      }\n    });\n    // update stereo groups in cml\n    complex.forEachSGroup((sGroup) => {\n      if (sGroup.xmlNodeRef && sGroup.xmlNodeRef.xmlNode) {\n        xml = sGroup.xmlNodeRef.xmlNode;\n        ap = sGroup.getPosition();\n        v4.set(ap.x, ap.y, ap.z, 1.0);\n        const cp = sGroup.getCentralPoint();\n        if (cp === null) {\n          v4.applyMatrix4(mat);\n        } else {\n          vCenter.set(cp.x, cp.y, cp.z, 0.0);\n          v4.add(vCenter);\n          v4.applyMatrix4(mat); // pos in global space\n          vCenter.set(cp.x, cp.y, cp.z, 1.0);\n          vCenter.applyMatrix4(mat);\n          v4.sub(vCenter);\n        }\n        xml.setAttribute('x', v4.x.toString());\n        xml.setAttribute('y', v4.y.toString());\n        xml.setAttribute('z', v4.z.toString());\n      }\n    });\n  }\n\n  const visual = self._getComplexVisual();\n  const complex = visual ? visual.getComplex() : null;\n  if (complex && complex.originalCML) {\n    updateCMLData(complex);\n\n    // serialize xml structure to string\n    const oSerializer = new XMLSerializer();\n    return oSerializer.serializeToString(complex.originalCML);\n  }\n\n  return null;\n};\n\n/**\n * Reproduce the RCSB PDB Molecule of the Month style by David S. Goodsell\n *\n * @see http://pdb101.rcsb.org/motm/motm-about\n */\nMiew.prototype.motm = function () {\n  settings.set({\n    fogColorEnable: true,\n    fogColor: 0x000000,\n    outline: { on: true, threshold: 0.01 },\n    bg: { color: 0xffffff },\n  });\n\n  this._forEachComplexVisual((visual) => {\n    const rep = [];\n    const complex = visual.getComplex();\n    const palette = palettes.get(settings.now.palette);\n    for (let i = 0; i < complex.getChainCount(); i++) {\n      const curChainName = complex._chains[i]._name;\n      const curChainColor = palette.getChainColor(curChainName);\n      rep[i] = {\n        selector: `chain ${curChainName}`,\n        mode: 'VW',\n        colorer: ['CB', { color: curChainColor, factor: 0.9 }],\n        material: 'FL',\n      };\n    }\n    visual.resetReps(rep);\n  });\n};\n\nMiew.prototype.VERSION = (typeof PACKAGE_VERSION !== 'undefined' && PACKAGE_VERSION) || '0.0.0-dev';\n\n// Uncomment this to get debug trace:\n// Miew.prototype.debugTracer = new utils.DebugTracer(Miew.prototype);\n\n_.assign(Miew, /** @lends Miew */ {\n  VERSION: Miew.prototype.VERSION,\n\n  registeredPlugins: [],\n\n  // export namespaces // TODO: WIP: refactoring external interface\n  chem,\n  io,\n  modes,\n  colorers,\n  materials,\n  palettes,\n  options,\n  settings,\n  utils,\n  gfx: {\n    Representation,\n  },\n\n  /**\n   * Third-party libraries packaged together with Miew.\n   *\n   * @property {object} lodash - [Lodash](https://lodash.com/), a modern JavaScript utility library delivering\n   *   modularity, performance & extras.\n   * @property {object} three - [three.js](https://threejs.org/), JavaScript 3D library.\n   *\n   * @example\n   * var _ = Miew.thirdParty.lodash;\n   * var opts = _.merge({ ... }, Miew.options.fromURL(window.location.search));\n   * var miew = new Miew(opts);\n   */\n  thirdParty: {\n    lodash: _,\n    three: THREE,\n  },\n});\n\nexport default Miew;\n","/*\n * Toggling WebVR is done through button.click because of limitations on calling requestPresent in webVR:\n * VRDisplay::requestPresent should be called from user gesture:\n * https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/requestPresent\n */\nexport default function (webVRPoC) {\n  function showEnterVR(button) {\n    button.style.display = '';\n    button.style.cursor = 'pointer';\n    button.style.left = 'calc(50% - 50px)';\n    button.style.width = '100px';\n\n    button.textContent = 'ENTER VR';\n\n    let currentSession = null;\n\n    function onSessionEnded(/* event */) {\n      currentSession.removeEventListener('end', onSessionEnded);\n      button.textContent = 'ENTER VR';\n      currentSession = null;\n    }\n\n    function onSessionStarted(session) {\n      session.addEventListener('end', onSessionEnded);\n      webVRPoC._gfx.renderer.xr.setReferenceSpaceType('local');\n      webVRPoC._gfx.renderer.xr.setSession(session);\n      button.textContent = 'EXIT VR';\n      currentSession = session;\n    }\n\n    button.onmouseenter = function () { button.style.opacity = '1.0'; };\n    button.onmouseleave = function () { button.style.opacity = '0.5'; };\n\n    button.onclick = function () {\n      if (currentSession === null) {\n        // WebXR's requestReferenceSpace only works if the corresponding feature\n        // was requested at session creation time. For simplicity, just ask for\n        // the interesting ones as optional features, but be aware that the\n        // requestReferenceSpace call will fail if it turns out to be unavailable.\n        // ('local' is always available for immersive sessions and doesn't need to\n        // be requested separately.)\n\n        const sessionInit = { optionalFeatures: ['local-floor', 'bounded-floor'] };\n        navigator.xr.requestSession('immersive-vr', sessionInit).then(onSessionStarted);\n        webVRPoC.moveSceneBehindHeadset();\n      } else {\n        currentSession.end();\n      }\n    };\n  }\n\n  function showWebXRNotFound(button) {\n    button.style.display = '';\n    button.style.cursor = 'auto';\n    button.style.left = 'calc(50% - 75px)';\n    button.style.width = '150px';\n    button.textContent = 'VR NOT FOUND';\n    button.onmouseenter = null;\n    button.onmouseleave = null;\n    button.onclick = null;\n  }\n\n  function stylizeElement(element) {\n    element.style.position = 'absolute';\n    element.style.bottom = '20px';\n    element.style.padding = '12px 6px';\n    element.style.border = '1px solid #fff';\n    element.style.borderRadius = '4px';\n    element.style.background = 'transparent';\n    element.style.color = '#fff';\n    element.style.font = 'normal 13px sans-serif';\n    element.style.textAlign = 'center';\n    element.style.opacity = '0.5';\n    element.style.outline = 'none';\n    element.style.zIndex = '999';\n  }\n\n  if ('xr' in navigator) {\n    const button = document.createElement('button');\n    button.style.display = 'none';\n    stylizeElement(button);\n    navigator.xr.isSessionSupported('immersive-vr').then((supported) => (\n      supported ? showEnterVR(button) : showWebXRNotFound(button)\n    ));\n    return button;\n  }\n  const message = document.createElement('a');\n  message.href = 'https://webvr.info';\n  message.innerHTML = 'WEBXR NOT SUPPORTED';\n  message.style.left = 'calc(50% - 90px)';\n  message.style.width = '180px';\n  message.style.textDecoration = 'none';\n  stylizeElement(message);\n  return message;\n}\n","import * as THREE from 'three';\nimport createWebVRButton from './createWebVRButton';\nimport gfxutils from '../gfxutils';\nimport logger from '../../utils/logger';\nimport settings from '../../settings';\nimport UberMaterial from '../shaders/UberMaterial';\n\nexport default class WebVRPoC {\n  constructor(onToggle) {\n    this._mainCamera = new THREE.PerspectiveCamera();\n    this._button = null;\n    this._onToggle = onToggle;\n\n    this._molContainer = new gfxutils.RCGroup();\n    this._user = new gfxutils.RCGroup();\n    this._scalingPivot = new THREE.Object3D();\n    this._user.add(this._scalingPivot);\n\n    this._controller1 = null;\n    this._controller2 = null;\n    this._pressedGripsCounter = 0;\n    this._distance = 0;\n\n    this._gfx = null;\n  }\n\n  startScalingByControllers() {\n    // reset scale\n    this._distance = this._controller1.position.distanceTo(this._controller2.position);\n    gfxutils.getMiddlePoint(this._controller1.position, this._controller2.position, this._scalingPivot.position);\n    this._scalingPivot.scale.set(1, 1, 1);\n    this._scalingPivot.updateMatrix();\n    this._scalingPivot.updateMatrixWorld();\n    // link molecule to pivot\n    this._scalingPivot.addSavingWorldTransform(this._molContainer);\n  }\n\n  stopScalingByControllers() {\n    this._gfx.scene.addSavingWorldTransform(this._molContainer);\n  }\n\n  handleGripsDown(event) {\n    this._pressedGripsCounter++;\n    if (this._pressedGripsCounter === 2) {\n      this.startScalingByControllers();\n    } else if (this._pressedGripsCounter === 1) {\n      event.target.addSavingWorldTransform(this._molContainer);\n    }\n  }\n\n  handleGripsUp(event) {\n    this._pressedGripsCounter--;\n    if (this._pressedGripsCounter === 1) {\n      this.stopScalingByControllers();\n      // reattach molecule to other controller\n      const anotherController = event.target === this._controller1 ? this._controller2 : this._controller1;\n      anotherController.addSavingWorldTransform(this._molContainer);\n    } else if (this._pressedGripsCounter === 0) {\n      this._gfx.scene.addSavingWorldTransform(this._molContainer);\n    }\n  }\n\n  enable(gfx) {\n    if (!gfx) {\n      logger.warn('WebVR couldn\\'t be enabled, because gfx is not defined');\n      return;\n    }\n    this._gfx = gfx;\n    const { renderer, camera } = gfx;\n    if (!renderer) {\n      throw new Error('No renderer is available to toggle WebVR');\n    }\n    if (!camera) {\n      throw new Error('No camera is available to toggle WebVR');\n    }\n\n    // enable xr in renderer\n    renderer.xr.enabled = true;\n    // add button for turning vr mode\n    if (!this._button) {\n      this._button = createWebVRButton(this);\n      document.body.appendChild(this._button);\n    } else {\n      this._button.style.display = 'block';\n    }\n    // store fog setting\n    this._mainFog = settings.now.fog;\n    settings.set('fog', false);\n\n    this._plugVRNodesIntoScene(gfx, renderer);\n    this._setControllersListeners();\n\n    // make some Miew job\n    if (this._onToggle) {\n      this._onToggle(true);\n    }\n  }\n\n  _plugVRNodesIntoScene(gfx, renderer) {\n    // store common scene camera\n    this._mainCamera.copy(gfx.camera);\n    // add hierarchical structure for webVR into scene\n    gfx.scene.add(this._user);\n    // turn on webvr transformation\n    gfx.scene.add(this._molContainer);\n    this._molContainer.add(gfx.root);\n\n    this._controller1 = renderer.xr.getController(0);\n    this._controller2 = renderer.xr.getController(1);\n    const mesh = this._createControllerMesh();\n    this._controller1.add(mesh);\n    this._controller2.add(mesh.clone());\n    this._user.add(this._controller1);\n    this._user.add(this._controller2);\n  }\n\n  _setControllersListeners() {\n    this._controller1.addEventListener('selectstart', (event) => {\n      this.handleGripsDown(event);\n    });\n    this._controller1.addEventListener('selectend', (event) => {\n      this.handleGripsUp(event);\n    });\n    this._controller2.addEventListener('selectstart', (event) => {\n      this.handleGripsDown(event);\n    });\n    this._controller2.addEventListener('selectend', (event) => {\n      this.handleGripsUp(event);\n    });\n\n    this._controller1.addEventListener('squeezestart', (event) => {\n      this.handleGripsDown(event);\n    });\n    this._controller1.addEventListener('squeezeend', (event) => {\n      this.handleGripsUp(event);\n    });\n    this._controller2.addEventListener('squeezestart', (event) => {\n      this.handleGripsDown(event);\n    });\n    this._controller2.addEventListener('squeezeend', (event) => {\n      this.handleGripsUp(event);\n    });\n  }\n\n  disable() {\n    if (!this._gfx) {\n      return;\n    }\n    const { renderer, camera } = this._gfx;\n    if (!renderer) {\n      throw new Error('No renderer is available to toggle WebVR');\n    }\n\n    // nullify webxr callback for animation frame\n    renderer.setAnimationLoop(null);\n    const session = renderer.xr.getSession();\n    if (session) {\n      session.end();\n    }\n    renderer.xr.enabled = false;\n    // remove button of VR entering\n    if (this._button) {\n      this._button.style.display = 'none';\n    }\n    // restore fog param\n    settings.set('fog', this._mainFog);\n\n    this._unplugVRNodesFromScene(camera);\n\n    // make some Miew job\n    if (this._onToggle) {\n      this._onToggle(false);\n    }\n  }\n\n  _unplugVRNodesFromScene(camera) {\n    // restore common camera\n    if (this._mainCamera && camera) {\n      camera.copy(this._mainCamera);\n    }\n    // turn off webvr transformation\n    const root = this._molContainer.children[0];\n    if (root) {\n      this._gfx.scene.add(root);\n    }\n    this._molContainer.parent.remove(this._molContainer);\n    if (this._user) {\n      this._gfx.scene.remove(this._user);\n    }\n    // free scene nodes\n    this._molContainer = null;\n    this._user = null;\n    this._scalingPivot = null;\n    this._user = null;\n    this._controller1 = null;\n    this._controller2 = null;\n  }\n\n  _createControllerMesh() {\n    // visualize controllers with cylinders\n    const geometry = new THREE.CylinderGeometry(0.04, 0.04, 0.3);\n    const material = new UberMaterial({ lights: false, overrideColor: true });\n    material.setUberOptions({ fixedColor: new THREE.Color(0x4444ff) });\n    material.updateUniforms();\n    const cylinder = new THREE.Mesh(geometry, material);\n    cylinder.rotateX(-Math.PI / 2);\n    return cylinder;\n  }\n\n  updateMoleculeScale() {\n    if (!this._controller1 || !this._controller2) {\n      return;\n    }\n\n    const self = this;\n    // update molecule scaling by controllers\n    if (self._pressedGripsCounter === 2) {\n      // recalc scaling pivot\n      gfxutils.getMiddlePoint(self._controller1.position, self._controller2.position, self._scalingPivot.position);\n      // recalc scaler\n      const dist = self._controller1.position.distanceTo(self._controller2.position);\n      const scaler = dist / self._distance;\n      self._scalingPivot.scale.multiplyScalar(scaler);\n      // save cur distance for next frame\n      self._distance = dist;\n    }\n  }\n\n  /**\n   * Reposition molecule right before the camera.\n   * @note The proper way is to initiate headset in the place of common Miew's camera.\n   * But threejs limitations on setting new XRReferenceSpace enforce the molecule repositioning\n   * Hope, something will change.\n   */\n  moveSceneBehindHeadset() {\n    const gfx = this._gfx;\n    const { camera } = gfx;\n\n    // set container position in camera space\n    const container = this._molContainer;\n    container.matrix.identity();\n    container.position.set(0, 0, -4.0);\n    container.updateMatrix();\n\n    // update container world matrix\n    container.matrixWorld.multiplyMatrices(camera.matrixWorld, container.matrix);\n    // readd to scene\n    gfx.scene.addSavingWorldTransform(container);\n    if (this._onToggle) {\n      this._onToggle(true);\n    }\n  }\n\n  getCanvas() {\n    const gfx = this._gfx;\n    return (gfx && gfx.renderer) ? gfx.renderer.domElement : null;\n  }\n}\n","export default \"precision highp float;\\n\\nvarying vec2 vUv;\\nuniform sampler2D srcTex;\\nuniform vec3 aberration;\\n\\nvoid main() {\\n  vec2 uv = vUv * 2.0 - 1.0;\\n  \\n  gl_FragColor.r = texture2D(srcTex, 0.5 * (uv * aberration[0] + 1.0)).r;\\n  gl_FragColor.g = texture2D(srcTex, 0.5 * (uv * aberration[1] + 1.0)).g;\\n  gl_FragColor.b = texture2D(srcTex, 0.5 * (uv * aberration[2] + 1.0)).b;\\n  gl_FragColor.a = 1.0;\\n}\";","import palettes from '../gfx/palettes';\nimport settings from '../settings';\n\nconst modeIdDesc = {\n  $help: [\n    'Rendering mode shortcut',\n    '    BS - balls and sticks mode',\n    '    LN - lines mode',\n    '    LC - licorice mode',\n    '    VW - van der waals mode',\n    '    TR - trace mode',\n    '    TU - tube mode',\n    '    CA - cartoon mode',\n    '    SA - isosurface mode',\n    '    QS - quick surface mode',\n    '    SE - solvent excluded mode',\n    '    TX - text mode',\n  ],\n  BS: {\n    $help: [\n      '   Balls and sticks',\n      '      aromrad = <number> #aromatic radius',\n      '      atom = <number>    #atom radius',\n      '      bond = <number>    #bond radius',\n      '      multibond = <bool> #use multibond',\n      '      showarom = <bool>  #show aromatic',\n      '      space = <number>   #space value\\n',\n    ],\n  },\n  CA: {\n    $help: [\n      '   Cartoon',\n      '      arrow = <number>   #arrow size',\n      '      depth = <number>   #depth of surface',\n      '      heightSegmentsRatio = <number>',\n      '      radius = <number>  #tube radius',\n      '      tension = <number> #',\n      '      width = <number>  #secondary width\\n',\n    ],\n  },\n  LN: {\n    $help: [\n      '   Lines',\n      '      atom = <number>    #atom radius',\n      '      chunkarom = <number>',\n      '      multibond = <bool> #use multibond',\n      '      showarom = <bool>  #show aromatic',\n      '      offsarom = <number>\\n',\n    ],\n  },\n  LC: {\n    $help: [\n      '   Licorice',\n      '      aromrad = <number> #aromatic radius',\n      '      bond = <number>    #bond radius',\n      '      multibond = <bool> #use multibond',\n      '      showarom = <bool>  #show aromatic',\n      '      space = <number>   #space value\\n',\n    ],\n  },\n  VW: {\n    $help: [\n      '   Van der Waals',\n      '      nothing\\n',\n    ],\n  },\n  TR: {\n    $help: [\n      '   Trace',\n      '      radius = <number>  #tube radius\\n',\n    ],\n  },\n  TU: {\n    $help: [\n      '   Tube',\n      '      heightSegmentsRatio = <number>',\n      '      radius = <number>  #tube radius',\n      '      tension = <number> \\n',\n    ],\n  },\n  SA: {\n    $help: [\n      '   Surface',\n      '      zClip = <bool> #clip z plane\\n',\n    ],\n  },\n  QS: {\n    $help: [\n      '   Quick surface',\n      '      isoValue = <number>',\n      '      scale = <number>',\n      '      wireframe = <bool>',\n      '      zClip = <bool> #clip z plane\\n',\n    ],\n  },\n  SE: {\n    $help: [\n      '   Solvent excluded surface',\n      '      zClip = <bool> #clip z plane\\n',\n    ],\n  },\n  TX: {\n    $help: [\n      '   Text mode',\n      '      template = <format string> string that can include \"{{ id }}\"',\n      '          it will be replaced by value, id can be one of next:',\n      '          serial, name, type, sequence, residue, chain, hetatm, water\\n',\n      '      horizontalAlign = <string> {\"left\", \"right\", \"center\"}',\n      '      verticalAlign = <string> {\"top\", \"bottom\", \"middle\"}',\n      '      dx = <number> #offset along x',\n      '      dy = <number> #offset along y',\n      '      dz = <number> #offset along z',\n      '      fg = <string> #text color modificator',\n      '           could be keyword, named color or hex',\n      '      fg = <string> #back color modificator',\n      '           could be keyword, named color or hex',\n      '      showBg = <bool> #if set show background',\n      '           plate under text',\n    ],\n  },\n};\n\nconst colorDesc = {\n  $help: [\n    'Coloring mode shortcut',\n    '    EL - color by element',\n    '    CH - color by chain',\n    '    SQ - color by sequence',\n    '    RT - color by residue type',\n    '    SS - color by secondary structure',\n    '    UN - uniform',\n  ],\n  UN: {\n    $help: [\n      'Parameters of coloring modes customization',\n      '   Uniform',\n      '      color = <number|color> #RGB->HEX->dec\\n',\n    ],\n    color: {\n      $help: Object.keys(palettes.get(settings.now.palette).namedColors).sort().join('\\n'),\n    },\n  },\n};\n\nconst materialDesc = {\n  $help: [\n    'Material shortcut',\n    '    DF - diffuse',\n    '    TR - transparent',\n    '    SF - soft plastic',\n    '    PL - glossy plastic',\n    '    ME - metal',\n    '    GL - glass',\n  ],\n};\n\nconst addRepDesc = {\n  $help: [\n    'Short (packed) representation description as a set of variables',\n    '    s=<EXPRESSION>',\n    '        selector property',\n    '    m=<MODE_ID>[!<PARAMETER>:<VALUE>[,...]]',\n    '        render mode property',\n    '    c=<COLORER_ID>[!<PARAMETER>:<VALUE>[,...]]',\n    '        color mode property',\n    '    mt=<MATERIAL_ID>',\n    '        material property',\n  ],\n  s: {\n    $help: 'Selection expression string as it is in menu->representations->selection',\n  },\n  m: modeIdDesc,\n  c: colorDesc,\n  mt: materialDesc,\n};\n\nconst setGetParameterDesc = {\n  $help: [\n    'Parameters of rendering modes customization: modes',\n    'Parameters of colorer customization: colorers',\n    'Autobuild: autobuild = (<number>|<bool>)',\n  ],\n  modes: modeIdDesc,\n  colorers: colorDesc,\n};\n\nconst help = {\n  $help: [\n    'help (<cmd name>| <path to property>)',\n    'You can get detailed information about command options',\n    '   using \"help cmd.opt.opt.[...]\"\\n',\n    '   you can use one line comments',\n    '   everything started from (#|//) will be skipped',\n    '   Example: >build //some comment\\n',\n    'List of available commands:',\n  ],\n  reset: {\n    $help: [\n      'Reload current object, delete all representations',\n      '    Nothing will work until load new object',\n    ],\n  },\n  load: {\n    $help: [\n      'load (<PDBID>|<URL>|-f [<*.NC FILE URL STRING>])',\n      '    Load new pdb object from selected source',\n    ],\n    PDBID: {\n      $help: 'pdb id in remote molecule database',\n    },\n    URL: {\n      $help: 'url to source file',\n    },\n    f: {\n      $help: [\n        'open file system dialog to fetch local file',\n        'optionally you can determine trajectory file',\n        'via URL for *.top model',\n      ],\n    },\n  },\n  clear: {\n    $help: 'No args. Clear terminal',\n  },\n  add: {\n    $help: [\n      'add [<REP_NAME>] [<DESCRIPTION>]',\n      '    Add new item to representation set with',\n      '    default or <DESCRIPTION> params',\n    ],\n    REP_NAME: {\n      $help: 'Identifier string [_,a-z,A-Z,0-9] can not start from digit',\n    },\n    DESCRIPTION: addRepDesc,\n  },\n  rep: {\n    $help: [\n      'rep [<REP_NAME>|<REP_INDEX>] [<DESCRIPTION>]',\n      '    set current representation by name or index',\n      '    edit current representation by <DESCRIPTION>',\n    ],\n    REP_NAME: {\n      $help: [\n        'Identifier string [_,a-z,A-Z,0-9] can not start from digit',\n        'Must be declared before',\n      ],\n    },\n    REP_INDEX: {\n      $help: 'Index of available representation',\n    },\n    DESCRIPTION: addRepDesc,\n  },\n  remove: {\n    $help: [\n      'remove (<REP_NAME>|<REP_INDEX>)',\n      'Remove representation by name or index',\n    ],\n    REP_NAME: {\n      $help: [\n        'Identifier string [_,a-z,A-Z,0-9] can not start from digit',\n        'Must be declared before',\n      ],\n    },\n    REP_INDEX: {\n      $help: 'Index of available representation',\n    },\n  },\n  selector: {\n    $help: [\n      'selector <EXPRESSION>',\n      '   set selector from EXPRESSION to current representation',\n    ],\n    EXPRESSION: {\n      $help: 'Selection expression string as it is in menu->representations->selection',\n    },\n  },\n  mode: {\n    $help: [\n      'mode <MODE_ID> [<PARAMETER>=<VALUE>...]',\n      '   set rendering mode and apply parameters to current representation',\n    ],\n    MODE_ID: modeIdDesc,\n  },\n  color: {\n    $help: [\n      'color <COLORER_ID> [<PARAMETER>=<VALUE>...]',\n      '   set colorer and apply parameters to current representation',\n    ],\n    COLORER_ID: colorDesc,\n  },\n  material: {\n    $help: [\n      'material <MATERIAL_ID>',\n      '   set material to current representation',\n    ],\n    MATERIAL_ID: materialDesc,\n  },\n  build: {\n    $help: 'build help str',\n    add: {\n      $help: 'build.add',\n      new: {\n        $help: [\n          'add.new',\n          'add.new new line 1',\n          'add.new new line 2',\n          'add.new new line 3',\n        ],\n      },\n    },\n    del: {\n      $help: 'build.del',\n    },\n  },\n  list: {\n    $help: [\n      'list [-e|-s|<REP_NAME>|<REP_INDEX>]',\n      'Print representations if no args print list of representations',\n      '    -e expand list and show all representations',\n      '    -s show all user-registered selectors',\n      '    <REP_NAME>|<REP_INDEX> show only current representation',\n    ],\n  },\n  hide: {\n    $help: [\n      'hide (<REP_NAME>|<REP_INDEX>)',\n      'Hide representation referenced in args',\n    ],\n  },\n  show: {\n    $help: [\n      'show (<REP_NAME>|<REP_INDEX>)',\n      'Show representation referenced in args',\n    ],\n  },\n  get: {\n    $help: [\n      'get <PARAMETER>',\n      'Print <PARAMETER> value',\n      '    <PARAMETER> - path to option use get.PARAMETER to get more info',\n    ],\n    PARAMETER: setGetParameterDesc,\n  },\n  set: {\n    $help: [\n      'set <PARAMETER> <VALUE>',\n      'Set <PARAMETER> with <VALUE>',\n      '    <PARAMETER> - path to option use set.PARAMETER to get more info',\n    ],\n    PARAMETER: setGetParameterDesc,\n  },\n  set_save: {\n    $help: [\n      'set_save',\n      'Save current settings to cookie',\n    ],\n  },\n  set_restore: {\n    $help: [\n      'set_restore',\n      'Load and apply settings from cookie',\n    ],\n  },\n  set_reset: {\n    $help: [\n      'set_reset',\n      'Reset current settings to the defaults',\n    ],\n  },\n  preset: {\n    $help: [\n      'preset [<PRESET>]',\n      'Reset current representation or set preset to <PRESET>',\n    ],\n    PRESET: {\n      $help: [\n        'default',\n        'wire',\n        'small',\n        'macro',\n      ],\n    },\n  },\n  unit: {\n    $help: [\n      'unit [<unit_id>]',\n      'Change current biological structure view. Zero <unit_id> value means asymmetric unit,',\n      'positive values set an assembly with corresponding number.',\n      'Being called with no parameters command prints current unit information.',\n    ],\n  },\n  view: {\n    $help: [\n      'view [<ENCODED_VIEW>]',\n      'Get current encoded view or set if ENCODED_VIEW placed as argument',\n    ],\n    ENCODED_VIEW: {\n      $help: [\n        'encoded view matrix string (binary code)',\n      ],\n    },\n  },\n  rotate: {\n    $help: [\n      'rotate (x|y|z) [<DEGREES>] [(x|y|z) [<DEGREES>]]...',\n      'Rotate scene',\n    ],\n  },\n  scale: {\n    $help: [\n      'scale <SCALE>',\n      'Scale scene',\n    ],\n  },\n  select: {\n    $help: [\n      'select <SELECTOR_STRING> [as <SELECTOR_NAME>]',\n      'Select atoms using selector defined in SELECTOR_STRING',\n      '    and if SELECTOR_NAME is defined register it in viewer',\n      '    you can use it later as a complex selector',\n    ],\n  },\n  within: {\n    $help: [\n      'within <DISTANCE> of <SELECTOR_STRING> as <SELECTOR_NAME>',\n      'Build within named selector',\n      '    DISTANCE        <number>',\n      '    SELECTOR_STRING <string(selection language)>',\n      '    SELECTOR_NAME   <identifier>',\n    ],\n  },\n  url: {\n    $help: [\n      'url [-s] [-v]',\n      'Report URL encoded scene',\n      '    if -s set that include settings in the URL',\n      '    if -v set that include view in the URL',\n    ],\n  },\n  screenshot: {\n    $help: [\n      'screenshot [<WIDTH> [<HEIGHT>]]',\n      'Make a screenshot of the scene',\n      '    WIDTH  <number> in pixels',\n      '    HEIGHT <number> in pixels, equal to WIDTH by default',\n    ],\n  },\n  line: {\n    $help: [\n      'line <first_atom_path> <second_atom_path> [<PARAMETER>=<VALUE>]',\n      'Draw dashed line between two specified atoms',\n    ],\n  },\n  removeobj: {\n    $help: [\n      'removeobj <id>',\n      'Remove scene object by its index. Indices could be obtained by <listobj> command',\n    ],\n  },\n  listobj: {\n    $help: [\n      'listobj',\n      'Display the list of all existing scene objects',\n    ],\n  },\n};\n\nexport default help;\n","import _ from 'lodash';\nimport Miew from './Miew';\nimport { parser as parsercli } from './utils/MiewCLIParser';\nimport clihelp from './utils/MiewCLIHelp';\nimport logger from './utils/logger';\nimport utils from './utils';\n\nconst {\n  chem: { selectors },\n  modes,\n  colorers,\n  materials,\n  palettes,\n  options,\n  settings,\n} = Miew;\n\nfunction None() {\n}\n\nconst NULL = (function () {\n  const obj = new None();\n  return function () {\n    return obj;\n  };\n}());\n\nclass RepresentationMap {\n  constructor() {\n    this.representationMap = {};\n    this.representationID = {};\n  }\n\n  get(strId) {\n    return this.representationMap[strId] || this.representationID[strId] || '<no name>';\n  }\n\n  add(strId, index) {\n    if (strId === -1) {\n      return 'Can not create representation: there is no data';\n    }\n\n    if (index !== undefined) {\n      if (!this.representationMap.hasOwnProperty(strId)) {\n        this.representationMap[strId.toString()] = index;\n        this.representationID[index] = strId.toString();\n      } else {\n        return 'This name has already existed, registered without name';\n      }\n    }\n    return `Representation ${strId} successfully added`;\n  }\n\n  remove(index) {\n    if (index && this.representationID.hasOwnProperty(index)) {\n      delete this.representationMap[this.representationID[index]];\n      delete this.representationID[index];\n    }\n\n    const sortedKeys = Object.keys(this.representationID).sort();\n    for (const i in sortedKeys) {\n      if (sortedKeys.hasOwnProperty(i)) {\n        const id = sortedKeys[i];\n        if (id > index) {\n          this.representationID[id - 1] = this.representationID[id];\n          this.representationMap[this.representationID[id]] -= 1;\n          delete this.representationID[id];\n        }\n      }\n    }\n  }\n\n  clear() {\n    this.representationMap = {};\n    this.representationID = {};\n  }\n}\n\nconst representationsStorage = new RepresentationMap();\n\nfunction keyRemap(key) {\n  const keys = {\n    s: 'selector',\n    m: 'mode',\n    c: 'colorer',\n    mt: 'material',\n    mode: 'modes',\n    color: 'colorers',\n    colorer: 'colorers',\n    select: 'selector',\n    material: 'materials',\n    selector: 'selector',\n  };\n  const ans = keys[key];\n  return ans === undefined ? key : ans;\n}\n\nclass CLIUtils {\n  list(miew, repMap, key) {\n    let ret = '';\n    if (miew && repMap !== undefined) {\n      if (key === undefined || key === '-e') {\n        const count = miew.repCount();\n\n        for (let i = 0; i < count; i++) {\n          ret += this.listRep(miew, repMap, i, key);\n        }\n      }\n    }\n    return ret;\n  }\n\n  listRep(miew, repMap, repIndex, key) {\n    let ret = '';\n    const rep = miew.repGet(repIndex);\n    if (!rep) {\n      logger.warn(`Rep ${repIndex} does not exist!`);\n      return ret;\n    }\n    const index = repIndex;\n    const repName = repMap.get(index);\n\n    const { mode, colorer } = rep;\n    const selectionStr = rep.selectorString;\n    const material = rep.materialPreset;\n\n    ret += `#${index} : ${mode.name}${repName === '<no name>' ? '' : `, ${repName}`}\\n`;\n\n    if (key !== undefined) {\n      ret += `    selection : \"${selectionStr}\"\\n`;\n      ret += `    mode      : (${mode.id}), ${mode.name}\\n`;\n      ret += `    colorer   : (${colorer.id}), ${colorer.name}\\n`;\n      ret += `    material  : (${material.id}), ${material.name}\\n`;\n    }\n\n    return ret;\n  }\n\n  listSelector(miew, context) {\n    let ret = '';\n\n    for (const k in context) {\n      if (context.hasOwnProperty(k)) {\n        ret += `${k} : \"${context[k]}\"\\n`;\n      }\n    }\n\n    return ret;\n  }\n\n  listObjs(miew) {\n    const objs = miew._objects;\n\n    if (!objs || !Array.isArray(objs) || objs.length === 0) {\n      return 'There are no objects on the scene';\n    }\n\n    const strList = [];\n    for (let i = 0, n = objs.length; i < n; ++i) {\n      strList[i] = `${i}: ${objs[i].toString()}`;\n    }\n\n    return strList.join('\\n');\n  }\n\n  joinHelpStr(helpData) {\n    if (helpData instanceof Array) {\n      return helpData.join('\\n');\n    }\n    return helpData;\n  }\n\n  help(path) {\n    if (_.isUndefined(path)) {\n      return `${this.joinHelpStr(clihelp.$help)}\\n${_.slice(_.sortBy(_.keys(clihelp)), 1).join(', ')}\\n`;\n    }\n\n    const helpItem = _.get(clihelp, path);\n    return _.isUndefined(helpItem) ? this.help() : `${this.joinHelpStr(helpItem.$help)}\\n`;\n  }\n\n  load(miew, arg) {\n    if (miew === undefined || arg === undefined || arg === '-f') {\n      return;\n    }\n    miew.awaitWhileCMDisInProcess();\n    const finish = () => miew.finishAwaitingCMDInProcess();\n    miew.load(arg).then(finish, finish);\n  }\n\n  checkArg(key, arg, modificate) {\n    if (key !== undefined && arg !== undefined) {\n      if (keyRemap(key) === 'selector') {\n        const res = selectors.parse(arg);\n\n        if (res.error !== undefined) {\n          const selExc = { message: res.error };\n          throw selExc;\n        }\n\n        if (modificate !== undefined && modificate) {\n          return res.selector;\n        }\n        return arg;\n      }\n\n      const modificators = {\n        colorers,\n        modes,\n        materials,\n      };\n\n      let modificator = key;\n      let temp;\n      while (modificator !== temp) {\n        temp = modificator;\n        modificator = keyRemap(temp);\n      }\n\n      if (modificators[modificator].get(arg) === undefined) {\n        const exc = { message: `${arg} is not existed in ${modificator}` };\n        throw exc;\n      }\n      return arg;\n    }\n    return NULL;\n  }\n\n  propagateProp(path, arg) {\n    if (path !== undefined) {\n      let argExc = {};\n      const adapter = options.adapters[typeof _.get(settings.defaults, path)];\n      if (adapter === undefined) {\n        const pathExc = { message: `${path} is not existed` };\n        throw pathExc;\n      }\n\n      if ((path.endsWith('.color') || path.endsWith('.baseColor')\n        || path.endsWith('.EL.carbon')) && typeof arg !== 'number') {\n        arg = palettes.get(settings.now.palette).getNamedColor(arg);\n      }\n\n      if (path.endsWith('.fg') || path.endsWith('.bg')) {\n        if (typeof arg !== 'number') {\n          const val = palettes.get(settings.now.palette).getNamedColor(arg, true);\n          if (val !== undefined) {\n            arg = `0x${val.toString(16)}`;\n          }\n        } else {\n          arg = `0x${arg.toString(16)}`;\n        }\n      }\n\n      if (path.endsWith('.template')) {\n        arg = arg.replace(/\\\\n/g, '\\n');// NOSONAR\n      }\n\n      if (arg !== undefined && adapter(arg) !== arg && adapter(arg) !== (arg > 0)) {\n        argExc = { message: `${path} must be a \"${typeof _.get(settings.defaults, path)}\"` };\n        throw argExc;\n      }\n    }\n    return arg;\n  }\n\n  unquoteString(value) {\n    return utils.unquoteString(value);\n  }\n}\n// repIndexOrRepMap could be RepresentationMap or index\n\nconst utilFunctions = new CLIUtils();\n\nfunction CreateObjectPair(a, b) {\n  const obj = {};\n  obj[a] = b;\n  return obj;\n}\n\nfunction ArgList(arg) {\n  if (arg instanceof this.constructor) {\n    return arg;\n  }\n  if (arg instanceof Array) {\n    this._values = arg.slice(0);\n  } else if (arg) {\n    this._values = [arg];\n  } else {\n    this._values = [];\n  }\n}\n\nArgList.prototype.append = function (value) {\n  const values = this._values;\n  values[values.length] = value;\n  return this;\n};\n\nArgList.prototype.remove = function (value) {\n  const values = this._values;\n  const index = values.indexOf(value);\n  if (index >= 0) {\n    values.splice(index, 1);\n  }\n  return this;\n};\n\nArgList.prototype.toJSO = function (cliUtils, cmd, arg) {\n  const res = {};\n\n  const list = this._values;\n  for (let i = 0, n = list.length; i < n; ++i) {\n    _.set(res, list[i].id, cliUtils.propagateProp(`${keyRemap(cmd)}.${arg}.${list[i].id}`, list[i].val));\n  }\n\n  return res;\n};\n\nfunction Arg(_id, _val) {\n  this.id = _id;\n  this.val = _val;\n}\n\nconst cliutils = Object.create({});\n\ncliutils.Arg = Arg;\ncliutils.ArgList = ArgList;\n\ncliutils.miew = null;\ncliutils.echo = null;\ncliutils.representations = representationsStorage;\ncliutils.utils = utilFunctions;\n\ncliutils._ = _;\ncliutils.CreateObjectPair = CreateObjectPair;\ncliutils.keyRemap = keyRemap;\ncliutils.Context = selectors.Context;\ncliutils.ClearContext = selectors.ClearContext;\n\ncliutils.NULL = NULL;\n\ncliutils.notimplemented = function () {\n  return this.NULL;\n};\n\nMiew.prototype.script = function (script, _printCallback, _errorCallback) {\n  parsercli.yy.miew = this;\n  parsercli.yy.echo = _printCallback;\n  parsercli.yy.error = _errorCallback;\n  if (this.cmdQueue === undefined) {\n    this.cmdQueue = [];\n  }\n\n  if (this.commandInAction === undefined) {\n    this.commandInAction = false;\n  }\n\n  this.cmdQueue = this.cmdQueue.concat(script.split('\\n'));\n};\n\nMiew.prototype.awaitWhileCMDisInProcess = function () {\n  this.commandInAction = true;\n};\n\nMiew.prototype.finishAwaitingCMDInProcess = function () {\n  this.commandInAction = false;\n};\n\nMiew.prototype.isScriptingCommandAvailable = function () {\n  return this.commandInAction !== undefined\n         && !this.commandInAction\n         && this.cmdQueue !== undefined\n         && this.cmdQueue.length > 0;\n};\n\nMiew.prototype.callNextCmd = function () {\n  if (this.isScriptingCommandAvailable()) {\n    const cmd = this.cmdQueue.shift();\n\n    const res = {};\n    res.success = false;\n    try {\n      parsercli.parse(cmd);\n      res.success = true;\n    } catch (e) {\n      res.error = e.message;\n      parsercli.yy.error(res.error);\n      this.finishAwaitingCMDInProcess();\n    }\n    return res;\n  }\n  return '';\n};\n\nparsercli.yy = cliutils;\n// workaround for incorrect JISON parser generator for AMD module\nparsercli.yy.parseError = parsercli.parseError;\n","import Miew from './Miew';\nimport './Miew-cli';\n\nexport default Miew;\n","/* eslint-disable quote-props */\n/* eslint-disable prefer-destructuring */\nimport $ from 'jquery';\nimport _ from 'lodash';\n// waiting for fix https://github.com/benmosher/eslint-plugin-import/issues/1712\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport Miew from 'Miew'; // eslint-disable-line import/no-unresolved\nimport menuHtml from '../../menu.html';\nimport 'bootstrap';\nimport 'bootstrap-switch';\nimport 'jquery.terminal';\n\nconst {\n  chem: { selectors },\n  io: { parsers },\n  gfx: { Representation },\n  modes,\n  colorers,\n  palettes,\n  materials,\n  settings,\n  utils,\n} = Miew;\n\nconst { createElement, hexColor } = utils;\n\nfunction stringColorToHex(color) {\n  const hexString = `0x${color.substr(-6)}`;\n  return parseInt(hexString, 16);\n}\n\nfunction unarray(x) {\n  if (x instanceof Array) {\n    x = x[0];\n  }\n  return x;\n}\n\nfunction hasComplex(viewer) {\n  let bHaveComplexes = false;\n  viewer._forEachComplexVisual(() => {\n    bHaveComplexes = true;\n  });\n  return bHaveComplexes;\n}\n\nfunction getNumAtomsBySelector(viewer, selector) {\n  const visual = viewer._getComplexVisual();\n  return visual ? visual.getComplex().getNumAtomsBySelector(selector) : -1;\n}\n\nfunction Menu(/** Node */ container, /** Miew */ viewer) {\n  // Add proper DOM elements\n  _.forEach($.parseHTML(menuHtml), (element) => container.parentNode.appendChild(element));\n\n  // Save some objects for future reference\n  this._viewer = viewer;\n  this._menuId = '#miew-menu';\n  this._titlebar = $(`${this._menuId} .titlebar`);\n  this._menu = $(`${this._menuId} .main-menu`);\n  this._curPanelID = 'miew-menu-panel-info';\n  this._curMenuItem = 'miew-menu-panel-info';\n  this._xs = false;\n  this._curReprIdx = 0;\n\n  this._menu.find('.PACKAGE_VERSION').text(Miew.VERSION);\n\n  // FIX ME!\n  this._singleWordsPrimary = [\n    'all', 'none', 'water', 'hetatm', 'protein', 'basic', 'acidic', 'charged',\n    'polar', 'nonpolar', 'aromatic', 'nucleic', 'purine', 'pyrimidine', 'polarh', 'nonpolarh',\n  ];\n  this._singleWords = [\n    'all', 'none', 'water', 'hetatm', 'protein', 'basic', 'acidic', 'charged',\n    'polar', 'nonpolar', 'aromatic', 'nucleic', 'purine', 'pyrimidine', 'polarh', 'nonpolarh',\n  ];\n  this._keyWordsPrimary = ['serial', 'name', 'elem', 'residue', 'sequence', 'chain', 'altloc'];\n\n  this._init();\n  this._initializeTerminal();\n}\n\nMenu.prototype._initializeTerminal = function () {\n  const self = this;\n  let res = null;\n  let urlSubString = '';\n  const element = $('#miew-menu [data-btn-type=miew-menu-btn-browse-file] input');\n\n  function onChangeEventListener() {\n    if ($(element).val()) {\n      const { files } = $(element)[0];\n      if (files.length > 0) {\n        let opts;\n        if (res !== null) {\n          opts = { mdFile: res[1] };\n        }\n        self._viewer.load(files[0], opts);\n      }\n    }\n    urlSubString = '';\n    $(element).val('');\n  }\n\n  element.change(onChangeEventListener);\n\n  this._terminal = $(`${this._menuId} .miew-terminal`);\n  this._terminalWindow = this._terminal.find('.terminal-window');\n  this._terminalWindow.on('click', () => this._hideToolbarPanel());\n  this._term = this._terminalWindow.terminal(\n    (command, term) => {\n      if (self._viewer) {\n        command = command.trim();\n        const loadStr = command.split(/\\s+/);\n\n        if (loadStr[0] === 'load' && loadStr[1] === '-f') {\n          urlSubString = command.substr(command.indexOf('-f') + 2);\n          res = urlSubString.match(/(?:\"([^\"]*)\"|'([^']*)')/);\n          if (urlSubString !== '') {\n            if (res !== null && res[0] === urlSubString.trim() && res[1].indexOf('.nc') === (res[1].length - 3)) {\n              element.click();\n            } else {\n              term.error('You can use only URL string to *.nc file to determine trajectory');\n            }\n          } else {\n            res = null;\n            element.click();\n          }\n        } else {\n          self._viewer.script(command, (str) => {\n            term.echo(str);\n          }, (str) => {\n            term.error(str);\n          });\n        }\n      } else {\n        term.error('Miew is not initialized.');\n      }\n    },\n    {\n      greetings: 'Miew - 3D Molecular Viewer\\nCopyright © 2015-2020 EPAM Systems, Inc.\\n',\n      prompt: 'miew> ',\n      name: 'miew',\n      scrollOnEcho: true,\n      height: '100%',\n      keydown(event, _term) {\n        if (event.keyCode === 192) { // skip '~'\n          return false;\n        }\n\n        return undefined;\n      },\n      onInit(term) {\n        if (self._viewer) {\n          const colors = {\n            'error': '#f00',\n            'warn': '#990',\n            'report': '#1a9cb0',\n          };\n          const onLogMessage = function (e) {\n            const msg = e.message.replace('[', '(').replace(']', ')'); // temp workaround for https://github.com/jcubic/jquery.terminal/issues/470\n            term.echo(`[[b;${colors[e.level] || '#666'};]${msg}]`);\n          };\n          self._viewer.logger.addEventListener('message', onLogMessage);\n        }\n      },\n    },\n  );\n};\n\nMenu.prototype._fillSelectionColorCombo = function (paletteID) {\n  const self = this;\n  const frag = document.createDocumentFragment();\n  const palette = palettes.get(paletteID) || palettes.first;\n  const colorList = palette.namedColorsArray;\n\n  const comboboxPanel = $(`${self._menuId} [data-panel-type=miew-menu-panel-select-color]`);\n  for (let i = 0, n = colorList.length; i < n; i++) {\n    const color = hexColor(colorList[i][1]);\n    const newItem = createElement('div', {\n      'class': 'col-xs-2 col-sm-2',\n      'data-toggle': 'selectcolor',\n      'data-value': color,\n    }, [\n      createElement(\n        'a', {\n          'href': '#',\n          'class': 'thumbnail',\n          'style': 'text-align:center;',\n        },\n        createElement('img', {\n          'src': 'images/empty_icon.png',\n          'style': `background-color: ${color};`,\n          'data-tooltip': 'tooltip',\n          'data-placement': 'bottom',\n          'title': colorList[i][0],\n        }),\n      ),\n    ]);\n    frag.appendChild(newItem);\n  }\n  $(comboboxPanel.get(0).lastElementChild.firstElementChild).empty();\n  comboboxPanel.get(0).lastElementChild.firstElementChild.appendChild(frag);\n\n  $(`${self._menuId} [data-toggle=selectcolor]`).on('click', /** @this HTMLSelectElement */ function () {\n    const prevActive = self._getCurReprPropertyId('miew-menu-panel-select-color');\n    $(`${self._menuId} [data-value=\"${prevActive}\"]`).removeClass('active');\n    comboboxPanel.get(0).firstElementChild.firstElementChild.click();\n    const elements = $(`${self._menuId} [data-panel-type=miew-menu-panel-representation] .miew-repr-list `\n        + `.panel.valid:eq(${self._curReprIdx}) [data-value=miew-menu-panel-select-color]`);\n    const newColor = this.getAttribute('data-value');\n    elements[0].lastChild.firstElementChild.setAttribute('data-id', newColor);\n    elements[0].lastChild.firstElementChild.firstElementChild.style.backgroundColor = newColor;\n  });\n\n  comboboxPanel.find('.panel-heading:first-of-type button:first-of-type').on('click', () => {\n    const activeItem = self._getCurReprPropertyId('miew-menu-panel-select-color');\n    $(`${self._menuId} [data-toggle=selectcolor][data-value=\"${activeItem}\"]`).removeClass('active');\n  });\n};\n\nMenu.prototype._fillCombo = function (type, name, path, entityList) {\n  const self = this;\n  const frag = document.createDocumentFragment();\n  let newItem;\n\n  const comboboxPanel = $(`${self._menuId} [data-panel-type=${type}]`).get(0);\n  const list = entityList.all;\n  for (let i = 0, n = list.length; i < n; i++) {\n    let entry = list[i];\n    entry = entry.prototype || entry; // entry may be Class or Object\n    newItem = createElement('a', {\n      'href': '#',\n      'class': 'list-group-item',\n      'data-toggle': name,\n      'data-value': entry.id,\n    }, [\n      createElement(\n        'div', { 'class': 'media-left' },\n        createElement('img', {\n          'class': 'media-object',\n          'src': `images/${name}/${entry.id}.png`,\n          'width': '48',\n          'height': '48',\n        }),\n      ),\n      createElement('div', {\n        'class': 'media-body media-middle',\n      }, entry.name),\n    ]);\n    frag.appendChild(newItem);\n  }\n  comboboxPanel.lastElementChild.firstElementChild.appendChild(frag);\n\n  $(`${self._menuId} [data-toggle=${name}]`).on('click', /** @this HTMLSelectElement */ function () {\n    const itemID = this.getAttribute('data-value');\n    let prevActive;\n    if (type === 'miew-menu-panel-palette') {\n      prevActive = settings.get(path);\n      settings.set(path, itemID);\n    } else {\n      prevActive = self._getCurReprPropertyId(type);\n    }\n    $(`${self._menuId} [data-value=\"${prevActive}\"]`).removeClass('active');\n    comboboxPanel.firstElementChild.firstElementChild.click();\n  });\n\n  $(`${self._menuId} [data-toggle=combobox-panel][data-value=\"${type}\"]`).on(\n    'click',\n    /** @this HTMLSelectElement */ () => {\n      let activeItem;\n      if (type === 'miew-menu-panel-palette') {\n        activeItem = settings.get(path);\n      } else {\n        activeItem = self._getCurReprPropertyId(type);\n      }\n      $(`${self._menuId} a[data-value=\"${activeItem}\"]`).addClass('active');\n    },\n  );\n\n  $(`${self._menuId} [data-panel-type=${type}] .panel-heading:first-of-type button:first-of-type`).on(\n    'click',\n    () => {\n      let activeItem;\n      if (type === 'miew-menu-panel-palette') {\n        activeItem = settings.get(path);\n      } else {\n        activeItem = self._getCurReprPropertyId(type);\n      }\n      $(`${self._menuId} a[data-value=\"${activeItem}\"]`).removeClass('active');\n    },\n  );\n};\n\nMenu.prototype._initReprListItemListeners = function (index) {\n  const self = this;\n  const reprList = $(`${self._menuId} [data-panel-type=miew-menu-panel-representation] .miew-repr-list`);\n\n  function onActiveReprChanged(event) {\n    const newReprIdx = reprList.find('.panel.valid').index($(event.currentTarget).parent());\n    const btnSelector = reprList.find(`.panel.valid:eq(${newReprIdx}) .panel-heading .btn span`);\n    if (event.target !== btnSelector[0] && event.target !== btnSelector[1]) {\n      let rowSelector = reprList.find(`.panel.valid:eq(${self._curReprIdx}) .panel-heading`);\n      rowSelector.removeClass('active');\n      rowSelector = reprList.find(`.panel.valid:eq(${self._curReprIdx}) .panel-collapse`);\n      rowSelector.collapse('hide');\n\n      self._curReprIdx = newReprIdx;\n      rowSelector = reprList.find(`.panel.valid:eq(${self._curReprIdx}) .panel-heading`);\n      rowSelector.addClass('active');\n      reprList.find(`.panel.valid:eq(${self._curReprIdx}) .panel-collapse`).collapse('show');\n    }\n  }\n\n  reprList.find(`.panel:eq(${index}) .panel-heading`).on('click', onActiveReprChanged);\n\n  reprList.find(`.panel:eq(${index}) input[type=checkbox]`).bootstrapSwitch();\n\n  reprList.find(`.panel:eq(${index}) .panel-heading .btn-visible`).on('click', () => {\n    reprList.find(`.panel:eq(${index}) .panel-heading .btn-visible`).hide();\n    reprList.find(`.panel:eq(${index}) .panel-heading .btn-invisible`).show();\n  });\n\n  reprList.find(`.panel:eq(${index}) .panel-heading .btn-invisible`).on('click', () => {\n    reprList.find(`.panel:eq(${index}) .panel-heading .btn-invisible`).hide();\n    reprList.find(`.panel:eq(${index}) .panel-heading .btn-visible`).show();\n  });\n\n  reprList.find(`.panel:eq(${index}) [data-toggle=\"combobox-panel\"]`).on('click', function _setComboboxPanel() {\n    const selectorHide = self._getPanelSelector(self._curPanelID);\n    selectorHide.hide();\n\n    self._curPanelID = this.getAttribute('data-value');\n    const selectorShow = self._getPanelSelector(self._curPanelID);\n    selectorShow.show();\n\n    return false;\n  });\n\n  reprList.find(` .panel:eq(${index}) input[type=number]`).on('input', (e) => {\n    const spinner = $(e.currentTarget);\n\n    if (parseFloat(spinner.attr('min')) > parseFloat(spinner.val())) {\n      spinner.val(parseFloat(spinner.attr('min')));\n      spinner.change();\n    }\n    if (parseFloat(spinner.attr('max')) < parseFloat(spinner.val())) {\n      spinner.val(parseFloat(spinner.attr('max')));\n      spinner.change();\n    }\n  });\n\n  reprList.find(`.panel:eq(${index}) .spinner-dec-btn`).on('click', (e) => {\n    const spinnerType = e.currentTarget.getAttribute('data-value');\n    const spinner = reprList.find(`.panel:eq(${index}) [data-type=${spinnerType}]`);\n    if (parseFloat(spinner.attr('min')) < parseFloat(spinner.val())) {\n      spinner.val((10 * spinner.val() - 10 * spinner.attr('step')) / 10);\n      spinner.change();\n    }\n  });\n\n  reprList.find(`.panel:eq(${index}) .spinner-inc-btn`).on('click', (e) => {\n    const spinnerType = e.currentTarget.getAttribute('data-value');\n    const spinner = reprList.find(`.panel:eq(${index}) [data-type=${spinnerType}]`);\n    if (parseFloat(spinner.attr('max')) > parseFloat(spinner.val())) {\n      spinner.val((10 * spinner.val() + 10 * spinner.attr('step')) / 10);\n      spinner.change();\n    }\n  });\n  // FIX ME!!\n  reprList.find(`.panel:eq(${index}) [data-toggle=combobox-panel][data-value=miew-menu-panel-mode]`).on(\n    'click',\n    function () {\n      const activeItem = this.firstElementChild.firstElementChild.getAttribute('data-id');\n      $(`${self._menuId} a[data-value=\"${activeItem}\"][data-toggle=mode]`).addClass('active');\n    },\n  );\n  reprList.find(`.panel:eq(${index}) [data-toggle=combobox-panel][data-value=miew-menu-panel-color]`).on(\n    'click',\n    function () {\n      const activeItem = this.firstElementChild.firstElementChild.getAttribute('data-id');\n      $(`${self._menuId} a[data-value=\"${activeItem}\"][data-toggle=colorer]`).addClass('active');\n    },\n  );\n  reprList.find(`.panel:eq(${index}) [data-toggle=combobox-panel][data-value=miew-menu-panel-matpreset]`).on(\n    'click',\n    function () {\n      const activeItem = this.firstElementChild.firstElementChild.getAttribute('data-id');\n      $(`${self._menuId} a[data-value=\"${activeItem}\"]`).addClass('active');\n    },\n  );\n\n  reprList.find(`.panel:eq(${index}) [data-toggle=combobox-panel][data-value=miew-menu-panel-select-color]`).on(\n    'click',\n    function () {\n      const activeItem = this.lastChild.firstElementChild.getAttribute('data-id');\n      $(`${self._menuId} [data-toggle=selectcolor][data-value=\"${activeItem}\"]`).addClass('active');\n    },\n  );\n\n  reprList.find(`.panel:eq(${index}) [data-toggle=combobox-panel][data-value=miew-menu-panel-selection]`).on(\n    'click',\n    () => {\n      const element = reprList.find(`.panel.valid:eq(${self._curReprIdx}) [data-value=miew-menu-panel-selection]`);\n      const selectionPanel = $(`${self._menuId} [data-panel-type=miew-menu-panel-selection]`);\n      selectionPanel.find('input').val(`${element[0].firstElementChild.firstElementChild.textContent} `);\n      selectionPanel.find('.nav-tabs a[href=\"[data-tab-content=singleword]\"]').tab('show');\n      self._onSelectorChanged(selectionPanel);\n    },\n  );\n};\n\nMenu.prototype._addReprListItem = function (panel, index, repr) {\n  const self = this;\n  const reprList = $(`${self._menuId} [data-panel-type=miew-menu-panel-representation] .miew-repr-list`);\n  const validReprN = reprList.find('.panel.valid').length;\n  const newItem = createElement('div', {\n    'class': 'panel panel-default valid',\n  }, [\n    createElement(\n      'div', {\n        'class': 'panel-heading',\n        'role': 'tab',\n      },\n      createElement('h4', { 'class': 'panel-title' }, [\n        createElement(\n          'button', { 'class': 'btn btn-default btn-invisible' },\n          createElement('span', { 'class': 'glyphicon glyphicon-unchecked' }),\n        ),\n        createElement(\n          'button', { 'class': 'btn btn-default btn-visible' },\n          createElement('span', { 'class': 'glyphicon glyphicon-check' }),\n        ),\n        createElement(\n          'a', {\n            'role': 'button',\n            'data-toggle': 'collapse',\n            'data-parent': '.panel-menu[data-panel-type=miew-menu-panel-representation] .miew-repr-list',\n            'href': `#repr${index + 1}`,\n            'aria-expanded': 'true',\n            'aria-controls': `[data-number=repr-${String(index + 1)}]`,\n          },\n          `#${String(validReprN + 1)}: ${repr.mode.name}`,\n        ),\n        createElement(\n          'div', { 'class': 'pseudo-div' },\n          createElement(\n            'span', { 'class': 'pull-right badge' },\n            String(hasComplex(this._viewer) ? getNumAtomsBySelector(self._viewer, repr.selector) : '0'),\n          ),\n        )]),\n    ),\n    createElement(\n      'div', {\n        'data-number': `repr-${String(index + 1)}`,\n        'class': 'panel-collapse collapse',\n        'role': 'tabpanel',\n        'aria-labelledby': `head-repr-${String(index + 1)}`,\n      },\n      createElement('ul', { 'class': 'list-group row' }, [\n        createElement('li', {\n          'class': 'list-group-item col-xs-12 col-sm-12',\n          'data-toggle': 'combobox-panel',\n          'data-value': 'miew-menu-panel-selection',\n        }, [\n          'Selection',\n          createElement('span', { 'class': 'pull-right' }, [\n            createElement('label', {\n              'class': 'text-muted',\n              'data-type': 'selection-target',\n              'style': 'word-break: break-all',\n            }, String(repr.selector)),\n            createElement('span', { 'class': 'glyphicon glyphicon-menu-right' })])]),\n\n        createElement('li', {\n          'class': 'list-group-item col-xs-12 col-sm-12',\n          'data-toggle': 'combobox-panel',\n          'data-value': 'miew-menu-panel-mode',\n        }, [\n          'Mode',\n          createElement('span', { 'class': 'pull-right' }, [\n            createElement('span', {\n              'class': 'text-muted',\n              'data-id': repr.mode.id,\n            }, repr.mode.shortName),\n            createElement('span', { 'class': 'glyphicon glyphicon-menu-right' })])]),\n\n        createElement('li', {\n          'class': 'list-group-item col-xs-12 col-sm-12',\n          'data-toggle': 'combobox-panel',\n          'data-value': 'miew-menu-panel-color',\n        }, [\n          'Color',\n          createElement('span', { 'class': 'pull-right' }, [\n            createElement('span', {\n              'class': 'text-muted',\n              'data-id': repr.colorer.id,\n            }, repr.colorer.shortName),\n            createElement('span', { 'class': 'glyphicon glyphicon-menu-right' })])]),\n\n        createElement('li', {\n          'class': 'list-group-item col-xs-12 col-sm-12',\n          'data-toggle': 'combobox-panel',\n          'data-value': 'miew-menu-panel-select-color',\n        }, [\n          createElement('span', {}, 'Color name'),\n          createElement('span', { 'class': 'pull-right' }, [\n            createElement('a', {\n              'href': '#ucolor',\n              'class': 'thumbnail',\n              'data-id': hexColor(0xffffff),\n            }, createElement('img', {\n              'src': 'images/empty_icon.png',\n              'style': `background-color: ${hexColor(0xffffff)};`,\n            })),\n            createElement('span', { 'class': 'glyphicon glyphicon-menu-right' })])]),\n\n        createElement('li', {\n          'class': 'list-group-item col-xs-12 col-sm-12',\n          'data-toggle': 'combobox-panel',\n          'data-value': 'miew-menu-panel-matpreset',\n        }, [\n          'Material',\n          createElement('span', { 'class': 'pull-right' }, [\n            createElement('span', {\n              'class': 'text-muted',\n              'data-id': repr.materialPreset.id,\n            }, repr.materialPreset.shortName),\n            createElement('span', { 'class': 'glyphicon glyphicon-menu-right' })])]),\n        createElement('li', {\n          'class': 'list-group-item col-xs-12 col-sm-12',\n          'data-type': 'surf-param-rad',\n        }, [\n          'Radius scale',\n          createElement('span', { 'class': 'input-group pull-right' }, [\n            createElement(\n              'span', {\n                'class': 'input-group-addon spinner-dec-btn',\n                'data-toggle': 'spinner',\n                'data-value': 'rad',\n              },\n              createElement('span', { 'class': 'glyphicon glyphicon-minus' }),\n            ),\n            createElement('input', {\n              'type': 'number',\n              'class': 'form-control',\n              'data-type': 'rad',\n              'value': '1.0',\n              'min': '0',\n              'max': '2',\n              'step': '0.1',\n            }),\n            createElement(\n              'span', {\n                'class': 'input-group-addon spinner-inc-btn',\n                'data-toggle': 'spinner',\n                'data-value': 'rad',\n              },\n              createElement('span', { 'class': 'glyphicon glyphicon-plus' }),\n            )])]),\n        createElement('li', {\n          'class': 'list-group-item col-xs-12 col-sm-12',\n          'data-type': 'surf-param-iso',\n        }, [\n          'Isosurface threshold',\n          createElement('span', { 'class': 'input-group pull-right' }, [\n            createElement(\n              'span', {\n                'class': 'input-group-addon spinner-dec-btn',\n                'data-toggle': 'spinner',\n                'data-value': 'iso',\n              },\n              createElement('span', { 'class': 'glyphicon glyphicon-minus' }),\n            ),\n            createElement('input', {\n              'type': 'number',\n              'class': 'form-control',\n              'data-type': 'iso',\n              'value': '0.5',\n              'min': '0',\n              'max': '10',\n              'step': '0.5',\n            }),\n            createElement(\n              'span', {\n                'class': 'input-group-addon spinner-inc-btn',\n                'data-toggle': 'spinner',\n                'data-value': 'iso',\n              },\n              createElement('span', { 'class': 'glyphicon glyphicon-plus' }),\n            )])]),\n        createElement('li', {\n          'class': 'list-group-item col-xs-12 col-sm-12',\n          'data-type': 'surf-param-zclip',\n        }, [\n          createElement('label', {}, 'Z clipping'),\n          createElement(\n            'span', { 'class': 'pull-right' },\n            createElement('input', {\n              'type': 'checkbox',\n              'data-dir': 'representation',\n              'data-toggle': 'zClip',\n              'data-size': 'mini',\n              'title': 'Z clipping',\n            }),\n          )])]),\n    )]);\n  panel.appendChild(newItem);\n  if (repr.mode.id === 'SA' || repr.mode.id === 'SE' || repr.mode.id === 'QS' || repr.mode.id === 'CS') {\n    reprList.find(`.panel:eq(${index}) .panel-collapse [data-type=surf-param-zclip]`).show();\n  } else {\n    reprList.find(`.panel:eq(${index}) .panel-collapse [data-type=surf-param-zclip]`).hide();\n  }\n\n  if (repr.mode.id === 'QS') {\n    reprList.find(`.panel:eq(${index}) .panel-collapse [data-type=surf-param-rad]`).show();\n  } else {\n    reprList.find(`.panel:eq(${index}) .panel-collapse [data-type=surf-param-rad]`).hide();\n  }\n\n  if (repr.mode.id === 'QS' || repr.mode.id === 'CS') {\n    reprList.find(`.panel:eq(${index}) .panel-collapse [data-type=surf-param-iso]`).show();\n  } else {\n    reprList.find(`.panel:eq(${index}) .panel-collapse [data-type=surf-param-iso]`).hide();\n  }\n\n  if (repr.colorer.id === 'UN' || repr.colorer.id === 'CB') {\n    const ucSelector = reprList.find(`.panel:eq(${index}) [data-value=miew-menu-panel-select-color]`);\n    const ucColor = hexColor(repr.colorer.opts.color);\n    ucSelector[0].firstElementChild.innerHTML = `${repr.colorer.name} color`;\n    ucSelector[0].lastChild.firstElementChild.setAttribute('data-id', ucColor);\n    ucSelector[0].lastChild.firstElementChild.firstElementChild.style.backgroundColor = ucColor;\n    ucSelector.show();\n  } else {\n    reprList.find(`.panel:eq(${index}) [data-value=miew-menu-panel-select-color]`).hide();\n  }\n\n  reprList.find(`.panel:eq(${index}) input[type=checkbox]`).bootstrapSwitch('state', repr.mode.opts.zClip);\n  reprList.find(`.panel:eq(${index}) [data-type=rad]`).val(repr.mode.opts.scale);\n  reprList.find(`.panel:eq(${index}) [data-type=iso]`).val(repr.mode.opts.isoValue);\n\n  // refresh opts in mode\n  const modeElem = reprList.find(`.panel:eq(${index}) [data-value=miew-menu-panel-mode]`);\n  modeElem.removeData('mvdata');\n  modeElem.data('mvdata', repr.mode.opts);\n\n  // refresh opts in colorer\n  const colorElem = reprList.find(`.panel:eq(${index}) [data-value=miew-menu-panel-color]`);\n  colorElem.removeData('mvdata');\n  colorElem.data('mvdata', repr.colorer.opts);\n\n  if (repr.mode.id === 'SA' || repr.mode.id === 'SE') {\n    reprList.find(`.panel:eq(${index}) [data-type=rad]`).val(repr.mode._radScale);\n  }\n\n  if (repr.visible) {\n    reprList.find(`.panel:eq(${index}) .panel-heading .btn-visible`).show();\n    reprList.find(`.panel:eq(${index}) .panel-heading .btn-invisible`).hide();\n  } else {\n    reprList.find(`.panel:eq(${index}) .panel-heading .btn-visible`).hide();\n    reprList.find(`.panel:eq(${index}) .panel-heading .btn-invisible`).show();\n  }\n\n  self._initReprListItemListeners(index);\n};\n\nMenu.prototype._getCurReprPropertyId = function (reprPropDataVal) {\n  const self = this;\n  const reprList = $(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-representation] .miew-repr-list`);\n  const element = reprList.find(`.panel.valid:eq(${self._curReprIdx}) [data-value=\"${reprPropDataVal}\"]`);\n  return element[0].lastChild.firstElementChild.getAttribute('data-id');\n};\n\nMenu.prototype._getCurReprSelector = function () {\n  const self = this;\n  const reprList = $(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-representation] .miew-repr-list`);\n  const element = reprList.find(`.panel.valid:eq(${self._curReprIdx}) [data-type=selection-target]`);\n  return element[0].textContent;\n};\n\nMenu.prototype._copyCurReprListItem = function (index) {\n  const self = this;\n  const reprList = $(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-representation] .miew-repr-list`);\n  const curSelector = reprList.find(`.panel.valid:eq(${self._curReprIdx})`);\n  curSelector.find('.panel-heading').removeClass('active');\n  curSelector.find('.panel-collapse').collapse('hide');\n  const id = reprList.find(`.panel.valid:eq(${self._curReprIdx}) .panel-collapse`).attr('data-number');\n  const newId = id.substr(0, id.lastIndexOf('-') + 1) + (index + 1);\n\n  curSelector.clone().appendTo(reprList);\n\n  curSelector.find('.panel-heading').addClass('active');\n  curSelector.find('.panel-collapse').collapse('show');\n\n  let selector = reprList.find(`.panel:eq(${index})`);\n  const newHtml = selector.html().replace(new RegExp(id.replace('-', '\\\\-'), 'g'), newId);\n  selector.html(newHtml);\n\n  selector.addClass('added');\n\n  selector = selector.find('.panel-heading a');\n  const header = selector.html();\n  const validReprN = reprList.find('.panel.valid').length;\n  selector.html(`#${String(validReprN)}${header.substring(header.indexOf(':'))}`);\n\n  // recreate bootstrapswitch param (note: cloning of bootstrapswitch doesn't work)\n  const zClipState = curSelector.find('[type=checkbox][data-toggle=zClip]')[0].checked;\n  const qSurfParamSelector = reprList.find(`.panel:eq(${index}) [data-type=surf-param-zclip]`);\n  qSurfParamSelector.empty();\n  selector.find('[type=checkbox]').bootstrapSwitch('state', zClipState);\n  qSurfParamSelector[0].appendChild(createElement('label', {}, 'Z clipping'));\n  qSurfParamSelector[0].appendChild(createElement(\n    'span', { 'class': 'pull-right' },\n    createElement('input', {\n      'type': 'checkbox',\n      'data-dir': 'representation',\n      'data-toggle': 'zClip',\n      'data-size': 'mini',\n      'title': 'Z clipping',\n    }),\n  ));\n  reprList.find(`.panel:eq(${index}) input[type=checkbox]`).bootstrapSwitch('state', zClipState);\n\n  const isoValue = curSelector.find('[data-type=iso]').val();\n  reprList.find(`.panel:eq(${index}) [data-type=iso]`).val(isoValue);\n\n  const radScale = curSelector.find('[data-type=rad]').val();\n  reprList.find(`.panel:eq(${index}) [data-type=rad]`).val(radScale);\n\n  self._initReprListItemListeners(index);\n};\n\nMenu.prototype._fillSourceList = function () {\n  const self = this;\n  const names = this._viewer.getVisuals();\n  $('#miew-source-dropdown').toggle(names.length > 1);\n\n  const curName = this._viewer.getCurrentVisual();\n  const nameElement = document.getElementById('miew-source-name');\n  nameElement.textContent = curName;\n\n  function getOnSourceSelected(name) {\n    return function (e) {\n      self._viewer.setCurrentVisual(name);\n      self._fillSourceList();\n      self._initReprList();\n      e.preventDefault();\n    };\n  }\n\n  const listElement = document.getElementById('miew-source-list');\n  const frag = document.createDocumentFragment();\n  for (let i = 0, n = names.length; i < n; ++i) {\n    const name = names[i];\n    const link = createElement(\n      'a', { href: '#' },\n      (name !== curName) ? name : [\n        createElement('b', null, name),\n        createElement('span', {\n          'class': 'glyphicon glyphicon-ok pull-right',\n        }),\n      ],\n    );\n    link.addEventListener('click', getOnSourceSelected(name));\n    frag.appendChild(createElement('li', null, link));\n  }\n  listElement.innerHTML = '';\n  listElement.appendChild(frag);\n};\n\nMenu.prototype._fillReprList = function () {\n  const self = this;\n  const reprList = $(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-representation] .miew-repr-list`);\n\n  reprList.empty();\n  const list = reprList.get(0);\n  for (let i = 0, n = self._viewer.repCount(); i < n; i++) {\n    const entry = self._viewer.repGet(i);\n    self._addReprListItem(list, i, entry);\n  }\n\n  $(`${self._menuId} [data-toggle=mode]`).on('click', /** @this HTMLSelectElement */ function () {\n    const elements = reprList.find(`.panel.valid:eq(${self._curReprIdx}) [data-value=miew-menu-panel-mode]`);\n    const itemID = this.getAttribute('data-value');\n    const Mode = modes.get(itemID);\n    elements[0].firstElementChild.firstElementChild.textContent = Mode.prototype.shortName;\n    elements[0].firstElementChild.firstElementChild.setAttribute('data-id', itemID);\n\n    const head = reprList.find(`.panel.valid:eq(${self._curReprIdx}) .panel-heading a`);\n    const header = head.html();\n    head.html(`${header.substring(0, header.indexOf(':') + 1)} ${Mode.prototype.name}`);\n\n    const zClipParam = reprList.find(`.panel.valid:eq(${\n      self._curReprIdx}) .panel-collapse [data-type=surf-param-zclip]`);\n    if (itemID === 'SA' || itemID === 'SE' || itemID === 'QS' || itemID === 'CS') {\n      zClipParam.show();\n      const sClipSwitch = zClipParam.find('[type=checkbox][data-toggle=zClip]');\n      sClipSwitch.bootstrapSwitch('state', settings.defaults.modes[itemID].zClip);\n    } else {\n      zClipParam.hide();\n    }\n\n    const isoParam = reprList.find(`.panel.valid:eq(${self._curReprIdx}) .panel-collapse [data-type=surf-param-iso]`);\n    if (itemID === 'QS' || itemID === 'CS') {\n      isoParam.show();\n      isoParam.find('[data-type=iso]').val(settings.defaults.modes[itemID].isoValue);\n    } else {\n      isoParam.hide();\n    }\n\n    const radParam = reprList.find(`.panel.valid:eq(${self._curReprIdx}) .panel-collapse [data-type=surf-param-rad]`);\n    if (itemID === 'QS') {\n      radParam.show();\n      radParam.find('[data-type=rad]').val(settings.defaults.modes[itemID].scale);\n    } else {\n      radParam.hide();\n    }\n  });\n  $(`${self._menuId} [data-toggle=colorer]`).on('click', /** @this HTMLSelectElement */ function () {\n    const elements = reprList.find(`.panel.valid:eq(${self._curReprIdx}) [data-value=miew-menu-panel-color]`);\n    const itemID = this.getAttribute('data-value');\n    const Colorer = colorers.get(itemID);\n\n    elements[0].firstElementChild.firstElementChild.textContent = Colorer.prototype.shortName;\n    elements[0].firstElementChild.firstElementChild.setAttribute('data-id', itemID);\n\n    if (itemID === 'UN' || itemID === 'CB') {\n      const ucColorName = (itemID === 'UN') ? 'Uniform color' : 'Carbon color';\n      const ucColor = (itemID === 'UN') ? settings.now.colorers.UN.color : settings.now.colorers.CB.color;\n      const elem = reprList.find(`.panel:eq(${self._curReprIdx}) [data-value=miew-menu-panel-select-color]`);\n      elem[0].firstElementChild.innerHTML = ucColorName;\n      elem[0].lastElementChild.firstElementChild.setAttribute('data-id', hexColor(ucColor));\n      elem[0].lastElementChild.firstElementChild.firstElementChild.style.backgroundColor = hexColor(ucColor);\n      elem.show();\n    } else {\n      reprList.find(`.panel:eq(${self._curReprIdx}) [data-value=miew-menu-panel-select-color]`).hide();\n    }\n  });\n\n  $(`${self._menuId} [data-toggle=material]`).on('click', /** @this HTMLSelectElement */ function () {\n    const elements = reprList.find(`.panel.valid:eq(${self._curReprIdx}) [data-value=miew-menu-panel-matpreset]`);\n    const itemID = this.getAttribute('data-value');\n    const material = materials.get(itemID);\n\n    elements[0].firstElementChild.firstElementChild.textContent = material.shortName;\n    elements[0].firstElementChild.firstElementChild.setAttribute('data-id', itemID);\n  });\n};\n\nMenu.prototype._getPanelSelector = function (type) {\n  return $(`${this._menuId} .panel-menu[data-panel-type=${type}]`);\n};\n\nMenu.prototype._init = function () {\n  const self = this;\n  let selectorHide = null;\n  let selectorShow = null;\n  let newPanelId = null;\n\n  // tooltips initialization\n  $(() => {\n    $(`${self._menuId} .titlebar [data-tooltip=\"tooltip\"]`).tooltip({\n      trigger: 'hover',\n    });\n  });\n\n  self._xs = self._isXS();\n  $(`${self._menuId} [data-value=\"${self._curPanelID}\"]`).toggleClass('active');\n\n  $(`${self._menuId} [data-toggle=miew-main-menu]`).on('click', function () {\n    const state = this.getAttribute('data-state');\n    if (state === 'on') {\n      self._onMenuOn();\n    } else if (state === 'off') {\n      self._onMenuOff();\n    }\n    return false;\n  });\n\n  $(`${self._menuId} [data-toggle=miew-terminal]`).on('click', function () {\n    const state = this.getAttribute('data-state');\n    this.blur();\n    if (state === 'on') {\n      self._onTerminalOn();\n      this.setAttribute('data-state', 'off');\n    } else if (state === 'off') {\n      self._onTerminalOff();\n      this.setAttribute('data-state', 'on');\n    }\n    return false;\n  });\n\n  $(`${self._menuId} [data-toggle=miew-terminal]`).on('mousedown', (e) => {\n    e.preventDefault();\n    return false;\n  });\n\n  $(document).on('keydown', (e) => {\n    if (e.keyCode === 27 && !e.isDefaultPrevented()) { // ESC\n      if ($(`${self._menuId} .main-menu`).is(':visible') === true) {\n        if ($(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-main]`).is(':visible') === true) {\n          if (self._curMenuItem === self._curPanelID) { // if it is regular panel or in xs it also can be main panel\n            self._onMenuOff();\n          } else { // if it is combbox-panel\n            self._getPanelSelector(self._curPanelID).get(0).firstElementChild.firstElementChild.click();\n          }\n        } else { // if xs mode and not main panel\n          self._getPanelSelector(self._curPanelID).get(0).firstElementChild.firstElementChild.click();\n        }\n      }\n    }\n  });\n\n  $(`${self._menuId} [data-toggle=\"panel\"]`).on('click', function _setPanel() {\n    if (self._xs === true) {\n      $(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-main]`).hide();\n    }\n\n    selectorHide = self._getPanelSelector(self._curPanelID);\n    selectorHide.hide();\n    $(`${self._menuId} a[data-value=\"${self._curMenuItem}\"]`).removeClass('active');\n\n    self._curMenuItem = self._curPanelID = newPanelId = this.getAttribute('data-value');\n    selectorShow = self._getPanelSelector(self._curPanelID);\n    selectorShow.show();\n    $(`${self._menuId} a[data-value=\"${newPanelId}\"]`).addClass('active');\n\n    return false;\n  });\n\n  $(`${self._menuId} [data-toggle=\"main-panel\"]`).on('click', () => {\n    $(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-main]`).show();\n    self._getPanelSelector(self._curPanelID).hide();\n    if (self._xs) {\n      $(`${self._menuId} a[data-value=\"${self._curMenuItem}\"]`).removeClass('active');\n    }\n    return false;\n  });\n\n  $(`${self._menuId} [data-toggle=\"combobox-panel\"]`).on('click', function _setComboboxPanel() {\n    selectorHide = self._getPanelSelector(self._curPanelID);\n    selectorHide.hide();\n\n    self._curPanelID = newPanelId = this.getAttribute('data-value');\n    selectorShow = self._getPanelSelector(self._curPanelID);\n    selectorShow.show();\n\n    return false;\n  });\n\n  $(`${self._menuId} [data-toggle=\"toolbar\"]`).on('click', function _btnToolbarClick() {\n    if (this.classList.contains('disabled')) {\n      return;\n    }\n\n    this.blur();\n    const toolbar = this.getAttribute('data-value');\n\n    $(`${self._menuId} [data-toggle=\"toolbar\"]`).each((index, element) => {\n      if (element.getAttribute('data-value') !== toolbar && element.classList.contains('active')) {\n        element.click();\n      }\n    });\n\n    const elements = $(`${self._menuId} [data-toolbar-type=${toolbar}]`);\n    if (toolbar === 'miew-menu-toolbar-resolution') {\n      elements.toggle();\n      this.classList.toggle('active');\n\n      const resSelector = $(`${self._menuId} [data-toggle=\"resolution-immediate\"]`\n          + `[data-value=\"${settings.now.resolution}\"]`);\n      if (this.classList.contains('active') === true) {\n        resSelector.addClass('active');\n      } else {\n        resSelector.removeClass('active');\n      }\n    } else {\n      const curRep = self._viewer.rep();\n      if (curRep !== null) {\n        elements.toggle();\n        this.classList.toggle('active');\n\n        const type = toolbar.substr(toolbar.lastIndexOf('-') + 1, toolbar.length);\n        const selector = $(`${self._menuId} [data-toggle=\"${type}-immediate\"]`\n            + `[data-value=\"${unarray(curRep[type])}\"]`);\n        if (this.classList.contains('active') === true) {\n          selector.addClass('active');\n        } else {\n          selector.removeClass('active');\n        }\n      } else {\n        self._viewer.logger.error('No representation');\n      }\n    }\n  });\n\n  self._menu.on('click', (event) => {\n    if ($(event.target).hasClass('main-menu')) {\n      self._onMenuOff();\n    }\n  });\n\n  const dataDirSettings = $(`${self._menuId} input[type=checkbox][data-dir=settings]`);\n  dataDirSettings.bootstrapSwitch();\n  dataDirSettings.on(\n    'switchChange.bootstrapSwitch',\n    /** @this HTMLInputElement */ function () {\n      const param = this.getAttribute('data-toggle');\n      if (param === 'bg.color') {\n        self._viewer.set('bg.color', this.checked ? 0x202020 : 0xCCCCCC);\n      } else {\n        self._viewer.set(param, this.checked);\n      }\n    },\n  );\n\n  let shifted = false;\n  $(document).on('keyup keydown', (e) => {\n    shifted = e.shiftKey;\n  });\n  function _zoomClipPlane(e) {\n    if (shifted) {\n      let delta = 0;\n      const event = e.originalEvent;\n      if (event.wheelDelta) {\n        // WebKit / Opera / Explorer 9\n        delta = event.wheelDelta;\n      } else if (event.detail) {\n        // Firefox\n        delta = -event.detail * 10;\n      }\n      const { draft } = self._viewer.settings.now;\n      self._viewer.set({\n        draft: {\n          clipPlaneFactor: draft.clipPlaneFactor - delta * draft.clipPlaneSpeed,\n        },\n      });\n    }\n  }\n  $(document).on('mousewheel', (e) => _zoomClipPlane(e)); // Chrome\n  $(document).on('DOMMouseScroll', (e) => _zoomClipPlane(e)); // Opera, Firefox\n\n  this._initMiewEventListeners();\n  this._initToolbar();\n\n  this._initInfoPanel();\n  this._initLoadPanel();\n  this._initReprPanel();\n  this._initRenderPanel();\n  this._initToolsPanel();\n  this._initSelectionPanel();\n};\n\nMenu.prototype._initMiewEventListeners = function () {\n  const self = this;\n\n  this._viewer.addEventListener('loading', () => {\n    self._setTitle('Loading…');\n  });\n\n  this._viewer.addEventListener('fetching', () => {\n    self._setTitle('Fetching…');\n  });\n\n  this._viewer.addEventListener('parsing', () => {\n    self._setTitle('Parsing…');\n  });\n\n  this._viewer.addEventListener('rebuilding', () => {\n    self._setTitle('Building geometry…');\n  });\n\n  this._viewer.addEventListener('exporting', () => {\n    self._setTitle('Exporting…');\n  });\n\n  this._viewer.addEventListener('resize', () => {\n    self._onResize();\n  });\n\n  this._viewer.addEventListener('fetchingDone', (e) => {\n    if (e.error) {\n      self._updateInfo(e.data);\n    }\n  });\n\n  this._viewer.addEventListener('parsingDone', (e) => {\n    self._updateInfo(e.data);\n    self._fillSourceList();\n    self._fillReprList();\n\n    self.presetsPanel.actions.pdb.inputs.refresh(self);\n  });\n\n  this._viewer.addEventListener('titleChanged', (e) => {\n    self._setTitle(e.data);\n  });\n\n  this._viewer.addEventListener('editModeChanged', (e) => {\n    self._enableToolbar(e.data);\n  });\n};\n\nMenu.prototype._initInfoPanel = function () {\n  this._updateInfo();\n};\n\nMenu.prototype._initLoadPanel = function () {\n  const self = this;\n\n  $(`${self._menuId} [data-form-type=miew-menu-form-load-pdb] [data-tooltip=\"tooltip\"]`).tooltip({\n    trigger: 'hover',\n  });\n\n  $(`${self._menuId} [data-toggle=\"preset-pdb\"]`).on('click', /** @this HTMLElement */ function (evt) {\n    const path = this.getAttribute('data-value');\n    const query = this.getAttribute('data-query');\n    $(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-representation] .miew-repr-list`).empty();\n    self._viewer.load(path).then(() => {\n      self._viewer.setOptions(query || '');\n    });\n    self._onMenuOff();\n    evt.preventDefault();\n    return false;\n  });\n  // empty input box on panel opening\n  const elem = $(`${this._menuId} .list-group-item[data-value=\"miew-menu-panel-presets\"]`);\n  elem.on('click', () => {\n    self._presetsPanelActionsPdbInputsClear(self);\n  });\n\n  this._initPresetsPanelActions();\n};\n\nMenu.prototype._initReprPanel = function () {\n  const self = this;\n  const reprList = $(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-representation] .miew-repr-list`);\n\n  $(`${self._menuId} .miew-repr-list-controls [data-btn-type=miew-menu-btn-add-repr]`).on('click', () => {\n    if (self._viewer.getComplexVisualsCount() === 0) {\n      return;\n    }\n\n    const index = reprList.find('.panel').length;\n    if (index > 0) {\n      self._copyCurReprListItem(index);\n    } else {\n      const Mode = modes.first;\n      const Colorer = colorers.first;\n      const fakeRepr = new Representation(0, new Mode(), new Colorer(), selectors.all());\n      self._addReprListItem(reprList.get(0), index, fakeRepr);\n      const selector = reprList.find(`.panel:eq(${index})`);\n      selector.addClass('added');\n    }\n\n    const validReprN = reprList.find('.panel.valid').length;\n    if (validReprN === 2) {\n      $(`${self._menuId} .miew-repr-list-controls [data-btn-type=miew-menu-btn-del-repr]`).removeClass('disabled');\n    } else if (validReprN === self._viewer.getMaxRepresentationCount()) {\n      $(`${self._menuId} .miew-repr-list-controls [data-btn-type=miew-menu-btn-add-repr]`).addClass('disabled');\n    }\n\n    reprList.find(`.panel.valid:eq(${validReprN - 1}) .panel-heading`).click();\n    self._reprListChanged = true;\n  });\n\n  $(`${self._menuId} .miew-repr-list-controls [data-btn-type=miew-menu-btn-del-repr]`).on('click', () => {\n    let validReprN = reprList.find('.panel.valid').length;\n    const removeIdx = self._curReprIdx;\n    const removeSelector = reprList.find(`.panel.valid:eq(${removeIdx})`);\n    removeSelector.addClass('deleted');\n    removeSelector.hide();\n    removeSelector.removeClass('valid');\n    if (self._curReprIdx === validReprN - 1) {\n      reprList.find(`.panel.valid:eq(${self._curReprIdx - 1}) .panel-heading`).click();\n    } else {\n      reprList.find(`.panel.valid:eq(${self._curReprIdx}) .panel-heading`).click();\n      for (let reprIdx = self._curReprIdx; reprIdx < validReprN - 1; ++reprIdx) {\n        const reprSelector = reprList.find(`.panel.valid:eq(${reprIdx}) .panel-heading a`);\n        const header = reprSelector.html();\n        reprSelector.html(`#${String(reprIdx + 1)}${header.substring(header.indexOf(':'))}`);\n      }\n    }\n\n    validReprN = reprList.find('.panel.valid').length;\n    if (validReprN === 1) {\n      $(`${self._menuId} .miew-repr-list-controls [data-btn-type=miew-menu-btn-del-repr]`).addClass('disabled');\n    } else if (validReprN === self._viewer.getMaxRepresentationCount() - 1) {\n      $(`${self._menuId} .miew-repr-list-controls [data-btn-type=miew-menu-btn-add-repr]`).removeClass('disabled');\n    }\n\n    self._reprListChanged = true;\n  });\n\n  self._fillCombo('miew-menu-panel-mode', 'mode', 'mode', modes);\n  self._fillCombo('miew-menu-panel-color', 'colorer', 'colorer', colorers);\n  self._fillCombo('miew-menu-panel-matpreset', 'material', 'materialPreset', materials);\n};\n\nMenu.prototype._displayGlobalErrorDialog = function (title, message) {\n  const self = this;\n  const dialog = $(`${self._menuId} .miew-menu-modals [data-modal-type=miew-menu-modal-global-error]`);\n  const titleElement = dialog.find('.modal-title').get(0);\n  const bodyElement = dialog.find('.modal-body').get(0);\n  $(titleElement).html(title);\n  $(bodyElement).html(message || 'Some error occured.');\n  dialog.modal({\n    keyboard: true,\n  }, 'show');\n};\n\nMenu.prototype.presetsPanel = {\n  inputs: {\n    main: null,\n  },\n  actions: {\n    pdb: {\n      load: null,\n      inputs: {\n        clear: null,\n        refresh: null,\n        file: null,\n        text: null,\n      },\n    },\n  },\n};\n\nMenu.prototype._presetsPanelActionsPdbInputsRefresh = function (self) {\n  const loadPdbButton = $(`${self._menuId} .presets-panel-action[data-presets-panel-action=pdb-load]`);\n  const clearInputsButton = $(`${self._menuId} .presets-panel-action[data-presets-panel-action=pdb-inputs-clear]`);\n\n  const mainTextInput = $($('[data-form-type=miew-menu-form-load-pdb] input[type=text][data-pdb-url-type=main]')\n    .get(0));\n  const mainErrorAlert = $($('[data-form-type=miew-menu-form-load-pdb] .alert-danger[data-pdb-url-type=main]')\n    .get(0));\n  const mainWarningAlert = $($('[data-form-type=miew-menu-form-load-pdb] .alert-warning[data-pdb-url-type=main]')\n    .get(0));\n\n  const extractExtension = function (name) {\n    let parts = name.toLowerCase().split('/');\n    let lastPart = parts[parts.length - 1];\n    parts = lastPart.split('\\\\');\n    lastPart = parts[parts.length - 1];\n    parts = lastPart.split('.');\n    if (parts.length === 1) {\n      return ''; // not \"file.ext\" format\n    }\n    return parts[parts.length - 1];\n  };\n\n  let mainAlertText = null;\n\n  const displayFormError = function (error) {\n    if (error) {\n      mainErrorAlert.html(error);\n      mainErrorAlert.removeClass('hidden');\n    } else {\n      mainErrorAlert.html(error);\n      mainErrorAlert.addClass('hidden');\n    }\n  };\n  const displayFormWarning = function (warning) {\n    if (warning) {\n      mainWarningAlert.html(warning);\n      mainWarningAlert.removeClass('hidden');\n    } else {\n      mainWarningAlert.html(warning);\n      mainWarningAlert.addClass('hidden');\n    }\n  };\n\n  self.presetsPanel.inputs.isCorrect = false;\n  if (!self.presetsPanel.inputs || !self.presetsPanel.inputs.main) {\n    loadPdbButton.addClass('disabled');\n    clearInputsButton.addClass('hidden');\n\n    mainTextInput.val('');\n    mainTextInput.removeAttr('disabled');\n\n    displayFormError(null);\n    displayFormWarning(null);\n  } else {\n    if (self.presetsPanel.inputs.main) {\n      let mainExtension;\n      if (self.presetsPanel.inputs.main instanceof File) {\n        mainTextInput.val(self.presetsPanel.inputs.main.name);\n        mainTextInput.attr('disabled', 'disabled');\n        mainExtension = extractExtension(self.presetsPanel.inputs.main.name);\n      } else {\n        mainTextInput.removeAttr('disabled');\n        mainExtension = extractExtension(self.presetsPanel.inputs.main);\n      }\n\n      const extensions = parsers.keys('extensions').sort();\n      const extRegExp = new RegExp(`^(${extensions.map((ext) => ext.substr(1)).join('|')})$`);\n      const extString = extensions.join(', ');\n\n      if (self.presetsPanel.inputs.main instanceof File && !mainExtension.match(extRegExp)) {\n        self.presetsPanel.inputs.mainIsCorrect = false;\n        self.presetsPanel.inputs.isCorrect = false;\n        mainAlertText = `Only the following filename extensions are supported: ${extString}`;\n      } else {\n        self.presetsPanel.inputs.mainIsCorrect = true;\n        self.presetsPanel.inputs.isCorrect = false;\n      }\n    }\n    self.presetsPanel.inputs.isCorrect = true;\n\n    if (self.presetsPanel.inputs.isCorrect) {\n      loadPdbButton.removeClass('disabled');\n    } else {\n      loadPdbButton.addClass('disabled');\n    }\n    if (self.presetsPanel.inputs.main) {\n      clearInputsButton.removeClass('hidden');\n    } else {\n      clearInputsButton.addClass('hidden');\n    }\n    displayFormError(mainAlertText);\n  }\n};\n\nMenu.prototype._presetsPanelActionsPdbInputsClear = function (self) {\n  self.presetsPanel.inputs = {\n    main: null,\n  };\n  self.presetsPanel.actions.pdb.inputs.refresh(self);\n};\n\nMenu.prototype._presetsPanelActionsPdbLoad = function (self) {\n  self._onMenuOff();\n  if (self.presetsPanel.inputs) {\n    self._viewer.load(self.presetsPanel.inputs.main);\n  }\n  self.presetsPanel.actions.pdb.inputs.clear(self);\n};\n\nMenu.prototype._presetsPanelActionsPdbInputsFile = function (self, element) {\n  const urlType = $(element).data('pdb-url-type');\n  const textInput = $(`[data-form-type=miew-menu-form-load-pdb] input[type=text][data-pdb-url-type=${urlType}]`).get(0);\n  if ($(element).val()) {\n    const { files } = $(element)[0];\n    if (files.length > 0) {\n      self.presetsPanel.inputs[urlType] = files[0];\n      $(textInput).val(files[0].name);\n      $(textInput).attr('disabled', 'disabled');\n    }\n  }\n  $(element).val('');\n  self.presetsPanel.actions.pdb.inputs.refresh(self);\n};\n\nMenu.prototype._presetsPanelActionsPdbInputsText = function (self, element, event) {\n  const urlType = $(element).data('pdb-url-type');\n  self.presetsPanel.inputs[urlType] = $(element).val();\n  self.presetsPanel.actions.pdb.inputs.refresh(self);\n  if (event && event.type === 'keyup' && event.keyCode === 13 && self.presetsPanel.inputs.isCorrect) {\n    self.presetsPanel.actions.pdb.load(self);\n  }\n};\n\nMenu.prototype._initPresetsPanelActions = function () {\n  const self = this;\n\n  self.presetsPanel.actions.pdb.inputs.refresh = self._presetsPanelActionsPdbInputsRefresh; // check input box?\n  self.presetsPanel.actions.pdb.inputs.clear = self._presetsPanelActionsPdbInputsClear; // \"Cancel\" button\n  self.presetsPanel.actions.pdb.inputs.file = self._presetsPanelActionsPdbInputsFile; // \"Open file\" button\n  self.presetsPanel.actions.pdb.inputs.text = self._presetsPanelActionsPdbInputsText; // URL text input\n  self.presetsPanel.actions.pdb.load = self._presetsPanelActionsPdbLoad; // \"Load\" button\n\n  self.presetsPanel.actions.pdb.inputs.refresh(self);\n\n  const mainBackButton = $(`${self._menuId} [data-panel-type=miew-menu-panel-presets] button.main-back-button`);\n  const presetsBackButton = $(`${self._menuId} [data-panel-type=miew-menu-panel-presets] button.presets-back-button`);\n  mainBackButton.removeClass('hidden');\n  presetsBackButton.addClass('hidden');\n\n  const findAction = function (parent, path) {\n    if (!parent) {\n      return null;\n    }\n    if (path.length === 1) {\n      return parent[path[0]];\n    }\n    const current = path[0];\n    path.splice(0, 1);\n    return findAction(parent[current], path);\n  };\n\n  $(document).on('click input propertychange paste keyup change', '.presets-panel-action', function (event) {\n    if ($(this).hasClass('disabled')) {\n      return false;\n    }\n    if ($(this).data('presets-panel-action')) {\n      let supportedEvents = $(this).data('presets-panel-events');\n      if (supportedEvents) {\n        supportedEvents = supportedEvents.split(',');\n        if (supportedEvents.indexOf(event.type.toLowerCase()) === -1) {\n          return true;\n        }\n      }\n      const actionPath = $(this).data('presets-panel-action').split('-');\n      const action = findAction(self.presetsPanel.actions, actionPath);\n      if (action) {\n        action(self, this, event);\n        return event.type.toLowerCase() === 'paste';\n      }\n    }\n    return true;\n  });\n};\n\nMenu.prototype._initPresetsPanel = function () {\n  this.presetsPanel.actions.pdb.inputs.refresh(this);\n};\n\nMenu.prototype._initRenderPanel = function () {\n  const self = this;\n\n  $(`${self._menuId} [data-toggle=resolution]`).on('click', /** @this HTMLSelectElement */ function () {\n    const elements = $(`${self._menuId} [data-value=miew-menu-panel-resolution]`);\n    const itemID = this.getAttribute('data-value');\n\n    const prevActive = settings.now.resolution;\n    $(`${self._menuId} [data-value=\"${prevActive}\"]`).removeClass('active');\n\n    elements[0].firstElementChild.firstElementChild.textContent = this.textContent;\n    settings.set('resolution', itemID);\n    $(`${self._menuId} [data-value=\"${itemID}\"]`).addClass('active');\n\n    $(`${self._menuId} button[data-value=miew-menu-panel-render]`).click();\n  });\n\n  this._fillCombo('miew-menu-panel-palette', 'palette', 'palette', palettes);\n  $(`${self._menuId} [data-toggle=palette]`).on('click', /** @this HTMLSelectElement */ function () {\n    const elements = $(`${self._menuId} .list-group-item[data-value=miew-menu-panel-palette]`);\n    const itemID = this.getAttribute('data-value');\n    const palette = palettes.get(itemID);\n\n    elements[0].firstElementChild.firstElementChild.textContent = palette ? palette.name : 'Unknown';\n\n    self._fillSelectionColorCombo(itemID);\n\n    // Here should be palettes colors mapping\n    /* var ucSelector = $(self._menuId + ' .panel-menu[data-panel-type=miew-menu-panel-representation]' +\n       '.miew-repr-list [data-value=miew-menu-panel-uniform-color]');\n      var ucColor = hexColor(palettes.get(itemID).colors[0]);\n      ucSelector.find('.thumbnail').attr('data-id', ucColor);\n      ucSelector.find('img').css('background-color', ucColor); */\n  });\n};\n\nMenu.prototype._initToolsPanel = function () {\n  const self = this;\n  $(`${self._menuId} .miew-menu-modals [data-modal-type=miew-menu-modal-url]`).on('shown.bs.modal', () => {\n    const root = $(`${self._menuId} .miew-menu-modals [data-modal-type=miew-menu-modal-url] .modal-body`)[0].firstChild;\n    const content = root.nodeValue;\n    if (document.createRange) {\n      const rng = document.createRange();\n      rng.setStart(root, 0);\n      rng.setEnd(root, content.length);\n      const sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(rng);\n    }\n  });\n\n  $(`${self._menuId} .miew-menu-modals [data-modal-type=miew-menu-modal-url]`).on('keydown', (e) => {\n    if (e.keyCode === 27) { // ESC\n      e.preventDefault();\n    }\n  });\n\n  $(`${self._menuId} [data-toggle=miew-menu-tools]`).on('click', function () {\n    const type = this.getAttribute('data-value');\n    switch (type) {\n      case 'dssp':\n        self._viewer.dssp();\n        self._onMenuOff();\n        break;\n      case 'reset-view':\n        self._viewer.resetView();\n        self._initReprList();\n        self._onMenuOff();\n        break;\n      case 'screenshot':\n        self._viewer.screenshotSave();\n        self._onMenuOff();\n        break;\n      case 'get-url': {\n        const selector = $(`${self._menuId} .miew-menu-modals [data-modal-type=miew-menu-modal-url]`);\n        selector.find('.modal-body')[0].textContent = self._viewer.getURL({ settings: true, view: true });\n        selector.modal({\n          keyboard: true,\n        }, 'show');\n        break;\n      }\n      case 'get-script': {\n        const selector = $(`${self._menuId} .miew-menu-modals [data-modal-type=miew-menu-modal-script]`);\n        selector.find('.modal-body')[0].innerHTML = self._viewer.getScript().replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n        selector.modal({\n          keyboard: true,\n        }, 'show');\n        break;\n      }\n      case 'fbx-export':\n        self._viewer.save({ fileType: 'fbx' });\n        self._onMenuOff();\n        break;\n      case 'save-settings':\n        self._viewer.saveSettings();\n        self._onMenuOff();\n        break;\n      case 'restore-settings':\n        self._viewer.restoreSettings();\n        self._onMenuOff();\n        break;\n      case 'reset-settings':\n        self._viewer.resetSettings();\n        self._onMenuOff();\n        break;\n      default:\n        self._onMenuOff();\n    }\n    return false;\n  });\n};\n\nMenu.prototype._onSelectorChanged = function (selectionPanel) {\n  const line = selectionPanel.find('input').get(0).value.trim() || 'all';\n  const div = selectionPanel.find('.alert-danger').get(0);\n  const parsed = selectors.parse(line);\n  const selector = selectionPanel.find('[data-btn-type=miew-menu-btn-apply-sel]');\n  if (parsed.error) {\n    selector.addClass('disabled');\n    div.style.display = 'block';\n    div.textContent = parsed.error;\n  } else {\n    selector.removeClass('disabled');\n    div.style.display = 'none';\n    div.textContent = '';\n  }\n};\n\nfunction getAtomNames(viewer) {\n  const visual = viewer._getComplexVisual();\n  return visual ? visual.getComplex().getAtomNames() : 0;\n}\n\nfunction getElements(viewer) {\n  const visual = viewer._getComplexVisual();\n  return visual ? visual.getComplex().getElements() : 0;\n}\n\nfunction getResidueNames(viewer) {\n  const visual = viewer._getComplexVisual();\n  return visual ? visual.getComplex().getResidueNames() : 0;\n}\n\nfunction getChainNames(viewer) {\n  const visual = viewer._getComplexVisual();\n  return visual ? visual.getComplex().getChainNames() : 0;\n}\n\nfunction getAltLocNames(viewer) {\n  const visual = viewer._getComplexVisual();\n  return visual ? visual.getComplex().getAltLocNames() : 0;\n}\n\nMenu.prototype._initSelectionPanel = function () {\n  const self = this;\n  const selectionPanel = $(`${self._menuId} [data-panel-type=miew-menu-panel-selection]`);\n\n  function fillSingleWords() {\n    const frag = document.createDocumentFragment();\n    let newItem;\n    const group = selectionPanel.find('[data-tab-content=singleword]').get(0);\n    let i;\n    let n;\n\n    for (i = 0, n = self._singleWordsPrimary.length; i < n; i++) {\n      const wordPrimary = self._singleWordsPrimary[i];\n      newItem = createElement(\n        'a', {\n          'href': '#',\n          'class': 'list-group-item frequent',\n          'data-toggle': 'selection-input',\n          'data-value': `${wordPrimary} `,\n        },\n        wordPrimary,\n      );\n      frag.appendChild(newItem);\n    }\n\n    self._singleWords.sort();\n    for (i = 0, n = self._singleWords.length; i < n; i++) {\n      const word = self._singleWords[i];\n      if (self._singleWordsPrimary.indexOf(word) !== -1) {\n        continue;\n      }\n      newItem = createElement(\n        'a', {\n          'href': '#',\n          'class': 'list-group-item',\n          'data-toggle': 'selection-input',\n          'data-value': `${word} `,\n        },\n        word,\n      );\n      frag.appendChild(newItem);\n    }\n\n    group.firstElementChild.appendChild(frag);\n  }\n\n  function fillKeyWords() {\n    const frag = document.createDocumentFragment();\n    let newItem;\n    const group = selectionPanel.find('[data-tab-content=keyword]').get(0);\n    for (let i = 0, n = self._keyWordsPrimary.length; i < n; i++) {\n      const wordPrimary = self._keyWordsPrimary[i];\n      newItem = createElement(\n        'a', {\n          'href': '#',\n          'class': 'list-group-item frequent keyword-item',\n          'data-toggle': 'selection-input',\n          'data-value': `${wordPrimary} `,\n        },\n        wordPrimary,\n      );\n      frag.appendChild(newItem);\n    }\n\n    group.firstElementChild.appendChild(frag);\n  }\n\n  fillSingleWords();\n  fillKeyWords();\n\n  const element = selectionPanel.find('input').get(0);\n  element.addEventListener('input', () => this._onSelectorChanged(selectionPanel));\n  element.addEventListener('change', () => this._onSelectorChanged(selectionPanel));\n\n  selectionPanel.find('.help-block a').on('click', (e) => {\n    const el = selectionPanel.find('input').get(0);\n    el.value = e.target.textContent;\n    self._onSelectorChanged(selectionPanel);\n    return false;\n  });\n\n  selectionPanel.find('[data-toggle=selection-input]').on('click', (e) => {\n    const text = e.target.getAttribute('data-value');\n    const elements = $(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-selection] input`);\n    elements.val(elements.val() + text);\n    self._onSelectorChanged(selectionPanel);\n  });\n\n  selectionPanel.find('.calc .delete').on('click', function () {\n    const elements = selectionPanel.find('input');\n    const type = this.getAttribute('data-delete-type');\n    switch (type) {\n      case 'clear':\n        elements.val('');\n        break;\n      case 'backspace':\n        elements.val(elements.val().slice(0, -1));\n        break;\n      default:\n    }\n    self._onSelectorChanged(selectionPanel);\n  });\n\n  $(`${self._menuId} .keyword-item`).on('click', (e) => {\n    const selector = selectionPanel.find('[data-tab-content=value] div');\n    selector.empty();\n    selector.off('click', '.value[data-toggle=selection-input]');\n    const frag = document.createDocumentFragment();\n    let newItem;\n    const group = selectionPanel.find('[data-tab-content=value]').get(0);\n    const key = e.target.getAttribute('data-value').slice(0, -1);\n    let values = [];\n\n    if (hasComplex(self._viewer)) {\n      switch (key) {\n        case 'name':\n          values = getAtomNames(self._viewer);\n          break;\n        case 'type':\n        case 'elem':\n          values = getElements(self._viewer);\n          break;\n        case 'residue':\n          values = getResidueNames(self._viewer);\n          break;\n        case 'chain':\n          values = getChainNames(self._viewer);\n          break;\n        case 'altloc':\n          values = getAltLocNames(self._viewer);\n          break;\n        default:\n          values = ['1', '2', '3', '4', '5']; // dummy values\n          break;\n      }\n    }\n\n    for (let i = 0, n = values.length; i < n; i++) {\n      const val = values[i];\n      newItem = createElement(\n        'a', {\n          'href': '#',\n          'class': 'list-group-item value',\n          'data-toggle': 'selection-input',\n          'data-value': val,\n        },\n        val,\n      );\n      frag.appendChild(newItem);\n    }\n    group.firstElementChild.appendChild(frag);\n    selectionPanel.find('.nav-tabs a[href=\"[data-tab-content=value]\"]').tab('show');\n\n    $(`${self._menuId} .value[data-toggle=selection-input]`).on('click', (event) => {\n      const text = utils.correctSelectorIdentifier(event.target.getAttribute('data-value'));\n      const elements = selectionPanel.find('input');\n      elements.val(elements.val() + text);\n      self._onSelectorChanged(selectionPanel);\n    });\n  });\n\n  selectionPanel.find('[data-btn-type=miew-menu-btn-apply-sel]').on('click', /** @this HTMLElement */ () => {\n    if (!selectionPanel.find('[data-btn-type=miew-menu-btn-apply-sel]').hasClass('disabled')) {\n      const line = selectionPanel.find('input').val().trim() || 'all';\n      const elements = $(`${self._menuId} [data-panel-type=miew-menu-panel-representation] .miew-repr-list `\n          + `.panel.valid:eq(${self._curReprIdx}) .panel-collapse [data-value=miew-menu-panel-selection]`);\n      elements[0].firstElementChild.firstElementChild.textContent = line;\n\n      const badge = $(`${self._menuId} [data-panel-type=miew-menu-panel-representation] .miew-repr-list `\n          + `.panel.valid:eq(${self._curReprIdx}) .panel-heading .badge`);\n        // update number of atoms included by selector\n      const parsed = selectors.parse(line);\n      const numAtoms = getNumAtomsBySelector(self._viewer, parsed.selector);\n      badge[0].textContent = String(numAtoms);\n\n      selectionPanel.get(0).firstElementChild.firstElementChild.click();\n    }\n  });\n};\n\nMenu.prototype._initToolbar = function () {\n  const self = this;\n\n  const frag = document.createDocumentFragment();\n  let newItem;\n\n  function fillToolbar(type, name, option, entityList) {\n    const toolbar = $(`${self._menuId} [data-toolbar-type=${type}]`).get(0);\n    const list = entityList.all;\n    for (let i = 0, n = list.length; i < n; i++) {\n      let entry = list[i];\n      entry = entry.prototype || entry; // entry may be Class or Object\n      newItem = createElement('a', {\n        'href': '#',\n        'class': 'thumbnail',\n        'data-toggle': name,\n        'data-value': entry.id,\n      }, [\n        createElement('div', {\n          'class': 'toolbar-thumb',\n          'style': `background:url(images/${name.substring(0, name.indexOf('-'))}/${entry.id}.png)`,\n        }),\n        createElement(\n          'div', {\n            'class': 'caption text-center',\n          },\n          createElement(\n            'small', {},\n            entry.shortName,\n          ),\n        )]);\n      frag.appendChild(newItem);\n    }\n    toolbar.lastElementChild.lastElementChild.appendChild(frag);\n  }\n\n  fillToolbar('miew-menu-toolbar-mode', 'mode-immediate', 'mode', modes);\n  fillToolbar('miew-menu-toolbar-colorer', 'colorer-immediate', 'colorer', colorers);\n\n  // Update mode selector names and add event listeners\n  $(`${self._menuId} [data-toggle=\"mode-immediate\"]`).each((index, element) => {\n    const id = element.getAttribute('data-value');\n    element.addEventListener('click', (event) => {\n      $(`${self._menuId} [data-value=\"${unarray(self._viewer.rep().mode)}\"]`).removeClass('active');\n      $(`${self._menuId} [data-value=miew-menu-toolbar-mode]`).click();\n      self._viewer.rep({ mode: id });\n      event.preventDefault();\n      self._fixKeyboard();\n    });\n  });\n\n  // Update colorer selector names and add event listeners\n  $(`${self._menuId} [data-toggle=\"colorer-immediate\"]`).each((index, element) => {\n    const id = element.getAttribute('data-value');\n    element.addEventListener('click', (event) => {\n      $(`${self._menuId} [data-value=\"${unarray(self._viewer.rep().colorer)}\"]`).removeClass('active');\n      $(`${self._menuId} [data-value=miew-menu-toolbar-colorer]`).click();\n      self._viewer.rep({ colorer: id });\n      event.preventDefault();\n      self._fixKeyboard();\n    });\n  });\n\n  // Update resolution selector names and add event listeners\n  $(`${self._menuId} [data-toggle=\"resolution-immediate\"]`).each((index, element) => {\n    const id = element.getAttribute('data-value');\n    element.addEventListener('click', (event) => {\n      $(`${self._menuId} [data-value=\"${settings.now.resolution}\"]`).removeClass('active');\n      settings.set('resolution', id);\n      $(`${self._menuId} [data-value=miew-menu-toolbar-resolution]`).click();\n      self._viewer.rebuildAll();\n      event.preventDefault();\n      self._fixKeyboard();\n    });\n  });\n\n  $(`${self._menuId} .titlebar [data-toggle=panel]`).on('click', () => {\n    self._onMenuOn();\n  });\n\n  $(`${self._menuId} .toolbar`).on('click', (event) => {\n    const target = $(event.target);\n    if (target.is('.toolbar')) {\n      const type = target.attr('data-toolbar-type');\n      $(`${self._menuId} [data-value=\"${type}\"]`).click();\n      self._fixKeyboard();\n    }\n  });\n};\n\nMenu.prototype._initReprList = function () {\n  this._fillReprList();\n  this._curReprIdx = this._viewer.repCurrent();\n  $(`${this._menuId} .panel-menu[data-panel-type=miew-menu-panel-representation] .miew-repr-list .panel.valid:eq(${\n    this._curReprIdx}) .panel-heading`).addClass('active');\n\n  $(`${this._menuId} .panel-menu[data-panel-type=miew-menu-panel-representation] .miew-repr-list .panel.valid:eq(${\n    this._curReprIdx}) .panel-collapse`).collapse('show');\n\n  if (this._viewer.repCount() > 1) {\n    $(`${this._menuId} .miew-repr-list-controls [data-btn-type=miew-menu-btn-del-repr]`).removeClass('disabled');\n  } else {\n    $(`${this._menuId} .miew-repr-list-controls [data-btn-type=miew-menu-btn-del-repr]`).addClass('disabled');\n  }\n  if (this._viewer.repCount() < this._viewer.getMaxRepresentationCount()) {\n    $(`${this._menuId} .miew-repr-list-controls [data-btn-type=miew-menu-btn-add-repr]`).removeClass('disabled');\n  } else {\n    $(`${this._menuId} .miew-repr-list-controls [data-btn-type=miew-menu-btn-add-repr]`).addClass('disabled');\n  }\n};\n\nMenu.prototype._updateResolutionCombo = function () {\n  this._removeActiveFromCombo('resolution');\n\n  const elements = $(`${this._menuId} [data-value=miew-menu-panel-resolution]`);\n  const resSelector = $(`${this._menuId} [data-toggle=resolution][data-value=\"${settings.now.resolution}\"]`);\n\n  elements[0].firstElementChild.firstElementChild.textContent = resSelector.text();\n  resSelector.addClass('active');\n};\n\nMenu.prototype.setBlur = function (enable) {\n  const container = this._viewer._container;\n  if (enable) {\n    container.classList.add('blur');\n  } else {\n    container.classList.remove('blur');\n  }\n};\n\nMenu.prototype.show = function (panelID, menuItem) {\n  const self = this;\n\n  this.setBlur(true);\n  this._titlebar.hide();\n\n  const selectorHide = self._getPanelSelector(self._curPanelID);\n  selectorHide.hide();\n  $(`${self._menuId} a[data-value=\"${self._curMenuItem}\"]`).removeClass('active');\n\n  self._curPanelID = panelID;\n  self._curMenuItem = menuItem;\n  if (this._xs === false) {\n    const selectorShow = self._getPanelSelector(self._curPanelID);\n    selectorShow.show();\n    $(`${self._menuId} a[data-value=\"${menuItem}\"]`).addClass('active');\n  }\n\n  // Prepare a copy of settings to fill\n  settings.checkpoint();\n\n  self._updateDisplayOptions('miew-menu-panel-palette', 'palette', palettes);\n  self._fillSelectionColorCombo(settings.get('palette'));\n\n  self._fillSourceList();\n  self._initReprList();\n\n  self._updateResolutionCombo();\n\n  $(`${self._menuId} input[type=checkbox][data-dir=settings]`).each((index, element) => {\n    const param = element.getAttribute('data-toggle');\n    if (param === 'bg.color') {\n      $(`${self._menuId} [data-toggle=\"${param}\"]`).bootstrapSwitch('state', settings.get(param) === 0x202020);\n    } else {\n      $(`${self._menuId} [data-toggle=\"${param}\"]`).bootstrapSwitch('state', settings.get(param));\n    }\n  });\n\n  // renew currently opened mode-, colorer-, matpreset- combobox panel (need, when they were changed from toolbar)\n  if (self._curPanelID.indexOf('selection') !== -1\n    || self._curPanelID.indexOf('mode') !== -1\n    || self._curPanelID.indexOf('color') !== -1\n    || self._curPanelID.indexOf('matpreset') !== -1) {\n    const reprList = $(`${self._menuId} [data-panel-type=miew-menu-panel-representation] .miew-repr-list`);\n    const comboPanel = reprList.find(`.panel:eq(${self._curReprIdx}) [data-value=\"${self._curPanelID}\"]`);\n    if (comboPanel) {\n      comboPanel.click(); // call update of active item, getting value from current reprList\n    }\n  }\n\n  $(`${self._menuId} .panel-menu[data-panel-type=miew-menu-panel-main]`).show();\n  this._menu.show();\n};\n\nMenu.prototype.showTerminal = function () {\n  this._terminal.show();\n  this._terminalWindow.focus();\n  this._term.resize();\n};\n\nMenu.prototype._removeActiveFromCombo = function (comboName) {\n  const selector = $(`${this._menuId} [data-toggle=${comboName}].active`);\n  selector.removeClass('active');\n};\n\nMenu.prototype.hide = function () {\n  // Clear resolution setting display because it might be changed\n  const resSelector = $(`${this._menuId} [data-toggle=resolution][data-value=\"${settings.now.resolution}\"]`);\n  resSelector.removeClass('active');\n\n  // Clear active items in currently opened mode- o colorer- combobox panel, because they might be changed\n  if (this._curPanelID.indexOf('mode') !== -1) {\n    this._removeActiveFromCombo('mode');\n  } else if (this._curPanelID.indexOf('color') !== -1) {\n    this._removeActiveFromCombo('colorer');\n  } else if (this._curPanelID.indexOf('matpreset') !== -1) {\n    this._removeActiveFromCombo('material');\n  }\n\n  // Resume rendering\n  this.setBlur(false);\n  this._titlebar.show();\n\n  this._menu.hide();\n};\n\nMenu.prototype.hideTerminal = function () {\n  this._terminal.hide();\n  this._terminalWindow.focus(false);\n};\n\nMenu.prototype._hideToolbarPanel = function () {\n  const toolbar = $(`${this._menuId} [data-toggle=\"toolbar\"].active`);\n  toolbar.trigger('click');\n};\n\nMenu.prototype._onMenuOn = function () {\n  // Stop rendering to lower CPU load\n  this._viewer.halt();\n  $(`${this._menuId} .overlay`).hide();\n  this._reprListChanged = false;\n  this._initPresetsPanel();\n  this._hideToolbarPanel();\n  // Show the panel\n  this.show(this._curPanelID, this._curMenuItem);\n};\n\nMenu.prototype._onTerminalOn = function () {\n  $(`${this._menuId} .overlay`).hide();\n  this._viewer.enableHotKeys(false);\n  this._hideToolbarPanel();\n  this.showTerminal();\n};\n\nMenu.prototype._onMenuOff = function () {\n  this._updateReprList();\n\n  // Apply changed settings\n  if (this._reprListChanged) {\n    this._viewer.repGet().needsRebuild = true;\n  }\n\n  this.hide();\n  this._viewer.run();\n  $(`${this._menuId} .overlay`).show();\n  this._fixKeyboard();\n};\n\nMenu.prototype._onTerminalOff = function () {\n  this.hideTerminal();\n  this._viewer.enableHotKeys(true);\n  $(`${this._menuId} .overlay`).show();\n  this._fixKeyboard();\n};\n\nMenu.prototype._fixKeyboard = function () {\n  // do IFRAME related hack\n  if (window !== window.top) {\n    const parentDocument = window.top.document;\n    let button = parentDocument.querySelector('button');\n    if (!button) {\n      const body = parentDocument.querySelector('body');\n      if (body) {\n        button = parentDocument.createElement('button');\n        button.style.visibility = 'hidden';\n        body.appendChild(button);\n        button = parentDocument.querySelector('button');\n      }\n    }\n    if (!button) {\n      throw new Error('Some input element should be defined in parent frame. Hidden one is ok.');\n    }\n    button.focus();\n  }\n};\n\nMenu.prototype.showOverlay = function () {\n  this._titlebar.show();\n};\n\nMenu.prototype.hideOverlay = function () {\n  this._titlebar.hide();\n};\n\nMenu.prototype._isXS = function () {\n  const nWideWidth = 768;\n  return document.documentElement.clientWidth < nWideWidth;\n};\n\nMenu.prototype._updateDisplayOptions = function (id, name, entityList) {\n  let entry = entityList.get(settings.get(name)) || entityList.first;\n  entry = entry.prototype || entry;\n  $(`${this._menuId} .list-group-item[data-value=\"${\n    id}\"]`)[0].firstElementChild.firstElementChild.textContent = entry.name;\n};\n\nMenu.prototype._setTitle = function (title) {\n  $(`${this._menuId} [data-field=\"title\"]`).text(title);\n};\n\nMenu.prototype._updateInfo = function (dataSource) {\n  if (dataSource && dataSource.id !== 'Complex') {\n    return;\n  }\n  const complex = dataSource;\n\n  const body = $('.panel-menu[data-panel-type=miew-menu-panel-info]').children('.panel-body')[0];\n\n  // remove all existing text\n  const parent = body;\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n\n  const frag = document.createDocumentFragment();\n  if (!complex) {\n    frag.appendChild(createElement('p', null, 'No data loaded yet.'));\n    body.appendChild(frag);\n    return;\n  }\n\n  const { metadata } = complex;\n  const h1 = createElement('h1', null, `${metadata.id || complex.name || 'Unknown data'} `);\n  if (metadata.classification) {\n    h1.appendChild(createElement('small', null, `/ ${metadata.classification}`));\n  }\n  frag.appendChild(h1);\n\n  if (metadata.title) {\n    frag.appendChild(createElement('p', null, metadata.title.join(' ')));\n  }\n\n  frag.appendChild(createElement('hr'));\n\n  function _createRow(name, value) {\n    return createElement('tr', null, [\n      createElement('td', null, name),\n      createElement('td', { 'class': 'text-center' }, String(value)),\n    ]);\n  }\n\n  frag.appendChild(createElement('table', { 'class': 'table' }, [\n    createElement(\n      'thead', null,\n      createElement('tr', null, [\n        createElement('th', { 'class': 'col-xs-10' }, 'Statistics'),\n        createElement('th', { 'class': 'col-xs-2 text-center' }, 'Value'),\n      ]),\n    ),\n    createElement('tbody', null, [\n      _createRow('Atoms', complex.getAtomCount()),\n      _createRow('Bonds', complex.getBondCount()),\n      _createRow('Residues', complex.getResidueCount()),\n      _createRow('Chains', complex.getChainCount()),\n      _createRow('Molecules', complex.getMoleculeCount()),\n    ]),\n  ]));\n\n  frag.appendChild(createElement('hr'));\n  // add molecule info\n  const molecules = complex.getMolecules();\n  const molList = createElement('ol');\n  for (let i = 0; i < molecules.length; i++) {\n    molList.appendChild(createElement('li', null, molecules[i].name));\n  }\n  frag.appendChild(createElement('table', { 'class': 'table' }, [\n    createElement(\n      'thead', null,\n      createElement('tr', null, [\n        createElement('th', { 'class': 'col-xs-10' }, 'Molecules'),\n      ]),\n    ),\n    createElement('tbody', null, createElement('tr', null, createElement('td', null, molList))),\n  ]));\n\n  body.appendChild(frag);\n};\n\nMenu.prototype._onResize = function () {\n  if (this._xs === false && this._isXS() === true) {\n    this._xs = true;\n    $(`${this._menuId} .panel-menu[data-panel-type=miew-menu-panel-main]`).hide();\n  }\n  if (this._xs === true && this._isXS() === false) {\n    this._xs = false;\n    $(`${this._menuId} .panel-menu[data-panel-type=miew-menu-panel-main]`).show();\n    $(`${this._menuId} a[data-value=\"${this._curMenuItem}\"]`).addClass('active');\n    this._getPanelSelector(this._curPanelID).show();\n  }\n  if (this._term) {\n    this._term.resize();\n  }\n};\n\nMenu.prototype._updateReprList = function () {\n  const self = this;\n\n  function _createOptionsFromMVData(index, property, element, itemId) {\n    const curRep = self._viewer.repGet(index);\n    if (curRep[property].id !== itemId) {\n      $(element).removeData();\n      return itemId;\n    }\n    const opts = $(element).data().mvdata;\n    if (typeof opts === 'undefined' || _.isEmpty(opts)) {\n      return itemId;\n    }\n    const diff = utils.objectsDiff(opts, settings.now[`${property}s`][itemId]);\n    if (_.isEmpty(diff)) {\n      return itemId;\n    }\n    return [itemId, diff];\n  }\n\n  const removeIdxList = [];\n  let selector = null;\n  let modeItem = null;\n  let colorerItem = null;\n  let matPresetItem = null;\n  let ucColorItem = null;\n  let modeId = null;\n  let colorerId = null;\n  let matPresetId = null;\n  let isDeleted = null;\n  let isAdded = null;\n  let isVisible = null;\n  let zClip = null;\n  let isoValue = null;\n  let radScale = null;\n  let ucColor = null;\n  let repr = null;\n\n  function _fillModeOptionsFromMenu() {\n    // change mode's zClip flag if applicable\n    if (('zClip' in repr.mode.opts) && repr.mode.opts.zClip !== zClip) {\n      repr.mode.opts.zClip = zClip;\n      repr.needsRebuild = true;\n    }\n\n    // change mode's radius scale flag if applicable\n    if (('scale' in repr.mode.opts) && repr.mode.opts.scale !== radScale) {\n      repr.mode.opts.scale = radScale;\n      repr.needsRebuild = true;\n    }\n\n    // change mode's isosurface value flag if applicable\n    if (('isoValue' in repr.mode.opts) && repr.mode.opts.isoValue !== isoValue) {\n      repr.mode.opts.isoValue = isoValue;\n      repr.needsRebuild = true;\n    }\n  }\n\n  $(`${self._menuId} [data-panel-type=miew-menu-panel-representation] `\n      + '.miew-repr-list .panel').each((index, element) => {\n    isDeleted = $(element).hasClass('deleted');\n    isAdded = $(element).hasClass('added');\n\n    if (!(isDeleted && isAdded)) {\n      isVisible = ($(element).find('.panel-heading .btn-visible').css('display') !== 'none');\n      selector = $(element).find('[data-type=selection-target]')[0].textContent;\n      modeItem = $(element).find('[data-value=miew-menu-panel-mode]')[0];\n      colorerItem = $(element).find('[data-value=miew-menu-panel-color]')[0];\n      matPresetItem = $(element).find('[data-value=miew-menu-panel-matpreset]')[0];\n      ucColorItem = $(element).find('[data-value=miew-menu-panel-select-color]')[0];\n      modeId = modeItem.firstElementChild.firstElementChild.getAttribute('data-id');\n      colorerId = colorerItem.firstElementChild.firstElementChild.getAttribute('data-id');\n      matPresetId = matPresetItem.firstElementChild.firstElementChild.getAttribute('data-id');\n      ucColor = stringColorToHex(ucColorItem.lastChild.firstElementChild.getAttribute('data-id'));\n\n      zClip = $(element).find('[type=checkbox][data-toggle=zClip]')[0].checked;\n      radScale = parseFloat($(element).find('[data-type=rad]').val());\n      isoValue = parseFloat($(element).find('[data-type=iso]').val());\n\n      if (isDeleted) {\n        removeIdxList.push(index);\n      } else if (isAdded) {\n        const idx = self._viewer.repAdd({\n          selector,\n          mode: modeId,\n          colorer: colorerId,\n        });\n        if (idx >= 0) {\n          repr = self._viewer.repGet(idx);\n\n          _fillModeOptionsFromMenu();\n\n          if (colorerId === 'UN' || colorerId === 'CB') {\n            repr.colorer.opts.color = ucColor;\n          }\n          repr.setMaterialPreset(materials.get(matPresetId));\n\n          if (repr.visible !== isVisible) {\n            self._viewer.setNeedRender();\n          }\n          repr.show(isVisible);\n        }\n      } else {\n        const modeParams = _createOptionsFromMVData(index, 'mode', modeItem, modeId);\n        const colorerParams = _createOptionsFromMVData(index, 'colorer', colorerItem, colorerId);\n        index = self._viewer.repCurrent(index);\n        self._viewer.rep(index, {\n          selector, mode: modeParams, colorer: colorerParams, material: matPresetId,\n        });\n\n        repr = self._viewer.repGet();\n        // change uniform colorer's color if applicable\n        if (colorerId === 'UN' || colorerId === 'CB') {\n          if (repr.colorer.opts.color !== ucColor) {\n            repr.needsRebuild = true;\n            repr.colorer.opts.color = ucColor;\n          }\n        }\n\n        _fillModeOptionsFromMenu();\n\n        if (repr.visible !== isVisible) {\n          self._viewer.setNeedRender();\n        }\n        repr.show(isVisible);\n      }\n    }\n  });\n\n  // works only if representation order has not been changed in menu\n  const len = removeIdxList.length;\n  for (let idx = len - 1; idx > -1; --idx) {\n    self._viewer.repRemove(removeIdxList[idx]);\n  }\n  self._viewer.repCurrent(self._curReprIdx);\n};\n\nMenu.prototype._enableToolbar = function (enable) {\n  const self = this;\n  if (enable) {\n    $(`${self._menuId} [data-toggle=toolbar]`).removeClass('disabled');\n  } else {\n    $(`${self._menuId} [data-toggle=toolbar]`).addClass('disabled');\n  }\n};\n\nexport default Menu;\n","export default \"<div id=\\\"miew-menu\\\">\\n  <!-- Title bar -->\\n\\n  <div class=\\\"titlebar\\\" style=\\\"display: none\\\">\\n    <span data-field=\\\"title\\\">3D Molecular Viewer</span>\\n\\n    <div class=\\\"btns-miew-titlebar btns-miew-titlebar-left btns-miew-titlebar-main-menu\\\">\\n      <button class=\\\"btn btn-default btn-titlebar\\\" data-toggle=\\\"miew-main-menu\\\" data-state=\\\"on\\\" data-tooltip=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"Open menu\\\">\\n        <span class=\\\"glyphicon glyphicon-menu-hamburger\\\"></span>\\n      </button>\\n\\n      <button id=\\\"miew-terminal-btn\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-titlebar\\\" data-toggle=\\\"miew-terminal\\\" data-state=\\\"on\\\" data-tooltip=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"Terminal\\\">\\n        <span class=\\\"glyphicon glyphicon-menu-right\\\"></span>\\n      </button>\\n    </div>\\n    <div class=\\\"blog-nav btns-miew-titlebar btns-miew-titlebar-right btns-miew-titlebar-toolbar\\\">\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-titlebar blog-nav-item\\\" data-toggle=\\\"toolbar\\\" data-value=\\\"miew-menu-toolbar-mode\\\"  data-tooltip=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"Display mode\\\">\\n        <span class=\\\"glyphicon glyphicon-picture\\\"></span>\\n      </button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-default btn-titlebar blog-nav-item\\\" data-toggle=\\\"toolbar\\\" data-value=\\\"miew-menu-toolbar-colorer\\\"  data-tooltip=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"Display color\\\">\\n        <span class=\\\"glyphicon glyphicon-tint\\\"></span>\\n      </button>\\n\\n      <!-- button type=\\\"button\\\" class=\\\"btn btn-default btn-titlebar blog-nav-item\\\" data-toggle=\\\"toolbar\\\" data-value=\\\"miew-menu-toolbar-resolution\\\"  data-tooltip=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"Resolution\\\">\\n        <span class=\\\"glyphicon glyphicon-stats\\\"></span>\\n      </button -->\\n\\n    </div>\\n\\n  </div>\\n  <div class=\\\"toolbar container-fluid\\\" data-toolbar-type=\\\"miew-menu-toolbar-mode\\\" style=\\\"display: none\\\">\\n    <div class=\\\"pseudo-row\\\">\\n      <div class=\\\"row\\\">\\n        <h5 class=\\\"text-center\\\">Display mode</h5>\\n      </div>\\n      <div class=\\\"row\\\">\\n\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"toolbar container-fluid\\\" data-toolbar-type=\\\"miew-menu-toolbar-colorer\\\" style=\\\"display: none\\\">\\n    <div class=\\\"pseudo-row\\\">\\n      <div class=\\\"row\\\">\\n        <h5 class=\\\"text-center\\\">Display color</h5>\\n      </div>\\n      <div class=\\\"row\\\">\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- div class=\\\"toolbar container-fluid\\\" data-toolbar-type=\\\"miew-menu-toolbar-resolution\\\" style=\\\"display: none\\\">\\n    <div class=\\\"pseudo-row\\\">\\n      <div class=\\\"row\\\">\\n        <h5 class=\\\"text-center\\\">Resolution</h5>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <a href=\\\"#\\\" class=\\\"thumbnail\\\" data-toggle=\\\"resolution-immediate\\\" data-value=\\\"poor\\\">\\n          <img src=\\\"images/resolution/poor.png\\\">\\n          <div class=\\\"caption text-center\\\"><small>Poor</small></div>\\n        </a>\\n        <a href=\\\"#\\\" class=\\\"thumbnail\\\" data-toggle=\\\"resolution-immediate\\\" data-value=\\\"low\\\">\\n          <img src=\\\"images/resolution/low.png\\\">\\n          <div class=\\\"caption text-center\\\"><small>Low</small></div>\\n        </a>\\n        <a href=\\\"#\\\" class=\\\"thumbnail\\\" data-toggle=\\\"resolution-immediate\\\" data-value=\\\"medium\\\">\\n          <img src=\\\"images/resolution/medium.png\\\">\\n          <div class=\\\"caption text-center\\\"><small>Medium</small></div>\\n        </a>\\n        <a href=\\\"#\\\" class=\\\"thumbnail\\\" data-toggle=\\\"resolution-immediate\\\" data-value=\\\"high\\\">\\n          <img src=\\\"images/resolution/high.png\\\">\\n          <div class=\\\"caption text-center\\\"><small>High</small></div>\\n        </a>\\n        <a href=\\\"#\\\" class=\\\"thumbnail\\\" data-toggle=\\\"resolution-immediate\\\" data-value=\\\"ultra\\\">\\n          <img src=\\\"images/resolution/ultra.png\\\">\\n          <div class=\\\"caption text-center\\\"><small>Ultra</small></div>\\n        </a>\\n      </div>\\n    </div>\\n  </div -->\\n\\n  <div class=\\\"container miew-terminal\\\" style=\\\"display: none;\\\">\\n      <div class=\\\"row col-xs-12 col-sm-12 panel panel-default panel-menu panel-dark\\\" data-panel-type=\\\"miew-menu-panel-terminal\\\" style=\\\"background-color: transparent\\\">\\n        <div class=\\\"miew-terminal-body\\\">\\n          <div class=\\\"terminal-window\\\"></div>\\n        </div>\\n      </div>\\n  </div>\\n\\n  <!-- Main menu -->\\n\\n  <div class=\\\"container main-menu\\\" style=\\\"display: none\\\">\\n    <div class=\\\"row\\\">\\n\\n      <!-- Left panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-3 panel panel-default panel-menu panel-dark\\\" data-panel-type=\\\"miew-menu-panel-main\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left\\\" data-toggle=\\\"miew-main-menu\\\" data-state=\\\"off\\\"><span class=\\\"glyphicon glyphicon-menu-hamburger\\\"></span></button>\\n          <h3 class=\\\"panel-title visible-xs\\\">Menu</h3>\\n        </div>\\n        <div class=\\\"panel-body list-group\\\">\\n          <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-info\\\">\\n            <span class=\\\"glyphicon glyphicon-info-sign\\\"></span>&nbsp;<!-- span class=\\\"glyphicon glyphicon-menu-right pull-right\\\"></span -->\\n            Info</a>\\n          <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-presets\\\">\\n            <span class=\\\"glyphicon glyphicon-folder-open\\\"></span>&nbsp;<!-- span class=\\\"glyphicon glyphicon-menu-right pull-right\\\"></span -->\\n            Load</a>\\n          <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-gallery\\\">\\n            <span class=\\\"glyphicon glyphicon-star\\\"></span>&nbsp;<!-- span class=\\\"glyphicon glyphicon-menu-right pull-right\\\"></span -->\\n            Gallery</a>\\n          <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-representation\\\">\\n            <span class=\\\"glyphicon glyphicon-picture\\\"></span>&nbsp;<!-- span class=\\\"glyphicon glyphicon-menu-right pull-right\\\"></span -->\\n            Representations</a>\\n          <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-render\\\">\\n            <span class=\\\"glyphicon glyphicon-eye-open\\\"></span>&nbsp;<!-- span class=\\\"glyphicon glyphicon-menu-right pull-right\\\"></span -->\\n            Render settings</a>\\n          <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-tools\\\">\\n            <span class=\\\"glyphicon glyphicon-wrench\\\"></span>&nbsp;<!-- span class=\\\"glyphicon glyphicon-menu-right pull-right\\\"></span -->\\n            Tools</a>\\n          <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-about\\\">\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"></span>&nbsp;<!-- span class=\\\"glyphicon glyphicon-menu-right pull-right\\\"></span -->\\n            About</a>\\n        </div>\\n      </div>\\n\\n      <!-- Info panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left visible-xs\\\" data-toggle=\\\"main-panel\\\" data-value=\\\"miew-menu-panel-main\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Info</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\"></div>\\n      </div>\\n\\n      <!-- Load panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-presets\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left main-back-button visible-xs\\\" data-toggle=\\\"main-panel\\\" data-value=\\\"miew-menu-panel-main\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Load</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"main\\\">\\n            <form data-form-type=\\\"miew-menu-form-load-pdb\\\" style=\\\"margin-bottom:20px; \\\" onsubmit=\\\"return false;\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Data to load</label>\\n                <div class=\\\"input-group\\\" style=\\\"margin-bottom: 10px;\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control presets-panel-action\\\" placeholder=\\\"PDB ID or URL...\\\" data-pdb-url-type=\\\"main\\\" data-presets-panel-action=\\\"pdb-inputs-text\\\" data-presets-panel-events=\\\"input,propertychange,paste,keyup\\\">\\n                  <span class=\\\"input-group-btn\\\">\\n                    <span class=\\\"btn btn-primary miew-panel-btn-tooltip\\\"><span class=\\\"glyphicon glyphicon-folder-open\\\"></span><input type=\\\"file\\\" class=\\\"form-control presets-panel-action\\\" data-pdb-url-type=\\\"main\\\" data-presets-panel-action=\\\"pdb-inputs-file\\\"  data-presets-panel-events=\\\"change\\\"></span>\\n                    <span data-btn-type=\\\"miew-menu-btn-browse-file\\\" style=\\\"visibility:hidden;\\\"><input type=\\\"file\\\"></span>\\n                  </span>\\n                </div>\\n                <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\" data-pdb-url-type=\\\"main\\\"></div>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" data-pdb-url-type=\\\"main\\\"></div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6 col-xs-6\\\" style=\\\"padding:0px\\\">\\n                </div>\\n                <div class=\\\"col-sm-6 col-xs-6\\\" style=\\\"padding:0px\\\">\\n                  <span class=\\\"pull-right btn btn-danger presets-panel-action\\\" data-tooltip=\\\"tooltip\\\" data-presets-panel-action=\\\"pdb-inputs-clear\\\" style=\\\"min-width: 150px; margin-left: 10px;\\\">Cancel</span>\\n                  <span class=\\\"pull-right btn btn-primary presets-panel-action\\\" data-tooltip=\\\"tooltip\\\" data-presets-panel-action=\\\"pdb-load\\\" style=\\\"min-width: 150px; margin-left: 10px;\\\">Load</span>\\n                </div>\\n              </div>\\n            </form>\\n\\n            <form data-form-type=\\\"miew-menu-form-auto-preset\\\">\\n              <ul class=\\\"list-group\\\">\\n                <li class=\\\"list-group-item\\\"><label>Automatic preset on load</label> <div class=\\\"pull-right\\\">\\n                  <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"autoPreset\\\" data-size=\\\"mini\\\" title=\\\"Automatic preset\\\">\\n                </div></li>\\n              </ul>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Gallery panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-gallery\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left visible-xs\\\" data-toggle=\\\"main-panel\\\" data-value=\\\"miew-menu-panel-main\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Gallery</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"container-fluid\\\">\\n            <div class=\\\"row-fluid\\\">\\n              <div class=\\\"col-xs-6 col-sm-4\\\" data-toggle=\\\"preset-pdb\\\" data-value=\\\"pc:serotonin\\\" data-query=\\\"p=small&mt=ME&v=1P1erPnlYqD3sL7u8kNxQPmZl0L4NUDlA0c6VPg%3D%3D\\\">\\n                <a href=\\\"#\\\" class=\\\"thumbnail\\\">\\n                  <img src=\\\"images/serotonin.png\\\">\\n                  <div class=\\\"caption text-center\\\">Serotonin</div>\\n                </a>\\n              </div>\\n              <div class=\\\"col-xs-6 col-sm-4\\\" data-toggle=\\\"preset-pdb\\\" data-value=\\\"data/1CRN.pdb\\\" data-query=\\\"p=macro\\\">\\n                <a href=\\\"#\\\" class=\\\"thumbnail\\\">\\n                  <img src=\\\"images/1CRN.png\\\">\\n                  <div class=\\\"caption text-center\\\">1CRN <small>(0.3k)</small></div>\\n                </a>\\n              </div>\\n              <div class=\\\"col-xs-6 col-sm-4\\\" data-toggle=\\\"preset-pdb\\\" data-value=\\\"1AID\\\" data-query=\\\"p=macro&m=CS&c=CH&r=1&s=hetatm+and+altloc+A&v=1XA99wmIQG8LRIls%2BLXGoPRDqTb%2BdvOC/PEyQPg%3D%3D\\\">\\n                <a href=\\\"#\\\" class=\\\"thumbnail\\\">\\n                  <img src=\\\"images/1AID.png\\\">\\n                  <div class=\\\"caption text-center\\\">1AID <small>(1.6k)</small></div>\\n                </a>\\n              </div>\\n              <div class=\\\"col-xs-6 col-sm-4\\\" data-toggle=\\\"preset-pdb\\\" data-value=\\\"2BFU\\\" data-query=\\\"p=macro&c=CH&r=2&s=all&m=CS&c=CH&mt=TR&v=1AAAAgAAAAIAAAACAAtq6O7plpT4VEF6%2B1/WQPQ%3D%3D\\\">\\n                <a href=\\\"#\\\" class=\\\"thumbnail\\\">\\n                  <img src=\\\"images/2BFU.png\\\">\\n                  <div class=\\\"caption text-center\\\">2BFU <small>(5.2k)</small></div>\\n                </a>\\n              </div>\\n              <div class=\\\"col-xs-6 col-sm-4\\\" data-toggle=\\\"preset-pdb\\\" data-value=\\\"5B40\\\" data-query=\\\"p=macro&r=2&s=nucleic&m=CS&c=SS&mt=TR&v=1EBjRwvhTz0CYbo7BE0KGPBxejb/3yk2//Wb1vg%3D%3D\\\">\\n                <a href=\\\"#\\\" class=\\\"thumbnail\\\">\\n                  <img src=\\\"images/5B40.png\\\">\\n                  <div class=\\\"caption text-center\\\">5B40 <small>(11.8k)</small></div>\\n                </a>\\n              </div>\\n              <div class=\\\"col-xs-6 col-sm-4\\\" data-toggle=\\\"preset-pdb\\\" data-value=\\\"mmtf:4TNW\\\" data-query=\\\"p=macro&c=SQ&v=1xQCuQgIrbUHD9arAmmsnPIj8NL/mF6u%2Bx26BPg%3D%3D\\\">\\n                <a href=\\\"#\\\" class=\\\"thumbnail\\\">\\n                  <img src=\\\"images/4TNW.png\\\">\\n                  <div class=\\\"caption text-center\\\">4TNW <small>(30.4k)</small></div>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Representation panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-representation\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left visible-xs\\\" data-toggle=\\\"main-panel\\\" data-value=\\\"miew-menu-panel-main\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Representations</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"dropdown\\\" id=\\\"miew-source-dropdown\\\" style=\\\"margin-bottom: 0.5em; display: none\\\">\\n            <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              <span class=\\\"glyphicon glyphicon-file\\\"></span> <span id=\\\"miew-source-name\\\">File</span>\\n              <span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul class=\\\"dropdown-menu\\\" id=\\\"miew-source-list\\\">\\n            </ul>\\n          </div>\\n\\n          <div class=\\\"panel-group miew-repr-list\\\" role=\\\"tablist\\\" aria-multiselectable=\\\"true\\\" style=\\\"padding-bottom: 5px; margin-bottom: 0;\\\">\\n\\n          </div>\\n\\n          <div class=\\\"btn-group miew-repr-list-controls\\\" role=\\\"group\\\">\\n            <a class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-btn-type=\\\"miew-menu-btn-add-repr\\\">\\n              <span class=\\\"glyphicon glyphicon-plus\\\"></span>\\n              Add new representation\\n            </a>\\n            <a class=\\\"btn btn-default\\\" type=\\\"button\\\" data-btn-type=\\\"miew-menu-btn-del-repr\\\">\\n              <span class=\\\"glyphicon glyphicon-trash\\\"></span>\\n              Delete current representation\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Render panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-render\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left visible-xs\\\" data-toggle=\\\"main-panel\\\" data-value=\\\"miew-menu-panel-main\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Render settings</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n\\n          <form data-form-type=\\\"miew-menu-form-render\\\">\\n\\n            <ul class=\\\"list-group\\\">\\n              <!-- Resolution -->\\n              <li class=\\\"list-group-item\\\" data-toggle=\\\"combobox-panel\\\" data-value=\\\"miew-menu-panel-resolution\\\">Resolution\\n              <span class=\\\"pull-right\\\">\\n                <span class=\\\"text-muted\\\"></span>\\n                <span class=\\\"glyphicon glyphicon-menu-right\\\"></span>\\n              </span>\\n              </li>\\n              <!-- Resolution autodetection -->\\n              <li class=\\\"list-group-item\\\"><label>Resolution autodetection</label> <span class=\\\"pull-right\\\">\\n                <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"autoResolution\\\" data-size=\\\"mini\\\" title=\\\"Resolution autodetection\\\">\\n              </span></li>\\n              <!-- Fog -->\\n              <li class=\\\"list-group-item\\\"><label>Fog</label> <span class=\\\"pull-right\\\">\\n                <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"fog\\\" data-size=\\\"mini\\\" title=\\\"Fog\\\">\\n              </span></li>\\n              <!-- Axes -->\\n              <li class=\\\"list-group-item\\\"><label>Axes</label> <div class=\\\"pull-right\\\">\\n                <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"axes\\\" data-size=\\\"mini\\\" title=\\\"Axes\\\">\\n              </div></li>\\n              <!-- FPS -->\\n              <li class=\\\"list-group-item\\\"><label>FPS counter</label> <div class=\\\"pull-right\\\">\\n                <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"fps\\\" data-size=\\\"mini\\\" title=\\\"FPS counter\\\">\\n              </div></li>\\n              <!-- Palette -->\\n              <li class=\\\"list-group-item\\\" data-toggle=\\\"combobox-panel\\\" data-value=\\\"miew-menu-panel-palette\\\">Palette\\n              <span class=\\\"pull-right\\\">\\n                <span class=\\\"text-muted\\\"></span>\\n                <span class=\\\"glyphicon glyphicon-menu-right\\\"></span>\\n              </span>\\n              </li>\\n              <!-- Background color -->\\n              <li class=\\\"list-group-item\\\"><label>Background color</label> <div class=\\\"checkbox-background pull-right\\\">\\n                <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"bg.color\\\" data-size=\\\"mini\\\" data-on-text=\\\"Dark\\\" data-off-text=\\\"Light\\\" data-handle-width=\\\"46\\\" data-label-width=\\\"0\\\"  title=\\\"Background color\\\">\\n              </div></li>\\n              <!-- FXAA -->\\n              <li class=\\\"list-group-item\\\"><label>FXAA</label> <span class=\\\"pull-right\\\">\\n                <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"fxaa\\\" data-size=\\\"mini\\\"  title=\\\"FXAA\\\">\\n              </span></li>\\n              <!-- Amient Occlusion -->\\n              <li class=\\\"list-group-item\\\"><label>Ambient Occlusion</label> <span class=\\\"pull-right\\\">\\n                <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"ao\\\" data-size=\\\"mini\\\"  title=\\\"Ambient Occlusion\\\">\\n              </span></li>\\n              <!-- Shadow Map -->\\n              <li class=\\\"list-group-item\\\"><label>Shadow Map</label> <span class=\\\"pull-right\\\">\\n                <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"shadow.on\\\" data-size=\\\"mini\\\"  title=\\\"ShadowMap\\\">\\n              </span></li>\\n              <!-- Clip plane -->\\n              <li class=\\\"list-group-item\\\"><label>Clip Plane</label> <span class=\\\"pull-right\\\">\\n                <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"draft.clipPlane\\\" data-size=\\\"mini\\\" title=\\\"Clip Plane\\\">\\n              </span></li>\\n              <!-- Outline -->\\n              <li class=\\\"list-group-item\\\"><label>Outline</label> <span class=\\\"pull-right\\\">\\n                <input type=\\\"checkbox\\\" data-dir=\\\"settings\\\" data-toggle=\\\"outline.on\\\" data-size=\\\"mini\\\"  title=\\\"Outline\\\">\\n              </span></li>\\n\\n            </ul>\\n\\n          </form>\\n\\n        </div>\\n      </div>\\n\\n      <!-- Tools panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-tools\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left visible-xs\\\" data-toggle=\\\"main-panel\\\" data-value=\\\"miew-menu-panel-main\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Tools</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"list-group\\\">\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"miew-menu-tools\\\" data-value=\\\"dssp\\\"><span class=\\\"glyphicon glyphicon-sort\\\"></span>&nbsp;\\n              Assign secondary structure\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"miew-menu-tools\\\" data-value=\\\"reset-view\\\"><span class=\\\"glyphicon glyphicon-refresh\\\"></span>&nbsp;\\n              Reset view\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"miew-menu-tools\\\" data-value=\\\"screenshot\\\"><span class=\\\"glyphicon glyphicon-camera\\\"></span>&nbsp;\\n              Screenshot\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"miew-menu-tools\\\" data-value=\\\"get-url\\\"><span class=\\\"glyphicon glyphicon-link\\\"></span>&nbsp;\\n              Get URL\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"miew-menu-tools\\\" data-value=\\\"get-script\\\"><span class=\\\"glyphicon glyphicon-list-alt\\\"></span>&nbsp;\\n              Get script\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"miew-menu-tools\\\" data-value=\\\"save-settings\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span>&nbsp;\\n              Save settings\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"miew-menu-tools\\\" data-value=\\\"restore-settings\\\"><span class=\\\"glyphicon glyphicon-log-out\\\"></span>&nbsp;\\n              Restore settings\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"miew-menu-tools\\\" data-value=\\\"reset-settings\\\"><span class=\\\"glyphicon glyphicon-refresh\\\"></span>&nbsp;\\n              Reset settings\\n            </a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"miew-menu-tools\\\" data-value=\\\"fbx-export\\\" style=\\\"display: block\\\"><span class=\\\"glyphicon glyphicon-floppy-save\\\"></span>&nbsp;\\n              Export FBX\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- About panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-about\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left visible-xs\\\" data-toggle=\\\"main-panel\\\" data-value=\\\"miew-menu-panel-main\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">About</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div style=\\\"left: 0;top: 40px;position: absolute;\\\">\\n            <a href=\\\"https://github.com/epam/miew\\\">\\n              <img style=\\\"position: absolute; top: 0; left: 0; border: 0;\\\" src=\\\"https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67\\\" alt=\\\"Fork me on GitHub\\\" data-canonical-src=\\\"https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png\\\">\\n            </a>\\n          </div>\\n          <div class=\\\"text-center\\\">\\n            <img src=\\\"images/logo.svg\\\">\\n            <h3 class=\\\"text-center\\\" style=\\\"max-width:35ex;margin:20px auto 10px\\\">\\n              <span style=\\\"white-space:nowrap;\\\">Miew &ndash; 3D Molecular Viewer</span>\\n              <small class=\\\"PACKAGE_VERSION\\\" style=\\\"white-space:nowrap;\\\"></small>\\n            </h3>\\n\\n            <p>Copyright © 2015–2020 EPAM Systems, Inc.</p>\\n            <p><a href=\\\"https://epa.ms/miew\\\">https://epa.ms/miew</a></p>\\n          </div>\\n          <hr>\\n          <h2>Keyboard and mouse shortcuts</h2>\\n          <div>\\n            <table class=\\\"table\\\">\\n            <thead>\\n              <tr><th>Key</th><th>Action</th></tr>\\n            </thead>\\n            <tbody>\\n              <tr><td colspan=\\\"2\\\"><b>Camera and object controls</b></td></tr>\\n              <tr><td><kbd>LMB</kbd></td><td>Click to select object part</td></tr>\\n              <tr><td>&nbsp;</td><td>Double click to change object rotation center</td></tr>\\n              <tr><td>&nbsp;</td><td>Drag to rotate object in 3D</td></tr>\\n              <tr><td><kbd>Shift</kbd> + <kbd>LMB</kbd></td><td>Drag to rotate object in Z plane</td></tr>\\n              <tr><td><kbd>Mouse Wheel</kbd></td><td>Scale object</td></tr>\\n              <tr><td><kbd>RMB</kbd></td><td>Drag to shift molecule</td></tr>\\n\\n              <tr><td colspan=\\\"2\\\"><b>Component / fragment edit mode</b></td></tr>\\n              <tr><td><kbd>C</kbd> / <kbd>F</kbd></td><td>Enter the component or fragment edit mode</td></tr>\\n              <tr><td><kbd>A</kbd> / <kbd>D</kbd></td><td>Apply or discard changes</td></tr>\\n              <tr><td><kbd>Alt</kbd> + <kbd>LMB</kbd></td><td>Drag to rotate component / fragment in 3D</td></tr>\\n              <tr><td><kbd>Alt</kbd> + <kbd>Shift</kbd> + <kbd>LMB</kbd></td><td>Drag to rotate component / fragment in Z plane</td></tr>\\n              <tr><td><kbd>Alt</kbd> + <kbd>Ctrl</kbd> + <kbd>LMB</kbd></td><td>Drag to translate component in Z plane</td></tr>\\n\\n              <tr><td colspan=\\\"2\\\"><b>Other</b></td></tr>\\n              <tr><td><kbd>X</kbd></td><td>Extract selection as a new representation</td></tr>\\n            </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Mode panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-mode\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-representation\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Display mode</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"list-group\\\">\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Color panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-color\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-representation\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Display color</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"list-group\\\">\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Palette panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-palette\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-render\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Display palette</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"list-group\\\">\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Material presets panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-matpreset\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-representation\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Material</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"list-group\\\">\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Color panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-select-color\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-representation\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Choose color</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"row\\\">\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Resolution panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-resolution\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-render\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Render resolution</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"list-group\\\">\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"resolution\\\" data-value=\\\"poor\\\">Poor</a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"resolution\\\" data-value=\\\"low\\\">Low</a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"resolution\\\" data-value=\\\"medium\\\">Medium</a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"resolution\\\" data-value=\\\"high\\\">High</a>\\n            <a href=\\\"#\\\" class=\\\"list-group-item\\\" data-toggle=\\\"resolution\\\" data-value=\\\"ultra\\\">Ultra</a>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Selection panel -->\\n\\n      <div class=\\\"col-xs-12 col-sm-9 panel panel-default panel-menu\\\" data-panel-type=\\\"miew-menu-panel-selection\\\" style=\\\"display: none\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <button class=\\\"btn btn-default btn-titlebar pull-left\\\" data-toggle=\\\"panel\\\" data-value=\\\"miew-menu-panel-representation\\\"><span class=\\\"glyphicon glyphicon-menu-left\\\"></span></button>\\n          <h3 class=\\\"panel-title\\\">Selection</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Selection string</label>\\n              <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\">\\n                <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-btn-type=\\\"miew-menu-btn-apply-sel\\\">Apply</button></span>\\n              </div>\\n              <span class=\\\"help-block\\\">For example:\\n                \\\"<a href=\\\"#\\\">all</a>\\\",\\n                \\\"<a href=\\\"#\\\">not hetatm</a>\\\",\\n                \\\"<a href=\\\"#\\\">hetatm and not water</a>\\\",\\n                \\\"<a href=\\\"#\\\">residue ALA, CYS</a>\\\",\\n                \\\"<a href=\\\"#\\\">serial 1:10, 20:30 and elem C,N</a>\\\".\\n                </span>\\n            </div>\\n            <div class=\\\"alert alert-danger\\\" style=\\\"display:none; font-family: 'Anonymous Pro','Consolas','Courier New',Courier,monospace; white-space: pre\\\"></div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6 col-sm-6 column\\\">\\n              <ul class=\\\"nav nav-tabs\\\">\\n                <li class=\\\"active\\\"><a data-toggle=\\\"tab\\\" href=\\\"[data-tab-content=singleword]\\\">Single</a></li>\\n                <li><a data-toggle=\\\"tab\\\" href=\\\"[data-tab-content=keyword]\\\">Key</a></li>\\n                <li><a data-toggle=\\\"tab\\\" href=\\\"[data-tab-content=value]\\\">Value</a></li>\\n              </ul>\\n\\n              <div class=\\\"tab-content\\\">\\n                <div data-tab-content=\\\"singleword\\\" class=\\\"tab-pane fade in active\\\">\\n                  <div class=\\\"list-group\\\">\\n\\n                  </div>\\n                </div>\\n                <div data-tab-content=\\\"keyword\\\" class=\\\"tab-pane fade\\\">\\n                  <div class=\\\"list-group\\\">\\n\\n                  </div>\\n                </div>\\n                <div data-tab-content=\\\"value\\\" class=\\\"tab-pane fade\\\">\\n                  <div class=\\\"list-group\\\">\\n\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-xs-6 col-sm-6 column calc\\\">\\n              <a class=\\\"col-xs-6 btn btn-default btn-calc\\\" data-toggle=\\\"selection-input\\\" data-value=\\\" \\\">SPACE</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc delete\\\" data-delete-type=\\\"clear\\\">CLEAR</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc delete\\\" data-delete-type=\\\"backspace\\\"><span class=\\\"glyphicon glyphicon-arrow-left\\\"></span></a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"and \\\">and</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"or \\\">or</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"not \\\">not</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc char\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"A\\\">A</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc digit\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"7\\\">7</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc digit\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"8\\\">8</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc digit\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"9\\\">9</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc char\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"B\\\">B</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc digit\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"4\\\">4</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc digit\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"5\\\">5</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc digit\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"6\\\">6</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc char\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"C\\\">C</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc digit\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"1\\\">1</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc digit\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"2\\\">2</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc digit\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"3\\\">3</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc char\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"D\\\">D</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc digit\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"0\\\">0</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"(\\\">(</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc\\\" data-toggle=\\\"selection-input\\\" data-value=\\\")\\\">)</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc char\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"H\\\">H</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc\\\" data-toggle=\\\"selection-input\\\" data-value=\\\",\\\">,</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc\\\" data-toggle=\\\"selection-input\\\" data-value=\\\":\\\">:</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"&#34;\\\">\\\"</a>\\n              <a class=\\\"col-xs-3 btn btn-default btn-calc char\\\" data-toggle=\\\"selection-input\\\" data-value=\\\"O\\\">O</a>\\n          </div>\\n          </div>\\n          <div></div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <!--Tooltips panel container-->\\n    <div class=\\\"miew-menu-panel-tooltips\\\">\\n    </div>\\n  </div>\\n\\n  <!-- Modals -->\\n  <div class=\\\"miew-menu-modals\\\">\\n    <!-- URL Modal -->\\n    <div class=\\\"modal fade\\\" data-modal-type=\\\"miew-menu-modal-url\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n      <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n            <h4 class=\\\"modal-title\\\">Url</h4>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Script modal -->\\n    <div class=\\\"modal fade\\\" data-modal-type=\\\"miew-menu-modal-script\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n      <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n            <h4 class=\\\"modal-title\\\">Script</h4>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"modal fade\\\" data-modal-type=\\\"miew-menu-modal-global-error\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n      <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\"></h4>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">OK</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\";","/* global COOKIE_PATH:false */\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.css';\nimport 'toastr/build/toastr.min.css';\nimport 'jquery.terminal/css/jquery.terminal.min.css';\nimport '../styles/main.scss';\nimport '@babel/polyfill';\n\nimport $ from 'jquery';\nimport toastr from 'toastr';\n// waiting for fix https://github.com/benmosher/eslint-plugin-import/issues/1712\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport Miew from 'Miew'; // eslint-disable-line import/no-unresolved\nimport Menu from './ui/Menu';\n\nwindow.DEBUG = true;\n\nconst miewErrorId = 'miew-error';\n\nfunction onError(err) {\n  const doc = document.createDocumentFragment();\n\n  const containers = document.getElementsByClassName('miew-container');\n  const parent = containers.length > 0 ? containers[0] : null;\n  let element = document.getElementById(miewErrorId);\n\n  // on the first error\n  if (!element) {\n    // clear the container\n    while (parent && parent.firstChild) {\n      parent.removeChild(parent.firstChild);\n    }\n\n    // create message box\n    element = document.createElement('div');\n    element.setAttribute('class', 'miew-message');\n    doc.appendChild(element);\n\n    const par = element.appendChild(document.createElement('p'));\n    par.appendChild(document.createTextNode('We are sorry'));\n    par.appendChild(document.createElement('br'));\n    par.appendChild(document.createElement('small')).textContent = 'for the failure';\n\n    element = document.createElement('div');\n    element.setAttribute('class', miewErrorId);\n    element.id = miewErrorId;\n    doc.appendChild(element);\n  }\n\n  // append the error details\n  let child = element.appendChild(document.createElement('p'));\n  child.appendChild(document.createTextNode('Error details:'));\n  child = element.appendChild(document.createElement('pre'));\n  if (!err.stack || String(err.stack).indexOf(String(err)) === -1) {\n    child.appendChild(document.createTextNode(`${err}\\n`));\n  }\n  if (err.stack) {\n    child.appendChild(document.createTextNode(`${err.stack}\\n`));\n  }\n\n  if (parent) {\n    parent.appendChild(doc);\n  }\n}\n\nwindow.onerror = function (err, url, line, col, obj) {\n  onError(obj = obj || {\n    name: 'window.onerror',\n    message: err,\n    sourceURL: url,\n    line,\n    column: col,\n  });\n  throw obj;\n};\n\n// create viewer (and run it) for each container element on the page\nwindow.addEventListener('load', () => {\n  $('.miew-container').each((i, container) => {\n    const viewer = window.miew = new Miew($.extend(\n      true,\n      {\n        container,\n        load: 'data/1CRN.pdb',\n        cookiePath: (typeof COOKIE_PATH !== 'undefined' && COOKIE_PATH) || '/',\n      },\n      Miew.options.fromAttr(container.getAttribute('data-miew')),\n      Miew.options.fromURL(window.location.search),\n    ));\n\n    const convertLevel = {\n      error: 'error',\n      warn: 'warning',\n      report: 'info',\n    };\n    toastr.options.newestOnTop = false;\n    viewer.logger.addEventListener('message', (e) => {\n      const level = convertLevel[e.level];\n      if (level) {\n        toastr[level](e.message);\n      }\n    });\n\n    const menu = new Menu(container, viewer);\n\n    if (viewer.init()) {\n      menu.showOverlay();\n      viewer.run();\n    }\n  });\n});\n"],"sourceRoot":""}